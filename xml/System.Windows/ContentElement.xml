<Type Name="ContentElement" FullName="System.Windows.ContentElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e24afdc79cc9c012b7807ff4dd7045a41864db1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36463868" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContentElement : System.Windows.DependencyObject, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentElement extends System.Windows.DependencyObject implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentElement&#xA;Inherits DependencyObject&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentElement : System::Windows::DependencyObject, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type ContentElement = class&#xA;    inherit DependencyObject&#xA;    interface IInputElement&#xA;    interface IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ebb95-101">Udostępnia klasę podstawową core poziomie WPF dla elementów zawartości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ebb95-101">Provides a WPF core-level base class for content elements.</span>
      </span>
      <span data-ttu-id="ebb95-102">Elementy zawartości są przeznaczone dla przepływu stylu prezentacji, za pomocą intuicyjnego układu zorientowane na znaczników i modelu celowo prostego obiektu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ebb95-102">Content elements are designed for flow-style presentation, using an intuitive markup-oriented layout model and a deliberately simple object model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-103"><xref:System.Windows.ContentElement> definiuje następujące cechy wspólne zawartości:</span><span class="sxs-lookup"><span data-stu-id="ebb95-103"><xref:System.Windows.ContentElement> defines the following common content characteristics:</span></span>  
  
-   <span data-ttu-id="ebb95-104">Wejście: Wszystkie <xref:System.Windows.ContentElement> klas pochodnych zapewniają obsługę podstawowe przechwytywania wprowadzania z klawiatury, myszy operacji przeciągania i upuszczania, Pióro formantów i akceleratorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-104">Input: All <xref:System.Windows.ContentElement> derived classes provide support for basic input capture from keyboard, mouse, drag-and-drop operations, stylus controls, and accelerators.</span></span>  
  
-   <span data-ttu-id="ebb95-105">Fokus: Wszystkie <xref:System.Windows.ContentElement> klas pochodnych są potencjalnie focusable.</span><span class="sxs-lookup"><span data-stu-id="ebb95-105">Focus: All <xref:System.Windows.ContentElement> derived classes are potentially focusable.</span></span> <span data-ttu-id="ebb95-106">(Jednak focusable stan domyślny dla <xref:System.Windows.ContentElement> klasa podstawowa jest `false`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-106">(However, the default focusable state for the <xref:System.Windows.ContentElement> base class is `false`.</span></span> <span data-ttu-id="ebb95-107">Aby uzyskać szczegółowe informacje dotyczące sposobu wprowadzania <xref:System.Windows.ContentElement> focusable, zobacz <xref:System.Windows.ContentElement.Focusable%2A>.) Ponadto ta klasa zawiera [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] służącego do przechodzenia przez fokus na elementy powiązane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-107">For details on how to make a <xref:System.Windows.ContentElement> focusable, see <xref:System.Windows.ContentElement.Focusable%2A>.) In addition, this class contains [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that you can use for traversing the focus across related elements.</span></span>  
  
-   <span data-ttu-id="ebb95-108">Zdarzenia: <xref:System.Windows.ContentElement> obejmuje zdarzeń powiązanych z danych wejściowych i skoncentrować się; obejmuje również zdarzenia dla zmian w stanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-108">Events: <xref:System.Windows.ContentElement> includes events that are related to input and focus; it also includes events for changes in state.</span></span> <span data-ttu-id="ebb95-109">W wielu przypadkach <xref:System.Windows.ContentElement> zdarzenia są kierowane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-109">In many cases, the <xref:System.Windows.ContentElement> events are routed events.</span></span> <span data-ttu-id="ebb95-110">W niektórych przypadkach kierowane zdarzenia mają zarówno w przypadku tunelowania, jak i propagacji strategii routingu, zgłaszany jako odrębne zdarzenia w odpowiedzi na tym samym stanu lub warunek.</span><span class="sxs-lookup"><span data-stu-id="ebb95-110">In some cases, routed events have both tunneling and bubbling routing strategies, raised as separate events in response to the same state or condition.</span></span> <span data-ttu-id="ebb95-111">Ponadto <xref:System.Windows.ContentElement> definiuje [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] że można zwiększyć kierowane zdarzenia i że można dodawać i usuwać programów obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-111">Also, <xref:System.Windows.ContentElement> defines [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] that can raise routed events and that can add or remove handlers to events.</span></span>  
  
 <span data-ttu-id="ebb95-112"><xref:System.Windows.ContentElement> udostępnia wiele wspólnego [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] z <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-112"><xref:System.Windows.ContentElement> shares many common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] with <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="ebb95-113">Tych wspólnych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] nie pochodzą z dziedziczenia klasy udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-113">These common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] do not come from a shared class inheritance.</span></span> <span data-ttu-id="ebb95-114">Ale mają nazewnictwa wspólne, podobne zachowanie i podobne wewnętrzny realizacji [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] w każdej klasie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-114">But they do share common naming, similar behavior, and similar internal implementation of [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in each class.</span></span> <span data-ttu-id="ebb95-115">Podobieństwa jest ponieważ <xref:System.Windows.ContentElement> i <xref:System.Windows.UIElement> są każdej klasy, które są element podstawowy, mimo że każda ma inną zamiarach zachowanie modelu obiektu znaczników.</span><span class="sxs-lookup"><span data-stu-id="ebb95-115">The similarity is because <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are each classes that are an element base, although each has different intentions for its markup object model behavior.</span></span>  
  
 <span data-ttu-id="ebb95-116">W szczególności <xref:System.Windows.UIElement> descends z <xref:System.Windows.Media.Visual>, zapewniające grafiki niższego poziomu obsługę renderowania <xref:System.Windows.ContentElement> prostokątne regionu okna połączone, podczas gdy <xref:System.Windows.ContentElement> różni się renderowania, aby pojęcia więcej Typowe scenariusze dokumentu, takich jak przepływ i zawijania, co ułatwia są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-116">In particular, <xref:System.Windows.UIElement> descends from <xref:System.Windows.Media.Visual>, which provides the lower-level graphics support for rendering a <xref:System.Windows.ContentElement> to a rectangular region within a composited window, whereas <xref:System.Windows.ContentElement> defers rendering so that concepts more common to document scenarios, such as flow and wrapping, are more easily supported.</span></span> <span data-ttu-id="ebb95-117">Te dwa związane z klasy również implementować wspólnych interfejsów <xref:System.Windows.IInputElement> i <xref:System.Windows.Media.Animation.IAnimatable>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-117">These two related classes also implement the common interfaces <xref:System.Windows.IInputElement> and <xref:System.Windows.Media.Animation.IAnimatable>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="ebb95-118">
        <para>
          <see cref="T:System.Windows.ContentElement" /> Klasa nie definiuje jeszcze wszystkie aspekty elementu zawartości pełny przepływ stylu prezentacji. <see cref="T:System.Windows.FrameworkContentElement" /> jest natychmiast pochodne klasy <see cref="T:System.Windows.ContentElement" />. <see cref="T:System.Windows.FrameworkContentElement" /> zawiera bardziej szczegółowy zestaw dodatkowych elementów członkowskich, które obsługuje renderowanie <see cref="T:System.Windows.FrameworkContentElement" /> w ramach hosta zawartości i przy użyciu systemu układu poziomie struktury WPF.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="ebb95-118">
          <para>The <see cref="T:System.Windows.ContentElement" /> class does not yet define all aspects of a complete content element for flow-style presentation. <see cref="T:System.Windows.FrameworkContentElement" /> is an immediately derived class of <see cref="T:System.Windows.ContentElement" />. <see cref="T:System.Windows.FrameworkContentElement" /> includes a more complete set of additional members that support rendering a <see cref="T:System.Windows.FrameworkContentElement" /> within a content host and using the WPF framework-level layout system.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ContentElement" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-119">Initializes a new instance of the <see cref="T:System.Windows.ContentElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-120">Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-120">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="ebb95-121">Identyfikator kierowanego zdarzenia mają być obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-121">An identifier for the routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ebb95-122">Odwołanie do implementacji programu obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-122">A reference to the handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-123">Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-123">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-124">Tej procedury obsługi dla tego samego zdarzenia można dodać wiele razy bez podnoszenia Wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ebb95-124">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="ebb95-125">Jednak program obsługi jest rzeczywiście wielokrotnie wywoływać gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-125">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="ebb95-126">W związku z tym należy rozważyć, jak to zachowanie może mieć efekty uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-126">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="ebb95-127">Ta metoda używane zwykle do implementacji metody dostępu "add", dla [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorca dostępu zdarzeń niestandardowych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-127">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="ebb95-128">Identyfikator zdarzenia the.routed mają być obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-128">An identifier for the.routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ebb95-129">Odwołanie do implementacji programu obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-129">A reference to the handler implementation.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="ebb95-130">
            <see langword="true" /> zarejestrować program obsługi w taki sposób, że jest wywoływana, nawet w przypadku, gdy zaznaczono kierowanego zdarzenia przetwarzanych w jego dane zdarzeń; <see langword="false" /> rejestrowania programu obsługi z domyślnego warunku, że nie zostanie wywołany, jeśli kierowanego zdarzenia jest już oznaczona obsłużone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-130">
              <see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span>
          </span>
          <span data-ttu-id="ebb95-131">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-131">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-132">Nie rutynowo Pytaj do rehandle kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-132">Do not routinely ask to rehandle a routed event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-133">Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-133">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
          <span data-ttu-id="ebb95-134">Określ <paramref name="handledEventsToo" /> jako <see langword="true" /> mają podanego programu obsługi, można wywołać dla kierowanego zdarzenia, który już został oznaczony jako obsługiwany przez inny element wzdłuż trasy zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-134">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-135">Przetwarzanie zdarzenia wejściowe niskiego poziomu w praktycznym sposobem jest złożonym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="ebb95-135">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="ebb95-136">Wiele formantów implementuje zachowanie, gdzie określone zdarzenie zostanie oznaczony jako obsługiwany i zastępuje inne zdarzenie bardziej intuicyjne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-136">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="ebb95-137">Ogólnie rzecz biorąc formantu tylko oznaczy zdarzenia wejściowe platformy jako obsługiwane w przypadku niektórych zamiar projektu dla w ten sposób.</span><span class="sxs-lookup"><span data-stu-id="ebb95-137">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="ebb95-138">W niektórych scenariuszach te cele projektu może być wymaga z konkretnym obsługi zdarzenia wejściowego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-138">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="ebb95-139">Jest w tych scenariuszach tego rejestrowanie programów obsługi z `handledEventsToo` jako `true` jest odpowiedni.</span><span class="sxs-lookup"><span data-stu-id="ebb95-139">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="ebb95-140">Jednak użytkownik nie należy tego robić regularnie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-140">But you should not do this routinely.</span></span> <span data-ttu-id="ebb95-141">Wywoływanie programy obsługi zdarzeń w odpowiedzi na wszystkie zdarzenia, nawet jeśli obsługiwane będzie skomplikować własne przetwarzania logiki zdarzeń aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-141">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="ebb95-142">Jeśli logika obsługi jest znaczny spadek wydajności może zostać wyświetlony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-142">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="ebb95-143">Należy zarezerwować stosowania Dołączanie programów obsługi zdarzeń już obsługiwane w sytuacji, gdy użytkownik ma już odnaleziony podczas procesu projektowania, że niektóre kontrolki są obsługi zdarzeń, które nadal mają być obsługiwane z logiką aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-143">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="ebb95-144">Inny technika unikanie klasy zachowania niektórych kombinacji zdarzenie kontroli obsługi polega na użyciu zamiast podglądu tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-144">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="ebb95-145">Na przykład jeśli <xref:System.Windows.ContentElement.MouseLeftButtonDown> jest oznaczony jako obsługiwany przez Obsługa klasy może być możliwe dodanie obsługi <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-145">For example, if <xref:System.Windows.ContentElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="ebb95-146">Tej procedury obsługi dla tego samego zdarzenia można dodać wiele razy bez podnoszenia Wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ebb95-146">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="ebb95-147">Jednak program obsługi jest rzeczywiście wielokrotnie wywoływać gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-147">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="ebb95-148">W związku z tym należy rozważyć, jak to zachowanie może mieć efekty uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-148">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="ebb95-149">Ta metoda używane zwykle do implementacji metody dostępu "add", dla [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorca dostępu zdarzeń niestandardowych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-149">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-150">Poniższy przykład implementuje obsługi wywoływane na <xref:System.Windows.FrameworkElement.Initialized> zdarzenia na stronie dołącza zdefiniowanych obsługi do jednego z nazwanych elementów na stronie za pomocą `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-150">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="ebb95-151">Czy można wywołać ten program obsługi, nawet jeśli inny element marszruty oznaczony dane zdarzenia udostępniony jako obsłużony przed osiągnięciem element obsługi trasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-151">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route">
          <span data-ttu-id="ebb95-152">Programy obsługi są dodawane do trasy zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-152">The event route that handlers are added to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="ebb95-153">Dane zdarzenia, które służy do dodawania obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-153">The event data that is used to add the handlers.</span>
          </span>
          <span data-ttu-id="ebb95-154">Ta metoda używa <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości argumentów do utworzenia obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-154">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the arguments to create the handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-155">Dodaje obsługi do określonego <see cref="T:System.Windows.EventRoute" /> dla bieżącego <see cref="T:System.Windows.ContentElement" /> kolekcję procedur obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-155">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.ContentElement" /> event handler collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-156">Użyj tej metody dla elementów zawartości hosta (niezależnie od tego, czy wdrażają <xref:System.Windows.IContentHost>) aby dodać obsługę host zawartości elementów podrzędnych do hosta <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-156">Use this method for content host elements (regardless whether they implement <xref:System.Windows.IContentHost>) in order to add handlers for the content host child elements to the host <xref:System.Windows.EventRoute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.ContentElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-157">Pobiera lub ustawia wartość wskazującą, czy ten element może być użyty jako element docelowy operacji przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-157">Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-158">
            <see langword="true" /> Jeśli ten element może być używany jako obiekt docelowy operacji przeciągania i upuszczania. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-158">
              <see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-159">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-159">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-160">Operacje przeciągania i upuszczania nie są domyślnie włączone i musi być włączona celowo <xref:System.Windows.ContentElement.AllowDrop%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-160">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.ContentElement.AllowDrop%2A> to  `true`.</span></span> <span data-ttu-id="ebb95-161">Poza tego ustawienia podstawowe zachowanie przeciągania i upuszczania całkowicie zależy od implementacji i nie jest zdefiniowany przez <xref:System.Windows.ContentElement> lub dowolnej klasy podstawowej elementu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-161">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.ContentElement> or any other base element class.</span></span> <span data-ttu-id="ebb95-162">Niektóre formanty, na przykład <xref:System.Windows.Controls.RichTextBox>, ma domyślne zachowanie, ale nie <xref:System.Windows.ContentElement> klasy pochodnej mają takie zachowanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-162">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior, but no <xref:System.Windows.ContentElement> derived classes have such a behavior.</span></span> <span data-ttu-id="ebb95-163">Aby uzyskać więcej informacji dotyczących operacji przeciągania i upuszczania, zobacz [przeciągania i upuszczania omówienie](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-163">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="ebb95-164"><xref:System.Windows.FrameworkContentElement> zastępuje metadane dla tej właściwości zależności w jego wykonania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-164"><xref:System.Windows.FrameworkContentElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="ebb95-165">W szczególności <xref:System.Windows.FrameworkContentElement> oznacza, że ta właściwość umożliwia dziedziczenie wartość właściwości (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> jest `true` w metadanych).</span><span class="sxs-lookup"><span data-stu-id="ebb95-165">Specifically, <xref:System.Windows.FrameworkContentElement> designates that this property allows property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="ebb95-166">Dziedziczenie wartości właściwości w tym kontekście oznacza, że istnieją elementy podrzędne z ma inne wartości <xref:System.Windows.ContentElement.AllowDrop%2A> przypisany za pomocą wartości lokalnej lub style, wartość najbliższym elemencie nadrzędnym z wartością przypisane (ponownie, albo w stylach domyślnie wartości lub wartości lokalnych), a następnie wartości z elementu nadrzędnego jest przypisany do wszystkich elementów podrzędnych nieprzypisane przez system właściwości.</span><span class="sxs-lookup"><span data-stu-id="ebb95-166">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.ContentElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from that parent element is assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="ebb95-167">Oznacza to, że możesz określić, czy zezwala upuszczania operacji w elemencie głównym, a następnie propaguje wartość do wszystkich <xref:System.Windows.FrameworkContentElement> elementy podrzędne, które nie specjalnie przypisano jej wartości `false`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-167">This means that you can specify whether to allow drop operations at the root element and then propagate the value to all <xref:System.Windows.FrameworkContentElement> child elements that have not specifically assigned it a value of `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-168">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-168">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-169">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-169">Identifier field</span></span>|<xref:System.Windows.ContentElement.AllowDropProperty>|  
|<span data-ttu-id="ebb95-170">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-170">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-171">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-171">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-172">W poniższym przykładzie <xref:System.Windows.ContentElement.AllowDrop%2A> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ebb95-172">The following example sets <xref:System.Windows.ContentElement.AllowDrop%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#AllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#allowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-173">Identyfikuje <see cref="P:System.Windows.ContentElement.AllowDrop" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-173">Identifies the <see cref="P:System.Windows.ContentElement.AllowDrop" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-174">Zastosowanie animacji właściwości zależności określonego w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-174">Applies an animation to a specified dependency property on this element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="ebb95-175">Identyfikator właściwości animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-175">The identifier for the property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="ebb95-176">Zegar animacji, który kontroluje i deklaruje animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-176">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-177">Zastosowanie animacji właściwości zależności określonego w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-177">Applies an animation to a specified dependency property on this element.</span>
          </span>
          <span data-ttu-id="ebb95-178">Wszelkie istniejące animacje są zatrzymane i zastąpione nowe animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-178">Any existing animations are stopped and replaced with the new animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-179">Aby usunąć animacji z właściwością, określ identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-179">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="ebb95-180">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawową.</span><span class="sxs-lookup"><span data-stu-id="ebb95-180">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="ebb95-181">Jednak zegara pierwotnie skojarzone animacji nie zostanie zatrzymana.</span><span class="sxs-lookup"><span data-stu-id="ebb95-181">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="ebb95-182">Inne animacje przypisane do tego zegara będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="ebb95-182">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="ebb95-183">Właściwość animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-183">The property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="ebb95-184">Zegar animacji, który kontroluje i deklaruje animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-184">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="ebb95-185">Wartość wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-185">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="ebb95-186">Wartość domyślna to <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, które spowoduje zatrzymanie wszelkich istniejących animacji i Zamień na nową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-186">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-187">Zastosowanie animacji właściwości zależności określonego w tym elemencie, z możliwością Określ, co się stanie, jeśli właściwość została już uruchomiona Animacja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-187">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-188">Aby usunąć animacji z właściwością, określ identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-188">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="ebb95-189">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawową.</span><span class="sxs-lookup"><span data-stu-id="ebb95-189">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="ebb95-190">Jednak zegara pierwotnie skojarzone animacji nie zostanie zatrzymana.</span><span class="sxs-lookup"><span data-stu-id="ebb95-190">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="ebb95-191">Inne animacje przypisane do tego zegara będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="ebb95-191">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-192">Pobiera wartość wskazującą, czy co najmniej jeden touch są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-192">Gets a value that indicates whether at least one touch is captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-193">
            <see langword="true" /> Jeśli co najmniej jeden touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-193">
              <see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-194">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-194">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-195">Pobiera wartość wskazującą, czy co najmniej jeden touch są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-195">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-196">
            <see langword="true" /> Jeśli co najmniej jeden touch są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-196">
              <see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-197">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-197">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-198">Pobiera wartość wskazującą, czy naciśnięciu dotykowego co najmniej jeden nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-198">Gets a value that indicates whether at least one touch is pressed over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-199">
            <see langword="true" /> Jeśli naciśnięciu dotykowego co najmniej jeden nad tym elementem; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-199">
              <see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-200">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-200">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-201">Pobiera wartość wskazującą, czy co najmniej jeden touch naciśnięciu za pośrednictwem tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-201">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-202">
            <see langword="true" /> Jeśli co najmniej jeden touch jest wciśnięty za pośrednictwem tego elementu lub elementów podrzędnych w jego drzewie wizualnym; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-202">
              <see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-203">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-203">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-204">Uruchamia animacji dla określonej właściwości animacji w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-204">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="ebb95-205">Właściwość animacji, które jest określone jako identyfikatora właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-205">The property to animate, which is specified as a dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="ebb95-206">Oś czasu animacji, aby rozpocząć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-206">The timeline of the animation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-207">Uruchamia animacji dla określonej właściwości animacji w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-207">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-208">Podczas sprawdzania, czy właściwość jest animowany, Zauważ, że animacja rozpocznie się i można je było uważać animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-208">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="ebb95-209">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="ebb95-209">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="ebb95-210">Jeśli cały `animation` wartość jest `null`, wszystkie animacje są usuwane z właściwości i wartość właściwości zostanie przywrócony do jego wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-210">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="ebb95-211">Jednak na osi czasu pierwotnie skojarzone animacji nie został on zatrzymany.</span><span class="sxs-lookup"><span data-stu-id="ebb95-211">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="ebb95-212">Inne animacje przypisane do tej osi czasu będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="ebb95-212">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="ebb95-213">Właściwość animacji, które jest określone jako identyfikatora właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-213">The property to animate, which is specified as the dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="ebb95-214">Oś czasu animacji, które mają być stosowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-214">The timeline of the animation to be applied.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="ebb95-215">Wartość wyliczenia, która określa, jak nowy animacji współdziała z dowolnego animacji bieżącego (uruchamianie), które już wpływu na wartość właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-215">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-216">Rozpoczyna się przez animację określonych dla określonej właściwości animacji w tym elemencie z opcją określenia co się stanie, jeśli właściwość została już uruchomiona Animacja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-216">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-217">Podczas sprawdzania, czy właściwość jest animowany, Zauważ, że animacja rozpocznie się i można je było uważać animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-217">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="ebb95-218">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="ebb95-218">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="ebb95-219">Jeśli cały `animation` wartość jest `null`, wszystkie animacje są usuwane z właściwości i wartość właściwości zostanie przywrócony do jego wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-219">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="ebb95-220">Jednak na osi czasu pierwotnie skojarzone animacji nie został on zatrzymany.</span><span class="sxs-lookup"><span data-stu-id="ebb95-220">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="ebb95-221">Inne animacje przypisane do tej osi czasu będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="ebb95-221">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="contentElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-222">Próbuje wymusić przechwytywanie myszy do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-222">Attempts to force capture of the mouse to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-223">
            <see langword="true" /> Jeśli pomyślnie przechwyceniu myszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-223">
              <see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-224">Można przechwycić elementu musi być włączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-224">To be captured, an element must be enabled.</span></span> <span data-ttu-id="ebb95-225">Sprawdź, czy <xref:System.Windows.ContentElement.IsEnabled%2A> jest `true` przed wywołaniem <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-225">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="ebb95-226">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureMouse%2A> zwraca `true`, następnie <xref:System.Windows.ContentElement.IsMouseCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-226">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.ContentElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="ebb95-227">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureMouse%2A> zwraca `true`, a następnie <xref:System.Windows.ContentElement.GotMouseCapture> i <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenia są generowane, z <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> zdarzeń dane raportowane jako element gdzie <xref:System.Windows.ContentElement.CaptureMouse%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ebb95-227">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotMouseCapture> and <xref:System.Windows.ContentElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.ContentElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="ebb95-228">Jeśli wymusisz przechwytywania może zakłócać Przechwytywanie istniejących — szczególnie w przypadku przechwytywania, które dotyczą przeciągania i upuszczania za pomocą myszy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-228">If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="ebb95-229">Aby wyczyścić przechwytywanie myszy wszystkich elementów, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> z `element` podać jako parametr `null`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-229">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-230">Poniższy przykład przechwytuje mysz lub zwalnia Przechwytywanie według tego, czy wskaźnik myszy jest już przechwycona przez element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-230">The following example captures the mouse or releases capture, based on whether the mouse is already captured by the element.</span></span> <span data-ttu-id="ebb95-231">Należy pamiętać, że w tym przykładzie rzutuje elementu docelowego potencjalnego przechwytywania <xref:System.Windows.IInputElement> interfejsu i w związku z tym jest początkowo wywoływania <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="ebb95-231">Note that this example casts the prospective capture target element to the <xref:System.Windows.IInputElement> interface, and is thus initially calling the <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ebb95-232">Rzutowanie na <xref:System.Windows.IInputElement> to technika, który jest przydatne, jeśli nie wiesz, czy element ma być przechwytywanie myszy jest <xref:System.Windows.UIElement> lub <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-232">Casting to <xref:System.Windows.IInputElement> is a technique that is useful if you are unsure whether the element you want to have capture the mouse is a <xref:System.Windows.UIElement> or a <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="ebb95-233">Rzutowanie interfejsu i metoda interfejsu wywołać następnie wywołania odpowiedniej implementacji CaptureMouse określonego typu wewnętrznie bez konieczności korzystania z wersji próbnej rzutować albo <xref:System.Windows.UIElement> lub <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-233">The interface cast and the interface method call then calls the appropriate type-specific CaptureMouse implementation internally without requiring a trial cast to either <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="ebb95-234">Ten sam sposób rzutowanie działa w przypadku innych elementach członkowskich który <xref:System.Windows.IInputElement> definiuje, na przykład wiele zdarzeń związanych z danych wejściowych i innych metod dotyczących danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-234">This same casting technique works for other members that <xref:System.Windows.IInputElement> defines, for instance many of the input-related events, and other input-related methods.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="contentElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-235">Próbuje wymusić Przechwytywanie pióra do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-235">Attempts to force capture of the stylus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-236">
            <see langword="true" /> Jeśli pomyślnie przechwyceniu pióra; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-236">
              <see langword="true" /> if the stylus is successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-237">Domyślna implementacja oparte na podstawowym domyślnego urządzenia pióro zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-237">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="ebb95-238">Jednak jeśli rozszerzania wejściowych urządzeń, które implementacji urządzenia system wejściowy jest można tworzyć system pióro alternatywną implementację urządzenia, która może zwracać różne wyniki.</span><span class="sxs-lookup"><span data-stu-id="ebb95-238">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="ebb95-239">Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, gdy pióro znajduje się poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-239">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="ebb95-240">Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-240">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="ebb95-241">Wywołanie tej metody wymaga podstawowej statycznych <xref:System.Windows.Input.Stylus> metody <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-241">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="ebb95-242">Zachowanie rzeczywistych przechwytywania jest implementowany przez pióro active implementacji urządzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-242">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="ebb95-243">Można przechwycić elementu musi być włączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-243">To be captured, an element must be enabled.</span></span> <span data-ttu-id="ebb95-244">Sprawdź, czy <xref:System.Windows.ContentElement.IsEnabled%2A> jest `true` zwrócić przed wywołaniem <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-244">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="ebb95-245">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureStylus%2A> zwraca `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-245">If calling <xref:System.Windows.ContentElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="ebb95-246">Urządzenie do przechwytywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-246">The device to capture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-247">Próbuje wymusić przechwytywania touch do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-247">Attempts to force capture of a touch to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-248">
            <see langword="true" /> Jeśli określona touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-248">
              <see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-249"><xref:System.Windows.ContentElement.CaptureTouch%2A> Zwraca `false` Jeśli <xref:System.Windows.Input.TouchDevice> aktualnie przechwycony do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-249"><xref:System.Windows.ContentElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="ebb95-250">Jeśli <xref:System.Windows.ContentElement.CaptureTouch%2A> zwraca `true`, a następnie <xref:System.Windows.ContentElement.GotTouchCapture> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-250">If <xref:System.Windows.ContentElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="ebb95-251">Aby zwolnić przechwytywania jednym naciśnięciem przycisku z tego elementu, użyj <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> — metoda i określ urządzeń dotykowych do zwolnienia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-251">To release capture of a single touch from this element, use the <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="ebb95-252">Aby zwolnić wszystkie poprawki z tego elementu, użyj <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ebb95-252">To release all touches from this element, use the <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ebb95-253">
            <paramref name="touchDevice" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-253">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.ContentElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-254">Pobiera kolekcję <see cref="T:System.Windows.Input.CommandBinding" /> obiektów, które są skojarzone z tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-254">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects that are associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-255">Kolekcja wszystkich <see cref="T:System.Windows.Input.CommandBinding" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-255">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-256">A <xref:System.Windows.Input.CommandBinding> włącza obsługę określonego polecenia dla tego elementu oraz deklaruje powiązanie między poleceniem, jego zdarzeń i obsługi, które są dołączone przez ten element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-256">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element and declares the linkage between a command, its events, and the handlers that are attached by this element.</span></span>  
  
 <span data-ttu-id="ebb95-257">Inny typowy sposób wypełnienia <xref:System.Windows.ContentElement.CommandBindings%2A> kolekcji jest użycie <xref:System.Windows.Input.CommandManager> metody programowo.</span><span class="sxs-lookup"><span data-stu-id="ebb95-257">Another typical way to populate the <xref:System.Windows.ContentElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="ebb95-258">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="ebb95-258">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="ebb95-259">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="ebb95-259">XAML Values</span></span>  
 <span data-ttu-id="ebb95-260">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="ebb95-260">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="ebb95-261">Co najmniej jeden <xref:System.Windows.Input.CommandBinding> elementów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-261">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="ebb95-262">Każdy z nich powinien mieć <xref:System.Windows.Input.CommandBinding.Command%2A> atrybut ustawioną znanych poleceń i ustawić atrybuty dla <xref:System.Windows.Input.CommandBinding.CanExecute> i <xref:System.Windows.Input.CommandBinding.Executed> implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-262">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="ebb95-263">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-263">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-264">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z tego elementu jako element docelowy przeciągania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-264">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-265">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-265">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-266">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-266">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-267">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-267">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-268">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-268">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragEnterEvent>|  
|<span data-ttu-id="ebb95-269">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-269">Routing strategy</span></span>|<span data-ttu-id="ebb95-270">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-270">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-271">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-271">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="ebb95-272">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-272">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="ebb95-273">Zastąpienie <xref:System.Windows.ContentElement.OnDragEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-273">Override <xref:System.Windows.ContentElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-274">Identyfikuje <see cref="E:System.Windows.ContentElement.DragEnter" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-274">Identifies the <see cref="E:System.Windows.ContentElement.DragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-275">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-275">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-276">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-276">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-277">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-277">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-278">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-278">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-279">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-279">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-280">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to element źródłowy przeciągania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-280">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-281">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-281">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-282">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-282">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-283">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-283">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-284">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-284">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragLeaveEvent>|  
|<span data-ttu-id="ebb95-285">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-285">Routing strategy</span></span>|<span data-ttu-id="ebb95-286">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-286">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-287">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-287">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="ebb95-288">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-288">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="ebb95-289">Zastąpienie <xref:System.Windows.ContentElement.OnDragLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-289">Override <xref:System.Windows.ContentElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-290">Identyfikuje <see cref="E:System.Windows.ContentElement.DragLeave" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-290">Identifies the <see cref="E:System.Windows.ContentElement.DragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-291">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-291">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-292">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-292">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-293">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-293">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-294">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-294">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-295">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-295">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-296">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-296">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-297">To zdarzenie występuje nawet w przypadku przeciągania pochodzi z granicami elementu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-297">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="ebb95-298">Jeśli przeciąganie rozpoczyna się poza granicami i przenosi wewnątrz, to zdarzenie jest wywoływane również, jak również <xref:System.Windows.ContentElement.DragEnter> i powiązanych zdarzeń w wersji zapoznawczej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-298">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.ContentElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="ebb95-299">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-299">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-300">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragOver> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-300">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-301">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-301">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-302">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-302">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragOverEvent>|  
|<span data-ttu-id="ebb95-303">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-303">Routing strategy</span></span>|<span data-ttu-id="ebb95-304">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-304">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-305">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-305">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="ebb95-306">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-306">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="ebb95-307">Zastąpienie <xref:System.Windows.ContentElement.OnDragOver%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-307">Override <xref:System.Windows.ContentElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-308">Identyfikuje <see cref="E:System.Windows.ContentElement.DragOver" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-308">Identifies the <see cref="E:System.Windows.ContentElement.DragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-309">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-309">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-310">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-310">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-311">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-311">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-312">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-312">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-313">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-313">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-314">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tego elementu jako element docelowy upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-314">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-315">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-315">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-316">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.Drop> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-316">Event handlers that are attached to the <xref:System.Windows.ContentElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-317">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-317">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-318">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-318">Identifier field</span></span>|<xref:System.Windows.ContentElement.DropEvent>|  
|<span data-ttu-id="ebb95-319">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-319">Routing strategy</span></span>|<span data-ttu-id="ebb95-320">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-320">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-321">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-321">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="ebb95-322">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-322">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="ebb95-323">Zastąpienie <xref:System.Windows.ContentElement.OnDrop%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-323">Override <xref:System.Windows.ContentElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-324">Identyfikuje <see cref="E:System.Windows.ContentElement.Drop" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-324">Identifies the <see cref="E:System.Windows.ContentElement.Drop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-325">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-325">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-326">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-326">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-327">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-327">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-328">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-328">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-329">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-329">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="contentElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-330">Próbuje ustawić fokus do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-330">Attempts to set focus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-331">
            <see langword="true" /> Jeśli fokus klawiatury może należeć do tego elementu; <see langword="false" /> Jeśli wywołanie tej metody nie wymuszone fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-331">
              <see langword="true" /> if keyboard focus could be set to this element; <see langword="false" /> if this method call did not force focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-332">Być focusable, <xref:System.Windows.ContentElement.Focusable%2A> i <xref:System.Windows.ContentElement.IsEnabled%2A> muszą być `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-332">To be focusable, <xref:System.Windows.ContentElement.Focusable%2A> and <xref:System.Windows.ContentElement.IsEnabled%2A> must both be `true`.</span></span> <span data-ttu-id="ebb95-333">Należy pamiętać, że prawie wszystkie <xref:System.Windows.ContentElement> klasy pochodnej nie są <xref:System.Windows.ContentElement.Focusable%2A> domyślnie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-333">Note that nearly all <xref:System.Windows.ContentElement> derived classes are not <xref:System.Windows.ContentElement.Focusable%2A> by default.</span></span>  
  
 <span data-ttu-id="ebb95-334">Nawet jeśli element jest obsługa zdarzeń focusable i włączone, w obrębie określonego drzewa, (takie jak w przypadku złożonych kontrolek) może odpowiadać, nie zezwalając fokus, Podgląd zdarzeń fokusu w związku z tym ta metoda zwróci `false`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-334">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="ebb95-335">Fokus na ogół podlega dwa oddzielne pojęcia: Klawiatura fokus i logiczny fokus, które nie zawsze są identyczne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-335">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="ebb95-336">Ta metoda ustawia logiczny fokus.</span><span class="sxs-lookup"><span data-stu-id="ebb95-336">This method sets the logical focus.</span></span> <span data-ttu-id="ebb95-337">Brak programowy sposób ustawić fokus klawiatury w szczególności; fokus klawiatury jest określana przez dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ebb95-337">There is no programmatic means to set keyboard focus specifically; keyboard focus is determined by user input.</span></span> <span data-ttu-id="ebb95-338">Aby uzyskać więcej informacji, zobacz [omówienie fokus](~/docs/framework/wpf/advanced/focus-overview.md) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-338">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="ebb95-339">Jeśli wywołanie <xref:System.Windows.ContentElement.Focus%2A> zwraca `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> i <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> są również `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-339">If calling <xref:System.Windows.ContentElement.Focus%2A> returns `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> and <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="ebb95-340">Jeśli powiązane właściwości nie są jeszcze `true`, podczas wywoływania <xref:System.Windows.ContentElement.Focus%2A>, co najmniej jeden z następujących zdarzeń pojawienia się w następującej kolejności: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (źródłowego jest nazwa nowego docelowego fokus), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (źródłowego jest nazwa nowego docelowego fokus).</span><span class="sxs-lookup"><span data-stu-id="ebb95-340">If the related properties are not already `true`, when you call <xref:System.Windows.ContentElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-341">Poniższy przykład jest obsługi zdarzeń załadować strony, która umożliwia znalezienie określonej o nazwie akapitu w dokumencie i ustawia fokus.</span><span class="sxs-lookup"><span data-stu-id="ebb95-341">The following example is a page-loaded event handler that finds a specified named paragraph in the document and sets focus to it.</span></span> <span data-ttu-id="ebb95-342">Akapitów nie są focusable domyślnie; Ten akapit miało styl stosowany (tego nie pokazano) który używany styl <xref:System.Windows.Setter> dokonanie focusable.</span><span class="sxs-lookup"><span data-stu-id="ebb95-342">Paragraphs are not focusable by default; this particular paragraph had a style applied (not shown) that used a style <xref:System.Windows.Setter> to make it focusable.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#Focus](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#focus)]
 [!code-vb[ContentElementsSmorgasbord#Focus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#focus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.ContentElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-343">Pobiera lub ustawia wartość wskazującą, czy element może odebrać fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-343">Gets or sets a value that indicates whether the element can receive focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-344">
            <see langword="true" /> Jeśli element jest focusable; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-344">
              <see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-345">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-345">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-346">Tylko element ukierunkowanych odbiera klawiatury.</span><span class="sxs-lookup"><span data-stu-id="ebb95-346">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="ebb95-347">Niektóre klasy pochodne mogą zastąpić metadanych dla tej właściwości zależności w taki sposób, że klasa pochodna jest focusable domyślnie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-347">Certain derived classes might override metadata for this dependency property such that the derived class is focusable by default.</span></span>  
  
 <span data-ttu-id="ebb95-348">Gdy dziedziczone przez <xref:System.Windows.Documents.Hyperlink> lub jej klas pochodnych <xref:System.Windows.Documents.Hyperlink> zastępuje metadane dla tej właściwości zależności i zmienia wartość domyślna tej właściwości należy `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-348">When inherited by <xref:System.Windows.Documents.Hyperlink> or its derived classes, <xref:System.Windows.Documents.Hyperlink> overrides the metadata for this dependency property and redefines the default value of this property to be `true`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-349">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-349">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-350">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-350">Identifier field</span></span>|<xref:System.Windows.ContentElement.FocusableProperty>|  
|<span data-ttu-id="ebb95-351">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-351">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-352">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-352">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-353">Poniższy przykład tworzy styl, który sprawia, że <xref:System.Windows.Documents.Paragraph> focusable domyślnie i nadaje mu visual zachowanie po odebraniu fokus.</span><span class="sxs-lookup"><span data-stu-id="ebb95-353">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ebb95-354">
            <para>Jeśli pochodzi od <see cref="T:System.Windows.ContentElement" />, należy wziąć pod uwagę, czy ma nazwę elementu na focusable, ponieważ domyślnie nie będzie focusable. Jeśli chcesz, aby Twoje element ma być focusable, zastępowanie metadanych dla tej właściwości w Twojej statycznego konstruktora klasy pochodnej w następujący sposób: [! kodu języka csharp — CorePseudocode #UIElementShortOverride (~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/ CSharp/corepseudocode.cs#uielementshortoverride)] [! code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)] gdzie <paramref name="myElement" /> jest nazwą klasy typu, które są zastępowanie wartości metadanych na.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-354">
              <para>When you derive from <see cref="T:System.Windows.ContentElement" />, consider whether you want your element to be focusable, because by default it will not be focusable. If you want your element to be focusable, override the metadata for this property in your derived class static constructor as follows:  [!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]  where <paramref name="myElement" /> is the class name of the type that you are overriding the metadata value on.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-355">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.Focusable" /> zmiany właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-355">Occurs when the value of the <see cref="P:System.Windows.ContentElement.Focusable" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-356">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-356">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-357">Identyfikuje <see cref="P:System.Windows.ContentElement.Focusable" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-357">Identifies the <see cref="P:System.Windows.ContentElement.Focusable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="contentElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="ebb95-358">Właściwość the.Dependency do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-358">The.dependency property to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-359">Zwraca wartość właściwości podstawowej dla określonej właściwości w tym elemencie, pomijając wszelkie animowany wartość z bieżącą lub zatrzymana animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-359">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-360">Właściwość wartości tak, jakby animacji nie są dołączone do właściwości określonym zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-360">The property value as if no animations are attached to the specified dependency property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-361">Jeśli animacji nie są dołączone do właściwości, a następnie <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> zwracana wartość jest zawsze taki sam jak <xref:System.Windows.DependencyObject.GetValue%2A> zwracają wartość.</span><span class="sxs-lookup"><span data-stu-id="ebb95-361">If no animations are attached to the property, then the <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="ebb95-362">W przypadku animacji dołączony następnie wszystkie możliwe animacji uzyskane wartości w tym uruchomienia i zatrzymania wartości są ignorowane, a wartość właściwości jest określona, oparte na wszystkich innych możliwych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-362">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="ebb95-363">Aby uzyskać więcej informacji, zobacz [pierwszeństwo wartość właściwości zależności](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-363">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="contentElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-364">Po przesłonięciu w klasie pochodnej zwraca zamiast [! Nadrzędny include[TLA#tla_ui](~/includes/tlasharptla-UI-MD.MD)] dla tego elementu, jeśli wizualny obiekt nadrzędny nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-364">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-365">Obiekt, jeśli połączenie alternatywny nadrzędny do raportu jest implementacja klasy pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-365">An object, if implementation of a derived class has an alternate parent connection to report.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-366">Domyślna implementacja wirtualnego ta metoda zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-366">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="ebb95-367"><xref:System.Windows.FrameworkContentElement> udostępnia implementację praktyczne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-367"><xref:System.Windows.FrameworkContentElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="ebb95-368">Alternatywne nadrzędnych są używane w przypadku zdarzeń routingu w przypadkach, gdy element tworzy alternatywnych nadrzędna struktura tak, aby jego zdarzeń są kierowane w taki sposób, aby diverges od standardowego wzorca routingu w górę drzewa wizualnego do standardowego elementu nadrzędnego, lub w dół Wyświetl podgląd strategii routingu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-368">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-369">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania i upuszczania, które obejmuje ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-369">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-370"><xref:System.Windows.ContentElement.GiveFeedback> Zdarzeń umożliwia źródło zdarzeń przeciągnij, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-370">The <xref:System.Windows.ContentElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="ebb95-371">Wizualny wzmacnia, że operacja przeciągania i upuszczania jest w toku.</span><span class="sxs-lookup"><span data-stu-id="ebb95-371">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="ebb95-372">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.GiveFeedback> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-372">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-373">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GiveFeedback> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-373">Event handlers that are attached to the <xref:System.Windows.ContentElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-374">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-374">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-375">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-375">Identifier field</span></span>|<xref:System.Windows.ContentElement.GiveFeedbackEvent>|  
|<span data-ttu-id="ebb95-376">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-376">Routing strategy</span></span>|<span data-ttu-id="ebb95-377">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-377">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-378">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-378">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="ebb95-379">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-379">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="ebb95-380">Zastąpienie <xref:System.Windows.ContentElement.OnGiveFeedback%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-380">Override <xref:System.Windows.ContentElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-381">Identyfikuje <see cref="E:System.Windows.ContentElement.GiveFeedback" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-381">Identifies the <see cref="E:System.Windows.ContentElement.GiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-382">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-382">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-383">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-383">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-384">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-384">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-385">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-385">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-386">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-386">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-387">Występuje, gdy ten element pobiera fokus logiczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-387">Occurs when this element gets logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-388">Logiczny fokus różni się od fokus klawiatury, jeśli celowo wymusza fokus przy użyciu wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-388">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="ebb95-389">W tym scenariuszu fokus klawiatury pozostaje, gdzie jest i element gdzie <xref:System.Windows.ContentElement.Focus%2A> metoda jest wywoływana nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="ebb95-389">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="ebb95-390">Bardziej dokładne interpretacja to zdarzenie jest jego jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsFocused%2A> właściwości elementu w trasie została zmieniona z `false` do `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-390">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="ebb95-391">Ponieważ to zdarzenie używa propagacji routingu, element, który otrzymuje fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-391">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="ebb95-392">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element uzyskanych fokus.</span><span class="sxs-lookup"><span data-stu-id="ebb95-392">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-393">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-393">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-394">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-394">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotFocusEvent>|  
|<span data-ttu-id="ebb95-395">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-395">Routing strategy</span></span>|<span data-ttu-id="ebb95-396">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-396">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-397">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-397">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="ebb95-398">Nie ma żadnego odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-398">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="ebb95-399">Zastąpienie <xref:System.Windows.ContentElement.OnGotFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-399">Override <xref:System.Windows.ContentElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-400">Identyfikuje <see cref="E:System.Windows.ContentElement.GotFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-400">Identifies the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-401">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-401">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-402">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-402">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-403">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-403">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-404">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-404">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-405">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-405">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-406">Występuje, gdy klawiatura ma fokus w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-406">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-407"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> jest podobne zdarzenia, który śledzi zmiany stanu we właściwości, która przechowuje stan aktywny elementu; <xref:System.Windows.ContentElement.GotKeyboardFocus> zdarzenie jest zgłaszane w tych samych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="ebb95-407"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.ContentElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="ebb95-408">Ponieważ to zdarzenie używa propagacji routingu, element, który ma fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-408">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="ebb95-409">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="ebb95-409">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="ebb95-410">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.GotKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-410">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-411">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-411">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-412">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-412">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-413">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-413">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="ebb95-414">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-414">Routing strategy</span></span>|<span data-ttu-id="ebb95-415">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-415">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-416">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-416">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="ebb95-417">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-417">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="ebb95-418">Zastąpienie <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-418">Override <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-419">Identyfikuje <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-419">Identifies the <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-420">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-420">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-421">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-421">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-422">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-422">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-423">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-423">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-424">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-424">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-425">Występuje, gdy ten element przechwytuje mysz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-425">Occurs when this element captures the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-426">Gdy element przechwytuje mysz, otrzymuje myszą nawet wtedy, gdy wskaźnik myszy znajduje się poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-426">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="ebb95-427">Mysz zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania oraz pozostaje przechwycone, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-427">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="ebb95-428">Ponieważ to zdarzenie używa propagacji routingu, element, który ma przechwytywania może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-428">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="ebb95-429">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> zdarzeń przechwytywania danych, aby określić rzeczywistego elementu, który ma myszy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-429">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="ebb95-430">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.GotMouseCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-430">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.ContentElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-431">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotMouseCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-431">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-432">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-432">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-433">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-433">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="ebb95-434">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-434">Routing strategy</span></span>|<span data-ttu-id="ebb95-435">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-435">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-436">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-436">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="ebb95-437">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-437">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="ebb95-438">Zastąpienie <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-438">Override <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-439">Identyfikuje <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-439">Identifies the <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-440">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-440">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-441">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-441">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-442">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-442">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-443">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-443">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-444">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-444">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-445">Występuje, gdy ten element przechwytuje pióro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-445">Occurs when this element captures the stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-446">Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, jeśli wskaźnik jest poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-446">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="ebb95-447">Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania oraz zachowuje przechwytywania, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-447">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="ebb95-448">Ponieważ to zdarzenie używa propagacji routingu, element, który ma przechwytywania może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-448">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="ebb95-449">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-449">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="ebb95-450">To zdarzenie tworzy alias dla dołączone zdarzenie dla tej klasy, aby <xref:System.Windows.ContentElement.GotStylusCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-450">This event creates an alias for the  attached event for this class so that <xref:System.Windows.ContentElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-451">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotStylusCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-451">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-452">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-452">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-453">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-453">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="ebb95-454">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-454">Routing strategy</span></span>|<span data-ttu-id="ebb95-455">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-455">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-456">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-456">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-457">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-457">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="ebb95-458">Zastąpienie <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-458">Override <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-459">Identyfikuje <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-459">Identifies the <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-460">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-460">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-461">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-461">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-462">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-462">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-463">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-463">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-464">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-464">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-465">Występuje, gdy touch są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-465">Occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-466">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-467">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-467">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="ebb95-468">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-468">Routing strategy</span></span>|<span data-ttu-id="ebb95-469">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-469">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-470">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-470">Delegate</span></span>|<span data-ttu-id="ebb95-471"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-471"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="ebb95-472">Zastąpienie <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-472">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-473">Identyfikuje <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-473">Identifies the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-474">Pobiera wartość wskazującą, czy ten element ma wszystkie właściwości animowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-474">Gets a value that indicates whether this element has any animated properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-475">
            <see langword="true" /> Jeśli ten element ma animacje dołączony do żadnej z jej właściwości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-475">
              <see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-476">Ta właściwość zwraca `true` trwałe animacji (unclocked, zawsze uruchomiona) lub animacji, które mają określone osi czasu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-476">This property returns `true` either for persistent (unclocked, always-running) animations or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.ContentElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-477">Pobiera kolekcję powiązań wejściowych, które są skojarzone z tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-477">Gets the collection of input bindings that are associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-478">Kolekcję powiązań wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-478">The collection of input bindings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-479">Powiązania wejściowe obsługuje powiązanie polecenia, aby urządzenia wejściowe.</span><span class="sxs-lookup"><span data-stu-id="ebb95-479">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="ebb95-480">Na przykład <xref:System.Windows.Input.MouseBinding> implementuje wejściowych powiązania, które zawierają właściwości, które są specyficzne dla urządzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-480">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are specific to mouse devices.</span></span>  
  
 <span data-ttu-id="ebb95-481">Kolekcję powiązań wejściowych obejmuje powiązania wejściowe, które odnoszą się do typu i powiązania wejściowe, które są zadeklarowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-481">The collection of input bindings includes both input bindings that pertain to the type and also input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="ebb95-482">Powiązaną właściwość <xref:System.Windows.ContentElement.CommandBindings%2A>, utrzymuje kolekcję powiązań polecenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-482">A related property, <xref:System.Windows.ContentElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="ebb95-483">Te powiązania różnią się od powiązania wejściowe reprezentują następny poziom w dół przetwarzania polecenia - akcje, które są powiązane z znanych poleceń i obsługi specyficzne dla nich.</span><span class="sxs-lookup"><span data-stu-id="ebb95-483">These bindings differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands and class-specific handlers for them.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="ebb95-484">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="ebb95-484">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="ebb95-485">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="ebb95-485">XAML Values</span></span>  
 <span data-ttu-id="ebb95-486">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="ebb95-486">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="ebb95-487">Co najmniej jeden <xref:System.Windows.Input.InputBinding> elementów (zazwyczaj <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding> klas pochodnych).</span><span class="sxs-lookup"><span data-stu-id="ebb95-487">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="ebb95-488">Każdy z tych powinien mieć <xref:System.Windows.Input.InputBinding.Command%2A> i <xref:System.Windows.Input.InputBinding.Gesture%2A> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-488">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.ContentElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-489">Pobiera lub ustawia wartość wskazującą, czy ten element jest włączony w [! INCLUDE[TLA#tla_ui](~/includes/tlasharptla-UI-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-489">Gets or sets a value that indicates whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-490">
            <see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-490">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-491">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-491">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-492">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-492">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-493">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-493">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsEnabledProperty>|  
|<span data-ttu-id="ebb95-494">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-494">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-495">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-495">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-496">Poniższy przykład tworzy styl zawierający metody ustawiającej właściwości określające zachowanie alternatywny visual podczas <xref:System.Windows.Documents.Hyperlink> ustawiono <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-496">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> is set to <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-497">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwość zmiany tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-497">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property on this element changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-498">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-498">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.ContentElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-499">Pobiera wartość, która jest zwracana wartość <see cref="P:System.Windows.ContentElement.IsEnabled" /> w klasach pochodnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-499">Gets a value that becomes the return value of <see cref="P:System.Windows.ContentElement.IsEnabled" /> in derived classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-500">
            <see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-500">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ebb95-501">
            <para>Domyślna implementacja ta właściwość przechowuje wartości i oblicza również, czy element nadrzędny tego elementu jest włączone. (Jeśli element nadrzędny nie jest włączone, element podrzędny nie może efektywnie włączone w praktycznych [! INCLUDE[TLA#tla_ui](~/includes/tlasharptla-UI-MD.MD)].) Jeśli chcesz przesłonić tę implementację, upewnij się, że możesz wywoływać implementację podstawową w celu zachowania tego zachowania.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-501">
              <para>The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled. (If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-502">Identyfikuje <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-502">Identifies the <see cref="P:System.Windows.ContentElement.IsEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.ContentElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-503">Pobiera wartość, która określa, czy ten element ma logiczny fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-503">Gets a value that determines whether this element has logical focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-504">
            <see langword="true" /> Jeśli ten element ma logiczny fokus; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-504">
              <see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-505">Logiczny fokus może się różnić od fokus klawiatury, jeśli aplikacja ma wiele podziałów fokus, takich jak między zawartość menu i pozostałej części aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-505">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="ebb95-506">W tym scenariuszu fokus klawiatury może zawierać tylko jeden element interfejsu użytkownika aplikacji, jednak niektóre elementy w innych działów fokus nadal mogą zachować logiczny fokus.</span><span class="sxs-lookup"><span data-stu-id="ebb95-506">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="ebb95-507">Aby uzyskać więcej informacji dotyczących logiczny fokus, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md) i [omówienie fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-507">For more information on logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-508">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-508">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-509">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-509">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsFocusedProperty>|  
|<span data-ttu-id="ebb95-510">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-510">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-511">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-511">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-512">Poniższy przykład tworzy styl, który sprawia, że <xref:System.Windows.Documents.Paragraph> focusable domyślnie i nadaje mu visual zachowanie po odebraniu fokus.</span><span class="sxs-lookup"><span data-stu-id="ebb95-512">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-513">Identyfikuje <see cref="P:System.Windows.ContentElement.IsFocused" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-513">Identifies the <see cref="P:System.Windows.ContentElement.IsFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-514">Pobiera wartość wskazującą, czy system IME, takich jak [! INCLUDE[TLA#tla_ime](~/includes/tlasharptla-IME-MD.MD)] jest włączona dla przetwarzania danych wejściowych do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-514">Gets a value that indicates whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], is enabled for processing the input to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-515">
            <see langword="true" /> Jeśli Metoda wejściowa jest aktywna; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-515">
              <see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-516">Wartość domyślna właściwości dołączonych jest <see langword="true" />, jednak ta wartość ma wpływ stan metody wprowadzania tekstu w czasie wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-516">The default value of the underlying attached property is <see langword="true" />; however, this value is influenced by the state of input methods at runtime.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-517">Ta właściwość zwraca wartość zwracaną przez dołączona właściwość <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> dla aktualnie włączonego metody wejściowe (klawiatury, mowy i innych urządzeniach wejściowych).</span><span class="sxs-lookup"><span data-stu-id="ebb95-517">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-518">Pobiera wartość wskazującą, czy ten element ma fokus klawiatury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-518">Gets a value that indicates whether this element has keyboard focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-519">
            <see langword="true" /> Jeśli ten element ma fokus klawiatury; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-519">
              <see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-520">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-520">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-521">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-521">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-522">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-522">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="ebb95-523">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-523">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-524">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-524">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-525">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-525">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-526">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-526">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-527">Identyfikuje <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-527">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-528">Pobiera wartość wskazującą, czy fokus klawiatury mieści się w dowolnym miejscu element lub elementy podrzędne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-528">Gets a value that indicates whether keyboard focus is anywhere within the element or child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-529">
            <see langword="true" /> Jeśli fokus klawiatury znajduje się na element lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-529">
              <see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-530">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-530">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-531">Zmiana wartości tej właściwości zwykle podnieść <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzeń, chyba że klasa pochodna przesłoniła <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> do pomijania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-531">Changes to the value of this property typically raise the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="ebb95-532">Ta właściwość nie należy ustawiać bezpośrednio, ale można ustawić fokus do elementu, wywołując <xref:System.Windows.ContentElement.Focus%2A>, lub tworząc <xref:System.Windows.ContentElement.MoveFocus%2A> żądania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-532">You do not set this property directly, but you can set the focus to the element by calling <xref:System.Windows.ContentElement.Focus%2A>, or by making a <xref:System.Windows.ContentElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="ebb95-533">Jedną z tych wywołań metody mogą ulec zmianie wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="ebb95-533">Either of these method calls might change this property value.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-534">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-534">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-535">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-535">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="ebb95-536">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-536">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-537">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-537">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-538">Występuje, gdy wartość <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-538">Occurs when the value of the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-539">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-539">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-540">Identyfikuje <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-540">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.ContentElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-541">Pobiera wartość wskazującą, czy wskaźnik myszy jest przechwytywany przez ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-541">Gets a value that indicates whether the mouse is captured by this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-542">
            <see langword="true" /> Jeśli element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-542">
              <see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-543">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-543">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-544">Stan przechwytywanie myszy powiązany jest w trakcie operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-544">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-545">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-545">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-546">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-546">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="ebb95-547">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-547">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-548">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-548">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-549">Poniższy przykład powoduje stanu przechwytywanie myszy lub wyłącz zależności od tego, czy wskaźnik myszy jest już przechwycona przez element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-549">The following example turns the mouse capture state on or off based on whether the mouse is already captured by the element.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-550">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-550">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-551">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-551">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-552">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-552">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-553">Pobiera wartość określającą, czy przechwytywanie myszy jest przechowywane przez ten element lub elementy podrzędne w jego drzewie elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-553">Gets a value that determines whether mouse capture is held by this element or by child elements in its element tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-554">
            <see langword="true" /> Jeśli ten element lub zawartych w niej element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-554">
              <see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-555">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-555">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-556">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-556">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-557">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-557">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="ebb95-558">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-558">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-559">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-559">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-560">Występuje, gdy wartość <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> zmiany w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-560">Occurs when the value of the <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-561">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-561">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-562">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-562">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-563">Pobiera wartość wskazującą, czy pozycja wskaźnika myszy odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-563">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-564">
            <see langword="true" /> Gdy wskaźnik myszy znajduje się nad takiego samego wyniku elementu, jako testu trafienia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-564">
              <see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-565">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-565">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-566">W odróżnieniu od <xref:System.Windows.ContentElement.IsMouseOver%2A>, ta właściwość jest tylko `true` , gdy wskaźnik myszy znajduje się nad elementem literału — podobnie jak w przypadku testu trafienia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-566">Unlike <xref:System.Windows.ContentElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test.</span></span> <span data-ttu-id="ebb95-567">Gdy wskaźnik myszy jest nad elementu podrzędnego, w szczególności za pośrednictwem elementy, które są częścią szablonu głębiej i składania kanałów, element tej właściwości będzie `false`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-567">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="ebb95-568">Jeśli nie wiadomo, jak kontrolka zostanie połączone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który należy zdefiniować), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="ebb95-568">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="ebb95-569">W przypadku większości scenariuszy, w którym nie tworzenia formantów, użyć <xref:System.Windows.ContentElement.IsMouseOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-569">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="ebb95-570">Jeśli przycisk myszy jest przechwytywany przez ten element, a ta właściwość jest `true` w czasie przechwytywania, ta właściwość będzie zwracać `true` dopóki przechwytywanie myszy zostanie utracone i kursor nie znajduje się za pośrednictwem jego granic.</span><span class="sxs-lookup"><span data-stu-id="ebb95-570">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-571">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-571">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-572">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-572">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="ebb95-573">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-573">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-574">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-574">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-575">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-575">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-576">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-576">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-577">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-577">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.ContentElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-578">Pobiera wartość wskazującą, czy wskaźnik myszy znajduje się nad tym elementem (w tym elementy podrzędne visual lub jego składania kontroli).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-578">Gets a value that indicates whether the mouse pointer is located over this element (including visual child elements, or its control compositing).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-579">
            <see langword="true" /> Gdy wskaźnik myszy znajduje się nad elementu lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-579">
              <see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-580">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-580">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-581">Mimo że podobne zdarzenia "IsMouseOverChanged" nie istnieje, czy kilka podobnych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-581">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="ebb95-582">Na przykład można użyć <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, i <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-582">For example, you can use <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, and <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="ebb95-583">Jeśli ten element przechwytuje mysz, ta właściwość pozostaje `true` dopóki przechwytywanie myszy zostanie utracone i wskaźnik myszy opuszczeniu granic elementu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-583">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-584">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-584">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-585">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-585">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseOverProperty>|  
|<span data-ttu-id="ebb95-586">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-586">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-587">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-587">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-588">Poniższy przykład tworzy styl zawierający metody ustawiającej właściwości określające zachowanie alternatywny visual podczas <xref:System.Windows.Documents.Hyperlink> raporty <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-588">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> reports <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-589">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-589">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.ContentElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-590">Pobiera wartość wskazującą, czy pióro są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-590">Gets a value that indicates whether the stylus is captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-591">
            <see langword="true" /> Jeśli element ma Przechwytywanie pióra; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-591">
              <see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-592">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-592">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-593">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-593">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-594">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-594">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-595">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-595">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-596">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-596">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="ebb95-597">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-597">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-598">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-598">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureStylus" />
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-599">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-599">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-600">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-600">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-601">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-601">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-602">Pobiera wartość określającą, czy przechwytywanie pióra jest przechowywane przez ten element, w tym elementów podrzędnych i składania formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-602">Gets a value that determines whether stylus capture is held by this element, including child elements and control compositing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-603">
            <see langword="true" /> Jeśli przechwytywanie pióra odbywa się w obrębie tego elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-603">
              <see langword="true" /> if stylus capture is held within this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-604">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-604">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-605">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-605">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-606">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-606">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-607">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-607">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="ebb95-608">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-608">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-609">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-609">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-610">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-610">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-611">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-611">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-612">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-612">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-613">Pobiera wartość wskazującą, czy pozycja Pióro odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-613">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-614">
            <see langword="true" /> Jeśli znajduje się nad tego samego elementu jako testu trafienia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-614">
              <see langword="true" /> if the stylus is over the same element as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-615">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-615">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-616">W odróżnieniu od <xref:System.Windows.ContentElement.IsStylusOver%2A>, ta właściwość jest tylko `true` , gdy pióro znajduje się nad elementem.</span><span class="sxs-lookup"><span data-stu-id="ebb95-616">Unlike <xref:System.Windows.ContentElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="ebb95-617">Jeśli pióro jest na element podrzędny lub elementy, które są częścią elementu składania głębiej, ta właściwość będzie `false`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-617">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing, this property will be `false`.</span></span>  
  
 <span data-ttu-id="ebb95-618">Jeśli nie wiadomo, jak kontrolka zostanie połączone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który należy zdefiniować), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="ebb95-618">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="ebb95-619">W przypadku większości scenariuszy, w którym nie tworzenia formantów, użyć <xref:System.Windows.ContentElement.IsStylusOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-619">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="ebb95-620">Jeśli ten element ma Przechwytywanie pióra, ta właściwość jest `true` w czasie przechwytywania, ta właściwość pozostaje `true` aż do przechwycenia pióra zostaną utracone i pióro nie jest za pośrednictwem jego granic.</span><span class="sxs-lookup"><span data-stu-id="ebb95-620">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="ebb95-621">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-621">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-622">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-622">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-623">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-623">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-624">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-624">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="ebb95-625">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-625">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-626">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-626">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-627">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-627">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-628">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-628">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-629">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-629">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.ContentElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-630">Pobiera wartość wskazującą, czy Pióro znajduje się nad tym elementem (w tym elementy podrzędne visual).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-630">Gets a value that indicates whether the stylus is located over this element (including visual child elements).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-631">
            <see langword="true" /> Jeśli znajduje się nad elementu lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-631">
              <see langword="true" /> if the stylus is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ebb95-632">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-632">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-633">Jeśli ten element ma Przechwytywanie pióra, ta właściwość pozostaje `true` dopóki nie zostanie utracone Przechwytywanie pióra i kursor znajduje się poza jej zakres.</span><span class="sxs-lookup"><span data-stu-id="ebb95-633">If this element has stylus capture, this property remains `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="ebb95-634">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-634">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-635">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-635">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ebb95-636">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ebb95-636">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-637">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-637">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusOverProperty>|  
|<span data-ttu-id="ebb95-638">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ebb95-638">Metadata properties set to `true`</span></span>|<span data-ttu-id="ebb95-639">Brak</span><span class="sxs-lookup"><span data-stu-id="ebb95-639">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-640">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-640">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-641">Występuje po naciśnięciu klawisza, gdy fokus jest w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-641">Occurs when a key is pressed while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-642">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.</span><span class="sxs-lookup"><span data-stu-id="ebb95-642">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="ebb95-643"><xref:System.Windows.ContentElement.KeyDown> Zdarzenie jest zdarzenie wprowadzania tekstu niższego poziomu, które mogą nie działać zgodnie z oczekiwaniami w niektórych formantów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-643">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="ebb95-644">Jest tak, ponieważ niektóre formanty mają składania kontroli lub klasy obsługi udostępnia wyższego poziomu wersji tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="ebb95-644">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="ebb95-645">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.KeyDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-645">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.KeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-646">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.KeyDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-646">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-647">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-647">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-648">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-648">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyDownEvent>|  
|<span data-ttu-id="ebb95-649">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-649">Routing strategy</span></span>|<span data-ttu-id="ebb95-650">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-650">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-651">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-651">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="ebb95-652">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-652">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="ebb95-653">Zastąpienie <xref:System.Windows.ContentElement.OnKeyDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-653">Override <xref:System.Windows.ContentElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-654">Identyfikuje <see cref="E:System.Windows.ContentElement.KeyDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-654">Identifies the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-655">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-655">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-656">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-656">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-657">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-657">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-658">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-658">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-659">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-659">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-660">Występuje po zwolnieniu klawisza, gdy fokus jest w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-660">Occurs when a key is released while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-661">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.KeyUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-661">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.ContentElement.KeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-662">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.KeyUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-662">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-663">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-663">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-664">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-664">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyUpEvent>|  
|<span data-ttu-id="ebb95-665">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-665">Routing strategy</span></span>|<span data-ttu-id="ebb95-666">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-666">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-667">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-667">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="ebb95-668">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-668">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="ebb95-669">Zastąpienie <xref:System.Windows.ContentElement.OnKeyUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-669">Override <xref:System.Windows.ContentElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-670">Identyfikuje <see cref="E:System.Windows.ContentElement.KeyUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-670">Identifies the <see cref="E:System.Windows.ContentElement.KeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-671">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-671">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-672">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-672">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-673">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-673">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-674">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-674">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-675">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-675">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-676">Występuje po utracie fokusu logicznego przez ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-676">Occurs when this element loses logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-677">Logiczny fokus różni się od fokus klawiatury, gdy fokus celowo wymusza optymalizacji przy użyciu wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-677">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="ebb95-678">W tym scenariuszu, pozostaje fokus klawiatury, gdzie jest i element gdzie <xref:System.Windows.ContentElement.Focus%2A> metoda jest wywoływana nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="ebb95-678">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="ebb95-679">Bardziej dokładne interpretacja to zdarzenie jest jego jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsFocused%2A> zmiany właściwości elementu w trasie z `true` do `false`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-679">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="ebb95-680">Ponieważ to zdarzenie używa propagacji routingu, element traci fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-680">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="ebb95-681">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element uzyskanych fokus.</span><span class="sxs-lookup"><span data-stu-id="ebb95-681">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-682">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-682">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-683">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-683">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostFocusEvent>|  
|<span data-ttu-id="ebb95-684">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-684">Routing strategy</span></span>|<span data-ttu-id="ebb95-685">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-685">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-686">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-686">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="ebb95-687">Nie ma żadnego odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-687">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="ebb95-688">Zastąpienie <xref:System.Windows.ContentElement.OnLostFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-688">Override <xref:System.Windows.ContentElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-689">Identyfikuje <see cref="E:System.Windows.ContentElement.LostFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-689">Identifies the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-690">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-690">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-691">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-691">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-692">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-692">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-693">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-693">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-694">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-694">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-695">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-695">Occurs when the keyboard is no longer focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-696">Ponieważ to zdarzenie używa propagacji routingu, element utracie fokusu może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-696">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="ebb95-697">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-697">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="ebb95-698">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.LostKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-698">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-699">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-699">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-700">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-700">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-701">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-701">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="ebb95-702">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-702">Routing strategy</span></span>|<span data-ttu-id="ebb95-703">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-703">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-704">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-704">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="ebb95-705">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-705">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="ebb95-706">Zastąpienie <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-706">Override <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-707">Identyfikuje <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-707">Identifies the <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-708">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-708">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-709">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-709">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-710">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-710">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-711">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-711">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-712">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-712">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-713">Występuje, gdy ten element utraci przechwytywanie myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-713">Occurs when this element loses mouse capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-714">Gdy element przechwytuje mysz, otrzymuje myszą nawet, jeśli wskaźnik jest poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-714">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="ebb95-715">Mysz jest zwykle przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-715">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="ebb95-716">Ponieważ to zdarzenie używa propagacji routingu, element utraci Przechwytywanie może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-716">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="ebb95-717">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element, który utracił przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-717">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="ebb95-718">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.LostMouseCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-718">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-719">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostMouseCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-719">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-720">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-720">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-721">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-721">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="ebb95-722">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-722">Routing strategy</span></span>|<span data-ttu-id="ebb95-723">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-723">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-724">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-724">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="ebb95-725">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-725">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="ebb95-726">Zastąpienie <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-726">Override <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-727">Identyfikuje <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-727">Identifies the <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-728">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-728">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-729">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-729">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-730">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-730">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-731">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-731">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-732">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-732">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-733">Występuje, gdy ten element utraci Przechwytywanie pióra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-733">Occurs when this element loses stylus capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-734">Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, jeśli wskaźnik jest poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-734">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="ebb95-735">Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-735">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="ebb95-736">Ponieważ to zdarzenie używa propagacji routingu, element traci fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-736">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="ebb95-737">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-737">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="ebb95-738">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.LostStylusCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-738">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-739">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostStylusCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-739">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-740">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-740">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-741">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-741">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="ebb95-742">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-742">Routing strategy</span></span>|<span data-ttu-id="ebb95-743">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-743">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-744">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-744">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-745">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-745">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="ebb95-746">Zastąpienie <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-746">Override <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-747">Identyfikuje <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-747">Identifies the <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-748">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-748">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-749">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-749">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-750">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-750">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-751">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-751">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-752">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-752">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-753">Występuje, gdy ten element utraci Przechwytywanie touch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-753">Occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-754">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-754">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-755">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-755">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="ebb95-756">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-756">Routing strategy</span></span>|<span data-ttu-id="ebb95-757">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-757">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-758">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-758">Delegate</span></span>|<span data-ttu-id="ebb95-759"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-759"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="ebb95-760">Zastąpienie <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-760">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-761">Identyfikuje <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-761">Identifies the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-762">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-762">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-763">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-763">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-764">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-764">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-765"><xref:System.Windows.ContentElement.MouseDown> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.ContentElement.MouseLeftButtonDown> lub <xref:System.Windows.ContentElement.MouseRightButtonDown>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="ebb95-765">The <xref:System.Windows.ContentElement.MouseDown> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="ebb95-766"><xref:System.Windows.ContentElement.MouseLeftButtonDown> i <xref:System.Windows.ContentElement.MouseRightButtonDown> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-766"><xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="ebb95-767">Zobacz uwagi dla <xref:System.Windows.ContentElement.MouseLeftButtonDown> lub <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-767">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ebb95-768">Kilka <xref:System.Windows.ContentElement> pochodzi z klasy, które mają podobne kontroli zachowania, na przykład <xref:System.Windows.Documents.Hyperlink>, może być związanego z używaniem klasy obsługi zdarzenia przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-768">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="ebb95-769">Lewy przycisk myszy w dół zdarzeń jest najbardziej prawdopodobne zdarzenia klasa Obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-769">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="ebb95-770">Klasy obsługi często oznacza odpowiadającego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsłużone.</span><span class="sxs-lookup"><span data-stu-id="ebb95-770">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="ebb95-771">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-771">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="ebb95-772">Wszystkie inne klasy lub wystąpienia obsługi, które są dołączone do elementów w kierunku propagacji do katalogu głównego w drzewie interfejsu użytkownika również nie zwykle są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-772">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="ebb95-773">Można rozwiązać problem, który jest opisane w poprzednim ważne i nadal odbierać <xref:System.Windows.ContentElement.MouseDown> zdarzeń związanych z lewego przycisku myszy w dół zdarzenia w klasie pochodnej, który zawiera klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="ebb95-773">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="ebb95-774">Dołącz obsługi <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="ebb95-774">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="ebb95-775">Zauważyć, że jest zdarzeń w wersji zapoznawczej, dlatego trasy rozpoczyna się w katalogu głównym a tuneli do formantu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-775">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="ebb95-776">Zarejestruj Obsługa w formancie proceduralnie przez wywołanie metody <xref:System.Windows.ContentElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-776">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-777">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-777">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-778">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-778">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseDownEvent>|  
|<span data-ttu-id="ebb95-779">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-779">Routing strategy</span></span>|<span data-ttu-id="ebb95-780">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-780">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-781">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-781">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-782">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-782">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="ebb95-783">Zastąpienie <xref:System.Windows.ContentElement.OnMouseDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-783">Override <xref:System.Windows.ContentElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-784">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-784">Identifies the <see cref="E:System.Windows.ContentElement.MouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-785">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-785">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-786">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-786">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-787">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-787">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-788">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-788">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-789">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-789">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-790">Występuje, gdy wskaźnik myszy zostanie umieszczony granic tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-790">Occurs when the mouse pointer enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-791"><xref:System.Windows.ContentElement.MouseEnter> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-791"><xref:System.Windows.ContentElement.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="ebb95-792">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-792">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="ebb95-793">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="ebb95-793">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="ebb95-794">Mimo że <xref:System.Windows.ContentElement.MouseEnter> ścieżki, gdy wskaźnik myszy zostanie umieszczony granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsMouseOver%2A> zmieniono wartość właściwości z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-794">Although <xref:System.Windows.ContentElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="ebb95-795">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-795">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-796">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-796">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-797">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-797">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-798">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-798">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseEnterEvent>|  
|<span data-ttu-id="ebb95-799">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-799">Routing strategy</span></span>|<span data-ttu-id="ebb95-800">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-800">Direct</span></span>|  
|<span data-ttu-id="ebb95-801">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-801">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="ebb95-802">Zastąpienie <xref:System.Windows.ContentElement.OnMouseEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-802">Override <xref:System.Windows.ContentElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-803">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseEnter" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-803">Identifies the <see cref="E:System.Windows.ContentElement.MouseEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-804">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-804">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-805">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-805">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-806">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-806">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-807">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-807">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-808">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-808">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-809">Występuje po opuszczeniu przez wskaźnik myszy granic tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-809">Occurs when the mouse pointer leaves the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-810"><xref:System.Windows.ContentElement.MouseLeave> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-810"><xref:System.Windows.ContentElement.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="ebb95-811">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-811">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="ebb95-812">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="ebb95-812">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="ebb95-813">Mimo że <xref:System.Windows.ContentElement.MouseLeave> ścieżki, gdy mysz opuści elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsMouseOver%2A> zmieniono wartość właściwości z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-813">Although <xref:System.Windows.ContentElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="ebb95-814">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-814">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-815">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-815">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-816">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-816">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-817">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-817">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeaveEvent>|  
|<span data-ttu-id="ebb95-818">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-818">Routing strategy</span></span>|<span data-ttu-id="ebb95-819">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-819">Direct</span></span>|  
|<span data-ttu-id="ebb95-820">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-820">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="ebb95-821">Zastąpienie <xref:System.Windows.ContentElement.OnMouseLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-821">Override <xref:System.Windows.ContentElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-822">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeave" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-822">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-823">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-823">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-824">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-824">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-825">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-825">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-826">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-826">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-827">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-827">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-828">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-828">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-829">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-829">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="ebb95-830">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-830">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="ebb95-831">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-831">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ebb95-832">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-832">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="ebb95-833">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="ebb95-833">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="ebb95-834">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-834">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="ebb95-835">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-835">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ebb95-836">Kilka <xref:System.Windows.ContentElement> pochodzi z klasy, które mają podobne kontroli zachowania, na przykład <xref:System.Windows.Documents.Hyperlink>, może być związanego z używaniem klasy obsługi zdarzenia przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-836">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="ebb95-837">Lewy przycisk myszy w dół zdarzeń jest najbardziej prawdopodobne zdarzenia klasa Obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-837">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="ebb95-838">Klasy obsługi często oznacza odpowiadającego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsłużone.</span><span class="sxs-lookup"><span data-stu-id="ebb95-838">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="ebb95-839">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-839">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="ebb95-840">Wszystkie inne klasy lub wystąpienia obsługi, które są dołączone do elementów w kierunku propagacji do katalogu głównego w drzewie interfejsu użytkownika również nie zwykle są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-840">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="ebb95-841">Można rozwiązać problem, który jest opisane w poprzednim ważne i nadal odbierać <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzeń związanych z lewego przycisku myszy w dół zdarzenia w klasie pochodnej, który zawiera klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="ebb95-841">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="ebb95-842">Dołącz obsługi <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="ebb95-842">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="ebb95-843">Zauważyć, że jest zdarzeń w wersji zapoznawczej, dlatego trasy rozpoczyna się w katalogu głównym a tuneli do formantu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-843">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="ebb95-844">Zarejestruj Obsługa w formancie proceduralnie przez wywołanie metody <xref:System.Windows.ContentElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-844">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-845">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-845">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-846">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-846">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="ebb95-847">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-847">Routing strategy</span></span>|<span data-ttu-id="ebb95-848">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-848">Direct</span></span>|  
|<span data-ttu-id="ebb95-849">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-849">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-850">Zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-850">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-851">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-851">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-852">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-852">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-853">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-853">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-854">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-854">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-855">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-855">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-856">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-856">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-857">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-857">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-858">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-858">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="ebb95-859">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-859">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="ebb95-860">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-860">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ebb95-861">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-861">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="ebb95-862">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="ebb95-862">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="ebb95-863">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-863">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="ebb95-864">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-864">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-865">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-865">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-866">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-866">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="ebb95-867">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-867">Routing strategy</span></span>|<span data-ttu-id="ebb95-868">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-868">Direct</span></span>|  
|<span data-ttu-id="ebb95-869">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-869">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-870">Zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-870">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-871">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-871">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-872">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-872">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-873">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-873">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-874">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-874">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-875">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-875">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-876">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-876">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-877">Występuje, gdy wskaźnik myszy porusza się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-877">Occurs when the mouse pointer moves while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-878">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-878">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-879">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-879">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-880">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-880">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-881">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-881">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseMoveEvent>|  
|<span data-ttu-id="ebb95-882">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-882">Routing strategy</span></span>|<span data-ttu-id="ebb95-883">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-883">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-884">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-884">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="ebb95-885">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-885">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="ebb95-886">Zastąpienie <xref:System.Windows.ContentElement.OnMouseMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-886">Override <xref:System.Windows.ContentElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-887">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-887">Identifies the <see cref="E:System.Windows.ContentElement.MouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-888">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-888">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-889">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-889">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-890">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-890">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-891">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-891">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-892">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-892">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-893">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-893">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-894">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-894">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="ebb95-895">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-895">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="ebb95-896">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-896">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ebb95-897">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-897">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="ebb95-898">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="ebb95-898">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="ebb95-899">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-899">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="ebb95-900">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-900">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="ebb95-901">Prawy przycisk myszy zdarzeń często ma natywnej obsługi w scenariuszach aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-901">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="ebb95-902">Na przykład prawym przyciskiem myszy w dół może wyświetlić menu kontekstowe.</span><span class="sxs-lookup"><span data-stu-id="ebb95-902">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="ebb95-903">Zobacz [omówienie ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-903">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-904">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-904">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-905">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-905">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="ebb95-906">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-906">Routing strategy</span></span>|<span data-ttu-id="ebb95-907">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-907">Direct</span></span>|  
|<span data-ttu-id="ebb95-908">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-908">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-909">Zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-909">Override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-910">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-910">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-911">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-911">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-912">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-912">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-913">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-913">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-914">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-914">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-915">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-915">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-916">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-916">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-917">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-917">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="ebb95-918">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-918">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="ebb95-919">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-919">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ebb95-920">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-920">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="ebb95-921">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="ebb95-921">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="ebb95-922">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-922">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="ebb95-923">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-923">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-924">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-924">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-925">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-925">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="ebb95-926">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-926">Routing strategy</span></span>|<span data-ttu-id="ebb95-927">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-927">Direct</span></span>|  
|<span data-ttu-id="ebb95-928">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-928">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-929">Zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-929">Override <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-930">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-930">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-931">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-931">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-932">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-932">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-933">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-933">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-934">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-934">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-935">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-935">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-936">Występuje po zwolnieniu dowolnego przycisku myszy nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-936">Occurs when any mouse button is released over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-937">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-937">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-938">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-938">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-939"><xref:System.Windows.ContentElement.MouseUp> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.ContentElement.MouseLeftButtonUp> lub <xref:System.Windows.ContentElement.MouseRightButtonUp>, które odpowiadają wersji jednego z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="ebb95-939">The <xref:System.Windows.ContentElement.MouseUp> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="ebb95-940"><xref:System.Windows.ContentElement.MouseLeftButtonUp> i <xref:System.Windows.ContentElement.MouseRightButtonUp> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-940"><xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="ebb95-941">Zobacz uwagi dla <xref:System.Windows.ContentElement.MouseLeftButtonUp> lub <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-941">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-942">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-942">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-943">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-943">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseUpEvent>|  
|<span data-ttu-id="ebb95-944">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-944">Routing strategy</span></span>|<span data-ttu-id="ebb95-945">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-945">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-946">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-946">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-947">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-947">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="ebb95-948">Zastąpienie <xref:System.Windows.ContentElement.OnMouseUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-948">Override <xref:System.Windows.ContentElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-949">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-949">Identifies the <see cref="E:System.Windows.ContentElement.MouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-950">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-950">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-951">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-951">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-952">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-952">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-953">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-953">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-954">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-954">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-955">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-955">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-956">Przechwytywanie myszy lub fokus pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony <xref:System.Windows.ContentElement.MouseWheel> zdarzeń z elementu ukierunkowanych lub przechwycone, wskaźnik myszy może się okazać za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-956">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.ContentElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="ebb95-957">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseWheel> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-957">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseWheel> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-958">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseWheel> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-958">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-959">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-959">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-960">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-960">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseWheelEvent>|  
|<span data-ttu-id="ebb95-961">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-961">Routing strategy</span></span>|<span data-ttu-id="ebb95-962">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-962">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-963">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-963">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="ebb95-964">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-964">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="ebb95-965">Zastąpienie <xref:System.Windows.ContentElement.OnMouseWheel%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-965">Override <xref:System.Windows.ContentElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-966">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseWheel" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-966">Identifies the <see cref="E:System.Windows.ContentElement.MouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-967">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-967">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-968">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-968">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-969">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-969">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-970">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-970">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-971">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-971">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="contentElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="ebb95-972">Żądanie przechodzenie, zawierającego właściwości, która wskazuje albo tryb przechodzenia w istniejących kolejności tabulacji lub kierunek przenoszenia wizualnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-972">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-973">Próbuje Przenieś fokus z tego elementu do innego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-973">Attempts to move focus from this element to another element.</span>
          </span>
          <span data-ttu-id="ebb95-974">Przenieś fokus kierunek jest określany przez kierunek wskazówki jest interpretowana w obrębie organizacji elementu nadrzędnego visual dla tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-974">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-975">
            <see langword="true" /> Jeśli wykonano żądanej przechodzenie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-975">
              <see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-976">Upewnij się, że należy sprawdzić wartość zwrotną tej metody.</span><span class="sxs-lookup"><span data-stu-id="ebb95-976">Make sure you check the return value of this method.</span></span> <span data-ttu-id="ebb95-977">Zwracana wartość `false` może być zwrócony, jeśli działa podczas przechodzenia do tabulatora jest definiowana za pomocą formantu kompozycji, a nie żądał żądania przechodzenia do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-977">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contentElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-978">Zwraca specyficzne <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji dla [! Infrastruktura include[TLA#tla_winclient](~/includes/tlasharptla-winclient-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-978">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-979">Określonego typu <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-979">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ebb95-980">
            <para>Implementacja tej metody jest zazwyczaj wywołanie konstruktora określonego <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> wdrożenia i zwraca je jako wartości zwracane.  Wszystkie <see cref="T:System.Windows.ContentElement" /> klas pochodnych należy zaimplementować tę metodę w celu zapewnienia ich własnych określonych <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacje do [! Infrastruktura include[TLA#tla_winclient](~/includes/tlasharptla-winclient-MD.MD)]. Aby uzyskać szczegółowe informacje dotyczące implementacji tego wzorca, zobacz <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-980">
              <para>The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.  All <see cref="T:System.Windows.ContentElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure. For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-981">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-981">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-982">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-982">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-983">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-983">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-984">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-984">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-985">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-985">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-986">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-986">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-987">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-987">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-988">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-988">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-989">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-989">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-990">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-990">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-991">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-991">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-992">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-992">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-993">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-993">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-994">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragLeave" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-994">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-995">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-995">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-996">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-996">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-997">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-997">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-998">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-998">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-999">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-999">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1000">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1000">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1001">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1001">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1002">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1002">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1003">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1003">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1004">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1004">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1005">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1005">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1006">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragOver" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1006">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1007">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1007">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1008">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1008">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1009">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1009">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1010">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1010">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1011">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1011">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1012">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1012">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1013">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1013">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1014">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1014">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1015">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1015">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1016">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1016">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1017">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1017">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1018">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1018">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1019">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1019">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1020">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1020">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1021">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1021">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1022">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1022">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1023">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1023">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1024">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1024">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1025">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1025">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1026">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1026">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1027">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1027">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1028">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1028">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1029">
            <see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1029">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1030">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.GiveFeedback" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1030">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1031">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1031">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1032">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1032">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1033">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1033">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1034">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1034">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1035">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1035">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1036">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1036">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1037">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1037">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1038">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1038">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1039">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1039">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1040">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1040">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1041">A <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1041">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="ebb95-1042">Te dane zdarzenie musi zawierać identyfikator <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1042">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1043">Zgłasza <see cref="E:System.Windows.ContentElement.GotFocus" /> kierowanego zdarzenia przy użyciu dane zdarzenia przekazane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1043">Raises the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event by using the event data provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1044">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, który wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1044">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="ebb95-1045">To na \* implementacji metody jest przeznaczona do zgłoszenia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby zgłosić zdarzenie po <xref:System.Windows.ContentElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1045">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="ebb95-1046"><xref:System.Windows.ContentElement.OnGotFocus%2A> Implementacji różni się od niektórych innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na \* implementacji, które zapewniają tylko wygodny sposób, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1046">The <xref:System.Windows.ContentElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ebb95-1047">
            <para>W przypadku braku zamierzonego i nietypowych potrzebę nie wywoływanie zdarzeń fokusu, upewnij się, że wdrożenie wywołuje implementacji podstawowej. W przeciwnym razie <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzenie nie jest wywoływane podczas operacji typowych użytkownika, które zwykle Ustaw fokus w tym elemencie. Jeśli nie chcesz, aby Twoje element ma być focusable, użytkownik może uniemożliwić element focusable przez ustawienie <see cref="P:System.Windows.ContentElement.Focusable" /> do <see langword="false" />. Należy pamiętać, że domyślnie <see cref="P:System.Windows.ContentElement.Focusable" /> nie jest focusable, w związku z tym ustawienie <see cref="P:System.Windows.ContentElement.Focusable" /> celowo może nie być konieczne.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1047">
              <para>Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation. Otherwise, the <see cref="E:System.Windows.ContentElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element. If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />. Note that by default a <see cref="P:System.Windows.ContentElement.Focusable" /> is not focusable, therefore setting <see cref="P:System.Windows.ContentElement.Focusable" /> deliberately might not be necessary.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1048">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1048">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1049">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1049">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1050">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1050">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1051">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1051">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1052">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1052">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1053">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1053">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1054">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1054">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1055">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1055">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1056">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1056">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1057">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1057">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1058">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1058">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1059">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1059">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1060">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1060">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1061">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1061">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1062">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1062">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1063">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1063">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1064">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1064">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1065">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1065">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1066">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1066">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1067">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1067">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1068">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1068">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1069">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1069">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1070">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1070">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1071">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1071">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1072">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1072">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1073">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1073">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1074">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1074">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1075">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1075">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1076">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1076">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1077">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1077">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1078">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1078">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1079">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1079">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1080">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1080">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1081">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1081">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1082">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1082">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1083">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1083">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1084">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1084">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1085">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> kierowanego zdarzenia, gdy touch są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1085">Provides class handling for the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1086"><xref:System.Windows.ContentElement.OnGotTouchCapture%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1086">The <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="ebb95-1087">Zastąpienie <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.GotTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1087">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.GotTouchCapture> event.</span></span> <span data-ttu-id="ebb95-1088">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1088">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1089">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1089">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1090">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1090">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="ebb95-1091">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1091">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1092">Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> zmiany właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1092">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="ebb95-1093">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1093">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="ebb95-1094">Następnie przy użyciu <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1094">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="ebb95-1095">Zwróć uwagę, że <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1095">Notice that the  <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="ebb95-1096">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1096">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="ebb95-1097">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1097">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1098">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1098">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1099">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1099">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1100">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1100">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1101">Wywoływana tuż przed <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zdarzenie jest wywoływane przez ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1101">Invoked just before the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span>
          </span>
          <span data-ttu-id="ebb95-1102">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1102">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1103">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1103">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="ebb95-1104">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1104">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="ebb95-1105">Następnie przy użyciu <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1105">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="ebb95-1106">Zwróć uwagę, że <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1106">Notice that the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="ebb95-1107">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1107">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="ebb95-1108">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1108">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1109">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1109">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1110">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1110">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1111">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1111">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1112">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1112">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="ebb95-1113">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1113">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1114">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsMouseCaptured%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1114">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="ebb95-1115">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1115">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="ebb95-1116">Następnie przy użyciu <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1116">Then the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="ebb95-1117">Zwróć uwagę, że <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1117">Notice that the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="ebb95-1118">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1118">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="ebb95-1119">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1119">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1120">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1120">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1121">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1121">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1122">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1122">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1123">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1123">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="ebb95-1124">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1124">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ebb95-1125">
            <para>Tej metody wirtualnej jest wywoływane, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> zmienia się wartość właściwości zależności. Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> zdarzenia z tego samego wystąpienia danych zdarzenia. Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia; W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.  Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1125">
              <para>This virtual method is raised when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property changes its value. The virtual method is raised first and can manipulate the event data as necessary. Then the <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance. Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.  This method has no default implementation. Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation. You may call base either before or after your special handling, depending on your requirements.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1126">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1126">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1127">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1127">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="ebb95-1128">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1128">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1129">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1129">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="ebb95-1130">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1130">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="ebb95-1131">Następnie przy użyciu <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1131">Then the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="ebb95-1132">Zwróć uwagę, że <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1132">Notice that the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="ebb95-1133">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1133">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="ebb95-1134">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1134">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1135">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1135">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1136">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1136">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1137">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1137">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1138">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1138">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="ebb95-1139">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1139">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1140">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusCaptured%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1140">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="ebb95-1141">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1141">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="ebb95-1142">Następnie przy użyciu <xref:System.Windows.ContentElement.IsStylusCapturedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1142">Then the <xref:System.Windows.ContentElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="ebb95-1143">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1143">Notice that the event is not a routed event.</span></span> <span data-ttu-id="ebb95-1144">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1144">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="ebb95-1145">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1145">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1146">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1146">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1147">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1147">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1148">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1148">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1149">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1149">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="ebb95-1150">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1150">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1151">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1151">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="ebb95-1152">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1152">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="ebb95-1153">Następnie przy użyciu <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1153">Then the <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="ebb95-1154">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1154">Notice that the event is not a routed event.</span></span> <span data-ttu-id="ebb95-1155">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1155">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="ebb95-1156">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1156">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1157">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1157">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1158">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1158">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1159">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1159">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1160">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1160">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="ebb95-1161">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1161">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1162">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1162">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="ebb95-1163">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1163">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="ebb95-1164">Następnie przy użyciu <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1164">Then the <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="ebb95-1165">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1165">Notice that the event is not a routed event.</span></span> <span data-ttu-id="ebb95-1166">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1166">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="ebb95-1167">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1167">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1168">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1168">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1169">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1169">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1170">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1170">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1171">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1171">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1172">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1172">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1173">Uderzenia w klawisze są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1173">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="ebb95-1174">Inne funkcje programowania, które opierają się na naciśnięcia klawiszy, na przykład powiązania wejściowego i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest uwidaczniany jako ogólne naciśnięcie klawisza.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1174">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="ebb95-1175">Te dane wejściowe funkcji systemu oznaczanie zdarzenia jako obsługiwany, następnie <xref:System.Windows.ContentElement.OnKeyDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1175">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1176">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1176">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1177">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1177">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1178">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1178">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1179">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1179">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1180">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1180">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1181">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1181">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1182">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1182">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1183">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1183">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1184">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1184">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1185">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1185">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1186">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1186">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1187">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1187">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1188">Uderzenia w klawisze są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1188">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="ebb95-1189">Inne funkcje programowania, które opierają się na naciśnięcia klawiszy, na przykład powiązania wejściowego i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest uwidaczniany jako ogólne naciśnięcie klawisza.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1189">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="ebb95-1190">Te dane wejściowe funkcji systemu oznaczanie zdarzenia jako obsługiwany, następnie <xref:System.Windows.ContentElement.OnKeyUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1190">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1191">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1191">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1192">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1192">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1193">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1193">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1194">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1194">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1195">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1195">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1196">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1196">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1197">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1197">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1198">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1198">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1199">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1199">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1200">A <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1200">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="ebb95-1201">Te dane zdarzenie musi zawierać identyfikator <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1201">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1202">Zgłasza <see cref="E:System.Windows.ContentElement.LostFocus" /> kierowanego zdarzenia przy użyciu dane zdarzenia, które jest dostępne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1202">Raises the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event by using the event data that is provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1203">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, który wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1203">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="ebb95-1204">To na \* implementacji metody jest przeznaczona do zgłoszenia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby zgłosić zdarzenie po <xref:System.Windows.ContentElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1204">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="ebb95-1205">Ta implementacja różni się od niektórych innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na \* implementacji, które zapewniają tylko wygodny sposób, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1205">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ebb95-1206">
            <para>W przypadku braku zamierzonego i nietypowych potrzebę nie wywoływanie zdarzeń fokusu, upewnij się, że wdrożenie wywołuje implementacji podstawowej. W przeciwnym razie <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzenie nie jest wywoływane podczas operacji typowych użytkownika, które zwykle Ustaw fokus w tym elemencie. Jeśli nie chcesz, aby Twoje element ma być focusable, użytkownik może uniemożliwić element focusable przez ustawienie <see cref="P:System.Windows.ContentElement.Focusable" /> do <see langword="false" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1206">
              <para>Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation. Otherwise, the <see cref="E:System.Windows.ContentElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element. If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1207">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1207">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1208">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1208">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1209">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1209">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1210">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1210">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1211">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1211">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1212">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1212">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1213">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1213">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1214">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1214">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1215">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1215">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1216">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1216">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1217">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1217">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1218">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1218">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1219">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1219">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1220">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1220">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1221">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1221">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1222">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1222">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1223">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1223">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1224">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1224">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1225">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1225">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1226">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1226">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1227">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1227">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1228">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1228">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1229">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1229">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1230">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1230">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1231">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1231">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1232">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1232">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1233">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1233">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1234">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1234">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1235">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1235">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1236">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1236">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1237">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1237">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1238">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1238">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1239">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1239">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1240">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1240">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1241">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1241">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1242">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1242">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1243">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1243">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1244">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> kierowanego zdarzenia, gdy ten element utraci Przechwytywanie touch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1244">Provides class handling for the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1245"><xref:System.Windows.ContentElement.OnLostTouchCapture%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1245">The <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="ebb95-1246">Zastąpienie <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.LostTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1246">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.LostTouchCapture> event.</span></span> <span data-ttu-id="ebb95-1247">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1247">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1248">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1248">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1249">Te dane zdarzeń raporty szczegółowe informacje o został naciśnięty przycisk myszy i stanie obsłużone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1249">This event data reports details about the mouse button that was pressed and the handled state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1250">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1250">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1251">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1251">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1252">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1252">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="ebb95-1253">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1253">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="ebb95-1254">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.ContentElement.OnMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1254">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1255">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.ContentElement.MouseLeftButtonDown> i <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1255">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="ebb95-1256">Jedną z tych zdarzeń może zostać zgłoszone w elemencie odbierającą podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1256">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="ebb95-1257">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1257">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="ebb95-1258">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1258">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="ebb95-1259">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1259">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="ebb95-1260">Obsługa <xref:System.Windows.ContentElement.OnMouseDown%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy w dół akcje.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1260">By handling <xref:System.Windows.ContentElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="ebb95-1261">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1261">This behavior might be unwanted; therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="ebb95-1262">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1262">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="ebb95-1263">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1263">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1264">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1264">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1265">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1265">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1266">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1266">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1267">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1267">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1268">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1268">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1269">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1269">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1270">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1270">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1271">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1271">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1272">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1272">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1273">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1273">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="ebb95-1274">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1274">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1275">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1275">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1276">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1276">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1277">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1277">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="ebb95-1278">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1278">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1279">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia, ze strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1279">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="ebb95-1280">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1280">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1281">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1281">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1282">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1282">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="ebb95-1283">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1283">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1284">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1284">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1285">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1285">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1286">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1286">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="ebb95-1287">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1287">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1288">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia, ze strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1288">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="ebb95-1289">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1289">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1290">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1290">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1291">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1291">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1292">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> kierowanego zdarzenia w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1292">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event is raised on this element.</span>
          </span>
          <span data-ttu-id="ebb95-1293">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1293">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1294"><xref:System.Windows.ContentElement.MouseLeftButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1294">The <xref:System.Windows.ContentElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="ebb95-1295"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1295"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="ebb95-1296">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1296">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="ebb95-1297">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1297">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1298">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1298">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="ebb95-1299">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1299">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="ebb95-1300">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1300">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ebb95-1301">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1301">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="ebb95-1302">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1302">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="ebb95-1303">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1303">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="ebb95-1304">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1304">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="ebb95-1305">Na przykład może pochodzić od <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania Podstawowa implementacja; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1305">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1306">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1306">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1307">Dane zdarzenia raporty zwolnienie lewego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1307">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1308">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1308">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1309">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1309">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1310"><xref:System.Windows.ContentElement.MouseLeftButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1310">The <xref:System.Windows.ContentElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="ebb95-1311"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1311"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="ebb95-1312">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.MouseLeftButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1312">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="ebb95-1313">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1313">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1314">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1314">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="ebb95-1315">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1315">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="ebb95-1316">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1316">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ebb95-1317">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1317">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1318">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1318">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1319">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1319">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1320">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1320">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1321">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1321">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1322">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1322">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1323">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1323">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1324">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1324">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1325">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1325">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1326">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1326">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1327">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1327">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1328">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1328">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1329">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1329">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1330">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1330">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1331">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1331">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1332">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1332">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1333">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1333">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1334"><xref:System.Windows.ContentElement.MouseRightButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1334">The <xref:System.Windows.ContentElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="ebb95-1335"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1335"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="ebb95-1336">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.MouseRightButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1336">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="ebb95-1337">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1337">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1338">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1338">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="ebb95-1339">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1339">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="ebb95-1340">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1340">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ebb95-1341">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1341">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="ebb95-1342">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1342">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="ebb95-1343">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1343">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="ebb95-1344">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1344">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="ebb95-1345">Na przykład może pochodzić od <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> jednak w klasie pochodnej bez base wywołujący; to zastąpienie wyłącza kontekstu menu usług formantu, które są częścią z <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1345">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1346">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1346">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1347">Dane zdarzenia raporty zwolnienie prawego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1347">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1348">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1348">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1349">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1349">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1350"><xref:System.Windows.ContentElement.MouseRightButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1350">The <xref:System.Windows.ContentElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="ebb95-1351"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1351"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="ebb95-1352">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.MouseRightButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1352">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="ebb95-1353">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1353">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1354">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1354">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="ebb95-1355">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1355">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="ebb95-1356">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1356">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ebb95-1357">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1357">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1358">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1358">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1359">Dane zdarzenia raporty, wydanej przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1359">The event data reports that the mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1360">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1360">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1361">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1361">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1362">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1362">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="ebb95-1363">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1363">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="ebb95-1364">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.ContentElement.OnMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1364">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1365">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.ContentElement.MouseLeftButtonUp> i <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1365">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="ebb95-1366">Jedną z tych zdarzeń może zostać wywołane w elemencie odbierania podczas <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1366">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="ebb95-1367">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1367">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="ebb95-1368">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1368">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="ebb95-1369">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1369">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="ebb95-1370">Obsługa <xref:System.Windows.ContentElement.OnMouseUp%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy zapasowej akcje.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1370">By handling <xref:System.Windows.ContentElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="ebb95-1371">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1371">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="ebb95-1372">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1372">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="ebb95-1373">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1373">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1374">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1374">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1375">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1375">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1376">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1376">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1377">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1377">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1378">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1378">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1379">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1379">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1380">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1380">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1381">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1381">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1382">
            <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1382">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1383">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1383">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1384">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1384">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1385">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1385">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1386">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1386">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1387">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1387">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1388">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1388">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1389">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1389">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1390">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1390">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1391">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1391">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1392">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1392">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1393">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1393">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1394">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1394">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1395">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1395">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1396">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1396">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1397">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1397">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1398">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1398">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1399">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1399">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1400">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1400">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1401">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1401">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1402">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1402">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1403">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1403">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1404">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1404">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1405">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1405">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1406">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1406">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1407">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1407">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1408">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1408">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1409">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1409">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1410">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1410">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1411">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1411">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1412">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1412">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1413">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1413">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1414">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1414">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1415">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1415">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1416">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1416">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1417">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1417">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1418">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1418">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1419">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1419">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1420">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1420">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1421">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1421">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1422">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1422">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1423">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1423">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1424">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1424">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1425">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1425">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1426">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1426">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1427">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1427">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1428">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1428">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1429">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1429">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1430">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1430">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1431">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1431">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1432">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1432">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1433">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1433">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1434">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDrop" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1434">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1435">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1435">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1436">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1436">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1437">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1437">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1438">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1438">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1439">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1439">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1440">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1440">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1441">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1441">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1442">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1442">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1443">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1443">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1444">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1444">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1445">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1445">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1446">
            <see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1446">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1447">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1447">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1448">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1448">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1449">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1449">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1450">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1450">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1451">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1451">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1452">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1452">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1453">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1453">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1454">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1454">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1455">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1455">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1456">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1456">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1457">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1457">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1458">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1458">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1459">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1459">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1460">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1460">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1461">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1461">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1462">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1462">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1463">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1463">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1464">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1464">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1465">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1465">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1466">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1466">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1467">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1467">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1468">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1468">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1469">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1469">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1470">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1470">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1471">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1471">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1472">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1472">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1473">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1473">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1474">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1474">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1475">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1475">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1476">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1476">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1477">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1477">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1478">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1478">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1479">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1479">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1480">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1480">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1481">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1481">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1482">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1482">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1483">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1483">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1484">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1484">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1485">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1485">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1486">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1486">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1487">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1487">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1488">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1488">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1489">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1489">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1490">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1490">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1491">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1491">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1492">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1492">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1493">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1493">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1494">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1494">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1495">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1495">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1496">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1496">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1497">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1497">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1498">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1498">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1499">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1499">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1500">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1500">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1501">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1501">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1502">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1502">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1503">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1503">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1504">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1504">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1505">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1505">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1506">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1506">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1507">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1507">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1508">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1508">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1509">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1509">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1510">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1510">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1511">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1511">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1512">Dane zdarzenia zgłasza, że zostały naciśnięte przyciski myszy jeden lub więcej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1512">The event data reports that one or more mouse buttons were pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1513">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1513">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1514">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1514">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1515">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1515">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="ebb95-1516">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1516">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="ebb95-1517">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1517">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1518">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1518">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="ebb95-1519">Jedną z tych zdarzeń może zostać zgłoszone w elemencie odbierającą podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1519">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="ebb95-1520">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1520">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="ebb95-1521">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1521">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="ebb95-1522">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1522">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="ebb95-1523">Obsługa <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy w dół akcje.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1523">By handling <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="ebb95-1524">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1524">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="ebb95-1525">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1525">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="ebb95-1526">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1526">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1527">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1527">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1528">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1528">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1529">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1529">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1530">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1530">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1531">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1531">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1532">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1532">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1533">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1533">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1534">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1534">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1535">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1535">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1536">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1536">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1537">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1537">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1538">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1538">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1539">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1539">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1540"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1540">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="ebb95-1541"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1541"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="ebb95-1542">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1542">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="ebb95-1543">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1543">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1544">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1544">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="ebb95-1545">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1545">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="ebb95-1546">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1546">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ebb95-1547">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1547">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="ebb95-1548">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1548">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="ebb95-1549">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1549">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="ebb95-1550">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1550">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="ebb95-1551">Na przykład może pochodzić od <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania Podstawowa implementacja; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1551">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1552">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1552">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1553">Dane zdarzenia raporty zwolnienie lewego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1553">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1554">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1554">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1555">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1555">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1556"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1556">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="ebb95-1557"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1557"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="ebb95-1558">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1558">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="ebb95-1559">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1559">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1560">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1560">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="ebb95-1561">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1561">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="ebb95-1562">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1562">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ebb95-1563">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1563">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1564">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1564">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1565">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1565">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1566">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1566">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1567">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1567">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1568">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1568">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1569">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1569">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1570">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1570">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1571">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1571">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1572">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1572">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1573">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1573">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1574">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1574">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1575">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1575">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1576">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1576">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1577">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1577">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1578">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1578">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1579">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1579">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1580">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1580">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1581"><xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1581">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="ebb95-1582"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1582"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="ebb95-1583">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1583">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="ebb95-1584">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1584">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1585">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1585">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="ebb95-1586">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1586">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="ebb95-1587">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1587">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ebb95-1588">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1588">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="ebb95-1589">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1589">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="ebb95-1590">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1590">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="ebb95-1591">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1591">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="ebb95-1592">Na przykład może pochodzić od <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> jednak w klasie pochodnej bez base wywołujący; to zastąpienie wyłącza kontekstu menu usług formantu, które są częścią z <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1592">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1593">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1593">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1594">Dane zdarzenia raporty zwolnienie prawego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1594">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1595">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1595">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1596">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1596">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1597"><xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1597">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="ebb95-1598"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1598"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="ebb95-1599">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1599">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="ebb95-1600">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1600">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1601">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1601">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="ebb95-1602">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1602">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="ebb95-1603">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1603">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ebb95-1604">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1604">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1605">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1605">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="ebb95-1606">Dane zdarzenia raporty wydane jednego lub więcej przycisków myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1606">The event data reports that one or more mouse buttons were released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1607">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1607">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1608">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1608">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1609">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1609">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="ebb95-1610">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1610">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="ebb95-1611">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1611">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="ebb95-1612">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1612">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="ebb95-1613">Jedną z tych zdarzeń może zostać wywołane w elemencie odbierania podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1613">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="ebb95-1614">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1614">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="ebb95-1615">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1615">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="ebb95-1616">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1616">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="ebb95-1617">Obsługa <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy zapasowej akcje.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1617">By handling <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="ebb95-1618">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1618">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="ebb95-1619">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1619">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="ebb95-1620">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1620">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1621">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1621">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1622">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1622">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1623">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1623">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1624">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1624">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1625">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1625">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1626">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1626">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1627">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1627">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1628">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1628">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1629">
            <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1629">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1630">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1630">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1631">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1631">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1632">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1632">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1633">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1633">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1634">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1634">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1635">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1635">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1636">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1636">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1637">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1637">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1638">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1638">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1639">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1639">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1640">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1640">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1641">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1641">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1642">
            <see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1642">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1643">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1643">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1644">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1644">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1645">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1645">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1646">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1646">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1647">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1647">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1648">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1648">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1649">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1649">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1650">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1650">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1651">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1651">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1652">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1652">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1653">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1653">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1654">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1654">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1655">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1655">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1656">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1656">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1657">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1657">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1658">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1658">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1659">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1659">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1660">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1660">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1661">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1661">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1662">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1662">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1663">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1663">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1664">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1664">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1665">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1665">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1666">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1666">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1667">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1667">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1668">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1668">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1669">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1669">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1670">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1670">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1671">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1671">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1672">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1672">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1673">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1673">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1674">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1674">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1675">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1675">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1676">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1676">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1677">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1677">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1678">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1678">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1679">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1679">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1680">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1680">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1681">
            <see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1681">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1682">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1682">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1683">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1683">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1684">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1684">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1685">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1685">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1686">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1686">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1687">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1687">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1688">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1688">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1689">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1689">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1690">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1690">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1691">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1691">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1692">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1692">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1693">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1693">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1694">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1694">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1695">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1695">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1696">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1696">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1697">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1697">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1698">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1698">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1699">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1699">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1700">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1700">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1701">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1701">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1702">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1702">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1703">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1703">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1704">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1704">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1705">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1705">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1706">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1706">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1707">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1707">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1708">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1708">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1709">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1709">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1710">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1710">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1711">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1711">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1712">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1712">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1713">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1713">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1714">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1714">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1715">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1715">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1716">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1716">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1717">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1717">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1718">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1718">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1719">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1719">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1720">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1720">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1721">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1721">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1722">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1722">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1723">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1723">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1724">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1724">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1725">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1725">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1726">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1726">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1727">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1727">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1728">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1728">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1729">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1729">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1730">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1730">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1731">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1731">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1732">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1732">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1733">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1733">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1734">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1734">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1735">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1735">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1736">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1736">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1737">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1737">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1738">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1738">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1739">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1739">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1740">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1740">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1741">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1741">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1742">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1742">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1743">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1743">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1744">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1744">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1745">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1745">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1746">
            <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1746">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1747">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1747">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1748">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1748">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1749">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1749">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1750">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1750">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1751">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1751">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1752">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1752">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1753">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1753">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1754">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1754">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1755">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1755">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1756">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1756">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1757">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1757">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1758">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1758">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1759">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1759">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1760">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1760">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1761">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1761">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1762">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1762">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1763">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1763">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1764">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1764">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1765">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1765">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1766">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1766">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1767">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1767">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1768">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1768">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1769">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1769">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1770">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1770">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1771">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1771">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1772">
            <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1772">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1773">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1773">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1774">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1774">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1775">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1775">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1776">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1776">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1777">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1777">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1778">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1778">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1779">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1779">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1780">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1780">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1781">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1781">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1782">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1782">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1783">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1783">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="ebb95-1784">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1784">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.ContentElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1785">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1785">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1786">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> kierowanego zdarzenia, gdy touch naciśnie tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1786">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1787"><xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1787">The <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="ebb95-1788">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.PreviewTouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1788">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="ebb95-1789">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1789">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1790">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1790">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1791">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch znajduje się wewnątrz tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1791">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1792"><xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1792">The <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="ebb95-1793">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.PreviewTouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1793">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="ebb95-1794">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1794">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1795">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1795">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1796">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> kierowanego zdarzenia, która występuje po zwolnieniu touch wewnątrz tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1796">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1797"><xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1797">The <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="ebb95-1798">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.PreviewTouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1798">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="ebb95-1799">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1799">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1800">
            <see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1800">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1801">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1801">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1802">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1802">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1803">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1803">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1804">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1804">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1805">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1805">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1806">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1806">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1807">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1807">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1808">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1808">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1809">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1809">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1810">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1810">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1811">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1811">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="contentElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1812">
            <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1812">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1813">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1813">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1814">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1814">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1815">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1815">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1816">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1816">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1817">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1817">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1818">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1818">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1819">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1819">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1820">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1820">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1821">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1821">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1822">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1822">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1823">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1823">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1824">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1824">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1825">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1825">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1826">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1826">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1827">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1827">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1828">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1828">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1829">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1829">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1830">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1830">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1831">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1831">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1832">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1832">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1833">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1833">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1834">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1834">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1835">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1835">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1836">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1836">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1837">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1837">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1838">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1838">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1839">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1839">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1840">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1840">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1841">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1841">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1842">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1842">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1843">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1843">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1844">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1844">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1845">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1845">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1846">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1846">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1847">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1847">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1848">
            <see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1848">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1849">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1849">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1850">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1850">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1851">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1851">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1852">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1852">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1853">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1853">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1854">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1854">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1855">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1855">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1856">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1856">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1857">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1857">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1858">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1858">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1859">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1859">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1860">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1860">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1861">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie jest zgłaszane przez ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1861">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="ebb95-1862">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1862">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1863">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1863">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1864">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1864">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1865">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1865">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="ebb95-1866">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1866">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1867">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1867">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1868">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1868">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1869">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1869">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1870">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1870">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1871">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1871">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1872">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1872">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1873">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1873">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1874">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1874">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1875">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1875">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1876">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1876">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1877">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1877">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1878">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1878">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1879">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1879">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1880">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1880">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1881">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1881">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1882">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1882">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1883">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1883">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1884">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1884">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1885">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1885">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1886">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1886">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1887">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1887">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1888">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1888">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1889">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1889">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1890">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1890">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1891">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1891">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1892">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1892">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1893">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1893">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1894">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie jest zgłaszane przez ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1894">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="ebb95-1895">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1895">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1896">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1896">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1897">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1897">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="ebb95-1898">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1898">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="ebb95-1899">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1899">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1900">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1900">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1901">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1901">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1902">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1902">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1903">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1903">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1904">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1904">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1905">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1905">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1906">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1906">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1907">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1907">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1908">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1908">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1909">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1909">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1910">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1910">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1911">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1911">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1912">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1912">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1913">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1913">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1914">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1914">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1915">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1915">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1916">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1916">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1917">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1917">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1918">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1918">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1919">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1919">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1920">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1920">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1921">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1921">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1922">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1922">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1923">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1923">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1924">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1924">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1925">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1925">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1926">
            <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1926">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1927">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1927">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1928">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1928">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1929">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1929">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1930">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1930">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1931">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1931">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1932">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1932">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1933">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1933">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1934">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1934">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1935">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1935">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1936">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1936">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1937">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1937">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1938">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1938">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1939">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1939">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1940">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1940">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1941">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1941">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1942">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1942">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1943">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1943">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1944">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1944">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1945">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1945">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1946">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1946">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1947">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1947">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1948">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1948">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1949">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1949">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1950">
            <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1950">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1951">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1951">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="ebb95-1952">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1952">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1953">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1953">This method has no default implementation.</span></span> <span data-ttu-id="ebb95-1954">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1954">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="ebb95-1955">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1955">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="ebb95-1956">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1956">In this case the matching event is a routed event.</span></span> <span data-ttu-id="ebb95-1957">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1957">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="ebb95-1958">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1958">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="ebb95-1959">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1959">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="ebb95-1960">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1960">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="ebb95-1961">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1961">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1962">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1962">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1963">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.TouchDown" /> kierowanego zdarzenia, gdy touch naciśnie wewnątrz tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1963">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1964"><xref:System.Windows.ContentElement.OnTouchDown%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1964">The <xref:System.Windows.ContentElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="ebb95-1965">Zastąpienie <xref:System.Windows.ContentElement.OnTouchDown%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.TouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1965">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchDown> event.</span></span> <span data-ttu-id="ebb95-1966">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnTouchDown%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1966">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1967">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1967">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1968">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.TouchEnter" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch z zewnątrz do wewnątrz granic tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1968">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1969"><xref:System.Windows.ContentElement.OnTouchEnter%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1969">The <xref:System.Windows.ContentElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="ebb95-1970">Zastąpienie <xref:System.Windows.ContentElement.OnTouchEnter%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.TouchEnter> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1970">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchEnter> event.</span></span> <span data-ttu-id="ebb95-1971">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnTouchEnter%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1971">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1972">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1972">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1973">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.TouchLeave" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch z wnętrza poza granicami tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1973">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1974"><xref:System.Windows.ContentElement.OnTouchLeave%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1974">The <xref:System.Windows.ContentElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="ebb95-1975">Zastąpienie <xref:System.Windows.ContentElement.OnTouchLeave%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.TouchLeave> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1975">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchLeave> event.</span></span> <span data-ttu-id="ebb95-1976">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnTouchLeave%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1976">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1977">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1977">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1978">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.TouchMove" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch znajduje się wewnątrz tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1978">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1979"><xref:System.Windows.ContentElement.OnTouchMove%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1979">The <xref:System.Windows.ContentElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="ebb95-1980">Zastąpienie <xref:System.Windows.ContentElement.OnTouchMove%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.TouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1980">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchMove> event.</span></span> <span data-ttu-id="ebb95-1981">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnTouchMove%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1981">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-1982">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1982">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1983">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.TouchUp" /> kierowanego zdarzenia, która występuje po zwolnieniu touch wewnątrz tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1983">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1984"><xref:System.Windows.ContentElement.OnTouchUp%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1984">The <xref:System.Windows.ContentElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="ebb95-1985">Zastąpienie <xref:System.Windows.ContentElement.OnTouchUp%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.TouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1985">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchUp> event.</span></span> <span data-ttu-id="ebb95-1986">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnTouchUp%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1986">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="contentElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="ebb95-1987">Kierunek przechodzenie żądanego fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1987">The direction of the requested focus traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-1988">W przypadku przesłonięcia w klasie pochodnej zwraca element, który będzie fokusu dla kierunku przechodzenie określonego fokus bez faktycznie przeniesienie fokusu do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1988">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-1989">Element otrzymałby fokus <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> zostały faktycznie wywołany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1989">The element that would have received focus if <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1990">Domyślna implementacja tej metody tej klasy jest niekompletne i zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1990">The default implementation of this method in this class is incomplete and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-1991">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z tego elementu jako element docelowy przeciągania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-1991">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-1992">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1992">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-1993">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1993">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-1994">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-1994">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-1995">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-1995">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="ebb95-1996">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-1996">Routing strategy</span></span>|<span data-ttu-id="ebb95-1997">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-1997">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-1998">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-1998">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="ebb95-1999">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-1999">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="ebb95-2000">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2000">Override <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2001">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2001">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2002">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2002">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2003">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2003">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2004">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2004">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2005">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2005">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2006">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2006">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2007">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to element źródłowy przeciągania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2007">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2008">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2008">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2009">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2009">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2010">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2010">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2011">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2011">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="ebb95-2012">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2012">Routing strategy</span></span>|<span data-ttu-id="ebb95-2013">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2013">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2014">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2014">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="ebb95-2015">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2015">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="ebb95-2016">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2016">Override <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2017">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2017">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2018">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2018">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2019">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2019">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2020">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2020">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2021">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2021">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2022">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2022">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2023">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2023">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2024">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragOver> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2024">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2025">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragOver> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2025">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2026">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2026">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2027">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2027">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragOverEvent>|  
|<span data-ttu-id="ebb95-2028">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2028">Routing strategy</span></span>|<span data-ttu-id="ebb95-2029">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2029">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2030">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2030">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="ebb95-2031">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2031">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="ebb95-2032">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2032">Override <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2033">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2033">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2034">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2034">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2035">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2035">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2036">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2036">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2037">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2037">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2038">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2038">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2039">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tego elementu jako element docelowy upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2039">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2040">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDrop> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2040">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDrop> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2041">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDrop> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2041">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2042">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2042">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2043">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2043">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDropEvent>|  
|<span data-ttu-id="ebb95-2044">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2044">Routing strategy</span></span>|<span data-ttu-id="ebb95-2045">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2045">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2046">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2046">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="ebb95-2047">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2047">The corresponding bubbling event is <xref:System.Windows.ContentElement.Drop>.</span></span>  
  
-   <span data-ttu-id="ebb95-2048">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewDrop%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2048">Override <xref:System.Windows.ContentElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2049">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDrop" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2049">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDrop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2050">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2050">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2051">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2051">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2052">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2052">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2053">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2053">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2054">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2054">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2055">Występuje, gdy rozpoczęto operację przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2055">Occurs when a drag-and-drop operation is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2056"><xref:System.Windows.ContentElement.PreviewGiveFeedback> Zdarzeń umożliwia źródło zdarzeń przeciągnij, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2056">The <xref:System.Windows.ContentElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="ebb95-2057">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewGiveFeedback> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2057">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2058">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewGiveFeedback> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2058">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2059">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2059">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2060">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2060">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="ebb95-2061">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2061">Routing strategy</span></span>|<span data-ttu-id="ebb95-2062">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2062">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2063">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2063">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="ebb95-2064">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2064">The corresponding bubbling event is <xref:System.Windows.ContentElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="ebb95-2065">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2065">Override <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2066">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2066">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2067">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2067">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2068">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2068">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2069">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2069">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2070">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2070">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2071">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2071">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2072">Występuje, gdy klawiatura ma fokus w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2072">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2073">Ponieważ to zdarzenie używa tunelowania routingu, element, który ma fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2073">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="ebb95-2074">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2074">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="ebb95-2075">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2075">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2076">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2076">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2077">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2077">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2078">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2078">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="ebb95-2079">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2079">Routing strategy</span></span>|<span data-ttu-id="ebb95-2080">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2080">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2081">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2081">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="ebb95-2082">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2082">The corresponding bubbling event is <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="ebb95-2083">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2083">Override <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2084">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2084">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2085">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2085">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2086">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2086">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2087">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2087">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2088">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2088">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2089">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2089">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2090">Występuje po naciśnięciu klawisza, gdy klawiatura ma fokus w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2090">Occurs when a key is pressed while the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2091">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2091">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="ebb95-2092"><xref:System.Windows.ContentElement.KeyDown> Zdarzenie jest zdarzenie wprowadzania tekstu niższego poziomu, które mogą nie działać zgodnie z oczekiwaniami w niektórych formantów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2092">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="ebb95-2093">Jest tak, ponieważ niektóre formanty mają składania kontroli lub klasy obsługi udostępnia wyższego poziomu wersji tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2093">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="ebb95-2094">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewKeyDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2094">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2095">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewKeyDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2095">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2096">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2096">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2097">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2097">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="ebb95-2098">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2098">Routing strategy</span></span>|<span data-ttu-id="ebb95-2099">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2099">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2100">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2100">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="ebb95-2101">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2101">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="ebb95-2102">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2102">Override <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2103">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2103">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2104">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2104">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2105">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2105">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2106">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2106">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2107">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2107">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2108">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2108">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2109">Występuje po zwolnieniu klawisza, gdy klawiatura ma fokus w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2109">Occurs when a key is released while the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2110">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2110">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="ebb95-2111"><xref:System.Windows.ContentElement.KeyUp> Zdarzenie jest zdarzenie wprowadzania tekstu niższego poziomu, które mogą nie działać zgodnie z oczekiwaniami w niektórych formantów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2111">The <xref:System.Windows.ContentElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="ebb95-2112">Jest tak, ponieważ niektóre formanty mają składania kontroli lub klasy obsługi udostępnia wyższego poziomu wersji tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2112">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="ebb95-2113">Aby uzyskać więcej informacji Sprawdź dokumentację dla pojedynczych formantów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2113">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="ebb95-2114">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewKeyUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2114">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2115">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewKeyUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2115">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2116">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2116">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2117">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2117">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="ebb95-2118">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2118">Routing strategy</span></span>|<span data-ttu-id="ebb95-2119">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2119">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2120">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2120">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="ebb95-2121">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2121">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="ebb95-2122">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2122">Override <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2123">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2123">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2124">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2124">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2125">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2125">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2126">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2126">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2127">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2127">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2128">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2128">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2129">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2129">Occurs when the keyboard is no longer focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2130">Ponieważ to zdarzenie używa tunelowania routingu, element utracie fokusu może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2130">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="ebb95-2131">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2131">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="ebb95-2132">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2132">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2133">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2133">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2134">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2134">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2135">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2135">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="ebb95-2136">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2136">Routing strategy</span></span>|<span data-ttu-id="ebb95-2137">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2137">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2138">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2138">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="ebb95-2139">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2139">The corresponding bubbling event is <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="ebb95-2140">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2140">Override <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2141">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2141">Identifies the <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2142">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2142">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2143">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2143">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2144">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2144">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2145">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2145">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2146">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2146">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2147">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2147">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2148">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2148">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2149">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2149">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2150"><xref:System.Windows.ContentElement.PreviewMouseDown> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2150">The <xref:System.Windows.ContentElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="ebb95-2151"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2151"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="ebb95-2152">Zobacz uwagi dla <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2152">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2153">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2153">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2154">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2154">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="ebb95-2155">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2155">Routing strategy</span></span>|<span data-ttu-id="ebb95-2156">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2156">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2157">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2157">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-2158">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2158">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="ebb95-2159">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2159">Override <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2160">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2160">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2161">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2161">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2162">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2162">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2163">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2163">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2164">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2164">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2165">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2165">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2166">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2166">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2167">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2167">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="ebb95-2168">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2168">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="ebb95-2169">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2169">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ebb95-2170">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2170">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="ebb95-2171">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2171">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="ebb95-2172">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2172">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="ebb95-2173">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2173">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2174">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2174">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2175">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2175">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="ebb95-2176">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2176">Routing strategy</span></span>|<span data-ttu-id="ebb95-2177">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2177">Direct</span></span>|  
|<span data-ttu-id="ebb95-2178">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2178">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-2179">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2179">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2180">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2180">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2181">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2181">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2182">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2182">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2183">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2183">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2184">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2184">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2185">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2185">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2186">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2186">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2187">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2187">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="ebb95-2188">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2188">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="ebb95-2189">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2189">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ebb95-2190">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2190">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="ebb95-2191">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2191">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="ebb95-2192">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2192">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="ebb95-2193">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2193">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2194">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2194">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2195">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2195">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="ebb95-2196">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2196">Routing strategy</span></span>|<span data-ttu-id="ebb95-2197">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2197">Direct</span></span>|  
|<span data-ttu-id="ebb95-2198">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2198">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-2199">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2199">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2200">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2200">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2201">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2201">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2202">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2202">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2203">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2203">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2204">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2204">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2205">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2205">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2206">Występuje po przemieszczeniu wskaźnika myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2206">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2207">To zdarzenie zarówno występuje, gdy wskaźnik myszy po raz pierwszy najedzie na granice elementu, a także gdy wskaźnik myszy jest przesuwany zachowując nadal w granicach elementu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2207">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="ebb95-2208">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2208">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2209">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2209">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2210">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2210">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2211">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2211">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="ebb95-2212">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2212">Routing strategy</span></span>|<span data-ttu-id="ebb95-2213">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2213">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2214">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2214">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="ebb95-2215">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2215">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="ebb95-2216">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2216">Override <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2217">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2217">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2218">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2218">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2219">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2219">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2220">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2220">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2221">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2221">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2222">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2222">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2223">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2223">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2224">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2224">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="ebb95-2225">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2225">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="ebb95-2226">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2226">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ebb95-2227">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2227">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="ebb95-2228">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2228">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="ebb95-2229">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2229">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="ebb95-2230">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2230">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2231">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2231">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2232">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2232">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="ebb95-2233">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2233">Routing strategy</span></span>|<span data-ttu-id="ebb95-2234">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2234">Direct</span></span>|  
|<span data-ttu-id="ebb95-2235">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2235">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-2236">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2236">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2237">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2237">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2238">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2238">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2239">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2239">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2240">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2240">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2241">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2241">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2242">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2242">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2243">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2243">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2244">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2244">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="ebb95-2245">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2245">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="ebb95-2246">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2246">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="ebb95-2247">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2247">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="ebb95-2248">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2248">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="ebb95-2249">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2249">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="ebb95-2250">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2250">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2251">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2251">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2252">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2252">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="ebb95-2253">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2253">Routing strategy</span></span>|<span data-ttu-id="ebb95-2254">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2254">Direct</span></span>|  
|<span data-ttu-id="ebb95-2255">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2255">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-2256">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2256">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2257">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2257">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2258">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2258">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2259">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2259">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2260">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2260">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2261">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2261">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2262">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2262">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2263">Występuje po zwolnieniu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2263">Occurs when any mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2264">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2264">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2265">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2265">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2266"><xref:System.Windows.ContentElement.PreviewMouseUp> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2266">The <xref:System.Windows.ContentElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="ebb95-2267"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2267"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="ebb95-2268">Zobacz uwagi dla <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2268">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2269">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2269">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2270">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2270">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="ebb95-2271">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2271">Routing strategy</span></span>|<span data-ttu-id="ebb95-2272">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2272">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2273">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2273">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-2274">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2274">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="ebb95-2275">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2275">Override <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2276">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2276">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2277">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2277">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2278">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2278">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2279">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2279">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2280">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2280">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2281">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2281">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2282">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2282">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2283">Przechwytywanie myszy lub fokus pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli to zdarzenie zostanie wyświetlony w elemencie ukierunkowanych lub przechwycone, wskaźnik myszy może się okazać za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2283">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="ebb95-2284">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2284">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2285">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2285">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2286">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2286">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2287">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2287">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="ebb95-2288">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2288">Routing strategy</span></span>|<span data-ttu-id="ebb95-2289">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2289">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2290">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2290">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="ebb95-2291">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2291">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="ebb95-2292">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2292">Override <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2293">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2293">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2294">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2294">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2295">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2295">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2296">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2296">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2297">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2297">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2298">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2298">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2299">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2299">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2300"><xref:System.Windows.ContentElement.PreviewQueryContinueDrag> Zdarzeń umożliwia źródła przeciągania zadeklarować, czy można anulować operację przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2300">The <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="ebb95-2301">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2301">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2302">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2302">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2303">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2303">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2304">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2304">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="ebb95-2305">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2305">Routing strategy</span></span>|<span data-ttu-id="ebb95-2306">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2306">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2307">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2307">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="ebb95-2308">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2308">The corresponding bubbling event is <xref:System.Windows.ContentElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="ebb95-2309">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2309">Override <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2310">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2310">Identifies the <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2311">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2311">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2312">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2312">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2313">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2313">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2314">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2314">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2315">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2315">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2316">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2316">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2317">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusButtonDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2317">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2318">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusButtonDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2318">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2319">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2319">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2320">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2320">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2321">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2321">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2322">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2322">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="ebb95-2323">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2323">Routing strategy</span></span>|<span data-ttu-id="ebb95-2324">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2324">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2325">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2325">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-2326">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2326">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="ebb95-2327">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2327">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2328">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2328">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2329">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2329">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2330">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2330">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2331">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2331">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2332">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2332">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2333">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2333">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2334">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2334">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2335">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusButtonUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2335">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2336">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusButtonUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2336">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2337">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2337">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2338">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2338">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2339">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2339">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2340">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2340">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="ebb95-2341">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2341">Routing strategy</span></span>|<span data-ttu-id="ebb95-2342">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2342">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2343">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2343">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-2344">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2344">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="ebb95-2345">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2345">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2346">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2346">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2347">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2347">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2348">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2348">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2349">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2349">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2350">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2350">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2351">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2351">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2352">Występuje, gdy pióro dotyka digitizera, gdy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2352">Occurs when the stylus touches the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2353">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2353">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2354">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2354">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2355">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2355">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2356">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2356">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2357">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2358">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2358">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="ebb95-2359">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2359">Routing strategy</span></span>|<span data-ttu-id="ebb95-2360">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2360">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2361">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2361">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="ebb95-2362">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2362">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="ebb95-2363">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2363">Override <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2364">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2364">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2365">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2365">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2366">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2366">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2367">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2367">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2368">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2368">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2369">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2369">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2370">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2370">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2371">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusInAirMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2371">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2372">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusInAirMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2372">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2373">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2373">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2374">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2374">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2375">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2375">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2376">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2376">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="ebb95-2377">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2377">Routing strategy</span></span>|<span data-ttu-id="ebb95-2378">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2378">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2379">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2379">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2380">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2380">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="ebb95-2381">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2381">Override <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2382">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2382">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2383">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2383">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2384">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2384">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2385">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2385">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2386">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2386">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2387">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2387">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2388">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2388">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2389">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusInRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2389">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2390">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusInRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2390">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2391">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2391">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2392">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2392">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2393">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2393">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2394">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2394">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="ebb95-2395">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2395">Routing strategy</span></span>|<span data-ttu-id="ebb95-2396">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2396">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2397">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2397">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2398">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2398">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="ebb95-2399">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2399">Override <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2400">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2400">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2401">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2401">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2402">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2402">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2403">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2403">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2404">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2404">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2405">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2405">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2406">Występuje, gdy pióro jest przemieszczane nad elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2406">Occurs when the stylus moves while over the element.</span>
          </span>
          <span data-ttu-id="ebb95-2407">Pióro musi być przemieszczane podczas wykrywania przez Dyskretyzator Aby zgłosić to zdarzenie, w przeciwnym razie <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> zgłaszane jest zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2407">The stylus must move while being detected by the  digitizer  to raise this event, otherwise, <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2408">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2408">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2409">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2409">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2410">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2410">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2411">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2411">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2412">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2412">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2413">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2413">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="ebb95-2414">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2414">Routing strategy</span></span>|<span data-ttu-id="ebb95-2415">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2415">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2416">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2416">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2417">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2417">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="ebb95-2418">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2418">Override <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2419">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2419">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2420">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2420">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2421">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2421">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2422">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2422">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2423">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2423">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2424">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2424">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2425">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2425">Occurs when the stylus is too far from the digitizer to be detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2426">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2426">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2427">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2427">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2428">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2428">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2429">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2429">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2430">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2430">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2431">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2431">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="ebb95-2432">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2432">Routing strategy</span></span>|<span data-ttu-id="ebb95-2433">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2433">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2434">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2434">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2435">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2435">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="ebb95-2436">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2436">Override <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2437">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2437">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2438">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2438">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2439">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2439">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2440">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2440">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2441">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2441">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2442">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2442">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2443">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2443">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2444">Informacje o gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2444">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="ebb95-2445">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2445">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2446">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2446">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2447">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2447">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2448">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2448">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2449">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2449">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2450">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2450">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="ebb95-2451">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2451">Routing strategy</span></span>|<span data-ttu-id="ebb95-2452">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2452">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2453">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2453">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="ebb95-2454">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2454">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="ebb95-2455">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2455">Override <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2456">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2456">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2457">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2457">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2458">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2458">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2459">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2459">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2460">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2460">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2461">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2461">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2462">Występuje, gdy użytkownik wywołuje pióra od dyskretyzatora, gdy pióro znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2462">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2463">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2463">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2464">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2464">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2465">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2465">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2466">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2466">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2467">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2467">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2468">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2468">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="ebb95-2469">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2469">Routing strategy</span></span>|<span data-ttu-id="ebb95-2470">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2470">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2471">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2471">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2472">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2472">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="ebb95-2473">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2473">Override <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2474">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2474">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2475">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2475">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2476">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2476">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2477">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2477">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2478">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2478">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2479">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2479">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2480">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2480">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2481"><xref:System.Windows.ContentElement.PreviewTextInput> Zdarzeń umożliwia składnika lub aplikacji do nasłuchiwania wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2481">The <xref:System.Windows.ContentElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="ebb95-2482">Klawiatura jest podstawowy sposób <xref:System.Windows.ContentElement.PreviewTextInput>; ale można również generować mowy, pisma ręcznego i innych urządzeniach wejściowych <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2482">The keyboard is the primary means of <xref:System.Windows.ContentElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="ebb95-2483">Z powodu kombinacji klawiszy — w klawiatury domyślne lub za pośrednictwem edytory input method — wiele zdarzeń klucza mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2483">Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="ebb95-2484">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewTextInput> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2484">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2485">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewTextInput> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2485">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2486">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2486">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2487">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2487">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTextInputEvent>|  
|<span data-ttu-id="ebb95-2488">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2488">Routing strategy</span></span>|<span data-ttu-id="ebb95-2489">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2489">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2490">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2490">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="ebb95-2491">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2491">The corresponding bubbling event is <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="ebb95-2492">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2492">Override <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2493">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2493">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2494">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2494">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2495">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2495">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2496">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2496">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2497">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2497">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2498">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2498">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2499">Występuje, gdy palcem krawędzi ekranu, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2499">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2500">Domyślnie <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzeń nie występują dopóki palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2500">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="ebb95-2501">Naciśnięcie klawisza palcem na ekranie i zawierający bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2501">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="ebb95-2502">Naciśnij i przytrzymaj klawisz jest odpowiednikiem kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2502">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="ebb95-2503">Powoduje <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia jak palcem krawędzi ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączona właściwość do `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2503">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2504">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2504">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2505">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2505">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="ebb95-2506">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2506">Routing strategy</span></span>|<span data-ttu-id="ebb95-2507">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2507">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2508">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2508">Delegate</span></span>|<span data-ttu-id="ebb95-2509"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2509"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="ebb95-2510">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2510">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="ebb95-2511">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2511">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2512">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2512">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2513">Występuje po przemieszczeniu palcem na ekranie, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2513">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2514">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2514">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2515">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2515">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="ebb95-2516">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2516">Routing strategy</span></span>|<span data-ttu-id="ebb95-2517">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2517">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2518">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2518">Delegate</span></span>|<span data-ttu-id="ebb95-2519"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2519"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="ebb95-2520">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2520">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="ebb95-2521">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2521">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2522">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2522">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2523">Występuje, gdy jest wywoływane palcem poza ekran, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2523">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2524">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2524">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2525">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2525">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="ebb95-2526">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2526">Routing strategy</span></span>|<span data-ttu-id="ebb95-2527">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2527">Tunneling</span></span>|  
|<span data-ttu-id="ebb95-2528">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2528">Delegate</span></span>|<span data-ttu-id="ebb95-2529"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2529"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="ebb95-2530">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2530">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="ebb95-2531">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2531">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2532">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2532">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2533">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2533">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2534"><xref:System.Windows.ContentElement.QueryContinueDrag> Zdarzeń umożliwia ustalenie, czy można anulować operację przeciągania i upuszczania źródła przeciągania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2534">The <xref:System.Windows.ContentElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="ebb95-2535">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.QueryContinueDrag> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2535">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2536">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.QueryContinueDrag> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2536">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2537">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2537">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2538">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2538">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryContinueDragEvent>|  
|<span data-ttu-id="ebb95-2539">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2539">Routing strategy</span></span>|<span data-ttu-id="ebb95-2540">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2540">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2541">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2541">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="ebb95-2542">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2542">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="ebb95-2543">Zastąpienie <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2543">Override <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2544">Identyfikuje <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2544">Identifies the <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2545">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2545">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2546">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2546">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2547">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2547">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2548">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2548">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2549">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2549">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2550">Występuje, gdy kursor jest wymagane do wyświetlenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2550">Occurs when the cursor is requested to display.</span>
          </span>
          <span data-ttu-id="ebb95-2551">To zdarzenie jest zgłaszane w elemencie każdym razem, gdy wskaźnik myszy jest przesuwany do nowej lokalizacji, która oznacza, że obiekt kursora może zaistnieć konieczność zmiany na podstawie jego nowego położenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2551">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2552">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.QueryCursor> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2552">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryCursor> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2553">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.QueryCursor> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2553">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2554">Kursor jest odwołuje się ta nazwa zdarzenia nie jest kursor tekstu (czasem nazywane punktu wstawiania).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2554">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="ebb95-2555">Zamiast tego kursor znajduje się w tym kontekście jest obiekt, który deklaruje na ekranie graficzną związane z kilku możliwych urządzeń związanych z danych wejściowych lub pojęcia dotyczące programowania w języku systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2555">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="ebb95-2556">Ten obiekt jest reprezentowana przez <xref:System.Windows.Input.Cursor> klasy na platformie WPF.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2556">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="ebb95-2557">System wejściowy WPF umożliwia zmianę tego kursora, gdy reprezentuje na ekranie położenia wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2557">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="ebb95-2558">Możesz użyć wstępnie zdefiniowanych wartości z <xref:System.Windows.Input.Cursors> wyliczenia, lub można zadeklarować niestandardowych kursora jako plik obrazu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2558">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="ebb95-2559">Nasłuchiwanie <xref:System.Windows.ContentElement.QueryCursor> zdarzenie nie jest technikę efektywne zarządzanie kursora.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2559">Listening for the <xref:System.Windows.ContentElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="ebb95-2560">Zamiast tego każdy element powinien definiować własne zachowania kursora w <xref:System.Windows.FrameworkContentElement.Cursor%2A> i <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2560">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="ebb95-2561">Należy polegać wyłącznie na <xref:System.Windows.ContentElement.QueryCursor> WPF poziomie struktury podstawowych elementów nie jest używany, czy w dodatkowej okolicznościach gdy Definiowanie zachowania kursor na podstawie na element nie spełnia Twoje potrzeby.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2561">You should only rely on <xref:System.Windows.ContentElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="ebb95-2562">Aby uzyskać więcej informacji na implementacji zachowanie kursora w odpowiedzi na <xref:System.Windows.ContentElement.QueryCursor>, zobacz <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2562">For more information on implementing cursor behavior in response to <xref:System.Windows.ContentElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2563">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2563">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2564">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2564">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryCursorEvent>|  
|<span data-ttu-id="ebb95-2565">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2565">Routing strategy</span></span>|<span data-ttu-id="ebb95-2566">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2566">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2567">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2567">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="ebb95-2568">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2568">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="ebb95-2569">Zastąpienie <xref:System.Windows.ContentElement.OnQueryCursor%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2569">Override <xref:System.Windows.ContentElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2570">Identyfikuje <see cref="E:System.Windows.ContentElement.QueryCursor" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2570">Identifies the <see cref="E:System.Windows.ContentElement.QueryCursor" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2571">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2571">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2572">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2572">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2573">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2573">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2574">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2574">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2575">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2575">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ebb95-2576">A <see cref="T:System.Windows.RoutedEventArgs" /> zawiera dane zdarzeń i identyfikuje również zdarzeń, aby wywołać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2576">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-2577">Wywołuje określone kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2577">Raises a specific routed event.</span>
          </span>
          <span data-ttu-id="ebb95-2578">
            <see cref="T:System.Windows.RoutedEvent" /> Wygenerowany zostanie zidentyfikowana w <see cref="T:System.Windows.RoutedEventArgs" /> wystąpienia, który został dostarczony (jako <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości danych zdarzeń).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2578">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2579">`e` Parametr jest typu jako typu podstawowego wspólne dla wszystkich danych kierowanego zdarzenia; jednak dane zdarzenia powinny być podane specyficzny typem danych zdarzenia, który jest dostępny dla zdarzeń zgłaszanych, ponieważ <xref:System.Windows.RoutedEventArgs> zawiera klasy pochodne rzeczywiste dane określone właściwości, które są przeznaczone do określonego zdarzenia, gdy jest on uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2579">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="ebb95-2580"><xref:System.Windows.RoutedEventArgs> nie jest tylko właściwości stan dla zdarzeń; identyfikuje które kierowanego zdarzenia, aby wywołać.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2580"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="ebb95-2581">Ten wzorzec wywoływanie zdarzeń i danych kierowanego zdarzenia zarówno różnią się od [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] klasy zdarzenia i dane, które zwykle zawierają tylko właściwości, które są powiązane ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2581">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-2582">Poniższy przykład tworzy dane zdarzenia, dołącza identyfikator zdarzenia do danych, a następnie używa wystąpienie danych zdarzeń, aby wywołać zdarzenie niestandardowe routingiem.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2582">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#raiseevent)]
 [!code-vb[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="contentElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2583">Zwalnia wszystkie urządzenia touch przechwyconych z tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2583">Releases all captured touch devices from this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="contentElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2584">Jeżeli ten element przechwytywania, zwalnia przechwytywanie myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2584">Releases the mouse capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2585">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2585">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="ebb95-2586">Należy wziąć pod uwagę wartości <xref:System.Windows.ContentElement.IsMouseCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2586">Consider checking the value of <xref:System.Windows.ContentElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ebb95-2587">Poniższe procedury obsługi przechwytuje lub zwalnia przechwytywanie myszy zgodnie z Stany przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2587">The following handler captures or releases mouse capture according to mouse button states.</span></span> <span data-ttu-id="ebb95-2588">W przykładzie pokazano sposób użycia ruchów myszy przechwyconych dla alternatywnej celów innych niż wskaźnika myszy [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ebb95-2588">The example shows how to use captured mouse movement for alternative purposes other than moving the mouse pointer in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="contentElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2589">Zwalnia Przechwytywanie urządzenia pióra, jeżeli ten element przechwytywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2589">Releases the stylus device capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2590">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2590">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="ebb95-2591">Należy wziąć pod uwagę wartości <xref:System.Windows.ContentElement.IsStylusCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2591">Consider checking the value of <xref:System.Windows.ContentElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="ebb95-2592">Urządzenie do zwolnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2592">The device to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-2593">Próbuje zwolnić urządzenia określonego touch z tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2593">Attempts to release the specified touch device from this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-2594">
            <see langword="true" /> Jeśli urządzenie touch zwolnieniu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2594">
              <see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ebb95-2595">
            <paramref name="touchDevice" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2595">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="ebb95-2596">Identyfikator zdarzenia the.routed, dla którego jest umocowana Obsługa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2596">The identifier of the.routed event for which the handler is attached.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ebb95-2597">Implementacja określony program obsługi, aby usunąć z kolekcji programu obsługi zdarzeń w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2597">The specific handler implementation to remove from the event handler collection on this element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ebb95-2598">Usuwa obsługi określonego kierowanego zdarzenia z tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2598">Removes the specified routed event handler from this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2599">Najbardziej typowym scenariuszem stosowania to [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] jest podczas implementowania [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzeń "otoki", który jest skojarzony z routingiem zdarzenie niestandardowe, w szczególności, gdy należy wdrożyć logikę "Usuń" dla programów obsługi na [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] poziom.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2599">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="ebb95-2600">Przykład, w którym następuje to uwagi części przedstawiono w tym scenariuszu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2600">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="ebb95-2601">Wywołanie tej metody nie ma znaczenia, jeśli nie było żadnych programów obsługi zarejestrowany z kryteriami zgodnych parametrów wejściowych dla wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2601">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="ebb95-2602">Jeśli więcej niż jeden program obsługi jest dołączony pasujących kryteria tylko pierwszego programu obsługi w przypadku obsługi magazyn zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2602">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="ebb95-2603">To zachowanie jest zgodne z [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zachowanie `-=` operatora.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2603">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="ebb95-2604">Ani `routedEvent` ani `handler` może być `null`.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2604">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="ebb95-2605">Podjęto próbę podać te wartości jako `null` zgłosi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2605">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="ebb95-2606">Ta metoda powoduje ignorowanie `handledEventsToo` informacje o parametrach, która jest dostępna, jeśli program obsługi został po raz pierwszy dodane z <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisie, który włącza obsługę zdarzeń już obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2606">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="ebb95-2607">Dowolnego typu program obsługi zostanie usunięta.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2607">Either type of handler is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2608">Zwraca czy procesy serializacji powinny serializować zawartości <see cref="P:System.Windows.ContentElement.CommandBindings" /> właściwości wystąpienia tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2608">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-2609">
            <see langword="true" /> Jeśli <see cref="P:System.Windows.ContentElement.CommandBindings" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2609">
              <see langword="true" /> if the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2610">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.ContentElement.CommandBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2610">This will return `true` if <xref:System.Windows.ContentElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="ebb95-2611">To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.UIElement.CommandBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2611">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="ebb95-2612">Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2612">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="ebb95-2613">Zwykle wywołuje tę metodę albo opracowywanie projektanta lub tworzenie własnych Dołączanie formantu <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2613">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="ebb95-2614">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych z ShouldSerialize i zresetować metody](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2614">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2615">Zwraca czy procesy serializacji powinny serializować zawartości <see cref="P:System.Windows.ContentElement.InputBindings" /> właściwości wystąpienia tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2615">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.InputBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ebb95-2616">
            <see langword="true" /> Jeśli <see cref="P:System.Windows.ContentElement.InputBindings" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2616">
              <see langword="true" /> if the <see cref="P:System.Windows.ContentElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2617">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.ContentElement.InputBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2617">This will return `true` if <xref:System.Windows.ContentElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="ebb95-2618">To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.UIElement.InputBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2618">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="ebb95-2619">Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2619">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="ebb95-2620">Zwykle wywołuje tę metodę albo opracowywanie projektanta lub tworzenie własnych Dołączanie formantu <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2620">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="ebb95-2621">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych z ShouldSerialize i zresetować metody](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2621">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2622">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2622">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2623">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusButtonDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2623">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2624">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusButtonDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2624">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2625">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2625">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2626">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2626">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2627">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2627">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2628">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2628">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonDownEvent>|  
|<span data-ttu-id="ebb95-2629">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2629">Routing strategy</span></span>|<span data-ttu-id="ebb95-2630">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2630">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2631">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2631">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-2632">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2632">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="ebb95-2633">Zastąpienie <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2633">Override <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2634">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2634">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2635">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2635">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2636">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2636">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2637">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2637">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2638">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2638">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2639">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2639">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2640">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2640">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2641">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusButtonUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2641">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2642">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusButtonUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2642">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2643">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2643">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2644">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2644">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2645">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2645">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2646">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2646">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonUpEvent>|  
|<span data-ttu-id="ebb95-2647">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2647">Routing strategy</span></span>|<span data-ttu-id="ebb95-2648">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2648">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2649">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2649">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="ebb95-2650">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2650">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="ebb95-2651">Zastąpienie <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2651">Override <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2652">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2652">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2653">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2653">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2654">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2654">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2655">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2655">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2656">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2656">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2657">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2657">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2658">Występuje, gdy pióro dotyka digitizera, gdy pióro znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2658">Occurs when the stylus touches the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2659">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2659">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2660">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2660">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2661">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2661">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2662">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2662">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2663">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2663">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2664">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2664">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusDownEvent>|  
|<span data-ttu-id="ebb95-2665">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2665">Routing strategy</span></span>|<span data-ttu-id="ebb95-2666">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2666">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2667">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2667">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="ebb95-2668">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2668">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="ebb95-2669">Zastąpienie <xref:System.Windows.ContentElement.OnStylusDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2669">Override <xref:System.Windows.ContentElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2670">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2670">Identifies the <see cref="E:System.Windows.ContentElement.StylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2671">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2671">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2672">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2672">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2673">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2673">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2674">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2674">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2675">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2675">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2676">Występuje po pokonaniu przez pióro granic tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2676">Occurs when the stylus enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2677"><xref:System.Windows.ContentElement.StylusEnter> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2677"><xref:System.Windows.ContentElement.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="ebb95-2678">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2678">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="ebb95-2679">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2679">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="ebb95-2680">Mimo że <xref:System.Windows.ContentElement.StylusEnter> śledzi po pokonaniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsStylusOver%2A> zmieniono wartość właściwości z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2680">Although <xref:System.Windows.ContentElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="ebb95-2681">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2681">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2682">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2682">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2683">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2683">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2684">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2684">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2685">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2685">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2686">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2686">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusEnterEvent>|  
|<span data-ttu-id="ebb95-2687">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2687">Routing strategy</span></span>|<span data-ttu-id="ebb95-2688">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2688">Direct</span></span>|  
|<span data-ttu-id="ebb95-2689">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2689">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2690">Zastąpienie <xref:System.Windows.ContentElement.OnStylusEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2690">Override <xref:System.Windows.ContentElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2691">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusEnter" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2691">Identifies the <see cref="E:System.Windows.ContentElement.StylusEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2692">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2692">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2693">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2693">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2694">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2694">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2695">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2695">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2696">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2696">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2697">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2697">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2698">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusInAirMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2698">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2699">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusInAirMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2699">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2700">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2700">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2701">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2701">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2702">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2702">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2703">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2703">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="ebb95-2704">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2704">Routing strategy</span></span>|<span data-ttu-id="ebb95-2705">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2705">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2706">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2706">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2707">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2707">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="ebb95-2708">Zastąpienie <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2708">Override <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2709">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2709">Identifies the <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2710">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2710">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2711">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2711">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2712">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2712">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2713">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2713">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2714">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2714">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2715">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2715">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2716">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusInRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2716">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2717">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusInRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2717">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2718">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2718">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2719">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2719">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2720">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2720">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2721">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2721">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInRangeEvent>|  
|<span data-ttu-id="ebb95-2722">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2722">Routing strategy</span></span>|<span data-ttu-id="ebb95-2723">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2723">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2724">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2724">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2725">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2725">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="ebb95-2726">Zastąpienie <xref:System.Windows.ContentElement.OnStylusInRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2726">Override <xref:System.Windows.ContentElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2727">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusInRange" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2727">Identifies the <see cref="E:System.Windows.ContentElement.StylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2728">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2728">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2729">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2729">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2730">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2730">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2731">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2731">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2732">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2732">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2733">Występuje po opuszczeniu przez pióro granic elementu przez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2733">Occurs when the stylus leaves the bounds of the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2734"><xref:System.Windows.ContentElement.StylusLeave> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2734"><xref:System.Windows.ContentElement.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="ebb95-2735">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2735">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="ebb95-2736">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2736">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="ebb95-2737">Mimo że <xref:System.Windows.ContentElement.StylusLeave> śledzi po opuszczeniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsStylusOver%2A> zmieniono wartość właściwości z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2737">Although <xref:System.Windows.ContentElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="ebb95-2738">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2738">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2739">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2739">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2740">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2740">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2741">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2741">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2742">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2742">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2743">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2743">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusLeaveEvent>|  
|<span data-ttu-id="ebb95-2744">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2744">Routing strategy</span></span>|<span data-ttu-id="ebb95-2745">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2745">Direct</span></span>|  
|<span data-ttu-id="ebb95-2746">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2746">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2747">Zastąpienie <xref:System.Windows.ContentElement.OnStylusLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2747">Override <xref:System.Windows.ContentElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2748">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusLeave" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2748">Identifies the <see cref="E:System.Windows.ContentElement.StylusLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2749">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2749">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2750">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2750">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2751">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2751">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2752">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2752">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2753">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2753">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2754">Występuje, gdy pióro jest przemieszczane nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2754">Occurs when the stylus moves over this element.</span>
          </span>
          <span data-ttu-id="ebb95-2755">Pióro musi dotykać powierzchni dyskretyzatora, aby zgłosić to zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2755">The stylus must move while on the digitizer to raise this event.</span>
          </span>
          <span data-ttu-id="ebb95-2756">W przeciwnym razie <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> zgłaszane jest zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2756">Otherwise, <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2757">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2757">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2758">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2758">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2759">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2759">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2760">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2760">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2761">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2761">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2762">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2762">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusMoveEvent>|  
|<span data-ttu-id="ebb95-2763">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2763">Routing strategy</span></span>|<span data-ttu-id="ebb95-2764">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2764">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2765">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2765">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2766">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2766">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="ebb95-2767">Zastąpienie <xref:System.Windows.ContentElement.OnStylusMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2767">Override <xref:System.Windows.ContentElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2768">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2768">Identifies the <see cref="E:System.Windows.ContentElement.StylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2769">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2769">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2770">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2770">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2771">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2771">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2772">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2772">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2773">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2773">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2774">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2774">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2775">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusOutOfRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2775">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2776">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusOutOfRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2776">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2777">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2777">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2778">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2778">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2779">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2779">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2780">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2780">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="ebb95-2781">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2781">Routing strategy</span></span>|<span data-ttu-id="ebb95-2782">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2782">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2783">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2783">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2784">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2784">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="ebb95-2785">Zastąpienie <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2785">Override <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2786">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2786">Identifies the <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2787">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2787">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2788">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2788">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2789">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2789">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2790">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2790">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2791">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2791">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2792">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2792">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2793">Aby uzyskać więcej informacji na temat gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2793">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="ebb95-2794">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusSystemGesture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2794">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2795">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusSystemGesture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2795">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2796">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2796">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2797">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2797">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2798">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2798">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2799">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2799">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="ebb95-2800">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2800">Routing strategy</span></span>|<span data-ttu-id="ebb95-2801">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2801">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2802">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2802">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="ebb95-2803">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2803">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="ebb95-2804">Zastąpienie <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2804">Override <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2805">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2805">Identifies the <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2806">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2806">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2807">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2807">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2808">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2808">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2809">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2809">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2810">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2810">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2811">Występuje, gdy użytkownik wywołuje pióra od dyskretyzatora, gdy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2811">Occurs when the user raises the stylus off the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2812">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2812">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2813">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2813">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="ebb95-2814">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2814">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="ebb95-2815">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ebb95-2815">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2816">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2816">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2817">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2817">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusUpEvent>|  
|<span data-ttu-id="ebb95-2818">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2818">Routing strategy</span></span>|<span data-ttu-id="ebb95-2819">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2819">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2820">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2820">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="ebb95-2821">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2821">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="ebb95-2822">Zastąpienie <xref:System.Windows.ContentElement.OnStylusUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2822">Override <xref:System.Windows.ContentElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2823">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2823">Identifies the <see cref="E:System.Windows.ContentElement.StylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2824">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2824">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2825">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2825">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2826">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2826">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2827">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2827">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2828">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2828">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2829">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2829">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ebb95-2830">To zdarzenie może już oznaczony jako obsługiwany przez wewnętrznych implementacje połączone formantów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2830">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="ebb95-2831">Zobacz uwagi poniżej.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2831">See Remark below.</span></span>  
  
 <span data-ttu-id="ebb95-2832"><xref:System.Windows.ContentElement.TextInput> Zdarzeń już może być oznaczony jako obsługiwany przez wewnętrznych implementacje połączone formantów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2832">The <xref:System.Windows.ContentElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="ebb95-2833">Na przykład <xref:System.Windows.Controls.TextBox> jest formantem połączone gdzie <xref:System.Windows.ContentElement.TextInput> zdarzeń jest już oznaczona jako obsługiwany; w jego składania.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2833">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.ContentElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="ebb95-2834">Formanty to zrobić, ponieważ formant wymaga interpretować niektóre typy danych wejściowych, takich jak klawiszy strzałek jako mające specjalne znaczenie tego formantu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2834">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="ebb95-2835">Jeśli używasz <xref:System.Windows.ContentElement.PreviewTextInput> jako zdarzenie, gdzie możesz dołączyć obsługi wprowadzania tekstu, może zostać wyświetlony w poszukiwaniu lepszych wyników.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2835">If you use <xref:System.Windows.ContentElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="ebb95-2836">Ta technika prowadzenia większości przypadkach, gdy formant kompozycji już oznaczył to zdarzenie, ponieważ obsługiwane i uniemożliwia odbieranie zdarzeń wzdłuż trasy zdarzenia programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2836">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="ebb95-2837"><xref:System.Windows.ContentElement.TextInput> Zdarzeń umożliwia składnika lub aplikacji do nasłuchiwania wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2837">The <xref:System.Windows.ContentElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="ebb95-2838">Klawiatura jest podstawowy sposób <xref:System.Windows.ContentElement.TextInput>, ale może też wiązać mowy, pisma ręcznego i innych urządzeniach wejściowych <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2838">The keyboard is the primary means of <xref:System.Windows.ContentElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
 <span data-ttu-id="ebb95-2839">Z powodu kombinacji klawiszy — w klawiatury domyślne lub za pośrednictwem edytory input method — wiele zdarzeń klucza może zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2839">Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="ebb95-2840">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.TextInput> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2840">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.TextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="ebb95-2841">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.TextInput> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2841">Event handlers that are attached to the <xref:System.Windows.ContentElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2842">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2842">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2843">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2843">Identifier field</span></span>|<xref:System.Windows.ContentElement.TextInputEvent>|  
|<span data-ttu-id="ebb95-2844">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2844">Routing strategy</span></span>|<span data-ttu-id="ebb95-2845">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2845">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2846">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2846">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="ebb95-2847">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2847">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="ebb95-2848">Zastąpienie <xref:System.Windows.ContentElement.OnTextInput%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2848">Override <xref:System.Windows.ContentElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2849">Identyfikuje <see cref="E:System.Windows.ContentElement.TextInput" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2849">Identifies the <see cref="E:System.Windows.ContentElement.TextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2850">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2850">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="ebb95-2851">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2851">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="ebb95-2852">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2852">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="ebb95-2853">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2853">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="ebb95-2854">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2854">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2855">Występuje, gdy palcem krawędzi ekranu, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2855">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2856">Domyślnie <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzeń nie występują dopóki palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2856">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="ebb95-2857">Naciśnięcie klawisza palcem na ekranie i zawierający bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2857">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="ebb95-2858">Naciśnij i przytrzymaj klawisz jest odpowiednikiem kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2858">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="ebb95-2859">Powoduje <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia jak palcem krawędzi ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączona właściwość do `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2859">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2860">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2860">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2861">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2861">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchDownEvent>|  
|<span data-ttu-id="ebb95-2862">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2862">Routing strategy</span></span>|<span data-ttu-id="ebb95-2863">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2863">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2864">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2864">Delegate</span></span>|<span data-ttu-id="ebb95-2865"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2865"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="ebb95-2866">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2866">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="ebb95-2867">Zastąpienie <xref:System.Windows.ContentElement.OnTouchDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2867">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2868">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2868">Identifies the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2869">Występuje po przemieszczeniu touch z zewnątrz do wewnątrz granic tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2869">Occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebb95-2870">To zdarzenie jest zawsze zgłaszane, czy urządzenie touch są przechwytywane do tego elementu interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2870">This event is always raised, whether or not the touch device is captured to this UI element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2871">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2871">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2872">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2872">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchEnterEvent>|  
|<span data-ttu-id="ebb95-2873">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2873">Routing strategy</span></span>|<span data-ttu-id="ebb95-2874">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2874">Direct</span></span>|  
|<span data-ttu-id="ebb95-2875">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2875">Delegate</span></span>|<span data-ttu-id="ebb95-2876"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2876"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="ebb95-2877">Zastąpienie <xref:System.Windows.ContentElement.OnTouchEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2877">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2878">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchEnter" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2878">Identifies the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2879">Pobiera wszystkie urządzenia touch, które są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2879">Gets all touch devices that are captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-2880">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2880">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2881">Pobiera wszystkie urządzenia touch, które są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2881">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-2882">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2882">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2883">Pobiera wszystkie urządzenia touch znajdujących się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2883">Gets all touch devices that are over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-2884">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów znajdujących się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2884">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2885">Pobiera wszystkie urządzenia touch znajdujących się nad tym elementem lub wszystkie elementy podrzędne w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2885">Gets all touch devices that are over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ebb95-2886">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przez ten element lub wszystkie elementy podrzędne w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2886">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2887">Występuje po przemieszczeniu touch z wnętrza poza granicami tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2887">Occurs when a touch moves from inside to outside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2888">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2888">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2889">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2889">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchLeaveEvent>|  
|<span data-ttu-id="ebb95-2890">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2890">Routing strategy</span></span>|<span data-ttu-id="ebb95-2891">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ebb95-2891">Direct</span></span>|  
|<span data-ttu-id="ebb95-2892">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2892">Delegate</span></span>|<span data-ttu-id="ebb95-2893"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2893"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="ebb95-2894">Zastąpienie <xref:System.Windows.ContentElement.OnTouchLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2894">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2895">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchLeave" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2895">Identifies the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2896">Występuje po przemieszczeniu palcem na ekranie, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2896">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2897">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2897">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2898">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2898">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchMoveEvent>|  
|<span data-ttu-id="ebb95-2899">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2899">Routing strategy</span></span>|<span data-ttu-id="ebb95-2900">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2900">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2901">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2901">Delegate</span></span>|<span data-ttu-id="ebb95-2902"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2902"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="ebb95-2903">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2903">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="ebb95-2904">Zastąpienie <xref:System.Windows.ContentElement.OnTouchMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2904">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2905">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2905">Identifies the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2906">Występuje, gdy jest wywoływane palcem poza ekran, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2906">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ebb95-2907">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ebb95-2907">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ebb95-2908">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ebb95-2908">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchUpEvent>|  
|<span data-ttu-id="ebb95-2909">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ebb95-2909">Routing strategy</span></span>|<span data-ttu-id="ebb95-2910">Propagacji</span><span class="sxs-lookup"><span data-stu-id="ebb95-2910">Bubbling</span></span>|  
|<span data-ttu-id="ebb95-2911">Delegate</span><span class="sxs-lookup"><span data-stu-id="ebb95-2911">Delegate</span></span>|<span data-ttu-id="ebb95-2912"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2912"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="ebb95-2913">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2913">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="ebb95-2914">Zastąpienie <xref:System.Windows.ContentElement.OnTouchUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="ebb95-2914">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ebb95-2915">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ebb95-2915">Identifies the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>