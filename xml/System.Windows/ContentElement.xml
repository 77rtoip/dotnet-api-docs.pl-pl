<Type Name="ContentElement" FullName="System.Windows.ContentElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e8917d97a28d7c82456fcb8eecf3e5ca2abdfc54" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69434808" /></Metadata><TypeSignature Language="C#" Value="public class ContentElement : System.Windows.DependencyObject, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentElement extends System.Windows.DependencyObject implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentElement&#xA;Inherits DependencyObject&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentElement : System::Windows::DependencyObject, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type ContentElement = class&#xA;    inherit DependencyObject&#xA;    interface IInputElement&#xA;    interface IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a0fdb-101">Udostępnia klasę bazową na poziomie rdzenia WPF dla elementów zawartości.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-101">Provides a WPF core-level base class for content elements.</span></span> <span data-ttu-id="a0fdb-102">Elementy zawartości są przeznaczone do prezentacji w stylu przepływu przy użyciu intuicyjnego modelu układu zorientowanego na oznakowanie i skomplikowanego modelu obiektów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-102">Content elements are designed for flow-style presentation, using an intuitive markup-oriented layout model and a deliberately simple object model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-103"><xref:System.Windows.ContentElement>definiuje następujące typowe cechy zawartości:</span><span class="sxs-lookup"><span data-stu-id="a0fdb-103"><xref:System.Windows.ContentElement> defines the following common content characteristics:</span></span>  
  
-   <span data-ttu-id="a0fdb-104">Klawiatur Wszystkie <xref:System.Windows.ContentElement> klasy pochodne zapewniają obsługę podstawowego przechwytywania danych wejściowych z klawiatury, myszy, operacji przeciągania i upuszczania, kontrolek pióra i akceleratorów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-104">Input: All <xref:System.Windows.ContentElement> derived classes provide support for basic input capture from keyboard, mouse, drag-and-drop operations, stylus controls, and accelerators.</span></span>  
  
-   <span data-ttu-id="a0fdb-105">Fokus Wszystkie <xref:System.Windows.ContentElement> klasy pochodne mogą być możliwe do skoncentrowania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-105">Focus: All <xref:System.Windows.ContentElement> derived classes are potentially focusable.</span></span> <span data-ttu-id="a0fdb-106">(Jednak domyślny stan skoncentrowany dla <xref:System.Windows.ContentElement> klasy bazowej to. `false`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-106">(However, the default focusable state for the <xref:System.Windows.ContentElement> base class is `false`.</span></span> <span data-ttu-id="a0fdb-107">Aby uzyskać szczegółowe informacje na temat sposobu <xref:System.Windows.ContentElement> skoncentrowania, zobacz <xref:System.Windows.ContentElement.Focusable%2A>.) Ponadto ta klasa zawiera [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] , że można użyć do przechodzenia fokusu między powiązanymi elementami.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-107">For details on how to make a <xref:System.Windows.ContentElement> focusable, see <xref:System.Windows.ContentElement.Focusable%2A>.) In addition, this class contains [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that you can use for traversing the focus across related elements.</span></span>  
  
-   <span data-ttu-id="a0fdb-108">Zdarzenia: <xref:System.Windows.ContentElement> zawiera zdarzenia powiązane z danymi wejściowymi i fokusem; zawiera również zdarzenia dotyczące zmian stanu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-108">Events: <xref:System.Windows.ContentElement> includes events that are related to input and focus; it also includes events for changes in state.</span></span> <span data-ttu-id="a0fdb-109">W wielu przypadkach zdarzenia są <xref:System.Windows.ContentElement> kierowane do zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-109">In many cases, the <xref:System.Windows.ContentElement> events are routed events.</span></span> <span data-ttu-id="a0fdb-110">W niektórych przypadkach zdarzenia kierowane mają zarówno tunelowanie, jak i Propagacja strategii routingu, wywoływane jako oddzielne zdarzenia w odpowiedzi na ten sam stan lub warunek.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-110">In some cases, routed events have both tunneling and bubbling routing strategies, raised as separate events in response to the same state or condition.</span></span> <span data-ttu-id="a0fdb-111">Ponadto definiuje <xref:System.Windows.ContentElement> [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] , które mogą zgłaszać zdarzenia kierowane i które mogą dodawać lub usuwać programy obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-111">Also, <xref:System.Windows.ContentElement> defines [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] that can raise routed events and that can add or remove handlers to events.</span></span>  
  
 <span data-ttu-id="a0fdb-112"><xref:System.Windows.ContentElement>udostępnia wiele wspólnych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] z <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-112"><xref:System.Windows.ContentElement> shares many common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] with <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="a0fdb-113">Te typowe [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] nie pochodzą z dziedziczenia klasy udostępnionej.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-113">These common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] do not come from a shared class inheritance.</span></span> <span data-ttu-id="a0fdb-114">Jednak współużytkują wspólne nazewnictwo, podobne zachowanie i podobną wewnętrzną [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] implementację w każdej klasie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-114">But they do share common naming, similar behavior, and similar internal implementation of [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in each class.</span></span> <span data-ttu-id="a0fdb-115">Podobieństwo wynika z <xref:System.Windows.ContentElement> faktu <xref:System.Windows.UIElement> , że są to wszystkie klasy, które są elementami podstawowymi, chociaż każdy z nich ma różne intencje związane z zachowaniem modelu obiektu znaczników.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-115">The similarity is because <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are each classes that are an element base, although each has different intentions for its markup object model behavior.</span></span>  
  
 <span data-ttu-id="a0fdb-116">W szczególności, <xref:System.Windows.UIElement> od <xref:System.Windows.Media.Visual>, który zapewnia obsługę <xref:System.Windows.ContentElement> grafiki na niższym poziomie na potrzeby renderowania w prostokątnym regionie w ramach okna złożonego, podczas gdy <xref:System.Windows.ContentElement> jest to wynikiem renderowania, aby zwiększyć koncepcję często obsługiwane są scenariusze dotyczące dokumentów, takie jak przepływ i Zawijanie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-116">In particular, <xref:System.Windows.UIElement> descends from <xref:System.Windows.Media.Visual>, which provides the lower-level graphics support for rendering a <xref:System.Windows.ContentElement> to a rectangular region within a composited window, whereas <xref:System.Windows.ContentElement> defers rendering so that concepts more common to document scenarios, such as flow and wrapping, are more easily supported.</span></span> <span data-ttu-id="a0fdb-117">Te dwie pokrewne klasy również implementują typowe interfejsy <xref:System.Windows.IInputElement> i <xref:System.Windows.Media.Animation.IAnimatable>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-117">These two related classes also implement the common interfaces <xref:System.Windows.IInputElement> and <xref:System.Windows.Media.Animation.IAnimatable>.</span></span>  

 ## <a name="notes-to-inheritors"></a><span data-ttu-id="a0fdb-118">Uwagi dotyczące dziedziczenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-118">Notes to inheritors</span></span>

 <span data-ttu-id="a0fdb-119"><xref:System.Windows.ContentElement> Klasa nie definiuje jeszcze wszystkich aspektów kompletnego elementu zawartości dla prezentacji w stylu przepływu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-119">The <xref:System.Windows.ContentElement> class does not yet define all aspects of a complete content element for flow-style presentation.</span></span> <span data-ttu-id="a0fdb-120"><xref:System.Windows.FrameworkContentElement>jest bezpośrednio pochodną klasą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-120"><xref:System.Windows.FrameworkContentElement> is an immediately derived class of <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="a0fdb-121"><xref:System.Windows.FrameworkContentElement>zawiera pełniejszy zbiór dodatkowych elementów członkowskich, które obsługują renderowanie <xref:System.Windows.FrameworkContentElement> w obrębie hosta zawartości i korzystanie z systemu układu platformy WPF Framework.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-121"><xref:System.Windows.FrameworkContentElement> includes a more complete set of additional members that support rendering a <xref:System.Windows.FrameworkContentElement> within a content host and using the WPF framework-level layout system.</span></span>

 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ContentElement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-122">Initializes a new instance of the <see cref="T:System.Windows.ContentElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0fdb-123">Dodaje procedurę obsługi zdarzeń kierowanych dla określonego zdarzenia kierowanego, dodając procedurę obsługi do kolekcji programu obsługi w bieżącym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-123">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="a0fdb-124">Identyfikator dla zdarzenia kierowanego, które ma być obsłużone.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-124">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="a0fdb-125">Odwołanie do implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-125">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="a0fdb-126">Dodaje procedurę obsługi zdarzeń kierowanych dla określonego zdarzenia kierowanego, dodając procedurę obsługi do kolekcji programu obsługi w bieżącym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-126">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-127">Można dodać tę samą procedurę obsługi dla tego samego zdarzenia wiele razy, nie wywołując wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-127">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="a0fdb-128">Jednakże procedura obsługi jest wywoływana wielokrotnie, gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-128">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="a0fdb-129">W związku z tym należy wziąć pod uwagę, jak takie zachowanie może mieć skutki uboczne, które należy uwzględnić w implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-129">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-130">Ta metoda służy zwykle do zapewnienia implementacji metody dostępu "Add" dla [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorca dostępu do zdarzenia niestandardowego zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-130">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="a0fdb-131">Identyfikator dla zdarzenia kierowanego, które ma być obsłużone.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-131">An identifier for the.routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="a0fdb-132">Odwołanie do implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-132">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="a0fdb-133"><see langword="true" />zarejestrowanie procedury obsługi w taki sposób, aby była wywoływana nawet wtedy, gdy zdarzenie trasowane jest oznaczone jako obsługiwane w danych zdarzenia. <see langword="false" /> w celu zarejestrowania programu obsługi z domyślnym warunkiem, że nie będzie on wywoływany, jeśli zdarzenie trasowane zostało już oznaczone jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-133"><see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="a0fdb-134">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-134">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="a0fdb-135">Nie należy rutynowo monitować o obsługę zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-135">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="a0fdb-136">Dodaje procedurę obsługi zdarzeń kierowanych dla określonego zdarzenia kierowanego, dodając procedurę obsługi do kolekcji programu obsługi w bieżącym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="a0fdb-137">Określ <paramref name="handledEventsToo" /> ,<see langword="true" /> że mają być wywoływane dostarczone procedury obsługi dla zdarzenia kierowanego, które zostało już oznaczone jako obsługiwane przez inny element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-137">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-138">Przetwarzanie zdarzeń wejściowych niskiego poziomu w praktyce jest złożonym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-138">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="a0fdb-139">Wiele formantów implementuje zachowanie w przypadku, gdy określone zdarzenie jest oznaczone jako obsłużone i jest zastępowane przez inne bardziej intuicyjne zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-139">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="a0fdb-140">Ogólnie rzecz biorąc, kontrolka spowoduje oznaczenie zdarzenia wejściowego platformy jako obsługiwanego, jeśli istnieje pewien zamiar projektu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-140">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="a0fdb-141">W niektórych scenariuszach te operacje związane z projektowaniem mogą nie być określone w wymaganiu dla zdarzenia wejściowego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-141">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="a0fdb-142">Jest to konieczne w przypadku takich scenariuszy, które rejestrują `true` programy obsługi zgodnie z `handledEventsToo` oczekiwaniami.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-142">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="a0fdb-143">Nie należy jednak wykonywać tej procedury.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-143">But you should not do this routinely.</span></span> <span data-ttu-id="a0fdb-144">Wywoływanie programów obsługi w odpowiedzi na wszystkie zdarzenia, nawet jeśli są obsługiwane, będzie komplikuje swoją logikę przetwarzania zdarzeń aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-144">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="a0fdb-145">Jeśli logika obsługi jest istotna, może pojawić się spadek wydajności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-145">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="a0fdb-146">Należy zastrzec użycie dołączanych programów obsługi dla już obsłużonych zdarzeń, które są już wykryte podczas procesu tworzenia, które niektóre kontrolki obsługują zdarzenia, które nadal mają być obsługiwane przez logikę aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-146">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="a0fdb-147">Inną techniką w celu uniknięcia zachowania klas dla niektórych kombinacji kontroli zdarzeń jest użycie wersji zapoznawczej tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-147">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="a0fdb-148">Na przykład jeśli <xref:System.Windows.ContentElement.MouseLeftButtonDown> jest oznaczone jako obsługiwane przez obsługę klasy, można <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zamiast tego dodać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-148">For example, if <xref:System.Windows.ContentElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="a0fdb-149">Można dodać tę samą procedurę obsługi dla tego samego zdarzenia wiele razy, nie wywołując wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-149">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="a0fdb-150">Jednakże procedura obsługi jest wywoływana wielokrotnie, gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-150">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="a0fdb-151">W związku z tym należy wziąć pod uwagę, jak takie zachowanie może mieć skutki uboczne, które należy uwzględnić w implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-151">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-152">Ta metoda służy zwykle do zapewnienia implementacji metody dostępu "Add" dla [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorca dostępu do zdarzenia niestandardowego zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-152">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fdb-153">Poniższy przykład implementuje procedurę obsługi wywołaną na <xref:System.Windows.FrameworkElement.Initialized> zdarzeniu na stronie, która dołącza zdefiniowany program obsługi do jednego z nazwanych elementów na stronie przy użyciu. `handledEventsToo` `true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-153">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="a0fdb-154">Ta procedura obsługi zostanie wywołana nawet wtedy, gdy inny element wzdłuż trasy oznaczył dane zdarzenia udostępnionego jako obsłużone przed osiągnięciem elementu obsługi w marszrucie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-154">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="a0fdb-155">Trasa zdarzenia, do której są dodawane programy obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-155">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="a0fdb-156">Dane zdarzenia, które są używane do dodawania programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-156">The event data that is used to add the handlers.</span></span> <span data-ttu-id="a0fdb-157">Ta metoda używa <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> Właściwości argumentów do tworzenia programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-157">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the arguments to create the handlers.</span></span></param>
        <summary><span data-ttu-id="a0fdb-158">Dodaje programy obsługi do określonego <see cref="T:System.Windows.EventRoute" /> dla bieżącej <see cref="T:System.Windows.ContentElement" /> kolekcji programu obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-158">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.ContentElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-159">Użyj tej metody dla elementów hosta zawartości (niezależnie od tego, czy <xref:System.Windows.IContentHost>implementują), aby dodać programy obsługi dla elementów podrzędnych hosta zawartości do hosta <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-159">Use this method for content host elements (regardless whether they implement <xref:System.Windows.IContentHost>) in order to add handlers for the content host child elements to the host <xref:System.Windows.EventRoute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.ContentElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-160">Pobiera lub ustawia wartość wskazującą, czy ten element może być używany jako element docelowy operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-160">Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="a0fdb-161"><see langword="true" />Jeśli ten element może być używany jako element docelowy operacji przeciągania i upuszczania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-161"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-162">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-162">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-163">Operacje przeciągania i upuszczania nie są domyślnie włączone i muszą być obsługiwane celowo przez ustawienie <xref:System.Windows.ContentElement.AllowDrop%2A>. `true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-163">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.ContentElement.AllowDrop%2A> to  `true`.</span></span> <span data-ttu-id="a0fdb-164">Poza tym ustawieniem podstawowym zachowanie funkcji przeciągania i upuszczania jest całkowicie specyficzne dla implementacji i nie jest zdefiniowane przez <xref:System.Windows.ContentElement> ani w żadnej innej klasie elementu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-164">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.ContentElement> or any other base element class.</span></span> <span data-ttu-id="a0fdb-165">Niektóre kontrolki, na przykład <xref:System.Windows.Controls.RichTextBox>, mają zachowanie domyślne, ale żadna <xref:System.Windows.ContentElement> Klasa pochodna nie ma takiego zachowania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-165">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior, but no <xref:System.Windows.ContentElement> derived classes have such a behavior.</span></span> <span data-ttu-id="a0fdb-166">Aby uzyskać więcej informacji na temat przeciągania i upuszczania, zobacz [Omówienie przeciągania i upuszczania](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-166">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="a0fdb-167"><xref:System.Windows.FrameworkContentElement>przesłania metadane dla tej właściwości zależności w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-167"><xref:System.Windows.FrameworkContentElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="a0fdb-168">W celu <xref:System.Windows.FrameworkContentElement> wyznaczenia, że ta właściwość zezwala na dziedziczenie<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> wartości `true` właściwości (jest w metadanych).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-168">Specifically, <xref:System.Windows.FrameworkContentElement> designates that this property allows property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="a0fdb-169">Dziedziczenie wartości właściwości w tym kontekście oznacza, że jeśli istnieją elementy podrzędne bez żadnej innej wartości <xref:System.Windows.ContentElement.AllowDrop%2A> dla przypisanych za pośrednictwem wartości lokalnych lub stylów, wartość najbliższego nadrzędnego elementu z tą wartością przypisaną (ponownie w stylach domyślnie wartości lub wartość lokalna), a następnie wartość z tego elementu nadrzędnego jest przypisywana do wszystkich nieprzypisanych elementów podrzędnych przez system właściwości.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-169">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.ContentElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from that parent element is assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="a0fdb-170">Oznacza to, że można określić, czy zezwolić na upuszczanie operacji w elemencie głównym, a następnie propagować wartość do <xref:System.Windows.FrameworkContentElement> wszystkich elementów podrzędnych, które nie przypisały do nich `false`wartości.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-170">This means that you can specify whether to allow drop operations at the root element and then propagate the value to all <xref:System.Windows.FrameworkContentElement> child elements that have not specifically assigned it a value of `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-171">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-171">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-172">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-172">Identifier field</span></span>|<xref:System.Windows.ContentElement.AllowDropProperty>|  
|<span data-ttu-id="a0fdb-173">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-173">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-174">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-174">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a0fdb-175">Poniższy przykład ustawia <xref:System.Windows.ContentElement.AllowDrop%2A> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a0fdb-175">The following example sets <xref:System.Windows.ContentElement.AllowDrop%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#AllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#allowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-176">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.AllowDrop" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-176">Identifies the <see cref="P:System.Windows.ContentElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0fdb-177">Stosuje animację do określonej właściwości zależności w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-177">Applies an animation to a specified dependency property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="a0fdb-178">Identyfikator właściwości do animacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-178">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="a0fdb-179">Zegar animacji, który kontroluje i deklaruje animację.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-179">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="a0fdb-180">Stosuje animację do określonej właściwości zależności w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-180">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="a0fdb-181">Wszystkie istniejące animacje zostaną zatrzymane i zastąpione nową animacją.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-181">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-182">Aby usunąć animację z właściwości, należy określić identyfikator dla tej właściwości `dp` , a następnie określić `clock` jako. `null`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-182">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="a0fdb-183">Spowoduje to usunięcie animacji, a właściwość animowana ma ustawioną wartość bazową.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-183">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="a0fdb-184">Pierwotnie skojarzony zegar animacji nie jest jednak zatrzymywany.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-184">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="a0fdb-185">Wszystkie inne animacje przypisane do tego zegara będą nadal działać.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-185">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="a0fdb-186">Właściwość do animacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-186">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="a0fdb-187">Zegar animacji, który kontroluje i deklaruje animację.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-187">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="a0fdb-188">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-188">A value of the enumeration.</span></span> <span data-ttu-id="a0fdb-189">Wartość domyślna to <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, co spowoduje zatrzymanie wszelkich istniejących animacji i zamienienie na nowe.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-189">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="a0fdb-190">Stosuje animację do określonej właściwości zależności tego elementu, z możliwością określenia, co się stanie, jeśli właściwość ma już uruchomioną animację.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-190">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-191">Aby usunąć animację z właściwości, należy określić identyfikator dla tej właściwości `dp` , a następnie określić `clock` jako. `null`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-191">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="a0fdb-192">Spowoduje to usunięcie animacji, a właściwość animowana ma ustawioną wartość bazową.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-192">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="a0fdb-193">Pierwotnie skojarzony zegar animacji nie jest jednak zatrzymywany.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-193">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="a0fdb-194">Wszystkie inne animacje przypisane do tego zegara będą nadal działać.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-194">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-195">Pobiera wartość wskazującą, czy do tego elementu jest przechwytywany co najmniej jeden element dotykowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-195">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="a0fdb-196"><see langword="true" />w przypadku przechwycenia co najmniej jednej dotyku do tego elementu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-196"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-197">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-197">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-198">Pobiera wartość wskazującą, czy co najmniej jedna dotknięcie jest przechwytywana do tego elementu lub do żadnych elementów podrzędnych w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-198">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="a0fdb-199"><see langword="true" />Jeśli co najmniej jedna dotknięcie jest przechwytywana do tego elementu lub dowolnego elementu podrzędnego w jego drzewie wizualnym; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-199"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-200">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-200">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-201">Pobiera wartość wskazującą, czy dla tego elementu zostanie naciśnięta co najmniej jedna dotknięcie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-201">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="a0fdb-202"><see langword="true" />w przypadku naciśnięcia co najmniej jednego dotknięcia tego elementu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-202"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-203">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-203">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-204">Pobiera wartość wskazującą, czy co najmniej jedna dotknięcie jest wciśnięta nad tym elementem lub wszelkimi elementami podrzędnymi w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-204">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="a0fdb-205"><see langword="true" />Jeśli co najmniej jedna dotknięcie jest wciśnięta nad tym elementem lub wszelkimi elementami podrzędnymi w jego drzewie wizualnym; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-205"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-206">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-206">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0fdb-207">Uruchamia animację dla określonej animowanej właściwości w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-207">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="a0fdb-208">Właściwość do animacji, która jest określona jako identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-208">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="a0fdb-209">Oś czasu animacji, która ma zostać uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-209">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="a0fdb-210">Uruchamia animację dla określonej animowanej właściwości w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-210">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-211">Podczas sprawdzania, czy właściwość jest animowana, należy zauważyć, że animacja zacznie działać i będzie traktowana jako animowana, gdy zostanie wyrenderowana pierwsza ramka poza nieanimowanym punktem początkowym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-211">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="a0fdb-212"><xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> Jeśli`animation` jest ,`null`wówczas wszystkie bieżące animacje są usuwane i bieżąca wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-212">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="a0fdb-213">Jeśli cała `animation` wartość to `null`, wszystkie animacje są usuwane z właściwości, a wartość właściwości przywraca jej wartość bazową.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-213">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="a0fdb-214">Pierwotnie skojarzona oś czasu animacji nie jest jednak zatrzymywana.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-214">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="a0fdb-215">Wszystkie inne animacje przypisane do tej osi czasu będą nadal działać.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-215">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="a0fdb-216">Właściwość do animacji, która jest określona jako identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-216">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="a0fdb-217">Oś czasu animacji, która ma zostać zastosowana.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-217">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="a0fdb-218">Wartość wyliczenia określająca sposób interakcji nowej animacji z dowolnym bieżącym (uruchomionym) animacjami, które mają już wpływ na wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-218">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="a0fdb-219">Uruchamia konkretną animację dla określonej animowanej właściwości w tym elemencie z opcją określenia, co się stanie, jeśli właściwość ma już uruchomioną animację.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-219">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-220">Podczas sprawdzania, czy właściwość jest animowana, należy zauważyć, że animacja zacznie działać i będzie traktowana jako animowana, gdy zostanie wyrenderowana pierwsza ramka poza nieanimowanym punktem początkowym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-220">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="a0fdb-221"><xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> Jeśli`animation` jest ,`null`wówczas wszystkie bieżące animacje są usuwane i bieżąca wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-221">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="a0fdb-222">Jeśli cała `animation` wartość to `null`, wszystkie animacje są usuwane z właściwości, a wartość właściwości przywraca jej wartość bazową.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-222">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="a0fdb-223">Pierwotnie skojarzona oś czasu animacji nie jest jednak zatrzymywana.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-223">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="a0fdb-224">Wszystkie inne animacje przypisane do tej osi czasu będą nadal działać.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-224">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="contentElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-225">Próbuje wymusić przechwycenie wskaźnika myszy do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-225">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-226"><see langword="true" />Jeśli mysz została przechwycona pomyślnie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-226"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-227">Aby można było przechwycić element, musi on być włączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-227">To be captured, an element must be enabled.</span></span> <span data-ttu-id="a0fdb-228">Sprawdź, <xref:System.Windows.ContentElement.IsEnabled%2A> czy `true` przed wywołaniem <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-228">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="a0fdb-229">W <xref:System.Windows.ContentElement.CaptureMouse%2A> `true` `true`przypadku wywołania zwrotnego jest również. <xref:System.Windows.ContentElement.IsMouseCaptured%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-229">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.ContentElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="a0fdb-230">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureMouse%2A> zwrotne zwraca `true`, <xref:System.Windows.ContentElement.GotMouseCapture> zdarzenia <xref:System.Windows.ContentElement.IsMouseCapturedChanged> i są wywoływane, <xref:System.Windows.ContentElement.CaptureMouse%2A> z <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> w przypadku danych zdarzenia raportowanych jako element, w którym wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-230">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotMouseCapture> and <xref:System.Windows.ContentElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.ContentElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="a0fdb-231">Jeśli wymusisz przechwytywanie, możesz zakłócać istniejące przechwycenia — szczególnie w przypadku przechwytywania, które odnoszą się do przeciągania i upuszczania za pomocą myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-231">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="a0fdb-232">Aby wyczyścić funkcję przechwytywania myszy ze wszystkich elementów, <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> należy wywołać `element` polecenie z parametrem dostarczonym jako `null`.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-232">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fdb-233">Poniższy przykład przechwytuje funkcję przechwytywania myszą lub wydaniami, w zależności od tego, czy mysz jest już przechwycona przez element.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-233">The following example captures the mouse or releases capture, based on whether the mouse is already captured by the element.</span></span> <span data-ttu-id="a0fdb-234">Należy zauważyć, że w tym przykładzie rzutowanie potencjalnego elementu docelowego przechwytywania <xref:System.Windows.IInputElement> na interfejs i w ten sposób początkowo <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> wywołuje metodę.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-234">Note that this example casts the prospective capture target element to the <xref:System.Windows.IInputElement> interface, and is thus initially calling the <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a0fdb-235">Rzutowanie <xref:System.Windows.IInputElement> na to technika, która jest przydatna, jeśli nie masz pewności, czy element, który ma być przechwycony, <xref:System.Windows.UIElement> jest myszą lub <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-235">Casting to <xref:System.Windows.IInputElement> is a technique that is useful if you are unsure whether the element you want to have capture the mouse is a <xref:System.Windows.UIElement> or a <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="a0fdb-236">Rzutowanie interfejsu i wywołanie metody interfejsu następnie wywołuje odpowiednią implementację CaptureMouse specyficzną dla określonego typu, bez konieczności rzutowania wersji próbnej <xref:System.Windows.ContentElement>na <xref:System.Windows.UIElement> lub.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-236">The interface cast and the interface method call then calls the appropriate type-specific CaptureMouse implementation internally without requiring a trial cast to either <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="a0fdb-237">Ta sama technika rzutowania działa dla innych członków <xref:System.Windows.IInputElement> , którzy definiują wiele zdarzeń związanych z danymi wejściowymi i innych metod związanych z danymi wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-237">This same casting technique works for other members that <xref:System.Windows.IInputElement> defines, for instance many of the input-related events, and other input-related methods.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="contentElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-238">Próbuje wymusić przechwycenie pióra do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-238">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-239"><see langword="true" />Jeśli pióro zostało pomyślnie przechwycone; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-239"><see langword="true" /> if the stylus is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-240">Domyślna implementacja oparta na podstawowym domyślnym urządzeniu pisakowym zawsze zwraca wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-240">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="a0fdb-241">Jeśli jednak rozszerzasz urządzenia wejściowe, które zapewniają implementację urządzenia dla systemu wejściowego, można utworzyć system z alternatywną implementacją urządzenia pióra, która może zwracać różne wyniki.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-241">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="a0fdb-242">Gdy element przechwytuje pióro, otrzymuje dane wejściowe pióra, nawet jeśli pióro znajduje się poza granicami.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-242">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="a0fdb-243">Pióro jest zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-243">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="a0fdb-244">Wywołanie tej metody wywołuje podstawową metodę <xref:System.Windows.Input.Stylus> <xref:System.Windows.Input.Stylus.Capture%2A>statyczną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-244">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="a0fdb-245">Rzeczywiste zachowanie przechwytywania jest implementowane przez aktywną implementację urządzenia pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-245">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-246">Aby można było przechwycić element, musi on być włączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-246">To be captured, an element must be enabled.</span></span> <span data-ttu-id="a0fdb-247">Sprawdź, <xref:System.Windows.ContentElement.IsEnabled%2A> czy `true` przed wywołaniem <xref:System.Windows.ContentElement.CaptureStylus%2A>zostanie zwrócone.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-247">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="a0fdb-248">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureStylus%2A> zwrotne `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> jest `true`również.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-248">If calling <xref:System.Windows.ContentElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="a0fdb-249">Urządzenie do przechwycenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-249">The device to capture.</span></span></param>
        <summary><span data-ttu-id="a0fdb-250">Podejmuje próbę wymuszenia przechwycenia dotyku do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-250">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-251"><see langword="true" />Jeśli określony tryb dotyku jest przechwytywany do tego elementu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-251"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-252"><xref:System.Windows.ContentElement.CaptureTouch%2A>zwraca `false` ,<xref:System.Windows.Input.TouchDevice> jeśli jest aktualnie przechwytywany do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-252"><xref:System.Windows.ContentElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="a0fdb-253">Jeśli <xref:System.Windows.ContentElement.CaptureTouch%2A> zwraca `true` ,<xref:System.Windows.ContentElement.GotTouchCapture> to zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-253">If <xref:System.Windows.ContentElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="a0fdb-254">Aby zwolnić przechwycenie jednego dotknięcia z tego elementu, użyj <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> metody i określ urządzenie dotykowe do wydania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-254">To release capture of a single touch from this element, use the <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="a0fdb-255">Aby wypróbować wszystkie dotknięcia tego elementu, użyj <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-255">To release all touches from this element, use the <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a0fdb-256"><paramref name="touchDevice" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-256"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.ContentElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-257">Pobiera kolekcję <see cref="T:System.Windows.Input.CommandBinding" /> obiektów, które są skojarzone z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-257">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="a0fdb-258">Kolekcja wszystkich <see cref="T:System.Windows.Input.CommandBinding" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-258">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-259">A <xref:System.Windows.Input.CommandBinding> umożliwia obsługę poleceń dla określonego polecenia dla tego elementu i deklaruje połączenie między poleceniem, jego zdarzeniami i procedurami obsługi, które są dołączone do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-259">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element and declares the linkage between a command, its events, and the handlers that are attached by this element.</span></span>  
  
 <span data-ttu-id="a0fdb-260">Innym typowym sposobem wypełnienia <xref:System.Windows.ContentElement.CommandBindings%2A> kolekcji jest użycie <xref:System.Windows.Input.CommandManager> metod programistycznie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-260">Another typical way to populate the <xref:System.Windows.ContentElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="a0fdb-261">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="a0fdb-261">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a0fdb-262">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="a0fdb-262">XAML Values</span></span>  
 <span data-ttu-id="a0fdb-263">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="a0fdb-263">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="a0fdb-264">Co najmniej jeden element. <xref:System.Windows.Input.CommandBinding></span><span class="sxs-lookup"><span data-stu-id="a0fdb-264">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="a0fdb-265">Każdy z tych elementów powinien mieć <xref:System.Windows.Input.CommandBinding.Command%2A> atrybut ustawiony na znane polecenie i atrybuty ustawione <xref:System.Windows.Input.CommandBinding.CanExecute> dla implementacji obsługi i <xref:System.Windows.Input.CommandBinding.Executed> .</span><span class="sxs-lookup"><span data-stu-id="a0fdb-265">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="a0fdb-266">Aby uzyskać więcej informacji <xref:System.Windows.Input.CommandBinding>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-266">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-267">Występuje, gdy system wejściowy zgłosi bazowe zdarzenie przeciągania z tym elementem jako element docelowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-267">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-268">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-268">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-269">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.DragEnter> zdarzenia są dołączone do <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-269">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-270">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-270">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-271">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-271">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragEnterEvent>|  
|<span data-ttu-id="a0fdb-272">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-272">Routing strategy</span></span>|<span data-ttu-id="a0fdb-273">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-273">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-274">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-274">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a0fdb-275">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-275">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="a0fdb-276">Przesłoń <xref:System.Windows.ContentElement.OnDragEnter%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-276">Override <xref:System.Windows.ContentElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-277">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.DragEnter" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-277">Identifies the <see cref="E:System.Windows.ContentElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-278">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-278">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-279">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-279">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-280">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-280">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-281">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-281">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-282">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-282">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-283">Występuje, gdy system wejściowy zgłosi bazowe zdarzenie przeciągania przy użyciu tego elementu jako punktu początkowego przeciągania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-283">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-284">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, tak, że <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> jest częścią listy składowych klasy <xref:System.Windows.ContentElement> , gdy jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-284">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-285">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.DragLeave> zdarzenia są dołączone do <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-285">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-286">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-286">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-287">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-287">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragLeaveEvent>|  
|<span data-ttu-id="a0fdb-288">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-288">Routing strategy</span></span>|<span data-ttu-id="a0fdb-289">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-289">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-290">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-290">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a0fdb-291">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-291">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="a0fdb-292">Przesłoń <xref:System.Windows.ContentElement.OnDragLeave%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-292">Override <xref:System.Windows.ContentElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-293">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.DragLeave" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-293">Identifies the <see cref="E:System.Windows.ContentElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-294">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-294">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-295">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-295">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-296">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-296">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-297">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-297">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-298">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-298">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-299">Występuje, gdy system wejściowy zgłosi bazowe zdarzenie przeciągania z tym elementem jako potencjalną tarczą docelową.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-299">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-300">To zdarzenie występuje nawet wtedy, gdy przeciąganie pochodzi z granicy elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-300">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="a0fdb-301">Jeśli przeciągnięcie rozpocznie się poza granicami, a następnie przenosi wewnątrz, to zdarzenie jest również zgłaszane, <xref:System.Windows.ContentElement.DragEnter> a także powiązane zdarzenia w wersji zapoznawczej.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-301">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.ContentElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="a0fdb-302">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, tak, że <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> jest częścią listy składowych klasy <xref:System.Windows.ContentElement> , gdy jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-302">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-303">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.DragOver> zdarzenia są dołączone do <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-303">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-304">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-304">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-305">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-305">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragOverEvent>|  
|<span data-ttu-id="a0fdb-306">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-306">Routing strategy</span></span>|<span data-ttu-id="a0fdb-307">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-307">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-308">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-308">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a0fdb-309">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-309">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="a0fdb-310">Przesłoń <xref:System.Windows.ContentElement.OnDragOver%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-310">Override <xref:System.Windows.ContentElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-311">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.DragOver" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-311">Identifies the <see cref="E:System.Windows.ContentElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-312">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-312">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-313">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-313">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-314">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-314">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-315">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-315">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-316">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-316">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-317">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tym elementem jako element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-317">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-318">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, tak, że <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> jest częścią listy składowych klasy <xref:System.Windows.ContentElement> , gdy jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-318">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-319">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.Drop> zdarzenia są dołączone do <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-319">Event handlers that are attached to the <xref:System.Windows.ContentElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-320">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-320">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-321">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-321">Identifier field</span></span>|<xref:System.Windows.ContentElement.DropEvent>|  
|<span data-ttu-id="a0fdb-322">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-322">Routing strategy</span></span>|<span data-ttu-id="a0fdb-323">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-323">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-324">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-324">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a0fdb-325">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-325">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="a0fdb-326">Przesłoń <xref:System.Windows.ContentElement.OnDrop%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-326">Override <xref:System.Windows.ContentElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-327">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.Drop" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-327">Identifies the <see cref="E:System.Windows.ContentElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-328">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-328">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-329">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-329">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-330">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-330">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-331">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-331">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-332">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-332">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="contentElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-333">Próbuje ustawić fokus na tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-333">Attempts to set focus to this element.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-334"><see langword="true" />Jeśli fokus klawiatury można ustawić na ten element; <see langword="false" /> Jeśli to wywołanie metody nie wymusi fokusu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-334"><see langword="true" /> if keyboard focus could be set to this element; <see langword="false" /> if this method call did not force focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-335">Aby można było skupić <xref:System.Windows.ContentElement.Focusable%2A> się i <xref:System.Windows.ContentElement.IsEnabled%2A> oba muszą być. `true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-335">To be focusable, <xref:System.Windows.ContentElement.Focusable%2A> and <xref:System.Windows.ContentElement.IsEnabled%2A> must both be `true`.</span></span> <span data-ttu-id="a0fdb-336">Należy zauważyć, że <xref:System.Windows.ContentElement> niemal wszystkie klasy pochodne <xref:System.Windows.ContentElement.Focusable%2A> nie są domyślnie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-336">Note that nearly all <xref:System.Windows.ContentElement> derived classes are not <xref:System.Windows.ContentElement.Focusable%2A> by default.</span></span>  
  
 <span data-ttu-id="a0fdb-337">Nawet jeśli element jest skoncentrowany i włączony, obsługa zdarzeń w ramach określonego drzewa (na przykład w przypadku kontrolki złożonej) może reagować na zdarzenia fokusu w wersji zapoznawczej, przez co nie pozwala na skoncentrowanie `false`się na tym metodzie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-337">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="a0fdb-338">Na ogół ukierunkowane są dwie oddzielne koncepcje: fokus klawiatury i fokus logiczny, które nie zawsze są identyczne.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-338">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="a0fdb-339">Ta metoda ustawia fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-339">This method sets the logical focus.</span></span> <span data-ttu-id="a0fdb-340">Nie ma możliwości programowania, aby ustawić fokus klawiatury w szczególny sposób; fokus klawiatury jest określany przez dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-340">There is no programmatic means to set keyboard focus specifically; keyboard focus is determined by user input.</span></span> <span data-ttu-id="a0fdb-341">Aby uzyskać więcej informacji, zobacz temat [Omówienie koncentracji](~/docs/framework/wpf/advanced/focus-overview.md) i [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-341">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a0fdb-342">Jeśli wywołanie <xref:System.Windows.ContentElement.Focus%2A> zwraca `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> i jest<xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> również .`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-342">If calling <xref:System.Windows.ContentElement.Focus%2A> returns `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> and <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="a0fdb-343">Jeśli powiązane właściwości nie `true`są jeszcze, podczas wywołania <xref:System.Windows.ContentElement.Focus%2A>, co najmniej jedno z następujących zdarzeń jest zgłaszane w następującej kolejności: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (Źródło jest nowym obiektem docelowym fokusu) <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>,,, <xref:System.Windows.ContentElement.LostKeyboardFocus> ,<xref:System.Windows.ContentElement.GotKeyboardFocus> (Źródło jest nowym elementem docelowym fokusu).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-343">If the related properties are not already `true`, when you call <xref:System.Windows.ContentElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fdb-344">Poniższy przykład to procedura obsługi zdarzeń załadowanej przez stronę, która znajduje określony nazwany akapit w dokumencie i ustawia fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-344">The following example is a page-loaded event handler that finds a specified named paragraph in the document and sets focus to it.</span></span> <span data-ttu-id="a0fdb-345">Akapity nie mają domyślnego fokusu. w tym konkretnym akapicie zastosowano styl (niepokazywany), który <xref:System.Windows.Setter> używał stylu, aby można było skupić się na nim.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-345">Paragraphs are not focusable by default; this particular paragraph had a style applied (not shown) that used a style <xref:System.Windows.Setter> to make it focusable.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#Focus](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#focus)]
 [!code-vb[ContentElementsSmorgasbord#Focus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#focus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.ContentElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-346">Pobiera lub ustawia wartość wskazującą, czy element może odebrać fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-346">Gets or sets a value that indicates whether the element can receive focus.</span></span></summary>
        <value><span data-ttu-id="a0fdb-347"><see langword="true" />Jeśli element jest skoncentrowany; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-347"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-348">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-348">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-349">Tylko element skoncentrowany otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-349">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="a0fdb-350">Niektóre klasy pochodne mogą przesłaniać metadane dla tej właściwości zależności, tak aby Klasa pochodna była skoncentrowana domyślnie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-350">Certain derived classes might override metadata for this dependency property such that the derived class is focusable by default.</span></span>  
  
 <span data-ttu-id="a0fdb-351">W przypadku dziedziczenia przez <xref:System.Windows.Documents.Hyperlink> lub jego <xref:System.Windows.Documents.Hyperlink> klas pochodnych zastępuje metadane dla tej właściwości zależności i ponownie `true`definiuje domyślną wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-351">When inherited by <xref:System.Windows.Documents.Hyperlink> or its derived classes, <xref:System.Windows.Documents.Hyperlink> overrides the metadata for this dependency property and redefines the default value of this property to be `true`.</span></span>  
  
### <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-352">Informacje o właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-352">Dependency property information</span></span>
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-353">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-353">Identifier field</span></span>|<xref:System.Windows.ContentElement.FocusableProperty>|  
|<span data-ttu-id="a0fdb-354">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-354">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-355">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-355">None</span></span>|  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="a0fdb-356">Uwagi dotyczące dziedziczenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-356">Notes to inheritors</span></span>

<span data-ttu-id="a0fdb-357">Gdy pochodzą z <xref:System.Windows.ContentElement>, rozważ, czy chcesz, aby element miał fokus, ponieważ domyślnie nie będzie można go skupić.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-357">When you derive from <xref:System.Windows.ContentElement>, consider whether you want your element to be focusable, because by default it will not be focusable.</span></span> <span data-ttu-id="a0fdb-358">Jeśli chcesz, aby element miał fokus, Zastąp metadane tej właściwości w konstruktorze statycznym klasy pochodnej w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="a0fdb-358">If you want your element to be focusable, override the metadata for this property in your derived class static constructor as follows:</span></span>  

[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)]
[!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]  
  
<span data-ttu-id="a0fdb-359">gdzie `myElement` to nazwa klasy typu, w którym jest zastępowana wartość metadanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-359">where `myElement` is the class name of the type that you are overriding the metadata value on.</span></span>
  
## Examples  
 <span data-ttu-id="a0fdb-360">W poniższym przykładzie tworzony jest styl, który sprawia <xref:System.Windows.Documents.Paragraph> , że domyślnie fokus jest wizualny, gdy odbierze fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-360">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-361">Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.ContentElement.Focusable" /> zmieniona.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-361">Occurs when the value of the <see cref="P:System.Windows.ContentElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-362">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeniem, a nie zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-362">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-363">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.Focusable" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-363">Identifies the <see cref="P:System.Windows.ContentElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="contentElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="a0fdb-364">Właściwość zależności do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-364">The.dependency property to check.</span></span></param>
        <summary><span data-ttu-id="a0fdb-365">Zwraca wartość właściwości bazowej dla określonej właściwości w tym elemencie, bez uwzględnienia ewentualnej wartości animowanej z działającej lub zatrzymanej animacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-365">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-366">Wartość właściwości, tak jakby żadne animacje nie są dołączone do określonej właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-366">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-367">Jeśli do właściwości nie są dołączone żadne animacje, <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> wartość zwracana jest zawsze identyczna <xref:System.Windows.DependencyObject.GetValue%2A> z wartością zwracaną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-367">If no animations are attached to the property, then the <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="a0fdb-368">Jeśli są dołączone animacje, wszystkie możliwe wartości pochodne animacji, w tym wartości początkowe i zatrzymania, są ignorowane, a wartość właściwości jest określana na podstawie wszystkich innych możliwych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-368">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="a0fdb-369">Aby uzyskać więcej informacji, zobacz [pierwszeństwo wartości właściwości zależności](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-369">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="contentElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-370">Gdy jest zastępowany w klasie pochodnej, zwraca alternatywny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] element nadrzędny dla tego elementu, jeśli element nadrzędny nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-370">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-371">Obiekt, jeśli implementacja klasy pochodnej ma alternatywne połączenie nadrzędne z raportem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-371">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-372">Domyślna implementacja wirtualna tej metody zwraca wartość `null`.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-372">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="a0fdb-373"><xref:System.Windows.FrameworkContentElement>zapewnia praktyczną implementację.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-373"><xref:System.Windows.FrameworkContentElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-374">Alternatywne elementy nadrzędne są używane do routingu zdarzeń, w przypadkach, gdy element tworzy alternatywną strukturę nadrzędną, dzięki czemu jego zdarzenia są kierowane w taki sposób, że są one zgodne ze standardowym wzorcem routingu drzewa wizualnego do standardowego elementu nadrzędnego lub w dół Strategia routingu w wersji zapoznawczej.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-374">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-375">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania i upuszczania, które obejmuje ten element.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-375">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-376"><xref:System.Windows.ContentElement.GiveFeedback> Zdarzenie umożliwia Źródło zdarzenia przeciągania w celu zmodyfikowania wyglądu wskaźnika myszy w celu przedstawienia wizualnej opinii użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-376">The <xref:System.Windows.ContentElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="a0fdb-377">Opinie wizualne wzmocnią, że operacja przeciągania i upuszczania jest w toku.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-377">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="a0fdb-378">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, tak, że <xref:System.Windows.ContentElement.GiveFeedback> jest częścią listy składowych klasy <xref:System.Windows.ContentElement> , gdy jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-378">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-379">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.GiveFeedback> zdarzenia są dołączone do <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-379">Event handlers that are attached to the <xref:System.Windows.ContentElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-380">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-380">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-381">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-381">Identifier field</span></span>|<xref:System.Windows.ContentElement.GiveFeedbackEvent>|  
|<span data-ttu-id="a0fdb-382">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-382">Routing strategy</span></span>|<span data-ttu-id="a0fdb-383">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-383">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-384">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-384">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="a0fdb-385">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-385">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="a0fdb-386">Przesłoń <xref:System.Windows.ContentElement.OnGiveFeedback%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-386">Override <xref:System.Windows.ContentElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-387">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.GiveFeedback" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-387">Identifies the <see cref="E:System.Windows.ContentElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-388">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-388">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-389">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-389">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-390">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-390">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-391">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-391">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-392">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-392">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-393">Występuje, gdy ten element pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-393">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-394">Fokus logiczny różni się od fokusu klawiatury, jeśli fokus jest celowo wymuszany przy użyciu wywołania metody, ale poprzedni fokus klawiatury istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-394">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="a0fdb-395">W tym scenariuszu fokus klawiatury pozostaje tam, gdzie jest, a element, <xref:System.Windows.ContentElement.Focus%2A> w którym wywoływana jest metoda nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-395">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="a0fdb-396">Bardziej precyzyjna interpretacja tego zdarzenia jest wyzwalana, gdy wartość <xref:System.Windows.ContentElement.IsFocused%2A> właściwości elementu w marszrucie jest zmieniana z `false` na `true`.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-396">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="a0fdb-397">Ponieważ to zdarzenie używa routingu propagacji, element, który otrzymuje fokus, może być elementem podrzędnym zamiast elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-397">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a0fdb-398"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź dane zdarzenia, aby określić rzeczywisty element, który zyskał fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-398">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-399">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-399">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-400">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-400">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotFocusEvent>|  
|<span data-ttu-id="a0fdb-401">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-401">Routing strategy</span></span>|<span data-ttu-id="a0fdb-402">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-402">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-403">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-403">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="a0fdb-404">Brak odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-404">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a0fdb-405">Przesłoń <xref:System.Windows.ContentElement.OnGotFocus%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-405">Override <xref:System.Windows.ContentElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-406">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.GotFocus" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-406">Identifies the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-407">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-407">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-408">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-408">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-409">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-409">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-410">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-410">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-411">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-411">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-412">Występuje, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-412">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-413"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>jest podobnym zdarzeniem, które śledzi zmiany stanu we właściwości, która zachowuje stan fokusu dla elementu; <xref:System.Windows.ContentElement.GotKeyboardFocus> zdarzenie jest zgłaszane w wielu z tych samych okoliczności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-413"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.ContentElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="a0fdb-414">Ponieważ to zdarzenie używa routingu propagacji, element, który ma fokus, może być elementem podrzędnym zamiast elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-414">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a0fdb-415"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź dane zdarzenia, aby określić rzeczywisty element, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-415">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="a0fdb-416">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, tak, że <xref:System.Windows.ContentElement.GotKeyboardFocus> jest częścią listy składowych klasy <xref:System.Windows.ContentElement> , gdy jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-416">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-417">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.GotKeyboardFocus> zdarzenia są dołączone do <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-417">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-418">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-418">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-419">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-419">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="a0fdb-420">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-420">Routing strategy</span></span>|<span data-ttu-id="a0fdb-421">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-421">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-422">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-422">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a0fdb-423">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-423">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a0fdb-424">Przesłoń <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-424">Override <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-425">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-425">Identifies the <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-426">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-426">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-427">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-427">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-428">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-428">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-429">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-429">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-430">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-430">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-431">Występuje, gdy ten element przechwytuje mysz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-431">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-432">Gdy element przechwytuje mysz, odbiera dane wejściowe za pomocą myszy, nawet jeśli wskaźnik myszy znajduje się poza granicami.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-432">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="a0fdb-433">Mysz jest zwykle przechwytywana tylko podczas operacji przeciągania i upuszczania i pozostaje przechwycona do momentu wykonania akcji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-433">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="a0fdb-434">Ponieważ to zdarzenie używa routingu propagacji, element, który ma przechwytywanie, może być elementem podrzędnym zamiast elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-434">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a0fdb-435"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź dane zdarzenia, aby określić rzeczywisty element, który ma przechwycenie myszą.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-435">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="a0fdb-436">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, tak, że <xref:System.Windows.ContentElement.GotMouseCapture> jest częścią listy składowych klasy <xref:System.Windows.ContentElement> , gdy jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-436">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.ContentElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-437">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.GotMouseCapture> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-437">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-438">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-438">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-439">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-439">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="a0fdb-440">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-440">Routing strategy</span></span>|<span data-ttu-id="a0fdb-441">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-441">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-442">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-442">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a0fdb-443">Nie zdefiniowano odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-443">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a0fdb-444">Przesłoń <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-444">Override <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-445">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-445">Identifies the <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-446">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-446">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-447">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-447">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-448">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-448">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-449">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-449">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-450">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-450">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-451">Występuje, gdy ten element przechwytuje pióro.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-451">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-452">Gdy element przechwytuje pióro, otrzymuje dane wejściowe pióra, nawet jeśli wskaźnik znajduje się poza granicami.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-452">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="a0fdb-453">Pióro jest zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania i zachowuje przechwytywanie do momentu wykonania akcji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-453">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="a0fdb-454">Ponieważ to zdarzenie używa routingu propagacji, element, który ma przechwytywanie, może być elementem podrzędnym zamiast elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-454">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a0fdb-455"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź dane zdarzenia, aby określić rzeczywisty element, który ma przechwycenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-455">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="a0fdb-456">To zdarzenie tworzy alias dla dołączonego zdarzenia dla tej klasy, tak, <xref:System.Windows.ContentElement.GotStylusCapture> że jest częścią listy składowych klasy <xref:System.Windows.ContentElement> , gdy jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-456">This event creates an alias for the  attached event for this class so that <xref:System.Windows.ContentElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-457">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.GotStylusCapture> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-457">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-458">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-458">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-459">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-459">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="a0fdb-460">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-460">Routing strategy</span></span>|<span data-ttu-id="a0fdb-461">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-461">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-462">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-462">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-463">Nie zdefiniowano odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-463">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a0fdb-464">Przesłoń <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-464">Override <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-465">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-465">Identifies the <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-466">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-466">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-467">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-467">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-468">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-468">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-469">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-469">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-470">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-470">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-471">Występuje po przechwyceniu dotyku do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-471">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-472">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-472">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-473">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-473">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="a0fdb-474">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-474">Routing strategy</span></span>|<span data-ttu-id="a0fdb-475">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-475">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-476">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-476">Delegate</span></span>|<span data-ttu-id="a0fdb-477"><xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-477"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a0fdb-478">Przesłoń <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-478">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-479">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-479">Identifies the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-480">Pobiera wartość wskazującą, czy ten element ma wszystkie animowane właściwości.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-480">Gets a value that indicates whether this element has any animated properties.</span></span></summary>
        <value><span data-ttu-id="a0fdb-481"><see langword="true" />Jeśli ten element ma animacje dołączone do którejkolwiek z jego właściwości; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-481"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-482">Ta właściwość zwraca `true` zarówno dla animacji trwałych (niezarejestrowanych, zawsze uruchomionych), jak i dla animacji, które mają określoną oś czasu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-482">This property returns `true` either for persistent (unclocked, always-running) animations or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.ContentElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-483">Pobiera kolekcję powiązań wejściowych, które są skojarzone z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-483">Gets the collection of input bindings that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="a0fdb-484">Kolekcja powiązań wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-484">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-485">Powiązania wejściowe obsługują powiązania poleceń z urządzeniami wejściowymi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-485">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="a0fdb-486">Na przykład <xref:System.Windows.Input.MouseBinding> implementuje powiązania wejściowe, które zawierają właściwości specyficzne dla urządzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-486">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are specific to mouse devices.</span></span>  
  
 <span data-ttu-id="a0fdb-487">Kolekcja powiązań wejściowych obejmuje zarówno powiązania wejściowe, które odnoszą się do typu, jak i powiązania wejściowe, które są zadeklarowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-487">The collection of input bindings includes both input bindings that pertain to the type and also input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="a0fdb-488">Powiązana właściwość <xref:System.Windows.ContentElement.CommandBindings%2A>,, utrzymuje kolekcję powiązań poleceń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-488">A related property, <xref:System.Windows.ContentElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="a0fdb-489">Te powiązania różnią się od powiązań wejściowych w tym, że przedstawiają następny poziom w dół operacji przetwarzania poleceń, które są powiązane z znanymi poleceniami i obsługiwanymi przez nie konkretnymi klasami.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-489">These bindings differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands and class-specific handlers for them.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="a0fdb-490">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="a0fdb-490">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a0fdb-491">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="a0fdb-491">XAML Values</span></span>  
 <span data-ttu-id="a0fdb-492">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="a0fdb-492">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="a0fdb-493">Co najmniej jeden <xref:System.Windows.Input.KeyBinding> <xref:System.Windows.Input.MouseBinding> element (zazwyczaj klasy pochodne lub). <xref:System.Windows.Input.InputBinding></span><span class="sxs-lookup"><span data-stu-id="a0fdb-493">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="a0fdb-494">Każdy z tych elementów powinien mieć <xref:System.Windows.Input.InputBinding.Command%2A> ustawiony atrybut i. <xref:System.Windows.Input.InputBinding.Gesture%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-494">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.ContentElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-495">Pobiera lub ustawia wartość wskazującą, czy ten element jest włączony w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a0fdb-495">Gets or sets a value that indicates whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="a0fdb-496"><see langword="true" />Jeśli element jest włączony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-496"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-497">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-497">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-498">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-498">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-499">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-499">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsEnabledProperty>|  
|<span data-ttu-id="a0fdb-500">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-500">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-501">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-501">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a0fdb-502">Poniższy przykład tworzy styl, który zawiera metodę ustawiającą właściwość, która zapewnia alternatywne zachowanie wizualizacji, <xref:System.Windows.Documents.Hyperlink> gdy właściwość jest <xref:System.Windows.ContentElement.IsEnabled%2A> ustawiona na `false`.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-502">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> is set to <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-503">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwości w tym elemencie zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-503">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-504">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeniem, a nie zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-504">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.ContentElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-505">Pobiera wartość, która staje się wartością <see cref="P:System.Windows.ContentElement.IsEnabled" /> zwracaną w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-505">Gets a value that becomes the return value of <see cref="P:System.Windows.ContentElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="a0fdb-506"><see langword="true" />Jeśli element jest włączony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-506"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## <a name="notes-to-inheritors"></a><span data-ttu-id="a0fdb-507">Uwagi dotyczące dziedziczenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-507">Notes to inheritors</span></span>

<span data-ttu-id="a0fdb-508">Domyślna implementacja tej właściwości buforuje wartość, a także oblicza, czy element nadrzędny tego elementu jest włączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-508">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="a0fdb-509">Jeśli element nadrzędny nie jest włączony, nie można skutecznie włączyć elementu podrzędnego w praktycznym interfejsie użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-509">If the parent is not enabled, the child element cannot be effectively enabled in practical user interface.</span></span> <span data-ttu-id="a0fdb-510">Jeśli zdecydujesz się zastąpić tę implementację, należy wywołać podstawową implementację, aby zachować to zachowanie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-510">If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-511">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsEnabled" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-511">Identifies the <see cref="P:System.Windows.ContentElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.ContentElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-512">Pobiera wartość określającą, czy ten element ma fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-512">Gets a value that determines whether this element has logical focus.</span></span></summary>
        <value><span data-ttu-id="a0fdb-513"><see langword="true" />Jeśli ten element ma fokus logiczny; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-513"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-514">Fokus logiczny może różnić się od fokusu klawiatury, jeśli aplikacja ma wiele podziałów fokusu, na przykład między zawartością menu a pozostałą częścią aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-514">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="a0fdb-515">W tym scenariuszu fokus klawiatury może znajdować się tylko w jednym elemencie interfejsu użytkownika aplikacji, jednak niektóre elementy w innych punktach widzenia mogą nadal utrzymywać fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-515">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="a0fdb-516">Aby uzyskać więcej informacji o koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Omówienie koncentracji uwagi](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-516">For more information on logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-517">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-517">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-518">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-518">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsFocusedProperty>|  
|<span data-ttu-id="a0fdb-519">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-519">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-520">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-520">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a0fdb-521">W poniższym przykładzie tworzony jest styl, który sprawia <xref:System.Windows.Documents.Paragraph> , że domyślnie fokus jest wizualny, gdy odbierze fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-521">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-522">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsFocused" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-522">Identifies the <see cref="P:System.Windows.ContentElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-523">Pobiera wartość wskazującą [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], czy system metody wejściowej, taki jak, jest włączony do przetwarzania danych wejściowych do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-523">Gets a value that indicates whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="a0fdb-524"><see langword="true" />Jeśli metoda wejściowa jest aktywna; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-524"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-525">Wartość domyślna źródłowej dołączonej właściwości to <see langword="true" />, jednak ta wartość ma wpływ na stan metod wejścia w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-525">The default value of the underlying attached property is <see langword="true" />; however, this value is influenced by the state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-526">Ta właściwość zwraca wartość, która jest zwracana przez załączoną Właściwość <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> dla obecnie włączonych metod wejściowych (klawiatury, mowy i innych urządzeń wejściowych).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-526">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-527">Pobiera wartość wskazującą, czy ten element ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-527">Gets a value that indicates whether this element has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="a0fdb-528"><see langword="true" />Jeśli ten element ma fokus klawiatury; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-528"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-529">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-529">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-530">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-530">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-531">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-531">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="a0fdb-532">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-532">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-533">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-533">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-534">Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> zmieniona w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-534">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-535">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeniem, a nie zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-535">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-536">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-536">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-537">Pobiera wartość wskazującą, czy fokus klawiatury jest w dowolnym miejscu elementu, czy elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-537">Gets a value that indicates whether keyboard focus is anywhere within the element or child elements.</span></span></summary>
        <value><span data-ttu-id="a0fdb-538"><see langword="true" />Jeśli fokus klawiatury znajduje się na elemencie lub jego elementach podrzędnych; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-538"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-539">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-539">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-540">Zmiany wartości tej właściwości zwykle powodują wystąpienie <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzenia, chyba że Klasa pochodna została zastąpiona <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> , aby pominąć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-540">Changes to the value of this property typically raise the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="a0fdb-541">Ta właściwość nie jest ustawiana bezpośrednio, ale można ustawić fokus na element poprzez wywołanie metody <xref:System.Windows.ContentElement.Focus%2A>lub przez <xref:System.Windows.ContentElement.MoveFocus%2A> wykonanie żądania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-541">You do not set this property directly, but you can set the focus to the element by calling <xref:System.Windows.ContentElement.Focus%2A>, or by making a <xref:System.Windows.ContentElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="a0fdb-542">Jedno z tych wywołań metod może zmienić tę wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-542">Either of these method calls might change this property value.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-543">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-543">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-544">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-544">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="a0fdb-545">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-545">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-546">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-546">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-547">Występuje, gdy wartość właściwości zostanie <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zmieniona w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-547">Occurs when the value of the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-548">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeniem, a nie zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-548">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-549">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-549">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.ContentElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-550">Pobiera wartość wskazującą, czy mysz jest przechwytywana przez ten element.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-550">Gets a value that indicates whether the mouse is captured by this element.</span></span></summary>
        <value><span data-ttu-id="a0fdb-551"><see langword="true" />Jeśli element ma przechwycenie myszy; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-551"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-552">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-552">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-553">Stan przechwytywania myszy jest związany z operacjami przeciągania i upuszczania w procesie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-553">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-554">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-554">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-555">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-555">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="a0fdb-556">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-556">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-557">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-557">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a0fdb-558">Poniższy przykład umożliwia włączenie lub wyłączenie stanu przechwytywania myszy w zależności od tego, czy mysz jest już przechwycona przez element.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-558">The following example turns the mouse capture state on or off based on whether the mouse is already captured by the element.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-559">Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> zmieniona w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-559">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-560">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeniem, a nie zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-560">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-561">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-561">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-562">Pobiera wartość określającą, czy przechwytywanie myszy jest przechowywane przez ten element, czy przez elementy podrzędne w jego drzewie elementów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-562">Gets a value that determines whether mouse capture is held by this element or by child elements in its element tree.</span></span></summary>
        <value><span data-ttu-id="a0fdb-563"><see langword="true" />Jeśli ten element lub zawarty element ma funkcję przechwytywania myszy; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-563"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-564">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-564">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-565">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-565">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-566">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-566">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="a0fdb-567">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-567">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-568">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-568">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-569">Występuje, gdy wartość <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> zmian w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-569">Occurs when the value of the <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-570">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeniem, a nie zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-570">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-571">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-571">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-572">Pobiera wartość wskazującą, czy pozycja wskaźnika myszy odnosi się do wyników testu trafień, które przynoszą do konta.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-572">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="a0fdb-573"><see langword="true" />Jeśli wskaźnik myszy znajduje się nad tym samym elementem, wynik jako test trafień; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-573"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-574">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-574">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-575">W przeciwieństwie <xref:System.Windows.ContentElement.IsMouseOver%2A>do, ta właściwość `true` jest tylko wtedy, gdy wskaźnik myszy znajduje się nad elementem literału — jako dla testu trafień.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-575">Unlike <xref:System.Windows.ContentElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="a0fdb-576">Jeśli wskaźnik myszy znajduje się nad elementem podrzędnym, w szczególności dla elementów, które są częścią bardziej szczegółowego szablonu i przedniego elementu, ta właściwość będzie `false`.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-576">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="a0fdb-577">Jeśli nie wiesz, jak kontrolka jest złożona (na przykład można użyć tej właściwości w szablonie kontrolki niestandardowej dla zdefiniowanej kontrolki), ta właściwość może zwracać nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-577">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="a0fdb-578">W przypadku większości scenariuszy, w których nie tworzysz formantów, <xref:System.Windows.ContentElement.IsMouseOver%2A> Użyj zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-578">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="a0fdb-579">Jeśli wskaźnik myszy jest przechwytywany przez ten element i ta właściwość jest `true` w czasie przechwytywania, ta właściwość będzie nadal zwracana `true` , dopóki przechwycenie myszy nie zostanie utracone i wskaźnik nie znajduje się nad jego zakresem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-579">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-580">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-580">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-581">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-581">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="a0fdb-582">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-582">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-583">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-583">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-584">Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> zmieniona w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-584">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-585">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeniem, a nie zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-585">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-586">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-586">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.ContentElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-587">Pobiera wartość wskazującą, czy wskaźnik myszy znajduje się nad tym elementem (w tym elementy potomne elementu wizualnego, czy jego składanie kontrolki).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-587">Gets a value that indicates whether the mouse pointer is located over this element (including visual child elements, or its control compositing).</span></span></summary>
        <value><span data-ttu-id="a0fdb-588"><see langword="true" />Jeśli wskaźnik myszy znajduje się nad elementem lub jego elementami podrzędnymi; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-588"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-589">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-589">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-590">Chociaż analogiczne zdarzenie "IsMouseOverChanged" nie istnieje, można wykonać kilka podobnych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-590">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="a0fdb-591">Można na przykład użyć <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, i <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-591">For example, you can use <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, and <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="a0fdb-592">Jeśli ten element przechwytuje mysz, ta właściwość `true` pozostanie do momentu utraty przechwycenia myszy, a wskaźnik myszy opuszcza granice elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-592">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-593">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-593">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-594">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-594">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseOverProperty>|  
|<span data-ttu-id="a0fdb-595">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-595">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-596">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-596">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a0fdb-597">Poniższy przykład tworzy styl zawierający metodę ustawiającą właściwość, która zapewnia alternatywne zachowanie wizualizacji podczas <xref:System.Windows.Documents.Hyperlink> raportów. <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-597">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> reports <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-598">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsMouseOver" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-598">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.ContentElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-599">Pobiera wartość wskazującą, czy pióro jest przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-599">Gets a value that indicates whether the stylus is captured to this element.</span></span></summary>
        <value><span data-ttu-id="a0fdb-600"><see langword="true" />Jeśli element ma funkcję przechwytywania pióra; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-600"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-601">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-601">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-602">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-602">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-603">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-603">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-604">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-604">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-605">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-605">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="a0fdb-606">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-606">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-607">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-607">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureStylus" />
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-608">Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> zmieniona w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-608">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-609">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeniem, a nie zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-609">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-610">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-610">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-611">Pobiera wartość określającą, czy przechwycenie piórem jest utrzymywane przez ten element, łącznie z elementami podrzędnymi i składowymi kontroli.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-611">Gets a value that determines whether stylus capture is held by this element, including child elements and control compositing.</span></span></summary>
        <value><span data-ttu-id="a0fdb-612"><see langword="true" />Jeśli przechwycenie piórem jest przechowywane w tym elemencie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-612"><see langword="true" /> if stylus capture is held within this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-613">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-613">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-614">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-614">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-615">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-615">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-616">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-616">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="a0fdb-617">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-617">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-618">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-618">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-619">Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> zmieniona w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-619">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-620">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeniem, a nie zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-620">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-621">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-621">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-622">Pobiera wartość wskazującą, czy pozycja pióra odnosi się do wyników testu trafień, które przyjmują elementy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-622">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="a0fdb-623"><see langword="true" />Jeśli pióro znajduje się nad tym samym elementem co test trafień; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-623"><see langword="true" /> if the stylus is over the same element as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-624">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-624">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-625">W przeciwieństwie <xref:System.Windows.ContentElement.IsStylusOver%2A>do, ta właściwość `true` jest tylko wtedy, gdy pióro znajduje się nad elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-625">Unlike <xref:System.Windows.ContentElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="a0fdb-626">Jeśli pióro znajduje się nad elementem podrzędnym lub przez elementy, które są częścią bardziej szczegółowego przenoszonego elementu, ta `false`właściwość będzie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-626">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing, this property will be `false`.</span></span>  
  
 <span data-ttu-id="a0fdb-627">Jeśli nie wiesz, jak kontrolka jest złożona (na przykład można użyć tej właściwości w szablonie kontrolki niestandardowej dla zdefiniowanej kontrolki), ta właściwość może zwracać nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-627">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="a0fdb-628">W przypadku większości scenariuszy, w których nie tworzysz formantów, <xref:System.Windows.ContentElement.IsStylusOver%2A> Użyj zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-628">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="a0fdb-629">Jeśli ten element ma funkcję przechwytywania pióra i ta `true` właściwość jest w czasie przechwytywania, ta właściwość pozostaje `true` do momentu utraty przechwycenia pióra, a pióro nie znajduje się nad jego zakresem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-629">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="a0fdb-630">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-630">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-631">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-631">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-632">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-632">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-633">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-633">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="a0fdb-634">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-634">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-635">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-635">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-636">Występuje, gdy wartość właściwości zostanie <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> zmieniona w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-636">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-637">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeniem, a nie zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-637">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-638">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-638">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.ContentElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-639">Pobiera wartość wskazującą, czy pióro znajduje się nad tym elementem (w tym elementy potomne elementu wizualnego).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-639">Gets a value that indicates whether the stylus is located over this element (including visual child elements).</span></span></summary>
        <value><span data-ttu-id="a0fdb-640"><see langword="true" />Jeśli pióro znajduje się nad elementem lub jego elementami podrzędnymi; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-640"><see langword="true" /> if the stylus is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a0fdb-641">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-641">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-642">Jeśli ten element ma funkcję przechwytywania pióra, ta `true` Właściwość pozostaje do momentu utraty przechwycenia pióra, a wskaźnik jest poza granicami.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-642">If this element has stylus capture, this property remains `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="a0fdb-643">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-643">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-644">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-644">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a0fdb-645">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a0fdb-645">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-646">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-646">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusOverProperty>|  
|<span data-ttu-id="a0fdb-647">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-647">Metadata properties set to `true`</span></span>|<span data-ttu-id="a0fdb-648">Brak</span><span class="sxs-lookup"><span data-stu-id="a0fdb-648">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-649">Identyfikuje właściwość <see cref="P:System.Windows.ContentElement.IsStylusOver" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-649">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-650">Występuje po naciśnięciu klawisza, gdy fokus znajduje się na tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-650">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-651">Obsługa kluczowych współdziała z innymi funkcjami platformy, takimi jak tworzenie poleceń i składanie tekstu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-651">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="a0fdb-652"><xref:System.Windows.ContentElement.KeyDown> Zdarzenie jest zdarzeniem wprowadzania tekstu niższego poziomu, które może nie zachowywać się zgodnie z oczekiwaniami w niektórych kontrolkach.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-652">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="a0fdb-653">Wynika to z faktu, że niektóre kontrolki mają założenia kontrolne lub obsługujące klasy, które udostępniają wyższego poziomu obsługę wprowadzania tekstu i powiązane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-653">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="a0fdb-654">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, tak, że <xref:System.Windows.ContentElement.KeyDown> jest częścią listy składowych klasy <xref:System.Windows.ContentElement> , gdy jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-654">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.KeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-655">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.KeyDown> zdarzenia są dołączone do <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-655">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-656">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-656">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-657">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-657">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyDownEvent>|  
|<span data-ttu-id="a0fdb-658">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-658">Routing strategy</span></span>|<span data-ttu-id="a0fdb-659">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-659">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-660">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-660">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a0fdb-661">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-661">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="a0fdb-662">Przesłoń <xref:System.Windows.ContentElement.OnKeyDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-662">Override <xref:System.Windows.ContentElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-663">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.KeyDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-663">Identifies the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-664">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-664">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-665">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-665">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-666">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-666">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-667">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-667">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-668">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-668">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-669">Występuje, gdy klucz zostanie wydzierżawiony, gdy fokus znajduje się na tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-669">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-670">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, tak, że <xref:System.Windows.ContentElement.KeyUp> jest częścią listy składowych klasy <xref:System.Windows.ContentElement> , gdy jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-670">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.ContentElement.KeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-671">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.KeyUp> zdarzenia są dołączone do <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-671">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-672">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-672">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-673">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-673">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyUpEvent>|  
|<span data-ttu-id="a0fdb-674">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-674">Routing strategy</span></span>|<span data-ttu-id="a0fdb-675">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-675">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-676">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-676">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a0fdb-677">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-677">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="a0fdb-678">Przesłoń <xref:System.Windows.ContentElement.OnKeyUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-678">Override <xref:System.Windows.ContentElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-679">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.KeyUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-679">Identifies the <see cref="E:System.Windows.ContentElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-680">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-680">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-681">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-681">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-682">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-682">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-683">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-683">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-684">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-684">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-685">Występuje, gdy ten element utraci fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-685">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-686">Fokus logiczny różni się od fokusu klawiatury, jeśli fokus jest celowo wymuszany przy użyciu wywołania metody, ale poprzedni fokus klawiatury istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-686">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="a0fdb-687">W tym scenariuszu fokus klawiatury pozostaje tam, gdzie jest, a element, w <xref:System.Windows.ContentElement.Focus%2A> którym wywoływana jest metoda nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-687">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="a0fdb-688">Dokładniejsze interpretacja tego zdarzenia jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsFocused%2A> właściwości elementu w marszrucie zmieni się z `true` na `false`.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-688">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="a0fdb-689">Ponieważ to zdarzenie używa routingu propagacji, element, który utraci fokus, może być elementem podrzędnym zamiast elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-689">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a0fdb-690"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź dane zdarzenia, aby określić rzeczywisty element, który zyskał fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-690">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-691">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-691">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-692">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-692">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostFocusEvent>|  
|<span data-ttu-id="a0fdb-693">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-693">Routing strategy</span></span>|<span data-ttu-id="a0fdb-694">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-694">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-695">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-695">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="a0fdb-696">Brak odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-696">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a0fdb-697">Przesłoń <xref:System.Windows.ContentElement.OnLostFocus%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-697">Override <xref:System.Windows.ContentElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-698">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.LostFocus" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-698">Identifies the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-699">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-699">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-700">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-700">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-701">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-701">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-702">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-702">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-703">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-703">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-704">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-704">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-705">Ponieważ to zdarzenie używa routingu propagacji, element, który utracił fokus, może być elementem podrzędnym zamiast elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-705">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a0fdb-706"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź dane zdarzenia, aby określić rzeczywisty element, który utracił fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-706">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="a0fdb-707">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.LostKeyboardFocus> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-707">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-708">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.LostKeyboardFocus> zdarzenia są dołączone do <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-708">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-709">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-709">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-710">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-710">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="a0fdb-711">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-711">Routing strategy</span></span>|<span data-ttu-id="a0fdb-712">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-712">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-713">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-713">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a0fdb-714">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-714">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a0fdb-715">Przesłoń <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-715">Override <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-716">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-716">Identifies the <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-717">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-717">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-718">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-718">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-719">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-719">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-720">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-720">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-721">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-721">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-722">Występuje, gdy ten element utraci przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-722">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-723">Gdy element przechwytuje mysz, odbiera dane wejściowe za pomocą myszy, nawet jeśli wskaźnik znajduje się poza granicami.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-723">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="a0fdb-724">Mysz jest zwykle przechwytywana tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-724">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="a0fdb-725">Ponieważ to zdarzenie używa routingu propagacji, element, który utraci przechwytywanie, może być elementem podrzędnym zamiast elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-725">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a0fdb-726"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź dane zdarzenia, aby określić rzeczywisty element, który utracił funkcję przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-726">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="a0fdb-727">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.LostMouseCapture> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-727">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-728">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.LostMouseCapture> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-728">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-729">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-729">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-730">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-730">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="a0fdb-731">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-731">Routing strategy</span></span>|<span data-ttu-id="a0fdb-732">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-732">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-733">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-733">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a0fdb-734">Nie zdefiniowano odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-734">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a0fdb-735">Przesłoń <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-735">Override <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-736">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-736">Identifies the <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-737">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-737">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-738">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-738">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-739">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-739">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-740">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-740">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-741">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-741">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-742">Występuje, gdy ten element utraci przechwytywanie pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-742">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-743">Gdy element przechwytuje pióro, otrzymuje dane wejściowe pióra, nawet jeśli wskaźnik znajduje się poza granicami.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-743">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="a0fdb-744">Pióro jest zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-744">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="a0fdb-745">Ponieważ to zdarzenie używa routingu propagacji, element, który utraci fokus, może być elementem podrzędnym zamiast elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-745">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a0fdb-746"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź dane zdarzenia, aby określić rzeczywisty element, który utracił fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-746">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="a0fdb-747">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.LostStylusCapture> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-747">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-748">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.LostStylusCapture> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-748">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-749">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-749">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-750">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-750">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="a0fdb-751">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-751">Routing strategy</span></span>|<span data-ttu-id="a0fdb-752">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-752">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-753">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-753">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-754">Nie zdefiniowano odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-754">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a0fdb-755">Przesłoń <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-755">Override <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-756">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-756">Identifies the <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-757">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-757">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-758">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-758">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-759">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-759">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-760">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-760">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-761">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-761">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-762">Występuje, gdy ten element utraci funkcję przechwytywania dotykowego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-762">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-763">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-763">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-764">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-764">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="a0fdb-765">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-765">Routing strategy</span></span>|<span data-ttu-id="a0fdb-766">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-766">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-767">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-767">Delegate</span></span>|<span data-ttu-id="a0fdb-768"><xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-768"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a0fdb-769">Przesłoń <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-769">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-770">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-770">Identifies the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-771">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-771">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-772">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.MouseDown> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-772">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-773">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.MouseDown> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-773">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-774">Zdarzenie jest często wywoływane razem z albo <xref:System.Windows.ContentElement.MouseLeftButtonDown> lub <xref:System.Windows.ContentElement.MouseRightButtonDown>, które odpowiada naciśnięciu jednego z dwóch standardowych przycisków myszy. <xref:System.Windows.ContentElement.MouseDown></span><span class="sxs-lookup"><span data-stu-id="a0fdb-774">The <xref:System.Windows.ContentElement.MouseDown> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a0fdb-775"><xref:System.Windows.ContentElement.MouseLeftButtonDown>i <xref:System.Windows.ContentElement.MouseRightButtonDown> są także zdarzenia kierowane, ale są to zdarzenia bezpośrednie kierowane, a odpowiednie zdarzenie specyficzne dla przycisku jest zgłaszane, <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> gdy zdarzenie osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-775"><xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a0fdb-776">Zobacz uwagi dla <xref:System.Windows.ContentElement.MouseLeftButtonDown> lub <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-776">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a0fdb-777">Kilka <xref:System.Windows.ContentElement> klas pochodnych, które mają zachowanie podobne do kontrolki, na <xref:System.Windows.Documents.Hyperlink>przykład, może mieć nieodłączną obsługę klas dla zdarzeń przycisków myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-777">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="a0fdb-778">Lewe zdarzenie myszy w dół jest najbardziej prawdopodobną przyczyną obsługi klas w formancie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-778">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="a0fdb-779">Obsługa klasy często oznacza zdarzenia klasy bazowej <xref:System.Windows.Input.Mouse> jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-779">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="a0fdb-780">Gdy zdarzenie zostanie oznaczone jako obsługiwane, inne programy obsługi wystąpienia dołączone do tego elementu nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-780">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="a0fdb-781">Wszystkie inne procedury obsługi klasy lub wystąpienia, które są dołączone do elementów w kierunku propagacji do korzenia w drzewie interfejsu użytkownika, również nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-781">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="a0fdb-782">Można rozwiązać problem opisany w poprzednich ważnych i nadal odbieranych <xref:System.Windows.ContentElement.MouseDown> zdarzeniach dla lewego przycisku myszy zdarzenia w klasie pochodnej, która ma obsługę klasy, przy użyciu jednego z następujących rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="a0fdb-782">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="a0fdb-783">Dołącz programy obsługi dla <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenia, które nie jest oznaczone jako obsługiwane przez kontrolki.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-783">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="a0fdb-784">Zwróć uwagę, że ponieważ jest to zdarzenie w wersji zapoznawczej, trasa zaczyna się od elementu głównego i tuneluje do formantu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-784">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="a0fdb-785">Zarejestrowanie procedury obsługi na formancie w sposób proceduralny przez <xref:System.Windows.ContentElement.AddHandler%2A> wywołanie i wybranie opcji podpisu, która umożliwia programom obsługi nasłuchiwanie zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-785">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-786">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-786">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-787">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-787">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseDownEvent>|  
|<span data-ttu-id="a0fdb-788">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-788">Routing strategy</span></span>|<span data-ttu-id="a0fdb-789">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-789">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-790">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-790">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-791">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-791">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="a0fdb-792">Przesłoń <xref:System.Windows.ContentElement.OnMouseDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-792">Override <xref:System.Windows.ContentElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-793">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.MouseDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-793">Identifies the <see cref="E:System.Windows.ContentElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-794">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-794">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-795">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-795">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-796">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-796">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-797">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-797">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-798">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-798">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-799">Występuje, gdy wskaźnik myszy zostanie przesunięty w granice tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-799">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-800"><xref:System.Windows.ContentElement.MouseEnter>to [Omówienie zdarzeń kierowanych](~/docs/framework/wpf/advanced/routed-events-overview.md) , które korzystają z strategii routingu bezpośredniego obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-800"><xref:System.Windows.ContentElement.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a0fdb-801">Zdarzenia kierowane bezpośrednio nie są zgłaszane na trasie; Zamiast tego są obsługiwane w tym samym elemencie, w którym zostały zgłoszone.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-801">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="a0fdb-802">Jednak umożliwiają one włączenie innych aspektów zachowań zdarzeń kierowanych, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-802">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="a0fdb-803">Chociaż <xref:System.Windows.ContentElement.MouseEnter> śledzi, gdy wskaźnik myszy wchodzi w zakres elementu, to zdarzenie jest bardziej dosłownie raporty <xref:System.Windows.ContentElement.IsMouseOver%2A> , że wartość właściwości została zmieniona z `false` na `true` na tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-803">Although <xref:System.Windows.ContentElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="a0fdb-804">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.MouseEnter> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-804">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-805">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.MouseEnter> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-805">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-806">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-806">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-807">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-807">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseEnterEvent>|  
|<span data-ttu-id="a0fdb-808">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-808">Routing strategy</span></span>|<span data-ttu-id="a0fdb-809">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-809">Direct</span></span>|  
|<span data-ttu-id="a0fdb-810">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-810">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a0fdb-811">Przesłoń <xref:System.Windows.ContentElement.OnMouseEnter%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-811">Override <xref:System.Windows.ContentElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-812">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.MouseEnter" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-812">Identifies the <see cref="E:System.Windows.ContentElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-813">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-813">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-814">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-814">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-815">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-815">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-816">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-816">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-817">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-817">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-818">Występuje, gdy wskaźnik myszy opuszcza granice tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-818">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-819"><xref:System.Windows.ContentElement.MouseLeave>to [Omówienie zdarzeń kierowanych](~/docs/framework/wpf/advanced/routed-events-overview.md) , które korzystają z strategii routingu bezpośredniego obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-819"><xref:System.Windows.ContentElement.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a0fdb-820">Zdarzenia kierowane bezpośrednio nie są zgłaszane na trasie; Zamiast tego są obsługiwane w tym samym elemencie, w którym zostały zgłoszone.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-820">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="a0fdb-821">Jednak umożliwiają one włączenie innych aspektów zachowań zdarzeń kierowanych, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-821">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="a0fdb-822">Chociaż <xref:System.Windows.ContentElement.MouseLeave> śledzi, gdy mysz opuszcza element, to zdarzenie jest bardziej dosłownie raporty <xref:System.Windows.ContentElement.IsMouseOver%2A> , że wartość właściwości została zmieniona z `true` na `false` na tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-822">Although <xref:System.Windows.ContentElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="a0fdb-823">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.MouseLeave> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-823">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-824">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.MouseLeave> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-824">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-825">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-825">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-826">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-826">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeaveEvent>|  
|<span data-ttu-id="a0fdb-827">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-827">Routing strategy</span></span>|<span data-ttu-id="a0fdb-828">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-828">Direct</span></span>|  
|<span data-ttu-id="a0fdb-829">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-829">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a0fdb-830">Przesłoń <xref:System.Windows.ContentElement.OnMouseLeave%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-830">Override <xref:System.Windows.ContentElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-831">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.MouseLeave" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-831">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-832">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-832">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-833">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-833">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-834">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-834">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-835">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-835">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-836">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-836">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-837">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-837">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-838">Mimo że te [routowane zdarzenia](~/docs/framework/wpf/advanced/routed-events-overview.md) są zgodne z trasą propagacji za pośrednictwem drzewa elementów, jest to bezpośrednie kierowane zdarzenie, które jest zgłaszane i ponownie zgłaszane w drzewie <xref:System.Windows.ContentElement>elementów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-838">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-839">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportują charakterystyczne dla przycisku myszy zdarzenia bazowego <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> , które jest dołączonym zdarzeniem przetwarzanym przez każdy element wraz z trasą zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-839">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a0fdb-840">Argumenty tego zdarzenia uwidaczniają argumenty bazowego <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-840">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a0fdb-841">Jeśli to zdarzenie jest oznaczone jako obsługiwane wzdłuż trasy zdarzenia, są nadal wywoływane zdarzenia dotyczące przycisku myszy. Jednak programy obsługi zdarzeń dla przycisku myszy muszą być dodawane jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją obsługi zdarzeń, które są już oznaczone jako obsługiwane, aby były detektorami zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-841">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="a0fdb-842">Koncepcyjnie, pomyśl o tym zdarzeniu (i innych zdarzeniach myszy w <xref:System.Windows.ContentElement>systemie) jako myszy "usługi" (z definicją usługi dostarczaną <xref:System.Windows.Input.Mouse> przez klasę).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-842">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a0fdb-843">Zdarzenie dodaje wygodę niezbędną do sprawdzania, czy Stany przycisków myszy (w górę i w dół) oryginalnych zdarzeń myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-843">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a0fdb-844">W przypadku bardziej zaawansowanych scenariuszy, takich jak sprawdzanie Stanów przycisków niestandardowymi, może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> <xref:System.Windows.ContentElement>klasy w klasie zamiast.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-844">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a0fdb-845">Kilka <xref:System.Windows.ContentElement> klas pochodnych, które mają zachowanie podobne do kontrolki, na <xref:System.Windows.Documents.Hyperlink>przykład, może mieć nieodłączną obsługę klas dla zdarzeń przycisków myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-845">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="a0fdb-846">Lewe zdarzenie myszy w dół jest najbardziej prawdopodobną przyczyną obsługi klas w formancie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-846">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="a0fdb-847">Obsługa klasy często oznacza zdarzenia klasy bazowej <xref:System.Windows.Input.Mouse> jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-847">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="a0fdb-848">Gdy zdarzenie zostanie oznaczone jako obsługiwane, inne programy obsługi wystąpienia dołączone do tego elementu nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-848">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="a0fdb-849">Wszystkie inne procedury obsługi klasy lub wystąpienia, które są dołączone do elementów w kierunku propagacji do korzenia w drzewie interfejsu użytkownika, również nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-849">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="a0fdb-850">Można rozwiązać problem opisany w poprzednich ważnych i nadal odbieranych <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzeniach dla lewego przycisku myszy zdarzenia w klasie pochodnej, która ma obsługę klasy, przy użyciu jednego z następujących rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="a0fdb-850">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="a0fdb-851">Dołącz programy obsługi dla <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenia, które nie jest oznaczone jako obsługiwane przez kontrolki.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-851">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="a0fdb-852">Zwróć uwagę, że ponieważ jest to zdarzenie w wersji zapoznawczej, trasa zaczyna się od elementu głównego i tuneluje do formantu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-852">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="a0fdb-853">Zarejestrowanie procedury obsługi na formancie w sposób proceduralny przez <xref:System.Windows.ContentElement.AddHandler%2A> wywołanie i wybranie opcji podpisu, która umożliwia programom obsługi nasłuchiwanie zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-853">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-854">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-854">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-855">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-855">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="a0fdb-856">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-856">Routing strategy</span></span>|<span data-ttu-id="a0fdb-857">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-857">Direct</span></span>|  
|<span data-ttu-id="a0fdb-858">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-858">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-859">Przesłoń <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-859">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-860">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-860">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-861">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-861">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-862">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-862">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-863">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-863">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-864">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-864">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-865">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-865">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-866">Występuje po udostępnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-866">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-867">Mimo że te [routowane zdarzenia](~/docs/framework/wpf/advanced/routed-events-overview.md) są zgodne z trasą propagacji za pośrednictwem drzewa elementów, jest to bezpośrednie kierowane zdarzenie, które jest zgłaszane i ponownie zgłaszane w drzewie <xref:System.Windows.ContentElement>elementów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-867">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-868">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportują charakterystyczne dla przycisku myszy zdarzenia bazowego <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> , które jest dołączonym zdarzeniem przetwarzanym przez każdy element wraz z trasą zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-868">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a0fdb-869">Argumenty tego zdarzenia uwidaczniają argumenty bazowego <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-869">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a0fdb-870">Jeśli to zdarzenie jest oznaczone jako obsługiwane wzdłuż trasy zdarzenia, są nadal wywoływane zdarzenia dotyczące przycisku myszy. Jednak programy obsługi zdarzeń dla przycisku myszy muszą być dodawane jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją obsługi zdarzeń, które są już oznaczone jako obsługiwane, aby były detektorami zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-870">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="a0fdb-871">Koncepcyjnie, pomyśl o tym zdarzeniu (i innych zdarzeniach myszy w <xref:System.Windows.ContentElement>systemie) jako myszy "usługi" (z definicją usługi dostarczaną <xref:System.Windows.Input.Mouse> przez klasę).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-871">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a0fdb-872">Zdarzenie dodaje wygodę niezbędną do sprawdzania, czy Stany przycisków myszy (w górę i w dół) oryginalnych zdarzeń myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-872">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a0fdb-873">W przypadku bardziej zaawansowanych scenariuszy, takich jak sprawdzanie Stanów przycisków niestandardowymi, może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> <xref:System.Windows.ContentElement>klasy w klasie zamiast.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-873">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-874">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-874">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-875">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-875">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="a0fdb-876">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-876">Routing strategy</span></span>|<span data-ttu-id="a0fdb-877">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-877">Direct</span></span>|  
|<span data-ttu-id="a0fdb-878">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-878">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-879">Przesłoń <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-879">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-880">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-880">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-881">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-881">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-882">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-882">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-883">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-883">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-884">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-884">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-885">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-885">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-886">Występuje, gdy wskaźnik myszy jest przesuwany nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-886">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-887">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.MouseMove> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-887">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-888">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.MouseMove> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-888">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-889">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-889">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-890">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-890">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseMoveEvent>|  
|<span data-ttu-id="a0fdb-891">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-891">Routing strategy</span></span>|<span data-ttu-id="a0fdb-892">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-892">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-893">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-893">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a0fdb-894">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-894">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="a0fdb-895">Przesłoń <xref:System.Windows.ContentElement.OnMouseMove%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-895">Override <xref:System.Windows.ContentElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-896">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.MouseMove" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-896">Identifies the <see cref="E:System.Windows.ContentElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-897">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-897">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-898">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-898">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-899">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-899">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-900">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-900">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-901">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-901">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-902">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-902">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-903">Mimo że te [routowane zdarzenia](~/docs/framework/wpf/advanced/routed-events-overview.md) są zgodne z trasą propagacji za pośrednictwem drzewa elementów, jest to bezpośrednie kierowane zdarzenie, które jest zgłaszane i ponownie zgłaszane w drzewie <xref:System.Windows.ContentElement>elementów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-903">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-904">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportują charakterystyczne dla przycisku myszy zdarzenia bazowego <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> , które jest dołączonym zdarzeniem przetwarzanym przez każdy element wraz z trasą zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-904">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a0fdb-905">Argumenty tego zdarzenia uwidaczniają argumenty bazowego <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-905">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a0fdb-906">Jeśli to zdarzenie jest oznaczone jako obsługiwane wzdłuż trasy zdarzenia, są nadal wywoływane zdarzenia dotyczące przycisku myszy. Jednak programy obsługi zdarzeń dla przycisku myszy muszą być dodawane jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją obsługi zdarzeń, które są już oznaczone jako obsługiwane, aby były detektorami zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-906">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="a0fdb-907">Koncepcyjnie, pomyśl o tym zdarzeniu (i innych zdarzeniach myszy w <xref:System.Windows.ContentElement>systemie) jako myszy "usługi" (z definicją usługi dostarczaną <xref:System.Windows.Input.Mouse> przez klasę).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-907">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a0fdb-908">Zdarzenie dodaje wygodę niezbędną do sprawdzania, czy Stany przycisków myszy (w górę i w dół) oryginalnych zdarzeń myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-908">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a0fdb-909">W przypadku bardziej zaawansowanych scenariuszy, takich jak sprawdzanie Stanów przycisków niestandardowymi, może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> <xref:System.Windows.ContentElement>klasy w klasie zamiast.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-909">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-910">Zdarzenia myszy prawego przycisku często mają natywną obsługę w scenariuszach aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-910">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="a0fdb-911">Na przykład prawy przycisk myszy w dół może wyświetlić menu kontekstowe.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-911">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="a0fdb-912">Zobacz temat [Przegląd](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-912">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-913">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-913">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-914">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-914">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="a0fdb-915">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-915">Routing strategy</span></span>|<span data-ttu-id="a0fdb-916">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-916">Direct</span></span>|  
|<span data-ttu-id="a0fdb-917">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-917">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-918">Przesłoń <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-918">Override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-919">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-919">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-920">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-920">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-921">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-921">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-922">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-922">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-923">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-923">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-924">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-924">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-925">Występuje po udostępnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-925">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-926">Mimo że te [routowane zdarzenia](~/docs/framework/wpf/advanced/routed-events-overview.md) są zgodne z trasą propagacji za pośrednictwem drzewa elementów, jest to bezpośrednie kierowane zdarzenie, które jest zgłaszane i ponownie zgłaszane w drzewie <xref:System.Windows.ContentElement>elementów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-926">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-927">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportują charakterystyczne dla przycisku myszy zdarzenia bazowego <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> , które jest dołączonym zdarzeniem przetwarzanym przez każdy element wraz z trasą zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-927">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a0fdb-928">Argumenty tego zdarzenia uwidaczniają argumenty bazowego <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-928">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a0fdb-929">Jeśli to zdarzenie jest oznaczone jako obsługiwane wzdłuż trasy zdarzenia, są nadal wywoływane zdarzenia dotyczące przycisku myszy. Jednak programy obsługi zdarzeń dla przycisku myszy muszą być dodawane jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją obsługi zdarzeń, które są już oznaczone jako obsługiwane, aby były detektorami zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-929">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="a0fdb-930">Koncepcyjnie, pomyśl o tym zdarzeniu (i innych zdarzeniach myszy w <xref:System.Windows.ContentElement>systemie) jako myszy "usługi" (z definicją usługi dostarczaną <xref:System.Windows.Input.Mouse> przez klasę).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-930">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a0fdb-931">Zdarzenie dodaje wygodę niezbędną do sprawdzania, czy Stany przycisków myszy (w górę i w dół) oryginalnych zdarzeń myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-931">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a0fdb-932">W przypadku bardziej zaawansowanych scenariuszy, takich jak sprawdzanie Stanów przycisków niestandardowymi, może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> <xref:System.Windows.ContentElement>klasy w klasie zamiast.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-932">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-933">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-933">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-934">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-934">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="a0fdb-935">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-935">Routing strategy</span></span>|<span data-ttu-id="a0fdb-936">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-936">Direct</span></span>|  
|<span data-ttu-id="a0fdb-937">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-937">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-938">Przesłoń <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-938">Override <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-939">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-939">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-940">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-940">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-941">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-941">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-942">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-942">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-943">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-943">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-944">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-944">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-945">Występuje po wydaniu dowolnego przycisku myszy nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-945">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-946">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.MouseUp> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-946">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-947">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.MouseUp> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-947">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-948">Zdarzenie jest często wywoływane razem z albo <xref:System.Windows.ContentElement.MouseLeftButtonUp> lub <xref:System.Windows.ContentElement.MouseRightButtonUp>, co odpowiada wersji jednego z dwóch standardowych przycisków myszy. <xref:System.Windows.ContentElement.MouseUp></span><span class="sxs-lookup"><span data-stu-id="a0fdb-948">The <xref:System.Windows.ContentElement.MouseUp> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a0fdb-949"><xref:System.Windows.ContentElement.MouseLeftButtonUp>i <xref:System.Windows.ContentElement.MouseRightButtonUp> są także zdarzenia kierowane, ale są to zdarzenia bezpośrednie kierowane, a odpowiednie zdarzenie specyficzne dla przycisku jest zgłaszane, <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> gdy zdarzenie osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-949"><xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a0fdb-950">Zobacz uwagi dla <xref:System.Windows.ContentElement.MouseLeftButtonUp> lub <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-950">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-951">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-951">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-952">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-952">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseUpEvent>|  
|<span data-ttu-id="a0fdb-953">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-953">Routing strategy</span></span>|<span data-ttu-id="a0fdb-954">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-954">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-955">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-955">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-956">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-956">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="a0fdb-957">Przesłoń <xref:System.Windows.ContentElement.OnMouseUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-957">Override <xref:System.Windows.ContentElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-958">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.MouseUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-958">Identifies the <see cref="E:System.Windows.ContentElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-959">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-959">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-960">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-960">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-961">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-961">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-962">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-962">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-963">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-963">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-964">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-964">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-965">Przechwycenie fokusu lub myszy ma pierwszeństwo przed miejscem, gdzie wskaźnik myszy jest; w związku z tym, jeśli <xref:System.Windows.ContentElement.MouseWheel> otrzymasz zdarzenie z elementu skoncentrowane lub przechwyconych, wskaźnik myszy może znajdować się nad innym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-965">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.ContentElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="a0fdb-966">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.MouseWheel> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-966">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseWheel> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-967">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.MouseWheel> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-967">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-968">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-968">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-969">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-969">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseWheelEvent>|  
|<span data-ttu-id="a0fdb-970">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-970">Routing strategy</span></span>|<span data-ttu-id="a0fdb-971">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-971">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-972">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-972">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="a0fdb-973">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-973">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="a0fdb-974">Przesłoń <xref:System.Windows.ContentElement.OnMouseWheel%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-974">Override <xref:System.Windows.ContentElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-975">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.MouseWheel" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-975">Identifies the <see cref="E:System.Windows.ContentElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-976">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-976">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-977">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-977">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-978">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-978">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-979">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-979">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-980">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-980">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="contentElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="a0fdb-981">Żądanie przechodzenia, które zawiera właściwość wskazującą tryb przechodzenia w istniejącej kolejności tabulacji lub kierunek przechodzenia wizualnie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-981">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="a0fdb-982">Próbuje przenieść fokus z tego elementu do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-982">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="a0fdb-983">Kierunek przesuwania fokusu jest określany przez kierunek wskazówki, który jest interpretowany w organizacji elementu nadrzędnego wizualizacji dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-983">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-984"><see langword="true" />Jeśli żądane przechodzenie zostało wykonane; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-984"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-985">Upewnij się, że wartość zwracana przez tę metodę jest sprawdzana.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-985">Make sure you check the return value of this method.</span></span> <span data-ttu-id="a0fdb-986">Zwracana wartość `false` może zostać zwrócona, jeśli przechodzenie zostanie uruchomione do tabulatora zdefiniowanego przez kompozycję kontrolki, a żądanie przechodzenia nie zażądało zawijania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-986">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contentElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-987">Zwraca implementacje specyficzne <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> dla klasy dla infrastruktury Windows Presentation Foundation (WPF).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-987">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-988">Implementacja specyficzna <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> dla typu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-988">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="a0fdb-989">Uwagi dotyczące dziedziczenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-989">Notes to inheritors</span></span>

<span data-ttu-id="a0fdb-990">Implementacja tej metody zwykle wywołuje konstruktora określonej <xref:System.Windows.Automation.Peers.AutomationPeer> implementacji i zwraca ją jako wartość zwracaną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-990">The implementation of this method is typically to call the constructor of a specific <xref:System.Windows.Automation.Peers.AutomationPeer> implementation, and return it as the return value.</span></span>  
  
 <span data-ttu-id="a0fdb-991">Wszystkie <xref:System.Windows.ContentElement> klasy pochodne powinny implementować tę metodę w celu zapewnienia własnych konkretnych <xref:System.Windows.Automation.Peers.AutomationPeer> implementacji infrastruktury WPF.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-991">All <xref:System.Windows.ContentElement> derived classes should implement this method in order to provide their own specific <xref:System.Windows.Automation.Peers.AutomationPeer> implementations to the WPF infrastructure.</span></span> <span data-ttu-id="a0fdb-992">Aby uzyskać szczegółowe informacje na temat implementowania <xref:System.Windows.Automation.Peers.AutomationPeer>tego wzorca, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-992">For details on implementing this pattern, see <xref:System.Windows.Automation.Peers.AutomationPeer>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-993"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-993">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-994">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.DragEnter" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-994">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-995">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-995">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-996">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-996">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-997">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-997">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-998">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-998">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-999">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-999">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1000">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1000">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1001">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1001">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1002">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1002">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1003">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1003">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1004">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1004">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1005"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1005">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1006">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.DragLeave" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1006">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1007">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1007">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1008">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1008">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1009">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1009">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1010">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1010">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1011">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1011">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1012">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1012">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1013">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1013">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1014">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1014">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1015">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1015">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1016">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1016">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1017"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1017">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1018">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.DragOver" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1018">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1019">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1019">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1020">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1020">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1021">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1021">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1022">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1022">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1023">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1023">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1024">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1024">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1025">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1025">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1026">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1026">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1027">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1027">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1028">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1028">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1029"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1029">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1030">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.DragEnter" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1030">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1031">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1031">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1032">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1032">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1033">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1033">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1034">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1034">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1035">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1035">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1036">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1036">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1037">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1037">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1038">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1038">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1039">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1039">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1040">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1040">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1041"><see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1041">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1042">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.GiveFeedback" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1042">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1043">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1043">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1044">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1044">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1045">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1045">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1046">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1046">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1047">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1047">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1048">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1048">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1049">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1049">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1050">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1050">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1051">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1051">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1052">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1052">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1053">A <see cref="T:System.Windows.RoutedEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1053">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="a0fdb-1054">Dane zdarzenia muszą zawierać identyfikator <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1054">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1055">Podnosi zdarzenie <see cref="E:System.Windows.ContentElement.GotFocus" /> kierowane przy użyciu dostarczonych danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1055">Raises the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1056">Ta metoda, chociaż wirtualna, ma domyślną implementację, która wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1056">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="a0fdb-1057">Ta metoda jest przeznaczona do zgłaszania zdarzenia i ta sama implementacja metody jest wywoływana wewnętrznie w celu podniesienia zdarzenia, <xref:System.Windows.ContentElement.IsFocused%2A> gdy wartość właściwości zostanie zmieniona.\*</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1057">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="a0fdb-1058">Implementacja różni się od innych Windows Presentation Foundation (WPF) w\* implementacjach, które zapewniają wygodny sposób dodawania obsługi klasy dla tego zdarzenia. <xref:System.Windows.ContentElement.OnGotFocus%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1058">The <xref:System.Windows.ContentElement.OnGotFocus%2A> implementation differs from some other Windows Presentation Foundation (WPF) On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="a0fdb-1059">Uwagi dotyczące dziedziczenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1059">Notes to inheritors</span></span>

<span data-ttu-id="a0fdb-1060">O ile nie istnieje zamierzone i nietypowe wymaganie, aby nie podnieść poziomu zdarzenia fokusu, upewnij się, że implementacja wywołuje implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1060">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="a0fdb-1061">W przeciwnym razie zdarzenie nie zostanie zgłoszone podczas typowych operacji użytkownika, które zwykle ustawiają fokus na tym elemencie. <xref:System.Windows.ContentElement.GotFocus></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1061">Otherwise, the <xref:System.Windows.ContentElement.GotFocus> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="a0fdb-1062">Jeśli nie zamierzasz skupić się na elemencie, możesz uniemożliwić skoncentrowanie się elementu przez ustawienie <xref:System.Windows.ContentElement.Focusable> na. `false`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1062">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <xref:System.Windows.ContentElement.Focusable> to `false`.</span></span>
<span data-ttu-id="a0fdb-1063">Należy pamiętać, że domyślnie <xref:System.Windows.ContentElement.Focusable> nie jest możliwe skoncentrowanie się, <xref:System.Windows.ContentElement.Focusable> dlatego ustawienie może być niepotrzebne.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1063">Note that by default a <xref:System.Windows.ContentElement.Focusable> is not focusable, therefore setting <xref:System.Windows.ContentElement.Focusable> deliberately might not be necessary.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1064"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1064">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1065">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1065">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1066">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1066">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1067">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1067">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1068">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1068">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1069">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1069">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1070">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1070">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1071">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1071">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1072">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1072">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1073">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1073">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1074">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1074">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1075">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1075">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1076"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1076">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1077">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1077">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1078">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1078">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1079">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1079">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1080">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1080">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1081">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1081">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1082">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1082">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1083">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1083">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1084">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1084">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1085">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1085">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1086">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1086">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1087">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1087">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1088"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1088">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1089">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1089">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1090">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1090">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1091">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1091">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1092">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1092">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1093">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1093">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1094">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1094">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1095">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1095">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1096">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1096">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1097">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1097">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1098">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1098">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1099">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1099">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1100">A <see cref="T:System.Windows.Input.TouchEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1100">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1101">Zapewnia obsługę klas dla <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> zdarzenia kierowanego, które występuje, gdy dotyk jest przechwytywany do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1101">Provides class handling for the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1102"><xref:System.Windows.ContentElement.OnGotTouchCapture%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1102">The <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1103">Przesłoń <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> w klasie pochodnej, aby <xref:System.Windows.ContentElement.GotTouchCapture> obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1103">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.GotTouchCapture> event.</span></span> <span data-ttu-id="a0fdb-1104">Należy pamiętać, aby wywołać <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> metodę klasy bazowej, tak aby klasy podstawowe otrzymywały zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1104">Be sure to call the base class' <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1105"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1105">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1106">Wywoływana, gdy <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> zdarzenie nieobsłużone zostanie zgłoszone dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1106">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a0fdb-1107">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1107">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1108">Ta metoda wirtualna jest wyzwalana, gdy wartość <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> właściwości zależności zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1108">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="a0fdb-1109">Metoda wirtualna jest najpierw podnoszona i może manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1109">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a0fdb-1110"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> Następnie zdarzenie jest zgłaszane z tym samym wystąpieniem danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1110">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a0fdb-1111">Zwróć uwagę, <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> że zdarzenie nie jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1111">Notice that the  <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="a0fdb-1112">W związku z tym nie można oznaczyć go jako obsługiwanego w obsłudze klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1112">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a0fdb-1113">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1113">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1114">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1114">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1115">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1115">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1116">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1116">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1117">Wywoływane tuż przed podjęciem <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zdarzenia przez ten element.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1117">Invoked just before the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="a0fdb-1118">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1118">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1119">Ta metoda wirtualna jest wyzwalana, gdy wartość <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> właściwości Dependency zmieni się jej wartość.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1119">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="a0fdb-1120">Metoda wirtualna jest najpierw podnoszona i może manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1120">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a0fdb-1121"><xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> Następnie zdarzenie jest zgłaszane z tym samym wystąpieniem danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1121">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a0fdb-1122">Zwróć uwagę, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> że zdarzenie nie jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1122">Notice that the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="a0fdb-1123">W związku z tym nie można oznaczyć go jako obsługiwanego w obsłudze klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1123">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a0fdb-1124">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1124">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1125">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1125">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1126">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1126">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1127"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1127">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1128">Wywoływana, gdy <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> zdarzenie nieobsłużone zostanie zgłoszone dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1128">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a0fdb-1129">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1129">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1130">Ta metoda wirtualna jest wyzwalana, gdy wartość <xref:System.Windows.ContentElement.IsMouseCaptured%2A> właściwości Dependency zmieni się jej wartość.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1130">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="a0fdb-1131">Metoda wirtualna jest najpierw podnoszona i może manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1131">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a0fdb-1132"><xref:System.Windows.ContentElement.IsMouseCapturedChanged> Następnie zdarzenie jest zgłaszane z tym samym wystąpieniem danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1132">Then the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a0fdb-1133">Zwróć uwagę, <xref:System.Windows.ContentElement.IsMouseCapturedChanged> że zdarzenie nie jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1133">Notice that the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="a0fdb-1134">W związku z tym nie można oznaczyć go jako obsługiwanego w obsłudze klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1134">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a0fdb-1135">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1135">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1136">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1136">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1137">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1137">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1138">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1138">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1139">Wywoływana, gdy <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> zdarzenie nieobsłużone zostanie zgłoszone dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1139">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a0fdb-1140">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1140">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a0fdb-1141">Ta metoda wirtualna jest wyzwalana, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> właściwości Dependency zmieni się jej wartość.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1141">This virtual method is raised when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="a0fdb-1142">Metoda wirtualna jest najpierw podnoszona i może manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1142">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a0fdb-1143"><see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> Następnie zdarzenie jest zgłaszane z tym samym wystąpieniem danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1143">Then the <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="a0fdb-1144">Zwróć uwagę, że zdarzenie nie jest zdarzeniem kierowanym; W związku z tym nie można oznaczyć go jako obsługiwanego w obsłudze klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1144">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="a0fdb-1145">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1145">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1146">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1146">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1147">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1147">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1148"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1148">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1149">Wywoływana, gdy <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> zdarzenie nieobsłużone zostanie zgłoszone dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1149">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a0fdb-1150">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1150">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1151">Ta metoda wirtualna jest wyzwalana, gdy wartość <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> właściwości Dependency zmieni się jej wartość.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1151">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="a0fdb-1152">Metoda wirtualna jest najpierw podnoszona i może manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1152">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a0fdb-1153"><xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> Następnie zdarzenie jest zgłaszane z tym samym wystąpieniem danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1153">Then the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a0fdb-1154">Zwróć uwagę, <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> że zdarzenie nie jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1154">Notice that the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="a0fdb-1155">W związku z tym nie można oznaczyć go jako obsługiwanego w obsłudze klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1155">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a0fdb-1156">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1156">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1157">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1157">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1158">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1158">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1159">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1159">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1160">Wywoływana, gdy <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> zdarzenie nieobsłużone zostanie zgłoszone dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1160">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a0fdb-1161">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1161">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1162">Ta metoda wirtualna jest wyzwalana, gdy wartość <xref:System.Windows.ContentElement.IsStylusCaptured%2A> właściwości Dependency zmieni się jej wartość.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1162">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="a0fdb-1163">Metoda wirtualna jest najpierw podnoszona i może manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1163">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a0fdb-1164"><xref:System.Windows.ContentElement.IsStylusCapturedChanged> Następnie zdarzenie jest zgłaszane z tym samym wystąpieniem danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1164">Then the <xref:System.Windows.ContentElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a0fdb-1165">Zwróć uwagę, że zdarzenie nie jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1165">Notice that the event is not a routed event.</span></span> <span data-ttu-id="a0fdb-1166">W związku z tym nie można oznaczyć go jako obsługiwanego w obsłudze klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1166">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a0fdb-1167">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1167">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1168">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1168">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1169">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1169">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1170"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1170">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1171">Wywoływana, gdy <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> zdarzenie nieobsłużone zostanie zgłoszone dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1171">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a0fdb-1172">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1172">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1173">Ta metoda wirtualna jest wyzwalana, gdy wartość <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> właściwości Dependency zmieni się jej wartość.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1173">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="a0fdb-1174">Metoda wirtualna jest najpierw podnoszona i może manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1174">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a0fdb-1175"><xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> Następnie zdarzenie jest zgłaszane z tym samym wystąpieniem danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1175">Then the <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a0fdb-1176">Zwróć uwagę, że zdarzenie nie jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1176">Notice that the event is not a routed event.</span></span> <span data-ttu-id="a0fdb-1177">W związku z tym nie można oznaczyć go jako obsługiwanego w obsłudze klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1177">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a0fdb-1178">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1178">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1179">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1179">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1180">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1180">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1181"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1181">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1182">Wywoływana, gdy <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> zdarzenie nieobsłużone zostanie zgłoszone dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1182">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="a0fdb-1183">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1183">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1184">Ta metoda wirtualna jest wyzwalana, gdy wartość <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> właściwości Dependency zmieni się jej wartość.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1184">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="a0fdb-1185">Metoda wirtualna jest najpierw podnoszona i może manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1185">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="a0fdb-1186"><xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> Następnie zdarzenie jest zgłaszane z tym samym wystąpieniem danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1186">Then the <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="a0fdb-1187">Zwróć uwagę, że zdarzenie nie jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1187">Notice that the event is not a routed event.</span></span> <span data-ttu-id="a0fdb-1188">W związku z tym nie można oznaczyć go jako obsługiwanego w obsłudze klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1188">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="a0fdb-1189">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1189">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1190">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1190">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1191">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1191">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1192"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1192">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1193">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1193">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1194">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1194">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1195">Naciśnięcia klawiszy są obsługiwane przez dedykowanego Menedżera wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1195">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="a0fdb-1196">Inne funkcje programistyczne korzystające z naciśnięć klawiszy, na przykład powiązania danych wejściowych i poleceń, mogą obsłużyć naciśnięcie klawisza, zanim zostanie uwidocznione jako ogólne naciśnięcie klawisza.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1196">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="a0fdb-1197">Jeśli te funkcje systemu wejścia oznaczają zdarzenie jako obsłużone, a <xref:System.Windows.ContentElement.OnKeyDown%2A> następnie nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1197">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1198">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1198">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1199">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1199">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1200">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1200">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1201">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1201">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1202">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1202">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1203">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1203">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1204">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1204">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1205">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1205">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1206">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1206">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1207"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1207">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1208">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1208">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1209">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1209">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1210">Naciśnięcia klawiszy są obsługiwane przez dedykowanego Menedżera wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1210">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="a0fdb-1211">Inne funkcje programistyczne korzystające z naciśnięć klawiszy, na przykład powiązania danych wejściowych i poleceń, mogą obsłużyć naciśnięcie klawisza, zanim zostanie uwidocznione jako ogólne naciśnięcie klawisza.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1211">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="a0fdb-1212">Jeśli te funkcje systemu wejścia oznaczają zdarzenie jako obsłużone, a <xref:System.Windows.ContentElement.OnKeyUp%2A> następnie nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1212">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1213">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1213">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1214">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1214">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1215">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1215">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1216">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1216">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1217">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1217">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1218">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1218">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1219">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1219">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1220">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1220">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1221">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1221">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1222">A <see cref="T:System.Windows.RoutedEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1222">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="a0fdb-1223">Dane zdarzenia muszą zawierać identyfikator <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1223">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1224">Podnosi zdarzenie <see cref="E:System.Windows.ContentElement.LostFocus" /> kierowane przy użyciu dostarczonych danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1224">Raises the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1225">Ta metoda, chociaż wirtualna, ma domyślną implementację, która wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1225">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="a0fdb-1226">Ta metoda jest przeznaczona do zgłaszania zdarzenia i ta sama implementacja metody jest wywoływana wewnętrznie w celu podniesienia zdarzenia, <xref:System.Windows.ContentElement.IsFocused%2A> gdy wartość właściwości zostanie zmieniona.\*</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1226">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="a0fdb-1227">Ta implementacja różni się od innych Windows Presentation Foundation (WPF) w\* implementacjach, które zapewniają wygodny sposób dodawania obsługi klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1227">This implementation differs from some other Windows Presentation Foundation (WPF) On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a0fdb-1228">O ile nie istnieje zamierzone i nietypowe wymaganie, aby nie podnieść poziomu zdarzenia fokusu, upewnij się, że implementacja wywołuje implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1228">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="a0fdb-1229">W przeciwnym razie zdarzenie nie zostanie zgłoszone podczas typowych operacji użytkownika, które zwykle ustawiają fokus na tym elemencie. <see cref="E:System.Windows.ContentElement.LostFocus" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1229">Otherwise, the <see cref="E:System.Windows.ContentElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="a0fdb-1230">Jeśli nie zamierzasz skupić się na elemencie, możesz uniemożliwić skoncentrowanie się elementu przez ustawienie <see cref="P:System.Windows.ContentElement.Focusable" /> na. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1230">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1231"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1231">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1232">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1232">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1233">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1233">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1234">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1234">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1235">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1235">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1236">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1236">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1237">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1237">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1238">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1238">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1239">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1239">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1240">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1240">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1241">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1241">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1242">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1242">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1243"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1243">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1244">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1244">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1245">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1245">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1246">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1246">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1247">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1247">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1248">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1248">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1249">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1249">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1250">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1250">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1251">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1251">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1252">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1252">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1253">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1253">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1254">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1254">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1255"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1255">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1256">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1256">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1257">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1257">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1258">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1258">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1259">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1259">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1260">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1260">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1261">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1261">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1262">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1262">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1263">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1263">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1264">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1264">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1265">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1265">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1266">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1266">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1267">A <see cref="T:System.Windows.Input.TouchEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1267">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1268">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> zdarzenia trasowanego, gdy ten element utraci funkcję przechwytywania dotykowego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1268">Provides class handling for the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1269"><xref:System.Windows.ContentElement.OnLostTouchCapture%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1269">The <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1270">Przesłoń <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> w klasie pochodnej, aby <xref:System.Windows.ContentElement.LostTouchCapture> obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1270">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.LostTouchCapture> event.</span></span> <span data-ttu-id="a0fdb-1271">Należy pamiętać, aby wywołać <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> metodę klasy bazowej, tak aby klasy podstawowe otrzymywały zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1271">Be sure to call the base class' <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1272"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1272">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1273">To zdarzenie służy do raportowania szczegółowych informacji o naciśnięciu przycisku myszy i stanie obsługiwanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1273">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1274">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.MouseDown" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1274">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1275">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1275">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1276">Akcje przycisków myszy są również obsługiwane przez dedykowanego Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1276">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a0fdb-1277">Inne funkcje programistyczne, które opierają się na akcjach przycisku myszy, takie jak powiązania danych wejściowych i poleceń, mogą wywoływać programy obsługi dla akcji, zanim zostanie ono ujawnione jako ogólna akcja przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1277">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a0fdb-1278">Jeśli te funkcje systemu wejścia oznaczają <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie jako obsłużone, <xref:System.Windows.ContentElement.OnMouseDown%2A> nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1278">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1279">Jeśli używasz tej procedury obsługi klasy do oznaczania zdarzenia jako obsługiwanego, może to mieć wpływ na następujące <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonDown>: i.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1279">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="a0fdb-1280">Każde z tych zdarzeń może zostać zgłoszone w momencie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> odebrania elementu odbiorczego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1280">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a0fdb-1281">Po oznaczeniu tego zdarzenia jako obsługiwanego w obsłudze klasy, podzdarzenia nadal są wywoływane; jednak przechodzą stan obsłużony w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1281">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a0fdb-1282">Jeśli zdarzenie jest obsługiwane w obsłudze klas, programy obsługi wystąpień dla zdarzeń nie są wywoływane, chyba że jawnie użyto <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> `handledEventsToo` `true` programu w celu dołączenia programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1282">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a0fdb-1283">Procedury obsługi klas również nie są wywoływane, <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Jeśli te procedury obsługi klas nie zostały zarejestrowane z podpisem za pomocą. `handledEventsToo` `true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1283">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a0fdb-1284">Dzięki obsłudze <xref:System.Windows.ContentElement.OnMouseDown%2A>, oznacza to, że obsługa klasy jest uwzględniana dla wszystkich możliwych akcji po kliknięciu przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1284">By handling <xref:System.Windows.ContentElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="a0fdb-1285">Takie zachowanie może być niepożądane; w związku z tym należy zachować ostrożność podczas używania tej metody wirtualnej do oznaczania zdarzeń jako obsłużonych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1285">This behavior might be unwanted; therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a0fdb-1286">Każde zdarzenie bezpośrednie specyficzne dla przycisku ma także wirtualną\* metodę. Rozważ, czy zastąpienie tych programów obsługi klas właściwych dla przycisku może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1286">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a0fdb-1287">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1287">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1288">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1288">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1289">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1289">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1290">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1290">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1291">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1291">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1292">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1292">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1293">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1293">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1294">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1294">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1295">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1295">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1296"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1296">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1297">Wywoływane, gdy w tym elemencie <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> zostanie zgłoszone nieobsłużone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1297">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="a0fdb-1298">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1298">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1299">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1299">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1300">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1300">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1301">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1301">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a0fdb-1302">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1302">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1303">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym z strategią routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1303">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="a0fdb-1304">Oznaczanie zdarzenia jako obsługiwanego jest nadal przydatne do zapobiegania wywoływaniu typowych programów obsługi wystąpień (tych, które `handledEventsToo`nie są określone).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1304">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1305"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1305">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1306">Wywoływane, gdy w tym elemencie <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> zostanie zgłoszone nieobsłużone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1306">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="a0fdb-1307">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1307">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1308">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1308">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1309">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1309">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1310">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1310">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a0fdb-1311">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1311">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1312">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym z strategią routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1312">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="a0fdb-1313">Oznaczanie zdarzenia jako obsługiwanego jest nadal przydatne do zapobiegania wywoływaniu typowych programów obsługi wystąpień (tych, które `handledEventsToo`nie są określone).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1313">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1314"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1314">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1315">Dane zdarzenia zgłaszają naciśnięcie lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1315">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1316">Wywoływane, gdy dla tego elementu <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> zgłoszono nieobsłużone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1316">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="a0fdb-1317">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1317">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1318"><xref:System.Windows.ContentElement.MouseLeftButtonDown> Zdarzenie wydaje się podróżować trasą propagacji, ale rzeczywiście podróżuje w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1318">The <xref:System.Windows.ContentElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a0fdb-1319"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>to podstawowe zdarzenie, które jest kierowane przez bąbelki, <xref:System.Windows.ContentElement> a każdy z nich jest używany do wywołania bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseLeftButtonDown>do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1319"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="a0fdb-1320">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzenie jako obsługiwane dla celów tego elementu, przewidziany stan nie perpetuate się do innych elementów wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1320">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a0fdb-1321">Można jednak oznaczyć zdarzenie jako obsłużone w celu uniemożliwienia wywoływania ogólnych programów obsługi wystąpień (tych, które nie zostały określone `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1321">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1322">Domyślna implementacja ogólnej obsługi zdarzeń myszy w programie <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenie lokalne.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1322">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a0fdb-1323">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1323">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a0fdb-1324">W konstruktorze statycznym klasy pochodnej Zarejestruj procedurę obsługi klasy alternatywnej dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1324">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a0fdb-1325">Nie można zmienić zachowania <xref:System.Windows.ContentElement> obsługi myszy przez zastąpienie. <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1325">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a0fdb-1326">Alternatywnie można zastąpić tę metodę, aby zmienić obsługę zdarzeń dla określonego stanu myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1326">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a0fdb-1327">Niezależnie od tego, czy chcesz wywołać implementację podstawową, zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1327">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a0fdb-1328">Niepowodzenie wywołania elementu Base powoduje wyłączenie domyślnej obsługi danych wejściowych dla tego zdarzenia myszy w klasach nadrzędnych, <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>które również powinny być wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1328">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="a0fdb-1329">Na przykład można dziedziczyć z <xref:System.Windows.Controls.Button> klasy pochodnej i zastąpić <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> ją bez wywoływania podstawowej implementacji, jednak to zastąpienie spowoduje wyłączenie <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1329">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1330"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1330">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1331">Dane zdarzenia zgłaszają, że został wystawiony lewy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1331">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1332">Wywoływane, gdy nieobsłużone <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> zdarzenie osiągnie element w swojej trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1332">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1333">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1333">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1334"><xref:System.Windows.ContentElement.MouseLeftButtonUp> Zdarzenie wydaje się podróżować trasą propagacji, ale rzeczywiście podróżuje w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1334">The <xref:System.Windows.ContentElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a0fdb-1335"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>to podstawowe zdarzenie, które jest kierowane przez bąbelki, <xref:System.Windows.ContentElement> a każdy z nich jest używany do wywołania bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseLeftButtonUp>do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1335"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="a0fdb-1336">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseLeftButtonUp> zdarzenie jako obsługiwane dla celów tego elementu, przewidziany stan nie perpetuate się do innych elementów wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1336">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a0fdb-1337">Można jednak oznaczyć zdarzenie jako obsłużone w celu uniemożliwienia wywoływania ogólnych programów obsługi wystąpień (tych, które nie zostały określone `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1337">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1338">Domyślna implementacja ogólnej obsługi zdarzeń myszy w programie <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenie lokalne.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1338">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a0fdb-1339">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1339">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a0fdb-1340">W konstruktorze statycznym klasy pochodnej Zarejestruj procedurę obsługi klasy alternatywnej dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1340">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a0fdb-1341">Nie można zmienić zachowania <xref:System.Windows.ContentElement> obsługi myszy przez zastąpienie. <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1341">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1342"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1342">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1343">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.MouseMove" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1343">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1344">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1344">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1345">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1345">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1346">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1346">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1347">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1347">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1348">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1348">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1349">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1349">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1350">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1350">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1351">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1351">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1352">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1352">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1353">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1353">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1354"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1354">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1355">Dane zdarzenia zgłaszają naciśnięcie prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1355">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1356">Wywoływane, gdy nieobsłużone <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> zdarzenie osiągnie element w swojej trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1356">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1357">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1357">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1358"><xref:System.Windows.ContentElement.MouseRightButtonDown> Zdarzenie wydaje się podróżować trasą propagacji, ale rzeczywiście podróżuje w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1358">The <xref:System.Windows.ContentElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a0fdb-1359"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>to podstawowe zdarzenie, które jest kierowane przez bąbelki, <xref:System.Windows.ContentElement> a każdy z nich jest używany do wywołania bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonDown>do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1359"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="a0fdb-1360">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseRightButtonDown> zdarzenie jako obsługiwane dla celów tego elementu, przewidziany stan nie perpetuate się do innych elementów wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1360">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a0fdb-1361">Można jednak oznaczyć zdarzenie jako obsłużone w celu uniemożliwienia wywoływania ogólnych programów obsługi wystąpień (tych, które nie zostały określone `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1361">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1362">Domyślna implementacja ogólnej obsługi zdarzeń myszy w programie <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenie lokalne.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1362">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a0fdb-1363">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1363">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a0fdb-1364">W konstruktorze statycznym klasy pochodnej Zarejestruj procedurę obsługi klasy alternatywnej dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1364">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a0fdb-1365">Nie można zmienić zachowania <xref:System.Windows.ContentElement> obsługi myszy przez zastąpienie. <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1365">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a0fdb-1366">Alternatywnie można zastąpić tę metodę, aby zmienić obsługę zdarzeń dla określonego stanu myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1366">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a0fdb-1367">Niezależnie od tego, czy chcesz wywołać implementację podstawową, zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1367">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a0fdb-1368">Niepowodzenie wywołania elementu Base powoduje wyłączenie domyślnej obsługi danych wejściowych dla tego zdarzenia myszy w klasach nadrzędnych, <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>które również powinny być wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1368">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="a0fdb-1369">Na przykład można dziedziczyć z <xref:System.Windows.Controls.Control> klasy pochodnej i przesłonić <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> ją bez wywoływania Base; jednak to zastąpienie powoduje wyłączenie usług menu kontekstowego w kontrolce, <xref:System.Windows.Controls.Control> które są częścią zachowania domyślnego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1369">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1370"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1370">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1371">Dane zdarzenia są raportowane po wydaniu prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1371">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1372">Wywoływane, gdy nieobsłużone <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> zdarzenie osiągnie element w swojej trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1372">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1373">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1373">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1374"><xref:System.Windows.ContentElement.MouseRightButtonUp> Zdarzenie wydaje się podróżować trasą propagacji, ale rzeczywiście podróżuje w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1374">The <xref:System.Windows.ContentElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a0fdb-1375"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>to podstawowe zdarzenie, które jest kierowane przez bąbelki, <xref:System.Windows.ContentElement> a każdy z nich jest używany do wywołania bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonUp>do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1375"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="a0fdb-1376">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseRightButtonUp> zdarzenie jako obsługiwane dla celów tego elementu, przewidziany stan nie perpetuate się do innych elementów wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1376">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a0fdb-1377">Można jednak oznaczyć zdarzenie jako obsłużone w celu uniemożliwienia wywoływania ogólnych programów obsługi wystąpień (tych, które nie zostały określone `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1377">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1378">Domyślna implementacja ogólnej obsługi zdarzeń myszy w programie <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenie lokalne.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1378">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a0fdb-1379">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1379">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a0fdb-1380">W konstruktorze statycznym klasy pochodnej Zarejestruj procedurę obsługi klasy alternatywnej dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1380">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a0fdb-1381">Nie można zmienić zachowania <xref:System.Windows.ContentElement> obsługi myszy przez zastąpienie. <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1381">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1382"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1382">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1383">Dane zdarzenia zgłaszają, że przycisk myszy został wydzierżawiony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1383">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1384">Wywoływane, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.MouseUp" /> zdarzenie osiągnie element w swojej trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1384">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1385">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1385">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1386">Akcje przycisków myszy są również obsługiwane przez dedykowanego Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1386">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a0fdb-1387">Inne funkcje programistyczne, które opierają się na akcjach przycisku myszy, takie jak powiązania danych wejściowych i poleceń, mogą wywoływać programy obsługi dla akcji, zanim zostanie ono ujawnione jako ogólna akcja przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1387">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a0fdb-1388">Jeśli te funkcje systemu wejścia oznaczają <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie jako obsłużone, <xref:System.Windows.ContentElement.OnMouseUp%2A> nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1388">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1389">Jeśli używasz tej procedury obsługi klasy do oznaczania zdarzenia jako obsługiwanego, może to mieć wpływ na następujące <xref:System.Windows.ContentElement.MouseLeftButtonUp> zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonUp>: i.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1389">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="a0fdb-1390">Każde z tych zdarzeń może zostać zgłoszone w momencie <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> odebrania elementu odbiorczego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1390">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a0fdb-1391">Po oznaczeniu tego zdarzenia jako obsługiwanego w obsłudze klasy, podzdarzenia nadal są wywoływane; jednak przechodzą stan obsłużony w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1391">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a0fdb-1392">Jeśli zdarzenie jest obsługiwane w obsłudze klas, programy obsługi wystąpień dla zdarzeń nie są wywoływane, chyba że jawnie użyto <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> `handledEventsToo` `true` programu w celu dołączenia programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1392">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a0fdb-1393">Procedury obsługi klas również nie są wywoływane, <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Jeśli te procedury obsługi klas nie zostały zarejestrowane z podpisem za pomocą. `handledEventsToo` `true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1393">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a0fdb-1394">Dzięki obsłudze <xref:System.Windows.ContentElement.OnMouseUp%2A>, oznacza to, że obsługa klasy jest uwzględniana dla wszystkich możliwych akcji przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1394">By handling <xref:System.Windows.ContentElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="a0fdb-1395">Takie zachowanie może być niepożądane; W związku z tym należy zachować ostrożność podczas używania tej metody wirtualnej do oznaczania zdarzeń jako obsłużonych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1395">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a0fdb-1396">Każde zdarzenie bezpośrednie specyficzne dla przycisku ma także wirtualną\* metodę. Rozważ, czy zastąpienie tych programów obsługi klas właściwych dla przycisku może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1396">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a0fdb-1397">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1397">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1398">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1398">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1399">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1399">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1400">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1400">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1401">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1401">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1402">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1402">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1403">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1403">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1404">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1404">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1405">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1405">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1406"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1406">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1407">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1407">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1408">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1408">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1409">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1409">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1410">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1410">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1411">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1411">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1412">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1412">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1413">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1413">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1414">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1414">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1415">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1415">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1416">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1416">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1417">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1417">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1418"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1418">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1419">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1419">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1420">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1420">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1421">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1421">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1422">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1422">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1423">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1423">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1424">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1424">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1425">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1425">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1426">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1426">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1427">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1427">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1428">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1428">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1429">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1429">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1430">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1430">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1431"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1431">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1432">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1432">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1433">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1433">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1434">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1434">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1435">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1435">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1436">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1436">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1437">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1437">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1438">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1438">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1439">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1439">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1440">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1440">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1441">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1441">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1442">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1442">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1443">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1443">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1444"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1444">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1445">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1445">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1446">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1446">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1447">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1447">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1448">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1448">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1449">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1449">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1450">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1450">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1451">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1451">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1452">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1452">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1453">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1453">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1454">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1454">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1455">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1455">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1456">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1456">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1457"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1457">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1458">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.PreviewDrop" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1458">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1459">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1459">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1460">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1460">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1461">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1461">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1462">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1462">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1463">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1463">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1464">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1464">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1465">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1465">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1466">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1466">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1467">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1467">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1468">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1468">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1469">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1469">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1470"><see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1470">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1471">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1471">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1472">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1472">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1473">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1473">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1474">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1474">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1475">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1475">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1476">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1476">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1477">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1477">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1478">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1478">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1479">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1479">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1480">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1480">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1481">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1481">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1482">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1482">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1483"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1483">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1484">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1484">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1485">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1485">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1486">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1486">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1487">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1487">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1488">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1488">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1489">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1489">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1490">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1490">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1491">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1491">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1492">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1492">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1493">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1493">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1494">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1494">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1495">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1495">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1496"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1496">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1497">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1497">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1498">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1498">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1499">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1499">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1500">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1500">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1501">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1501">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1502">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1502">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1503">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1503">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1504">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1504">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1505">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1505">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1506">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1506">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1507">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1507">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1508">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1508">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1509"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1509">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1510">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1510">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1511">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1511">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1512">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1512">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1513">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1513">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1514">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1514">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1515">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1515">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1516">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1516">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1517">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1517">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1518">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1518">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1519">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1519">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1520">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1520">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1521">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1521">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1522"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1522">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1523">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1523">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1524">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1524">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1525">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1525">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1526">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1526">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1527">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1527">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1528">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1528">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1529">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1529">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1530">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1530">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1531">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1531">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1532">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1532">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1533">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1533">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1534">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1534">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1535"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1535">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1536">Dane zdarzenia raportują, że co najmniej jeden przycisk myszy został naciśnięty.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1536">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1537">Wywoływana, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> zdarzenie połączonej trasy osiągnie element w swojej trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1537">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1538">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1538">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1539">Akcje przycisków myszy są również obsługiwane przez dedykowanego Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1539">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a0fdb-1540">Inne funkcje programistyczne, które opierają się na akcjach przycisku myszy, takie jak powiązania danych wejściowych i poleceń, mogą wywoływać programy obsługi dla akcji, zanim zostanie ono ujawnione jako ogólna akcja przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1540">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a0fdb-1541">Jeśli te funkcje systemu wejścia oznaczają <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie jako obsłużone, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1541">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1542">Jeśli używasz tej procedury obsługi klasy do oznaczania zdarzenia jako obsługiwanego, może to mieć wpływ na następujące <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zdarzenia <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>: i.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1542">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="a0fdb-1543">Każde z tych zdarzeń może zostać zgłoszone w momencie <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> odebrania elementu odbiorczego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1543">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a0fdb-1544">Po oznaczeniu tego zdarzenia jako obsługiwanego w obsłudze klasy, podzdarzenia nadal są wywoływane; jednak przechodzą stan obsłużony w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1544">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a0fdb-1545">Jeśli zdarzenie jest obsługiwane w obsłudze klas, programy obsługi wystąpień dla zdarzeń nie są wywoływane, chyba że jawnie użyto <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> `handledEventsToo` `true` programu w celu dołączenia programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1545">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a0fdb-1546">Procedury obsługi klas również nie są wywoływane, <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Jeśli te procedury obsługi klas nie zostały zarejestrowane z podpisem za pomocą. `handledEventsToo` `true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1546">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a0fdb-1547">Dzięki obsłudze <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, oznacza to, że obsługa klasy jest uwzględniana dla wszystkich możliwych akcji po kliknięciu przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1547">By handling <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="a0fdb-1548">Takie zachowanie może być niepożądane; W związku z tym należy zachować ostrożność podczas używania tej metody wirtualnej do oznaczania zdarzeń jako obsłużonych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1548">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a0fdb-1549">Każde zdarzenie bezpośrednie specyficzne dla przycisku ma także wirtualną\* metodę. Rozważ, czy zastąpienie tych programów obsługi klas właściwych dla przycisku może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1549">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a0fdb-1550">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1550">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1551">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1551">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1552">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1552">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1553">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1553">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1554">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1554">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1555">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1555">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1556">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1556">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1557">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1557">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1558">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1558">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1559">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1559">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1560"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1560">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1561">Dane zdarzenia zgłaszają naciśnięcie lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1561">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1562">Wywoływane, gdy nieobsłużone <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> zdarzenie osiągnie element w swojej trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1562">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1563">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1563">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1564"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> Zdarzenie wydaje się kierować trasą tunelowania, ale rzeczywiście podróżuje w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1564">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a0fdb-1565"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>to zdarzenie bazowe, które jest trasowane przez tunel, a <xref:System.Windows.ContentElement> każdy z nich jest używany do wywołania bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1565"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="a0fdb-1566">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zdarzenie jako obsługiwane dla celów tego elementu, przewidziany stan nie perpetuate się do innych elementów wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1566">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a0fdb-1567">Można jednak oznaczyć zdarzenie jako obsłużone w celu uniemożliwienia wywoływania ogólnych programów obsługi wystąpień (tych, które nie zostały określone `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1567">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1568">Domyślna implementacja ogólnej obsługi zdarzeń myszy w programie <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenie lokalne.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1568">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a0fdb-1569">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1569">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a0fdb-1570">W konstruktorze statycznym klasy pochodnej Zarejestruj procedurę obsługi klasy alternatywnej dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1570">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a0fdb-1571">Nie można zmienić zachowania <xref:System.Windows.ContentElement> obsługi myszy przez zastąpienie. <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1571">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a0fdb-1572">Alternatywnie można zastąpić tę metodę, aby zmienić obsługę zdarzeń dla określonego stanu myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1572">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a0fdb-1573">Niezależnie od tego, czy chcesz wywołać implementację podstawową, zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1573">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a0fdb-1574">Niepowodzenie wywołania elementu Base powoduje wyłączenie domyślnej obsługi danych wejściowych dla tego zdarzenia myszy w klasach nadrzędnych, <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>które również powinny być wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1574">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="a0fdb-1575">Na przykład można dziedziczyć z <xref:System.Windows.Controls.Button> klasy pochodnej i zastąpić <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> ją bez wywoływania podstawowej implementacji, jednak to zastąpienie spowoduje wyłączenie <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1575">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1576"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1576">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1577">Dane zdarzenia zgłaszają, że został wystawiony lewy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1577">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1578">Wywoływane, gdy nieobsłużone <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> zdarzenie osiągnie element w swojej trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1578">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1579">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1579">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1580"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> Zdarzenie wydaje się kierować trasą tunelowania, ale rzeczywiście podróżuje w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1580">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a0fdb-1581"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>to zdarzenie bazowe, które jest trasowane przez tunel, a <xref:System.Windows.ContentElement> każdy z nich jest używany do wywołania bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1581"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="a0fdb-1582">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> zdarzenie jako obsługiwane dla celów tego elementu, przewidziany stan nie perpetuate się do innych elementów wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1582">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a0fdb-1583">Można jednak oznaczyć zdarzenie jako obsłużone w celu uniemożliwienia wywoływania ogólnych programów obsługi wystąpień (tych, które nie zostały określone `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1583">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1584">Domyślna implementacja ogólnej obsługi zdarzeń myszy w programie <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenie lokalne.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1584">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a0fdb-1585">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1585">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a0fdb-1586">W konstruktorze statycznym klasy pochodnej Zarejestruj procedurę obsługi klasy alternatywnej dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1586">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a0fdb-1587">Nie można zmienić zachowania <xref:System.Windows.ContentElement> obsługi myszy przez zastąpienie. <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1587">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1588"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1588">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1589">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1589">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1590">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1590">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1591">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1591">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1592">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1592">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1593">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1593">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1594">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1594">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1595">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1595">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1596">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1596">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1597">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1597">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1598">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1598">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1599">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1599">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1600">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1600">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1601"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1601">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1602">Dane zdarzenia zgłaszają naciśnięcie prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1602">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1603">Wywoływane, gdy nieobsłużone <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> zdarzenie osiągnie element w swojej trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1603">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1604">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1604">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1605"><xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> Zdarzenie wydaje się kierować trasą tunelowania, ale rzeczywiście podróżuje w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1605">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a0fdb-1606"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>to zdarzenie bazowe, które jest trasowane przez tunel, a <xref:System.Windows.ContentElement> każdy z nich jest używany do wywołania bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonDown>do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1606"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="a0fdb-1607">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> zdarzenie jako obsługiwane dla celów tego elementu, przewidziany stan nie perpetuate się do innych elementów wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1607">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a0fdb-1608">Można jednak oznaczyć zdarzenie jako obsłużone w celu uniemożliwienia wywoływania ogólnych programów obsługi wystąpień (tych, które nie zostały określone `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1608">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1609">Domyślna implementacja ogólnej obsługi zdarzeń myszy w programie <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenie lokalne.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1609">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a0fdb-1610">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1610">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a0fdb-1611">W konstruktorze statycznym klasy pochodnej Zarejestruj procedurę obsługi klasy alternatywnej dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1611">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a0fdb-1612">Nie można zmienić zachowania <xref:System.Windows.ContentElement> obsługi myszy przez zastąpienie. <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1612">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="a0fdb-1613">Alternatywnie można zastąpić tę metodę, aby zmienić obsługę zdarzeń dla określonego stanu myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1613">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="a0fdb-1614">Niezależnie od tego, czy chcesz wywołać implementację podstawową, zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1614">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="a0fdb-1615">Niepowodzenie wywołania elementu Base powoduje wyłączenie domyślnej obsługi danych wejściowych dla tego zdarzenia myszy w klasach nadrzędnych, <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>które również powinny być wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1615">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="a0fdb-1616">Na przykład można dziedziczyć z <xref:System.Windows.Controls.Control> klasy pochodnej i przesłonić <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> ją bez wywoływania Base; jednak to zastąpienie powoduje wyłączenie usług menu kontekstowego w kontrolce, <xref:System.Windows.Controls.Control> które są częścią zachowania domyślnego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1616">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1617"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1617">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1618">Dane zdarzenia są raportowane po wydaniu prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1618">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1619">Wywoływane, gdy nieobsłużone <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> zdarzenie osiągnie element w swojej trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1619">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1620">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1620">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1621"><xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> Zdarzenie wydaje się kierować trasą tunelowania, ale rzeczywiście podróżuje w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1621">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="a0fdb-1622"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>to zdarzenie bazowe, które jest trasowane przez tunel, a <xref:System.Windows.ContentElement> każdy z nich jest używany do wywołania bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1622"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="a0fdb-1623">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> zdarzenie jako obsługiwane dla celów tego elementu, przewidziany stan nie perpetuate się do innych elementów wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1623">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="a0fdb-1624">Można jednak oznaczyć zdarzenie jako obsłużone w celu uniemożliwienia wywoływania ogólnych programów obsługi wystąpień (tych, które nie zostały określone `handledEventsToo`).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1624">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1625">Domyślna implementacja ogólnej obsługi zdarzeń myszy w programie <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenie lokalne.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1625">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="a0fdb-1626">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1626">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="a0fdb-1627">W konstruktorze statycznym klasy pochodnej Zarejestruj procedurę obsługi klasy alternatywnej dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1627">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a0fdb-1628">Nie można zmienić zachowania <xref:System.Windows.ContentElement> obsługi myszy przez zastąpienie. <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-1628">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1629"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1629">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="a0fdb-1630">Dane zdarzenia zgłaszają, że co najmniej jeden przycisk myszy został wykryty.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1630">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1631">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1631">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1632">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1632">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1633">Akcje przycisków myszy są również obsługiwane przez dedykowanego Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1633">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="a0fdb-1634">Inne funkcje programistyczne, które opierają się na akcjach przycisku myszy, takie jak powiązania danych wejściowych i poleceń, mogą wywoływać programy obsługi dla akcji, zanim zostanie ono ujawnione jako ogólna akcja przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1634">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="a0fdb-1635">Jeśli te funkcje systemu wejścia oznaczają <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie jako obsłużone, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1635">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="a0fdb-1636">Jeśli używasz tej procedury obsługi klasy do oznaczania zdarzenia jako obsługiwanego, może to mieć wpływ na następujące <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> zdarzenia <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>: i.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1636">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="a0fdb-1637">Każde z tych zdarzeń może zostać zgłoszone w momencie <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> odebrania elementu odbiorczego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1637">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="a0fdb-1638">Po oznaczeniu tego zdarzenia jako obsługiwanego w obsłudze klasy, podzdarzenia nadal są wywoływane; jednak przechodzą stan obsłużony w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1638">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="a0fdb-1639">Jeśli zdarzenie jest obsługiwane w obsłudze klas, programy obsługi wystąpień dla zdarzeń nie są wywoływane, chyba że jawnie użyto <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> `handledEventsToo` `true` programu w celu dołączenia programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1639">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="a0fdb-1640">Procedury obsługi klas również nie są wywoływane, <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Jeśli te procedury obsługi klas nie zostały zarejestrowane z podpisem za pomocą. `handledEventsToo` `true`</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1640">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="a0fdb-1641">Dzięki obsłudze <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, oznacza to, że obsługa klasy jest uwzględniana dla wszystkich możliwych akcji przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1641">By handling <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="a0fdb-1642">Takie zachowanie może być niepożądane; W związku z tym należy zachować ostrożność podczas używania tej metody wirtualnej do oznaczania zdarzeń jako obsłużonych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1642">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="a0fdb-1643">Każde zdarzenie bezpośrednie specyficzne dla przycisku ma także wirtualną\* metodę. Rozważ, czy zastąpienie tych programów obsługi klas właściwych dla przycisku może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1643">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="a0fdb-1644">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1644">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1645">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1645">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1646">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1646">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1647">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1647">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1648">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1648">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1649">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1649">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1650">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1650">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1651">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1651">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1652">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1652">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1653"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1653">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1654">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1654">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1655">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1655">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1656">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1656">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1657">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1657">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1658">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1658">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1659">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1659">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1660">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1660">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1661">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1661">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1662">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1662">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1663">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1663">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1664">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1664">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1665">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1665">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1666"><see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1666">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1667">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1667">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1668">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1668">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1669">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1669">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1670">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1670">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1671">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1671">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1672">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1672">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1673">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1673">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1674">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1674">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1675">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1675">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1676">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1676">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1677">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1677">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1678">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1678">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1679"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1679">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1680">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1680">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1681">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1681">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1682">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1682">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1683">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1683">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1684">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1684">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1685">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1685">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1686">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1686">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1687">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1687">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1688">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1688">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1689">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1689">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1690">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1690">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1691">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1691">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1692"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1692">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1693">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1693">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1694">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1694">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1695">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1695">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1696">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1696">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1697">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1697">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1698">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1698">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1699">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1699">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1700">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1700">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1701">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1701">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1702">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1702">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1703">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1703">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1704">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1704">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1705"><see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1705">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1706">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1706">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1707">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1707">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1708">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1708">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1709">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1709">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1710">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1710">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1711">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1711">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1712">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1712">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1713">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1713">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1714">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1714">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1715">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1715">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1716">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1716">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1717">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1717">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1718"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1718">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1719">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1719">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1720">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1720">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1721">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1721">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1722">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1722">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1723">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1723">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1724">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1724">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1725">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1725">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1726">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1726">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1727">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1727">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1728">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1728">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1729">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1729">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1730">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1730">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1731"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1731">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1732">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1732">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1733">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1733">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1734">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1734">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1735">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1735">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1736">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1736">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1737">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1737">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1738">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1738">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1739">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1739">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1740">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1740">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1741">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1741">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1742">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1742">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1743">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1743">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1744"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1744">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1745">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1745">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1746">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1746">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1747">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1747">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1748">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1748">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1749">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1749">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1750">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1750">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1751">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1751">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1752">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1752">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1753">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1753">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1754">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1754">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1755">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1755">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1756">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1756">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1757"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1757">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1758">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1758">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1759">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1759">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1760">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1760">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1761">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1761">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1762">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1762">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1763">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1763">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1764">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1764">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1765">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1765">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1766">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1766">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1767">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1767">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1768">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1768">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1769">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1769">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1770"><see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1770">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1771">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1771">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1772">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1772">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1773">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1773">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1774">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1774">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1775">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1775">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1776">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1776">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1777">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1777">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1778">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1778">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1779">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1779">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1780">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1780">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1781">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1781">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1782">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1782">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1783"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1783">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1784">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1784">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1785">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1785">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1786">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1786">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1787">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1787">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1788">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1788">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1789">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1789">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1790">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1790">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1791">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1791">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1792">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1792">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1793">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1793">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1794">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1794">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1795">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1795">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1796"><see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1796">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1797">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1797">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1798">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1798">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1799">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1799">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1800">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1800">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1801">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1801">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1802">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1802">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1803">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1803">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1804">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1804">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1805">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1805">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1806">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1806">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1807">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1807">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="a0fdb-1808">Innym scenariuszem przeznaczonym dla zdarzeń w wersji zapoznawczej jest oznaczenie ich jako obsłużonych w taki sposób, aby nie były wywoływane zgodne procedury obsługi klasy propagacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1808">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.ContentElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1809">A <see cref="T:System.Windows.Input.TouchEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1809">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1810">Zapewnia obsługę klas dla <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> zdarzenia kierowanego, gdy dotknięciem jest naciśnięcie tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1810">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1811"><xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1811">The <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1812">Przesłoń <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> w klasie pochodnej, aby <xref:System.Windows.ContentElement.PreviewTouchDown> obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1812">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="a0fdb-1813">Należy pamiętać, aby wywołać <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> metodę klasy bazowej, tak aby klasy podstawowe otrzymywały zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1813">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1814">A <see cref="T:System.Windows.Input.TouchEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1814">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1815">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> zdarzenia trasowanego, gdy nastąpi przeniesienie dotyku w obrębie tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1815">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1816"><xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1816">The <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1817">Przesłoń <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> w klasie pochodnej, aby <xref:System.Windows.ContentElement.PreviewTouchMove> obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1817">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="a0fdb-1818">Należy pamiętać, aby wywołać <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> metodę klasy bazowej, tak aby klasy podstawowe otrzymywały zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1818">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1819">A <see cref="T:System.Windows.Input.TouchEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1819">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1820">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> zdarzenia trasowanego, gdy nastąpi wyprowadzenie dotyku wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1820">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1821"><xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1821">The <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1822">Przesłoń <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> w klasie pochodnej, aby <xref:System.Windows.ContentElement.PreviewTouchUp> obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1822">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="a0fdb-1823">Należy pamiętać, aby wywołać <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> metodę klasy bazowej, tak aby klasy podstawowe otrzymywały zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1823">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1824"><see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1824">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1825">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1825">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1826">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1826">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1827">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1827">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1828">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1828">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1829">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1829">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1830">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1830">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1831">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1831">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1832">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1832">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1833">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1833">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1834">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1834">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1835">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1835">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="contentElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1836"><see cref="T:System.Windows.Input.QueryCursorEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1836">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1837">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1837">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1838">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1838">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1839">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1839">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1840">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1840">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1841">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1841">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1842">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1842">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1843">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1843">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1844">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1844">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1845">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1845">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1846">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1846">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1847">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1847">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1848"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1848">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1849">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1849">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1850">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1850">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1851">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1851">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1852">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1852">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1853">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1853">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1854">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1854">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1855">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1855">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1856">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1856">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1857">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1857">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1858">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1858">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1859">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1859">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1860"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1860">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1861">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1861">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1862">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1862">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1863">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1863">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1864">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1864">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1865">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1865">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1866">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1866">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1867">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1867">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1868">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1868">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1869">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1869">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1870">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1870">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1871">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1871">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1872"><see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1872">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1873">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusDown" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1873">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1874">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1874">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1875">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1875">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1876">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1876">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1877">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1877">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1878">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1878">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1879">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1879">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1880">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1880">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1881">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1881">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1882">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1882">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1883">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1883">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1884"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1884">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1885">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie jest zgłaszane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1885">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="a0fdb-1886">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1886">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1887">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1887">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1888">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1888">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1889">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1889">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a0fdb-1890">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzeń w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1890">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1891">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1891">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1892">Oznaczanie zdarzenia jako obsługiwanego jest nadal przydatne do zapobiegania wywoływaniu typowych programów obsługi wystąpień (tych, `handledEventsToo`które nie są określone).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1892">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1893"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1893">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1894">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1894">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1895">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1895">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1896">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1896">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1897">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1897">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1898">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1898">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1899">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1899">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1900">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1900">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1901">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1901">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1902">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1902">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1903">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1903">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1904">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1904">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1905"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1905">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1906">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1906">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1907">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1907">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1908">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1908">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1909">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1909">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1910">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1910">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1911">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1911">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1912">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1912">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1913">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1913">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1914">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1914">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1915">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1915">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1916">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1916">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1917"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1917">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1918">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie jest zgłaszane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1918">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="a0fdb-1919">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1919">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1920">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1920">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1921">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1921">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="a0fdb-1922">Możesz wywoływać bazę przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1922">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="a0fdb-1923">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzeń w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1923">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1924">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1924">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1925">Oznaczanie zdarzenia jako obsługiwanego jest nadal przydatne do zapobiegania wywoływaniu typowych programów obsługi wystąpień (tych, `handledEventsToo`które nie są określone).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1925">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1926"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1926">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1927">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusMove" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1927">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1928">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1928">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1929">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1929">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1930">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1930">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1931">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1931">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1932">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1932">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1933">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1933">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1934">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1934">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1935">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1935">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1936">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1936">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1937">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1937">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1938"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1938">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1939">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1939">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1940">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1940">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1941">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1941">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1942">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1942">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1943">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1943">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1944">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1944">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1945">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1945">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1946">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1946">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1947">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1947">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1948">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1948">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1949">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1949">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1950"><see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1950">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1951">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1951">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1952">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1952">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1953">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1953">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1954">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1954">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1955">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1955">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1956">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1956">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1957">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1957">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1958">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1958">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1959">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1959">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1960">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1960">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1961">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1961">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1962"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1962">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1963">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.Stylus.StylusUp" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1963">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1964">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1964">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1965">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1965">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1966">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1966">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1967">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1967">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1968">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1968">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1969">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1969">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1970">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1970">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1971">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1971">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1972">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1972">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1973">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1973">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1974"><see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1974">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1975">Wywoływany, gdy nieobsłużone <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> zdarzenie dołączono do elementu w trasie, który jest pochodną tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1975">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="a0fdb-1976">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1976">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1977">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1977">This method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1978">Ponieważ Klasa pośrednicząca w dziedziczeniu może implementować tę metodę, zalecamy wywołanie podstawowej implementacji w implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1978">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="a0fdb-1979">Celem tej metody jest podobna do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorca zdarzenia w\* metodach: Ta metoda zapewnia metodę obsługi pasującego zdarzenia z klas pochodnych przez ustanowienie procedury obsługi klas zamiast procedury obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1979">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="a0fdb-1980">W takim przypadku zdarzenie dopasowywania jest zdarzeniem kierowanym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1980">In this case the matching event is a routed event.</span></span> <span data-ttu-id="a0fdb-1981">Wzorzec implementacji metod on\* jest różny dla zdarzeń kierowanych, ponieważ zdarzenie trasowane może zostać zgłoszone przez element podrzędny, który nie musi być elementem, który wywoła procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1981">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="a0fdb-1982">W związku z tym implementacja musi przeanalizować właściwości źródłowe danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1982">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="a0fdb-1983">Nie należy próbować ponownie podnieść poziomu zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1983">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="a0fdb-1984">Przez zastąpienie tej metody lub przez zarejestrowanie obsługi klas z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, <xref:System.Windows.ContentElement> klasy pochodne mogą wywołać metody obsługi klasy prywatnej, gdy zdarzenie jest odbierane wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1984">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="a0fdb-1985">Jednym z scenariuszy, w których obsługiwana jest Klasa, jest manipulowanie danymi zdarzenia i oznaczenie zdarzenia kierowanego jako obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1985">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1986">A <see cref="T:System.Windows.Input.TouchEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1986">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1987">Zapewnia obsługę klas dla <see cref="E:System.Windows.ContentElement.TouchDown" /> zdarzenia kierowanego, które występuje po naciśnięciu dotknięcia wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1987">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1988"><xref:System.Windows.ContentElement.OnTouchDown%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1988">The <xref:System.Windows.ContentElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1989">Przesłoń <xref:System.Windows.ContentElement.OnTouchDown%2A> w klasie pochodnej, aby <xref:System.Windows.ContentElement.TouchDown> obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1989">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchDown> event.</span></span> <span data-ttu-id="a0fdb-1990">Należy pamiętać, aby wywołać <xref:System.Windows.ContentElement.OnTouchDown%2A> metodę klasy bazowej, tak aby klasy podstawowe otrzymywały zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1990">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1991">A <see cref="T:System.Windows.Input.TouchEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1991">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1992">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchEnter" /> zdarzenia trasowanego, gdy nastąpi przejście z zewnątrz do wewnątrz granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1992">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1993"><xref:System.Windows.ContentElement.OnTouchEnter%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1993">The <xref:System.Windows.ContentElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1994">Przesłoń <xref:System.Windows.ContentElement.OnTouchEnter%2A> w klasie pochodnej, aby <xref:System.Windows.ContentElement.TouchEnter> obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1994">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchEnter> event.</span></span> <span data-ttu-id="a0fdb-1995">Należy pamiętać, aby wywołać <xref:System.Windows.ContentElement.OnTouchEnter%2A> metodę klasy bazowej, tak aby klasy podstawowe otrzymywały zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1995">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-1996">A <see cref="T:System.Windows.Input.TouchEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1996">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-1997">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchLeave" /> zdarzenia trasowanego, gdy nastąpi przejście z wewnątrz do granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1997">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-1998"><xref:System.Windows.ContentElement.OnTouchLeave%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1998">The <xref:System.Windows.ContentElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="a0fdb-1999">Przesłoń <xref:System.Windows.ContentElement.OnTouchLeave%2A> w klasie pochodnej, aby <xref:System.Windows.ContentElement.TouchLeave> obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-1999">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchLeave> event.</span></span> <span data-ttu-id="a0fdb-2000">Należy pamiętać, aby wywołać <xref:System.Windows.ContentElement.OnTouchLeave%2A> metodę klasy bazowej, tak aby klasy podstawowe otrzymywały zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2000">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-2001">A <see cref="T:System.Windows.Input.TouchEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2001">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-2002">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchMove" /> zdarzenia trasowanego, gdy nastąpi przeniesienie dotyku w obrębie tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2002">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2003"><xref:System.Windows.ContentElement.OnTouchMove%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2003">The <xref:System.Windows.ContentElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="a0fdb-2004">Przesłoń <xref:System.Windows.ContentElement.OnTouchMove%2A> w klasie pochodnej, aby <xref:System.Windows.ContentElement.TouchMove> obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2004">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchMove> event.</span></span> <span data-ttu-id="a0fdb-2005">Należy pamiętać, aby wywołać <xref:System.Windows.ContentElement.OnTouchMove%2A> metodę klasy bazowej, tak aby klasy podstawowe otrzymywały zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2005">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-2006">A <see cref="T:System.Windows.Input.TouchEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2006">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a0fdb-2007">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchUp" /> zdarzenia trasowanego, gdy nastąpi wyprowadzenie dotyku wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2007">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2008"><xref:System.Windows.ContentElement.OnTouchUp%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2008">The <xref:System.Windows.ContentElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="a0fdb-2009">Przesłoń <xref:System.Windows.ContentElement.OnTouchUp%2A> w klasie pochodnej, aby <xref:System.Windows.ContentElement.TouchUp> obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2009">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchUp> event.</span></span> <span data-ttu-id="a0fdb-2010">Należy pamiętać, aby wywołać <xref:System.Windows.ContentElement.OnTouchUp%2A> metodę klasy bazowej, tak aby klasy podstawowe otrzymywały zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2010">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="contentElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a0fdb-2011">Kierunek żądanego przechodzenia fokusu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2011">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="a0fdb-2012">Gdy jest zastępowany w klasie pochodnej, zwraca element, który otrzymuje fokus dla określonego kierunku przechodzenia fokusu, bez faktycznego przesuwania fokusu do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2012">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-2013">Element, który uzyskał fokus, jeśli <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> został faktycznie wywołany.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2013">The element that would have received focus if <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2014">Domyślna implementacja tej metody w tej klasie jest niekompletna i zawsze zwraca wartość `null`.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2014">The default implementation of this method in this class is incomplete and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2015">Występuje, gdy system wejściowy zgłosi bazowe zdarzenie przeciągania z tym elementem jako element docelowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2015">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2016">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewDragEnter> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2016">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2017">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewDragEnter> zdarzenia są dołączone do <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2017">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2018">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2018">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2019">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2019">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="a0fdb-2020">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2020">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2021">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2021">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2022">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2022">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2023">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2023">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2024">Przesłoń <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2024">Override <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2025">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2025">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2026">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2026">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2027">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2027">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2028">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2028">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2029">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2029">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2030">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2030">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2031">Występuje, gdy system wejściowy zgłosi bazowe zdarzenie przeciągania przy użyciu tego elementu jako punktu początkowego przeciągania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2031">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2032">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewDragLeave> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2032">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2033">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewDragLeave> zdarzenia są dołączone do <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2033">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2034">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2034">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2035">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2035">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="a0fdb-2036">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2036">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2037">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2037">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2038">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2038">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2039">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2039">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2040">Przesłoń <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2040">Override <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2041">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2041">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2042">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2042">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2043">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2043">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2044">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2044">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2045">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2045">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2046">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2046">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2047">Występuje, gdy system wejściowy zgłosi bazowe zdarzenie przeciągania z tym elementem jako potencjalną tarczą docelową.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2047">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2048">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewDragOver> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2048">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2049">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewDragOver> zdarzenia są dołączone do <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2049">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2050">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2050">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2051">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2051">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragOverEvent>|  
|<span data-ttu-id="a0fdb-2052">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2052">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2053">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2053">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2054">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2054">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2055">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2055">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2056">Przesłoń <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2056">Override <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2057">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2057">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2058">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2058">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2059">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2059">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2060">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2060">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2061">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2061">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2062">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2062">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2063">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tym elementem jako element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2063">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2064">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewDrop> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2064">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDrop> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2065">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewDrop> zdarzenia są dołączone do <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2065">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2066">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2066">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2067">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2067">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDropEvent>|  
|<span data-ttu-id="a0fdb-2068">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2068">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2069">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2069">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2070">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2070">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2071">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2071">The corresponding bubbling event is <xref:System.Windows.ContentElement.Drop>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2072">Przesłoń <xref:System.Windows.ContentElement.OnPreviewDrop%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2072">Override <xref:System.Windows.ContentElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2073">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewDrop" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2073">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2074">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2074">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2075">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2075">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2076">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2076">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2077">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2077">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2078">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2078">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2079">Występuje po rozpoczęciu operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2079">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2080"><xref:System.Windows.ContentElement.PreviewGiveFeedback> Zdarzenie włącza Źródło zdarzenia przeciągania, aby zmodyfikować jego wygląd, aby dać użytkownikowi opinię wizualną podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2080">The <xref:System.Windows.ContentElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="a0fdb-2081">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewGiveFeedback> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2081">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2082">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewGiveFeedback> zdarzenia są dołączone do <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2082">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2083">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2083">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2084">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2084">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="a0fdb-2085">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2085">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2086">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2086">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2087">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2087">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2088">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2088">The corresponding bubbling event is <xref:System.Windows.ContentElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2089">Przesłoń <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2089">Override <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2090">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2090">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2091">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2091">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2092">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2092">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2093">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2093">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2094">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2094">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2095">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2095">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2096">Występuje, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2096">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2097">Ponieważ to zdarzenie używa routingu tunelowania, element, który ma fokus, może być elementem podrzędnym zamiast elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2097">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a0fdb-2098"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź dane zdarzenia, aby określić rzeczywisty element, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2098">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="a0fdb-2099">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2099">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2100">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> zdarzenia są dołączone do <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2100">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2101">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2101">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2102">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2102">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="a0fdb-2103">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2103">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2104">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2104">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2105">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2105">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2106">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2106">The corresponding bubbling event is <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2107">Przesłoń <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2107">Override <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2108">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2108">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2109">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2109">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2110">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2110">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2111">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2111">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2112">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2112">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2113">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2113">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2114">Występuje po naciśnięciu klawisza, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2114">Occurs when a key is pressed while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2115">Obsługa kluczowych współdziała z innymi funkcjami platformy, takimi jak tworzenie poleceń i składanie tekstu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2115">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="a0fdb-2116"><xref:System.Windows.ContentElement.KeyDown> Zdarzenie jest zdarzeniem wprowadzania tekstu niższego poziomu, które może nie zachowywać się zgodnie z oczekiwaniami w niektórych kontrolkach.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2116">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="a0fdb-2117">Wynika to z faktu, że niektóre kontrolki mają założenia kontrolne lub obsługujące klasy, które udostępniają wyższego poziomu obsługę wprowadzania tekstu i powiązane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2117">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="a0fdb-2118">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewKeyDown> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2118">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2119">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewKeyDown> zdarzenia są dołączone do <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2119">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2120">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2121">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2121">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="a0fdb-2122">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2122">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2123">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2123">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2124">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2124">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2125">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2125">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2126">Przesłoń <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2126">Override <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2127">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2127">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2128">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2128">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2129">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2129">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2130">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2130">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2131">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2131">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2132">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2132">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2133">Występuje po wydaniu klucza, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2133">Occurs when a key is released while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2134">Obsługa kluczowych współdziała z innymi funkcjami platformy, takimi jak tworzenie poleceń i składanie tekstu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2134">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="a0fdb-2135"><xref:System.Windows.ContentElement.KeyUp> Zdarzenie jest zdarzeniem wprowadzania tekstu niższego poziomu, które może nie zachowywać się zgodnie z oczekiwaniami w niektórych kontrolkach.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2135">The <xref:System.Windows.ContentElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="a0fdb-2136">Wynika to z faktu, że niektóre kontrolki mają założenia kontrolne lub obsługujące klasy, które udostępniają wyższego poziomu obsługę wprowadzania tekstu i powiązane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2136">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="a0fdb-2137">Aby uzyskać szczegółowe informacje, zapoznaj się z dokumentacją dla poszczególnych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2137">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="a0fdb-2138">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewKeyUp> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2138">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2139">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewKeyUp> zdarzenia są dołączone do <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2139">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2140">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2140">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2141">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2141">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="a0fdb-2142">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2142">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2143">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2143">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2144">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2144">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2145">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2145">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2146">Przesłoń <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2146">Override <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2147">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2147">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2148">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2148">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2149">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2149">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2150">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2150">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2151">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2151">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2152">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2152">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2153">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2153">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2154">Ponieważ to zdarzenie używa routingu tunelowania, element, który utracił fokus, może być elementem podrzędnym zamiast elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2154">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="a0fdb-2155"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź dane zdarzenia, aby określić rzeczywisty element, który utracił fokus.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2155">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="a0fdb-2156">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2156">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2157">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> zdarzenia są dołączone do <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2157">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2158">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2158">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2159">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2159">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="a0fdb-2160">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2160">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2161">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2161">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2162">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2162">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2163">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2163">The corresponding bubbling event is <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2164">Przesłoń <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2164">Override <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2165">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2165">Identifies the <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2166">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2166">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2167">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2167">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2168">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2168">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2169">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2169">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2170">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2170">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2171">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2171">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2172">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewMouseDown> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2172">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2173">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2173">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2174">Zdarzenie jest często wywoływane razem z albo <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, które odpowiada naciśnięciu jednego z dwóch standardowych przycisków myszy. <xref:System.Windows.ContentElement.PreviewMouseDown></span><span class="sxs-lookup"><span data-stu-id="a0fdb-2174">The <xref:System.Windows.ContentElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a0fdb-2175"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>i <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> są także zdarzenia kierowane, ale są to zdarzenia bezpośrednie kierowane, a odpowiednie zdarzenie specyficzne dla przycisku jest zgłaszane, <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> gdy zdarzenie osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2175"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a0fdb-2176">Zobacz uwagi dla <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2176">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2177">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2177">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2178">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2178">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="a0fdb-2179">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2179">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2180">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2180">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2181">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2181">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2182">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2182">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2183">Przesłoń <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2183">Override <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2184">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2184">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2185">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2185">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2186">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2186">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2187">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2187">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2188">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2188">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2189">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2189">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2190">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2190">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2191">Mimo że te [routowane zdarzenia](~/docs/framework/wpf/advanced/routed-events-overview.md) są zgodne z trasą tunelowania za pośrednictwem drzewa elementu, to w rzeczywistości jest zdarzenie bezpośrednie kierowane, które jest zgłaszane i ponownie zgłaszane w drzewie <xref:System.Windows.ContentElement>elementów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2191">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-2192">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportują charakterystyczne dla przycisku myszy zdarzenia bazowego <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> , które jest dołączonym zdarzeniem przetwarzanym przez każdy element wraz z trasą zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2192">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a0fdb-2193">Argumenty tego zdarzenia uwidaczniają argumenty bazowego <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2193">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a0fdb-2194">Jeśli to zdarzenie jest oznaczone jako obsługiwane wzdłuż trasy zdarzenia, są nadal wywoływane zdarzenia dotyczące przycisku myszy. Jednak programy obsługi zdarzeń dla przycisku myszy muszą być dodawane jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją obsługi zdarzeń, które są już oznaczone jako obsługiwane, aby były detektorami zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2194">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="a0fdb-2195">Koncepcyjnie, pomyśl o tym zdarzeniu (i innych zdarzeniach myszy w <xref:System.Windows.ContentElement>systemie) jako myszy "usługi" (z definicją usługi dostarczaną <xref:System.Windows.Input.Mouse> przez klasę).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2195">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a0fdb-2196">Zdarzenie dodaje wygodę niezbędną do sprawdzania, czy Stany przycisków myszy (w górę i w dół) oryginalnych zdarzeń myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2196">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a0fdb-2197">W przypadku bardziej zaawansowanych scenariuszy, takich jak sprawdzanie Stanów przycisków niestandardowymi, może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> <xref:System.Windows.ContentElement>klasy w klasie zamiast.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2197">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2198">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2198">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2199">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2199">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="a0fdb-2200">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2200">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2201">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2201">Direct</span></span>|  
|<span data-ttu-id="a0fdb-2202">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2202">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2203">Przesłoń <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2203">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2204">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2204">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2205">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2205">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2206">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2206">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2207">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2207">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2208">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2208">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2209">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2209">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2210">Występuje po udostępnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2210">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2211">Mimo że te [routowane zdarzenia](~/docs/framework/wpf/advanced/routed-events-overview.md) są zgodne z trasą tunelowania za pośrednictwem drzewa elementu, to w rzeczywistości jest zdarzenie bezpośrednie kierowane, które jest zgłaszane i ponownie zgłaszane w drzewie <xref:System.Windows.ContentElement>elementów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2211">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-2212">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportują charakterystyczne dla przycisku myszy zdarzenia bazowego <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> , które jest dołączonym zdarzeniem przetwarzanym przez każdy element wraz z trasą zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2212">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a0fdb-2213">Argumenty tego zdarzenia uwidaczniają argumenty bazowego <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2213">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a0fdb-2214">Jeśli to zdarzenie jest oznaczone jako obsługiwane wzdłuż trasy zdarzenia, są nadal wywoływane zdarzenia dotyczące przycisku myszy. Jednak programy obsługi zdarzeń dla przycisku myszy muszą być dodawane jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją obsługi zdarzeń, które są już oznaczone jako obsługiwane, aby były detektorami zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2214">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="a0fdb-2215">Koncepcyjnie, pomyśl o tym zdarzeniu (i innych zdarzeniach myszy w <xref:System.Windows.ContentElement>systemie) jako myszy "usługi" (z definicją usługi dostarczaną <xref:System.Windows.Input.Mouse> przez klasę).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2215">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a0fdb-2216">Zdarzenie dodaje wygodę niezbędną do sprawdzania, czy Stany przycisków myszy (w górę i w dół) oryginalnych zdarzeń myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2216">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a0fdb-2217">W przypadku bardziej zaawansowanych scenariuszy, takich jak sprawdzanie Stanów przycisków niestandardowymi, może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> <xref:System.Windows.ContentElement>klasy w klasie zamiast.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2217">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2218">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2218">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2219">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2219">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="a0fdb-2220">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2220">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2221">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2221">Direct</span></span>|  
|<span data-ttu-id="a0fdb-2222">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2222">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2223">Przesłoń <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2223">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2224">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2224">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2225">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2225">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2226">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2227">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2227">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2228">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2228">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2229">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2229">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2230">Występuje po przesunięciu wskaźnika myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2230">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2231">To zdarzenie występuje, gdy wskaźnik myszy najpierw przechodzi do granic elementów, a także gdy wskaźnik myszy jest przenoszony, gdy nadal pozostały w granicach elementów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2231">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="a0fdb-2232">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewMouseMove> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2232">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2233">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2233">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2234">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2234">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2235">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2235">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="a0fdb-2236">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2236">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2237">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2237">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2238">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2238">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2239">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2239">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2240">Przesłoń <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2240">Override <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2241">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2241">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2242">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2242">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2243">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2243">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2244">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2244">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2245">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2245">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2246">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2246">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2247">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2247">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2248">Mimo że te [routowane zdarzenia](~/docs/framework/wpf/advanced/routed-events-overview.md) są zgodne z trasą tunelowania za pośrednictwem drzewa elementu, to w rzeczywistości jest zdarzenie bezpośrednie kierowane, które jest zgłaszane i ponownie zgłaszane w drzewie <xref:System.Windows.ContentElement>elementów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2248">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-2249">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportują charakterystyczne dla przycisku myszy zdarzenia bazowego <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> , które jest dołączonym zdarzeniem przetwarzanym przez każdy element wraz z trasą zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2249">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a0fdb-2250">Argumenty tego zdarzenia uwidaczniają argumenty bazowego <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2250">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a0fdb-2251">Jeśli to zdarzenie jest oznaczone jako obsługiwane wzdłuż trasy zdarzenia, są nadal wywoływane zdarzenia dotyczące przycisku myszy. Jednak programy obsługi zdarzeń dla przycisku myszy muszą być dodawane jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją obsługi zdarzeń, które są już oznaczone jako obsługiwane, aby były detektorami zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2251">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="a0fdb-2252">Koncepcyjnie, pomyśl o tym zdarzeniu (i innych zdarzeniach myszy w <xref:System.Windows.ContentElement>systemie) jako myszy "usługi" (z definicją usługi dostarczaną <xref:System.Windows.Input.Mouse> przez klasę).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2252">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a0fdb-2253">Zdarzenie dodaje wygodę niezbędną do sprawdzania, czy Stany przycisków myszy (w górę i w dół) oryginalnych zdarzeń myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2253">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a0fdb-2254">W przypadku bardziej zaawansowanych scenariuszy, takich jak sprawdzanie Stanów przycisków niestandardowymi, może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> <xref:System.Windows.ContentElement>klasy w klasie zamiast.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2254">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2255">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2255">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2256">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2256">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="a0fdb-2257">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2257">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2258">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2258">Direct</span></span>|  
|<span data-ttu-id="a0fdb-2259">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2259">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2260">Przesłoń <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2260">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2261">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2261">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2262">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2262">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2263">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2264">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2264">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2265">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2265">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2266">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2266">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2267">Występuje po udostępnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2267">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2268">Mimo że te [routowane zdarzenia](~/docs/framework/wpf/advanced/routed-events-overview.md) są zgodne z trasą tunelowania za pośrednictwem drzewa elementu, to w rzeczywistości jest zdarzenie bezpośrednie kierowane, które jest zgłaszane i ponownie zgłaszane w drzewie <xref:System.Windows.ContentElement>elementów.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2268">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-2269">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportują charakterystyczne dla przycisku myszy zdarzenia bazowego <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> , które jest dołączonym zdarzeniem przetwarzanym przez każdy element wraz z trasą zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2269">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="a0fdb-2270">Argumenty tego zdarzenia uwidaczniają argumenty bazowego <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2270">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="a0fdb-2271">Jeśli to zdarzenie jest oznaczone jako obsługiwane wzdłuż trasy zdarzenia, są nadal wywoływane zdarzenia dotyczące przycisku myszy. Jednak programy obsługi zdarzeń dla przycisku myszy muszą być dodawane jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją obsługi zdarzeń, które są już oznaczone jako obsługiwane, aby były detektorami zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2271">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="a0fdb-2272">Koncepcyjnie, pomyśl o tym zdarzeniu (i innych zdarzeniach myszy w <xref:System.Windows.ContentElement>systemie) jako myszy "usługi" (z definicją usługi dostarczaną <xref:System.Windows.Input.Mouse> przez klasę).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2272">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="a0fdb-2273">Zdarzenie dodaje wygodę niezbędną do sprawdzania, czy Stany przycisków myszy (w górę i w dół) oryginalnych zdarzeń myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2273">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="a0fdb-2274">W przypadku bardziej zaawansowanych scenariuszy, takich jak sprawdzanie Stanów przycisków niestandardowymi, może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] <xref:System.Windows.Input.Mouse> <xref:System.Windows.ContentElement>klasy w klasie zamiast.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2274">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2275">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2275">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2276">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2276">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="a0fdb-2277">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2277">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2278">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2278">Direct</span></span>|  
|<span data-ttu-id="a0fdb-2279">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2279">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2280">Przesłoń <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2280">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2281">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2281">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2282">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2282">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2283">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2283">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2284">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2284">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2285">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2285">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2286">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2286">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2287">Występuje po wydaniu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2287">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2288">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewMouseUp> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2288">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2289">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewMouseUp> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2289">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2290">Zdarzenie jest często wywoływane razem z albo <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, które odpowiada naciśnięciu jednego z dwóch standardowych przycisków myszy. <xref:System.Windows.ContentElement.PreviewMouseUp></span><span class="sxs-lookup"><span data-stu-id="a0fdb-2290">The <xref:System.Windows.ContentElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="a0fdb-2291"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>i <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> są także zdarzenia kierowane, ale są to zdarzenia bezpośrednie kierowane, a odpowiednie zdarzenie specyficzne dla przycisku jest zgłaszane, <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> gdy zdarzenie osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2291"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="a0fdb-2292">Zobacz uwagi dla <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2292">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2293">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2293">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2294">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2294">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="a0fdb-2295">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2295">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2296">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2296">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2297">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2297">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2298">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2298">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2299">Przesłoń <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2299">Override <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2300">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2300">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2301">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2301">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2302">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2302">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2303">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2303">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2304">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2304">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2305">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2305">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2306">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2306">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2307">Przechwycenie fokusu lub myszy ma pierwszeństwo przed miejscem, gdzie wskaźnik myszy jest; w związku z tym, jeśli otrzymasz to zdarzenie z elementu skoncentrowanego lub przechwyconego, wskaźnik myszy może faktycznie znajdować się nad innym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2307">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="a0fdb-2308">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewMouseMove> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2308">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2309">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2309">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2310">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2310">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2311">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2311">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="a0fdb-2312">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2312">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2313">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2313">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2314">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2314">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2315">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2315">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2316">Przesłoń <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2316">Override <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2317">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2317">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2318">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2318">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2319">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2319">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2320">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2320">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2321">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2321">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2322">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2322">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2323">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2323">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2324"><xref:System.Windows.ContentElement.PreviewQueryContinueDrag> Zdarzenie włącza Źródło przeciągania, aby zadeklarować, czy operacja przeciągania i upuszczania powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2324">The <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="a0fdb-2325">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2325">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2326">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> zdarzenia są dołączone do <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2326">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2327">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2327">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2328">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2328">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="a0fdb-2329">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2329">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2330">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2330">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2331">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2331">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2332">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2332">The corresponding bubbling event is <xref:System.Windows.ContentElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2333">Przesłoń <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2333">Override <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2334">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2334">Identifies the <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2335">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2335">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2336">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2336">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2337">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2337">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2338">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2338">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2339">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2339">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2340">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2340">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2341">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewStylusButtonDown> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2341">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2342">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewStylusButtonDown> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2342">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2343">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2343">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2344">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2344">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2345">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2345">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2346">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2346">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="a0fdb-2347">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2347">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2348">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2348">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2349">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2349">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2350">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2350">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2351">Przesłoń <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2351">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2352">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2352">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2353">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2353">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2354">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2354">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2355">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2355">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2356">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2356">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2357">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2357">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2358">Występuje po udostępnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2358">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2359">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewStylusButtonUp> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2359">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2360">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewStylusButtonUp> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2360">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2361">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2361">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2362">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2362">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2363">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2363">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2364">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2364">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="a0fdb-2365">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2365">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2366">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2366">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2367">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2367">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2368">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2368">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2369">Przesłoń <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2369">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2370">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2370">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2371">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2371">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2372">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2372">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2373">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2373">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2374">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2374">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2375">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2375">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2376">Występuje po dotknięciu dyskretyzatora przez pióro, gdy znajduje się on nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2376">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2377">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewStylusDown> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2377">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2378">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewStylusDown> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2378">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2379">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2379">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2380">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2380">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2381">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2381">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2382">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2382">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="a0fdb-2383">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2383">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2384">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2384">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2385">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2385">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2386">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2386">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2387">Przesłoń <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2387">Override <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2388">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2388">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2389">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2389">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2390">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2390">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2391">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2391">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2392">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2392">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2393">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2393">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2394">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2394">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2395">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewStylusInAirMove> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2395">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2396">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewStylusInAirMove> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2396">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2397">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2397">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2398">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2398">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2399">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2399">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2400">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2400">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="a0fdb-2401">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2401">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2402">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2402">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2403">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2403">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2404">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2404">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2405">Przesłoń <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2405">Override <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2406">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2406">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2407">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2407">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2408">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2408">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2409">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2409">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2410">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2410">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2411">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2411">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2412">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2412">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2413">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewStylusInRange> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2413">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2414">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewStylusInRange> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2414">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2415">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2415">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2416">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2416">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2417">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2417">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2418">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2418">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="a0fdb-2419">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2419">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2420">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2420">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2421">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2421">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2422">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2422">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2423">Przesłoń <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2423">Override <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2424">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2424">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2425">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2425">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2426">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2426">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2427">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2427">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2428">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2428">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2429">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2429">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2430">Występuje, gdy pióro jest przemieszczane nad elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2430">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="a0fdb-2431">Pióro musi zostać przeniesione podczas wykrywania przez dyskretyzatora, aby zgłosić to zdarzenie, w przeciwnym razie <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> zostanie zgłoszone.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2431">The stylus must move while being detected by the  digitizer  to raise this event, otherwise, <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2432">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewStylusMove> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2432">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2433">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewStylusMove> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2433">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2434">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2434">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2435">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2435">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2436">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2436">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2437">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2437">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="a0fdb-2438">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2438">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2439">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2439">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2440">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2440">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2441">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2441">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2442">Przesłoń <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2442">Override <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2443">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2443">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2444">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2444">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2445">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2445">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2446">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2446">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2447">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2447">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2448">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2448">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2449">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2449">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2450">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2450">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2451">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2451">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2452">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2452">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2453">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2453">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2454">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2454">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2455">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2455">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="a0fdb-2456">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2456">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2457">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2457">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2458">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2458">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2459">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2459">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2460">Przesłoń <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2460">Override <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2461">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2461">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2462">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2462">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2463">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2463">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2464">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2464">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2465">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2465">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2466">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2466">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2467">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2467">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2468">Informacje o gestach pióra znajdują się w temacie <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2468">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="a0fdb-2469">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2469">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2470">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2470">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2471">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2471">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2472">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2472">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2473">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2473">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2474">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2474">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="a0fdb-2475">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2475">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2476">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2476">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2477">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2477">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2478">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2478">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2479">Przesłoń <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2479">Override <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2480">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2480">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2481">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2481">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2482">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2482">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2483">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2483">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2484">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2484">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2485">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2485">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2486">Występuje, gdy użytkownik wywołuje pióro, gdy pióro znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2486">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2487">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewStylusDown> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2487">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2488">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewStylusDown> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2488">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2489">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2489">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2490">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2490">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2491">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2491">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2492">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2492">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="a0fdb-2493">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2493">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2494">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2494">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2495">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2495">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2496">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2496">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2497">Przesłoń <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2497">Override <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2498">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2498">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2499">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2499">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2500">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2500">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2501">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2501">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2502">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2502">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2503">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2503">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2504">Występuje, gdy ten element Pobiera tekst w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2504">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2505">To <xref:System.Windows.ContentElement.PreviewTextInput> zdarzenie umożliwia składnikowi lub aplikacji nasłuchiwanie danych tekstowych w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2505">The <xref:System.Windows.ContentElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="a0fdb-2506">Klawiatura to podstawowy środek <xref:System.Windows.ContentElement.PreviewTextInput>, ale może również generować <xref:System.Windows.ContentElement.PreviewTextInput>mowę, pismo ręczne i inne urządzenia wejściowe.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2506">The keyboard is the primary means of <xref:System.Windows.ContentElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="a0fdb-2507">Ze względu na kombinacje klawiszy — w domyślnych klawiaturach lub za pomocą edytorów metod wejściowych — wiele kluczowych zdarzeń może wywoływać tylko jedno zdarzenie wejściowe tekstu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2507">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="a0fdb-2508">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.PreviewTextInput> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2508">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2509">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.PreviewTextInput> zdarzenia są dołączone do <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2509">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2510">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2510">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2511">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2511">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTextInputEvent>|  
|<span data-ttu-id="a0fdb-2512">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2512">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2513">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2513">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2514">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2514">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2515">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2515">The corresponding bubbling event is <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2516">Przesłoń <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2516">Override <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2517">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2517">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2518">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2518">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2519">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2519">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2520">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2520">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2521">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2521">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2522">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2522">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2523">Występuje, gdy palec dotyka ekranu, gdy palcem znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2523">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2524">Domyślnie <xref:System.Windows.ContentElement.PreviewTouchDown> zdarzenia i <xref:System.Windows.ContentElement.TouchDown> nie pojawiają się do momentu dotknięcia ekranu i przeniesienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2524">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="a0fdb-2525">Naciśnięcie palca na ekranie i jego utrzymywanie bez przesuwania powoduje zachowanie <xref:System.Windows.Input.Stylus>nacisku i blokady.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2525">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="a0fdb-2526">Zachowanie naciskania i przytrzymania jest równoważne kliknięciu prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2526">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="a0fdb-2527">Aby spowodować, <xref:System.Windows.ContentElement.PreviewTouchDown> że <xref:System.Windows.ContentElement.TouchDown> zdarzenia i wystąpienia są wykonywane zaraz po dotknięciu ekranu palcem, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> właściwość dołączone na `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2527">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2528">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2528">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2529">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2529">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="a0fdb-2530">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2530">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2531">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2531">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2532">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2532">Delegate</span></span>|<span data-ttu-id="a0fdb-2533"><xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2533"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a0fdb-2534">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2534">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2535">Przesłoń <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2535">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2536">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2536">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2537">Występuje, gdy palec jest przenoszony na ekranie, gdy palcem znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2537">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2538">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2538">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2539">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2539">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="a0fdb-2540">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2540">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2541">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2541">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2542">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2542">Delegate</span></span>|<span data-ttu-id="a0fdb-2543"><xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2543"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a0fdb-2544">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2544">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2545">Przesłoń <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2545">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2546">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2546">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2547">Występuje, gdy Finger zostanie wysunięty z ekranu, gdy palcem znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2547">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2548">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2548">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2549">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2549">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="a0fdb-2550">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2550">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2551">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2551">Tunneling</span></span>|  
|<span data-ttu-id="a0fdb-2552">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2552">Delegate</span></span>|<span data-ttu-id="a0fdb-2553"><xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2553"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a0fdb-2554">Odpowiednie zdarzenie propagacji to <xref:System.Windows.ContentElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2554">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2555">Przesłoń <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2555">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2556">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2556">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2557">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2557">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2558"><xref:System.Windows.ContentElement.QueryContinueDrag> Zdarzenie włącza Źródło przeciągania, aby określić, czy operacja przeciągania i upuszczania powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2558">The <xref:System.Windows.ContentElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="a0fdb-2559">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.QueryContinueDrag> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2559">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2560">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.QueryContinueDrag> zdarzenia są dołączone do <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2560">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2561">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2561">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2562">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2562">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryContinueDragEvent>|  
|<span data-ttu-id="a0fdb-2563">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2563">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2564">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2564">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2565">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2565">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2566">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2566">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2567">Przesłoń <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2567">Override <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2568">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2568">Identifies the <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2569">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2569">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2570">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2570">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2571">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2571">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2572">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2572">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2573">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2573">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2574">Występuje po zażądaniu wyświetlenia kursora.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2574">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="a0fdb-2575">To zdarzenie jest wywoływane na elemencie za każdym razem, gdy wskaźnik myszy jest przenoszony do nowej lokalizacji, co oznacza, że obiekt kursora może wymagać zmiany na podstawie jego nowej pozycji.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2575">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2576">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.QueryCursor> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2576">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryCursor> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2577">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.QueryCursor> zdarzenia są dołączone do <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2577">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2578">Kursor, do którego odwołuje się ta nazwa zdarzenia, nie musi być kursorem tekstu (czasami znanym jako punkt wstawiania).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2578">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="a0fdb-2579">Zamiast tego kursor w tym kontekście jest obiektem, który deklaruje wyświetlacz graficzny Onscreen związany z kilkoma możliwymi urządzeniami wejściowymi lub koncepcjami w programowaniu systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2579">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="a0fdb-2580">Ten obiekt jest reprezentowany przez <xref:System.Windows.Input.Cursor> klasę w WPF.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2580">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="a0fdb-2581">System wprowadzania WPF umożliwia zmianę tego kursora, gdy reprezentuje pozycję na ekranie wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2581">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="a0fdb-2582">Można użyć wstępnie zdefiniowanych wartości z <xref:System.Windows.Input.Cursors> wyliczenia lub można zadeklarować niestandardowy kursor jako plik obrazu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2582">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="a0fdb-2583">Nasłuchiwanie <xref:System.Windows.ContentElement.QueryCursor> dla zdarzenia nie jest efektywną techniką dla zarządzania kursorem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2583">Listening for the <xref:System.Windows.ContentElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="a0fdb-2584">Zamiast tego każdy element powinien definiować własne zachowanie kursora z <xref:System.Windows.FrameworkContentElement.Cursor%2A> i. <xref:System.Windows.FrameworkContentElement.ForceCursor%2A></span><span class="sxs-lookup"><span data-stu-id="a0fdb-2584">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="a0fdb-2585">Należy się zależeć <xref:System.Windows.ContentElement.QueryCursor> tylko, jeśli nie korzystasz z podstawowych elementów platformy WPF Framework lub w sytuacjach wyjątkowych, gdy Definiowanie zachowania kursora dla poszczególnych elementów nie spełnia Twoich potrzeb.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2585">You should only rely on <xref:System.Windows.ContentElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="a0fdb-2586">Aby uzyskać więcej informacji na temat implementowania zachowania kursora <xref:System.Windows.ContentElement.QueryCursor>w odpowiedzi <xref:System.Windows.Input.QueryCursorEventHandler>na, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2586">For more information on implementing cursor behavior in response to <xref:System.Windows.ContentElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2587">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2587">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2588">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2588">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryCursorEvent>|  
|<span data-ttu-id="a0fdb-2589">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2589">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2590">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2590">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2591">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2591">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2592">Nie zdefiniowano odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2592">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="a0fdb-2593">Przesłoń <xref:System.Windows.ContentElement.OnQueryCursor%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2593">Override <xref:System.Windows.ContentElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2594">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.QueryCursor" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2594">Identifies the <see cref="E:System.Windows.ContentElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2595">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2595">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2596">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2596">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2597">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2597">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2598">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2598">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2599">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2599">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a0fdb-2600">A <see cref="T:System.Windows.RoutedEventArgs" /> , który zawiera dane zdarzenia, a także identyfikuje zdarzenie do wywołania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2600">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="a0fdb-2601">Wywołuje określone zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2601">Raises a specific routed event.</span></span> <span data-ttu-id="a0fdb-2602">Wartość <see cref="T:System.Windows.RoutedEvent" /> do wyniesienia jest identyfikowana <see cref="T:System.Windows.RoutedEventArgs" /> w ramach podanego wystąpienia (jako <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> Właściwość danych zdarzenia).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2602">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2603">Parametr jest wpisywany jako wspólny typ podstawowy dla wszystkich danych zdarzeń kierowanych, jednak dane zdarzenia powinny być przekazywane jako najbardziej konkretny typ danych zdarzenia, który jest dostępny dla zdarzenia, które jest zgłaszane, ponieważ <xref:System.Windows.RoutedEventArgs> klasy pochodne zawierają `e` rzeczywiste specyficzne właściwości danych, które są przeznaczone dla konkretnego zdarzenia, gdy zostanie zgłoszone.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2603">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="a0fdb-2604"><xref:System.Windows.RoutedEventArgs>nie jest tylko właściwościami stanu zdarzenia; identyfikuje także, które zdarzenie zostało podniesione.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2604"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="a0fdb-2605">Ten wzorzec podnoszenia zdarzeń i dane zdarzeń kierowanych różnią się [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] od zdarzeń i klas danych, które zwykle zawierają właściwości, które są związane ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2605">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fdb-2606">Poniższy przykład tworzy dane zdarzenia, dołącza identyfikator zdarzenia do danych, a następnie używa wystąpienia danych zdarzenia do wywołania niestandardowego zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2606">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#raiseevent)]
 [!code-vb[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="contentElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-2607">Zwalnia wszystkie przechwycone urządzenia touch z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2607">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="contentElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-2608">Zwalnia funkcję przechwytywania myszy, jeśli ten element przechwytuje przechwytywanie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2608">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2609">Jeśli ten element nie zatrzymał przechwytywania, wywołanie tej metody nie ma żadnego wpływu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2609">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="a0fdb-2610">Rozważ sprawdzenie wartości <xref:System.Windows.ContentElement.IsMouseCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2610">Consider checking the value of <xref:System.Windows.ContentElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fdb-2611">Poniższy program obsługi przechwytuje lub zwalnia przechwytywanie myszy zgodnie z Stanami przycisków myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2611">The following handler captures or releases mouse capture according to mouse button states.</span></span> <span data-ttu-id="a0fdb-2612">W przykładzie pokazano, jak używać przechwyconych ruchów myszy do celów alternatywnych innych niż Przesuwanie wskaźnika myszy [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2612">The example shows how to use captured mouse movement for alternative purposes other than moving the mouse pointer in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="contentElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-2613">Zwalnia funkcję przechwytywania urządzenia pióra, jeśli ten element przechwytuje przechwytywanie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2613">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2614">Jeśli ten element nie zatrzymał przechwytywania, wywołanie tej metody nie ma żadnego wpływu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2614">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="a0fdb-2615">Rozważ sprawdzenie wartości <xref:System.Windows.ContentElement.IsStylusCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2615">Consider checking the value of <xref:System.Windows.ContentElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="a0fdb-2616">Urządzenie do wydania.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2616">The device to release.</span></span></param>
        <summary><span data-ttu-id="a0fdb-2617">Próbuje zwolnić określone urządzenie dotykowe z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2617">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-2618"><see langword="true" />Jeśli urządzenie dotykowe zostało wydane; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-2618"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a0fdb-2619"><paramref name="touchDevice" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2619"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="a0fdb-2620">Identyfikator zdarzenia kierowanego, do którego jest dołączona procedura obsługi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2620">The identifier of the.routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="a0fdb-2621">Określona implementacja programu obsługi do usunięcia z kolekcji programu obsługi zdarzeń w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2621">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="a0fdb-2622">Usuwa określony moduł obsługi zdarzeń kierowany z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2622">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2623">Najbardziej typowym scenariuszem korzystania z [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] tego programu jest [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zaimplementowanie zdarzenia "otoka", które jest skojarzone z niestandardowym zdarzeniem routingu, w szczególności w przypadku implementacji logiki "Remove" [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] dla programów obsługi na poziomie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2623">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="a0fdb-2624">W tym scenariuszu przedstawiono przykład opisany w poniższej sekcji uwagi.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2624">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="a0fdb-2625">Wywołanie tej metody nie działa, jeśli nie ma żadnych programów obsługi zarejestrowanych w kryteriach, które pasują do parametrów wejściowych dla wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2625">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="a0fdb-2626">Jeśli dołączono więcej niż jedną procedurę obsługi, która spełnia kryteria, tylko pierwsza procedura obsługi w magazynie obsługi zdarzeń zostanie usunięta.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2626">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="a0fdb-2627">To zachowanie jest spójne z [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zachowaniem `-=` operatora.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2627">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="a0fdb-2628">Nie `routedEvent` może `handler` być`null`ani.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2628">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="a0fdb-2629">Próba dostarczenia żadnej wartości jako `null` spowoduje wystąpienie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2629">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="a0fdb-2630">Ta metoda ignoruje `handledEventsToo` informacje o parametrach, które są dostępne, jeśli program obsługi został po <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> raz pierwszy dodany wraz z podpisem, który umożliwia obsługę już obsłużonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2630">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="a0fdb-2631">Każdy typ procedury obsługi jest usuwany.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2631">Either type of handler is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-2632">Zwraca czy procesy serializacji powinny serializować zawartość <see cref="P:System.Windows.ContentElement.CommandBindings" /> właściwości w wystąpieniach tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2632">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-2633"><see langword="true" />Jeśli wartość <see langword="false" />właściwości powinna być serializowana; w przeciwnym razie,. <see cref="P:System.Windows.ContentElement.CommandBindings" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-2633"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2634">Spowoduje to zwrócenie `true` wartości <xref:System.Windows.ContentElement.CommandBindings%2A> , jeśli jest ustawiona lokalnie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2634">This will return `true` if <xref:System.Windows.ContentElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="a0fdb-2635">Ta `ShouldSerialize` Metoda jest dostępna, <xref:System.Windows.UIElement.CommandBindings%2A> ponieważ właściwość nie ma prostej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2635">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="a0fdb-2636">Ta metoda wskazuje, czy właściwość została zmieniona z wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2636">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="a0fdb-2637">Ta metoda jest zazwyczaj wywoływana, jeśli tworzysz projektanta lub opracowujesz własny formant, który składa się <xref:System.Windows.UIElement>z.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2637">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-2638">Aby uzyskać więcej informacji, zobacz [Definiowanie wartości domyślnych za pomocą metod ShouldSerialize i Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2638">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0fdb-2639">Zwraca czy procesy serializacji powinny serializować zawartość <see cref="P:System.Windows.ContentElement.InputBindings" /> właściwości w wystąpieniach tej klasy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2639">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="a0fdb-2640"><see langword="true" />Jeśli wartość <see langword="false" />właściwości powinna być serializowana; w przeciwnym razie,. <see cref="P:System.Windows.ContentElement.InputBindings" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-2640"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2641">Spowoduje to zwrócenie `true` wartości <xref:System.Windows.ContentElement.InputBindings%2A> , jeśli jest ustawiona lokalnie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2641">This will return `true` if <xref:System.Windows.ContentElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="a0fdb-2642">Ta `ShouldSerialize` Metoda jest dostępna, <xref:System.Windows.UIElement.InputBindings%2A> ponieważ właściwość nie ma prostej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2642">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="a0fdb-2643">Ta metoda wskazuje, czy właściwość została zmieniona z wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2643">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="a0fdb-2644">Ta metoda jest zazwyczaj wywoływana, jeśli tworzysz projektanta lub opracowujesz własny formant, który składa się <xref:System.Windows.UIElement>z.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2644">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="a0fdb-2645">Aby uzyskać więcej informacji, zobacz [Definiowanie wartości domyślnych za pomocą metod ShouldSerialize i Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2645">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2646">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2646">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2647">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusButtonDown> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2647">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2648">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusButtonDown> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2648">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2649">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2649">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2650">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2650">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2651">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2651">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2652">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2652">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonDownEvent>|  
|<span data-ttu-id="a0fdb-2653">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2653">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2654">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2654">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2655">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2655">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2656">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2656">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2657">Przesłoń <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2657">Override <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2658">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2658">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2659">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2659">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2660">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2660">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2661">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2661">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2662">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2662">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2663">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2663">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2664">Występuje po udostępnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2664">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2665">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusButtonUp> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2665">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2666">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusButtonUp> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2666">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2667">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2667">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2668">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2668">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2669">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2669">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2670">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2670">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonUpEvent>|  
|<span data-ttu-id="a0fdb-2671">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2671">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2672">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2672">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2673">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2673">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2674">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2674">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2675">Przesłoń <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2675">Override <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2676">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2676">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2677">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2677">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2678">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2678">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2679">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2679">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2680">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2680">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2681">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2681">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2682">Występuje, gdy pióro dotyka dyskretyzatora, gdy pióro znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2682">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2683">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusDown> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2683">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2684">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusDown> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2684">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2685">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2685">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2686">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2686">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2687">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2687">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2688">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2688">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusDownEvent>|  
|<span data-ttu-id="a0fdb-2689">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2689">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2690">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2690">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2691">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2691">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2692">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2692">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2693">Przesłoń <xref:System.Windows.ContentElement.OnStylusDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2693">Override <xref:System.Windows.ContentElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2694">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2694">Identifies the <see cref="E:System.Windows.ContentElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2695">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2695">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2696">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2696">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2697">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2697">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2698">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2698">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2699">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2699">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2700">Występuje, gdy pióro wprowadzi granice tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2700">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2701"><xref:System.Windows.ContentElement.StylusEnter>to [Omówienie zdarzeń kierowanych](~/docs/framework/wpf/advanced/routed-events-overview.md) , które korzystają z strategii routingu bezpośredniego obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2701"><xref:System.Windows.ContentElement.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a0fdb-2702">Zdarzenia kierowane bezpośrednio nie są zgłaszane na trasie; Zamiast tego są obsługiwane w tym samym elemencie, w którym zostały zgłoszone.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2702">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="a0fdb-2703">Jednak umożliwiają one włączenie innych aspektów zachowań zdarzeń kierowanych, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2703">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="a0fdb-2704">Chociaż <xref:System.Windows.ContentElement.StylusEnter> śledzi, gdy pióro wprowadza granice elementu, to zdarzenie jest bardziej dosłownie Raport <xref:System.Windows.ContentElement.IsStylusOver%2A> , że wartość właściwości została zmieniona z `false` na `true` na tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2704">Although <xref:System.Windows.ContentElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="a0fdb-2705">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusEnter> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2705">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2706">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusEnter> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2706">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2707">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2707">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2708">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2708">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2709">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2709">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2710">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2710">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusEnterEvent>|  
|<span data-ttu-id="a0fdb-2711">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2711">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2712">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2712">Direct</span></span>|  
|<span data-ttu-id="a0fdb-2713">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2713">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2714">Przesłoń <xref:System.Windows.ContentElement.OnStylusEnter%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2714">Override <xref:System.Windows.ContentElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2715">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusEnter" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2715">Identifies the <see cref="E:System.Windows.ContentElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2716">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2716">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2717">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2717">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2718">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2718">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2719">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2719">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2720">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2720">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2721">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2721">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2722">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusInAirMove> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2722">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2723">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusInAirMove> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2723">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2724">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2724">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2725">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2725">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2726">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2726">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2727">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2727">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="a0fdb-2728">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2728">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2729">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2729">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2730">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2730">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2731">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2731">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2732">Przesłoń <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2732">Override <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2733">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2733">Identifies the <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2734">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2734">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2735">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2735">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2736">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2736">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2737">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2737">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2738">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2738">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2739">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2739">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2740">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusInRange> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2740">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2741">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusInRange> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2741">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2742">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2742">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2743">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2743">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2744">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2744">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2745">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2745">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInRangeEvent>|  
|<span data-ttu-id="a0fdb-2746">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2746">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2747">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2747">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2748">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2748">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2749">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2749">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2750">Przesłoń <xref:System.Windows.ContentElement.OnStylusInRange%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2750">Override <xref:System.Windows.ContentElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2751">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusInRange" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2751">Identifies the <see cref="E:System.Windows.ContentElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2752">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2752">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2753">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2753">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2754">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2754">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2755">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2755">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2756">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2756">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2757">Występuje, gdy pióro opuści granice elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2757">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2758"><xref:System.Windows.ContentElement.StylusLeave>to [Omówienie zdarzeń kierowanych](~/docs/framework/wpf/advanced/routed-events-overview.md) , które korzystają z strategii routingu bezpośredniego obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2758"><xref:System.Windows.ContentElement.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="a0fdb-2759">Zdarzenia kierowane bezpośrednio nie są zgłaszane na trasie; Zamiast tego są obsługiwane w tym samym elemencie, w którym zostały zgłoszone.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2759">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="a0fdb-2760">Jednak umożliwiają one włączenie innych aspektów zachowań zdarzeń kierowanych, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2760">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="a0fdb-2761">Chociaż <xref:System.Windows.ContentElement.StylusLeave> śledzi, gdy pióro opuszcza granice elementu, to zdarzenie jest bardziej dosłownie raporty <xref:System.Windows.ContentElement.IsStylusOver%2A> , że wartość właściwości została zmieniona z `true` na `false` na tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2761">Although <xref:System.Windows.ContentElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="a0fdb-2762">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusLeave> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2762">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2763">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusLeave> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2763">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2764">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2764">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2765">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2765">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2766">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2766">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2767">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2767">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusLeaveEvent>|  
|<span data-ttu-id="a0fdb-2768">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2768">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2769">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2769">Direct</span></span>|  
|<span data-ttu-id="a0fdb-2770">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2770">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2771">Przesłoń <xref:System.Windows.ContentElement.OnStylusLeave%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2771">Override <xref:System.Windows.ContentElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2772">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusLeave" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2772">Identifies the <see cref="E:System.Windows.ContentElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2773">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2773">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2774">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2774">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2775">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2775">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2776">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2776">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2777">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2777">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2778">Występuje, gdy pióro jest przenoszone nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2778">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="a0fdb-2779">Aby zgłosić to zdarzenie, pióro musi zostać przeniesione przez dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2779">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="a0fdb-2780">W przeciwnym razie jest zgłaszane. <see cref="E:System.Windows.ContentElement.StylusInAirMove" /></span><span class="sxs-lookup"><span data-stu-id="a0fdb-2780">Otherwise, <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2781">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusMove> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2781">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2782">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusMove> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2782">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2783">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2783">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2784">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2784">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2785">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2785">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2786">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2786">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusMoveEvent>|  
|<span data-ttu-id="a0fdb-2787">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2787">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2788">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2788">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2789">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2789">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2790">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2790">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2791">Przesłoń <xref:System.Windows.ContentElement.OnStylusMove%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2791">Override <xref:System.Windows.ContentElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2792">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusMove" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2792">Identifies the <see cref="E:System.Windows.ContentElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2793">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2793">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2794">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2794">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2795">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2795">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2796">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2796">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2797">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2797">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2798">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2798">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2799">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusOutOfRange> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2799">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2800">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusOutOfRange> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2800">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2801">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2801">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2802">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2802">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2803">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2803">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2804">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2804">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="a0fdb-2805">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2805">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2806">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2806">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2807">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2807">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2808">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2808">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2809">Przesłoń <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2809">Override <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2810">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2810">Identifies the <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2811">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2811">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2812">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2812">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2813">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2813">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2814">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2814">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2815">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2815">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2816">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2816">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2817">Aby uzyskać więcej informacji na temat gestów <xref:System.Windows.Input.SystemGesture>pióra, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2817">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="a0fdb-2818">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusSystemGesture> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2818">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2819">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusSystemGesture> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2819">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2820">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2820">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2821">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2821">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2822">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2822">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2823">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2823">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="a0fdb-2824">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2824">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2825">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2825">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2826">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2826">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2827">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2827">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2828">Przesłoń <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2828">Override <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2829">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2829">Identifies the <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2830">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2830">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2831">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2831">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2832">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2832">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2833">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2833">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2834">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2834">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2835">Występuje, gdy użytkownik wywołuje pióro, gdy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2835">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2836">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.StylusUp> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2836">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2837">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.StylusUp> zdarzenia są dołączone do <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2837">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="a0fdb-2838">W określonej relacji istnieje dotyk, mysz i dane wejściowe pióra.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2838">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="a0fdb-2839">Aby uzyskać więcej informacji, zobacz [Informacje o danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2839">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2840">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2840">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2841">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2841">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusUpEvent>|  
|<span data-ttu-id="a0fdb-2842">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2842">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2843">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2843">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2844">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2844">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2845">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2845">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2846">Przesłoń <xref:System.Windows.ContentElement.OnStylusUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2846">Override <xref:System.Windows.ContentElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2847">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.StylusUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2847">Identifies the <see cref="E:System.Windows.ContentElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2848">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2848">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2849">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2849">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2850">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2850">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2851">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2851">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2852">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2852">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2853">Występuje, gdy ten element Pobiera tekst w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2853">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a0fdb-2854">To zdarzenie może już być oznaczone jako obsługiwane przez wewnętrzne implementacje kontrolek złożonych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2854">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="a0fdb-2855">Zobacz uwagi poniżej.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2855">See Remark below.</span></span>  
  
 <span data-ttu-id="a0fdb-2856"><xref:System.Windows.ContentElement.TextInput> Zdarzenie może już być oznaczone jako obsługiwane przez wewnętrzne implementacje kontrolek złożonych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2856">The <xref:System.Windows.ContentElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="a0fdb-2857">Na przykład, <xref:System.Windows.Controls.TextBox> jest to złożona kontrolka, w <xref:System.Windows.ContentElement.TextInput> której zdarzenie jest już oznaczone jako obsługiwane; w ramach jego złożenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2857">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.ContentElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="a0fdb-2858">Kontrolki to, ponieważ kontrolka musi interpretować niektóre typy danych wejściowych, takich jak klawisze strzałek, jako mające specjalne znaczenie dla tej kontrolki.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2858">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="a0fdb-2859">Jeśli używasz <xref:System.Windows.ContentElement.PreviewTextInput> jako zdarzenia do dołączania obsługi dla wprowadzania tekstu, możesz uzyskać lepsze wyniki.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2859">If you use <xref:System.Windows.ContentElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="a0fdb-2860">Ta technika omija większość przypadków, w których kompozycja formantów już oznaczył to zdarzenie jako obsłużone i uniemożliwia programowi obsługi otrzymywanie zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2860">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="a0fdb-2861">To <xref:System.Windows.ContentElement.TextInput> zdarzenie umożliwia składnikowi lub aplikacji nasłuchiwanie danych tekstowych w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2861">The <xref:System.Windows.ContentElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="a0fdb-2862">Klawiatura jest podstawowym środkiem <xref:System.Windows.ContentElement.TextInput>, ale może również podnieść <xref:System.Windows.ContentElement.TextInput>mowę, pismo odręczne oraz inne urządzenia wejściowe.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2862">The keyboard is the primary means of <xref:System.Windows.ContentElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
 <span data-ttu-id="a0fdb-2863">Ze względu na kombinacje klawiszy — w domyślnych klawiaturach lub za pomocą edytorów metod wejściowych — wiele kluczowych zdarzeń może wywoływać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2863">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="a0fdb-2864">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączonego zdarzenia dla tej klasy, <xref:System.Windows.ContentElement.TextInput> więc jest częścią listy składowych klasy, gdy <xref:System.Windows.ContentElement> jest dziedziczona jako element podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2864">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.TextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="a0fdb-2865">Programy obsługi zdarzeń dołączone do <xref:System.Windows.ContentElement.TextInput> zdarzenia są dołączone do <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> powiązanego dołączonego zdarzenia i odbierają to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2865">Event handlers that are attached to the <xref:System.Windows.ContentElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2866">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2866">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2867">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2867">Identifier field</span></span>|<xref:System.Windows.ContentElement.TextInputEvent>|  
|<span data-ttu-id="a0fdb-2868">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2868">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2869">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2869">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2870">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2870">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="a0fdb-2871">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2871">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2872">Przesłoń <xref:System.Windows.ContentElement.OnTextInput%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2872">Override <xref:System.Windows.ContentElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2873">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.TextInput" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2873">Identifies the <see cref="E:System.Windows.ContentElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2874">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2874">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="a0fdb-2875">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu i metodę narzędzia służącą do dodawania właścicieli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2875">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="a0fdb-2876">Możesz użyć tych identyfikatorów, aby dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2876">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="a0fdb-2877">Więcej informacji o rejestrowaniu zdarzeń kierowanych znajduje <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>się w temacie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2877">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="a0fdb-2878">Aby uzyskać więcej informacji na temat używania identyfikatorów zdarzeń kierowanych do dodawania obsługi klas <xref:System.Windows.EventManager.RegisterClassHandler%2A>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2878">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2879">Występuje, gdy palec dotyka ekranu, gdy palcem znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2879">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2880">Domyślnie <xref:System.Windows.ContentElement.PreviewTouchDown> zdarzenia i <xref:System.Windows.ContentElement.TouchDown> nie pojawiają się do momentu dotknięcia ekranu i przeniesienia.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2880">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="a0fdb-2881">Naciśnięcie palca na ekranie i jego utrzymywanie bez przesuwania powoduje zachowanie <xref:System.Windows.Input.Stylus>nacisku i blokady.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2881">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="a0fdb-2882">Zachowanie naciskania i przytrzymania jest równoważne kliknięciu prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2882">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="a0fdb-2883">Aby spowodować, <xref:System.Windows.ContentElement.PreviewTouchDown> że <xref:System.Windows.ContentElement.TouchDown> zdarzenia i wystąpienia są wykonywane zaraz po dotknięciu ekranu palcem, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> właściwość dołączone na `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2883">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2884">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2884">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2885">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2885">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchDownEvent>|  
|<span data-ttu-id="a0fdb-2886">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2886">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2887">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2887">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2888">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2888">Delegate</span></span>|<span data-ttu-id="a0fdb-2889"><xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2889"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a0fdb-2890">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2890">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2891">Przesłoń <xref:System.Windows.ContentElement.OnTouchDown%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2891">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2892">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.TouchDown" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2892">Identifies the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2893">Występuje, gdy nastąpi przejście z zewnątrz do wewnątrz granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2893">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fdb-2894">To zdarzenie jest zawsze zgłaszane, niezależnie od tego, czy urządzenie dotykowe jest przechwytywane do tego elementu interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2894">This event is always raised, whether or not the touch device is captured to this UI element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2895">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2895">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2896">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2896">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchEnterEvent>|  
|<span data-ttu-id="a0fdb-2897">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2897">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2898">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2898">Direct</span></span>|  
|<span data-ttu-id="a0fdb-2899">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2899">Delegate</span></span>|<span data-ttu-id="a0fdb-2900"><xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2900"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a0fdb-2901">Przesłoń <xref:System.Windows.ContentElement.OnTouchEnter%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2901">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2902">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.TouchEnter" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2902">Identifies the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2903">Pobiera wszystkie urządzenia Touch, które są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2903">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="a0fdb-2904">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2904">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2905">Pobiera wszystkie urządzenia Touch, które są przechwytywane do tego elementu lub wszelkich elementów podrzędnych w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2905">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="a0fdb-2906">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu lub wszelkich elementów podrzędnych w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2906">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2907">Pobiera wszystkie urządzenia Touch, które znajdują się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2907">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="a0fdb-2908">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów znajdujących się na tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2908">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2909">Pobiera wszystkie urządzenia dotykowe, które znajdują się nad tym elementem lub wszystkie elementy podrzędne w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2909">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="a0fdb-2910">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów znajdujących się nad tym elementem lub dowolnym elementem podrzędnym w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2910">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2911">Występuje, gdy nastąpi przejście z wewnątrz do granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2911">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2912">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2912">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2913">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2913">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchLeaveEvent>|  
|<span data-ttu-id="a0fdb-2914">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2914">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2915">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2915">Direct</span></span>|  
|<span data-ttu-id="a0fdb-2916">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2916">Delegate</span></span>|<span data-ttu-id="a0fdb-2917"><xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2917"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a0fdb-2918">Przesłoń <xref:System.Windows.ContentElement.OnTouchLeave%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2918">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2919">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.TouchLeave" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2919">Identifies the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2920">Występuje, gdy palec jest przenoszony na ekranie, gdy palcem znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2920">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2921">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2921">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2922">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2922">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchMoveEvent>|  
|<span data-ttu-id="a0fdb-2923">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2923">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2924">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2924">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2925">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2925">Delegate</span></span>|<span data-ttu-id="a0fdb-2926"><xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2926"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a0fdb-2927">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2927">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2928">Przesłoń <xref:System.Windows.ContentElement.OnTouchMove%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2928">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2929">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.TouchMove" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2929">Identifies the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2930">Występuje, gdy Finger zostanie wysunięty z ekranu, gdy palcem znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2930">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a0fdb-2931">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2931">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a0fdb-2932">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2932">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchUpEvent>|  
|<span data-ttu-id="a0fdb-2933">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2933">Routing strategy</span></span>|<span data-ttu-id="a0fdb-2934">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2934">Bubbling</span></span>|  
|<span data-ttu-id="a0fdb-2935">Delegate</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2935">Delegate</span></span>|<span data-ttu-id="a0fdb-2936"><xref:System.EventHandler%601>typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2936"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="a0fdb-2937">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.ContentElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2937">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="a0fdb-2938">Przesłoń <xref:System.Windows.ContentElement.OnTouchUp%2A> , aby zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2938">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a0fdb-2939">Identyfikuje zdarzenie <see cref="E:System.Windows.ContentElement.TouchUp" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a0fdb-2939">Identifies the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
