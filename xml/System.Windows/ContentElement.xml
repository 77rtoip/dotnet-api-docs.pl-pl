<Type Name="ContentElement" FullName="System.Windows.ContentElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ead77d5c5a1444bb78a389f6dd17f78c4fdbd08" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32038492" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContentElement : System.Windows.DependencyObject, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentElement extends System.Windows.DependencyObject implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentElement&#xA;Inherits DependencyObject&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentElement : System::Windows::DependencyObject, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="814ba-101">Udostępnia klasę podstawową core poziomie WPF dla elementów zawartości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="814ba-101">Provides a WPF core-level base class for content elements.</span>
      </span>
      <span data-ttu-id="814ba-102">Elementy zawartości są przeznaczone dla przepływu stylu prezentacji, za pomocą intuicyjnego układu zorientowane na znaczników i modelu celowo prostego obiektu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="814ba-102">Content elements are designed for flow-style presentation, using an intuitive markup-oriented layout model and a deliberately simple object model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-103"><xref:System.Windows.ContentElement> definiuje następujące cechy wspólne zawartości:</span><span class="sxs-lookup"><span data-stu-id="814ba-103"><xref:System.Windows.ContentElement> defines the following common content characteristics:</span></span>  
  
-   <span data-ttu-id="814ba-104">Wejście: Wszystkie <xref:System.Windows.ContentElement> klas pochodnych zapewniają obsługę podstawowe przechwytywania wprowadzania z klawiatury, myszy operacji przeciągania i upuszczania, Pióro formantów i akceleratorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-104">Input: All <xref:System.Windows.ContentElement> derived classes provide support for basic input capture from keyboard, mouse, drag-and-drop operations, stylus controls, and accelerators.</span></span>  
  
-   <span data-ttu-id="814ba-105">Fokus: Wszystkie <xref:System.Windows.ContentElement> klas pochodnych są potencjalnie focusable.</span><span class="sxs-lookup"><span data-stu-id="814ba-105">Focus: All <xref:System.Windows.ContentElement> derived classes are potentially focusable.</span></span> <span data-ttu-id="814ba-106">(Jednak focusable stan domyślny dla <xref:System.Windows.ContentElement> klasa podstawowa jest `false`.</span><span class="sxs-lookup"><span data-stu-id="814ba-106">(However, the default focusable state for the <xref:System.Windows.ContentElement> base class is `false`.</span></span> <span data-ttu-id="814ba-107">Aby uzyskać szczegółowe informacje dotyczące sposobu wprowadzania <xref:System.Windows.ContentElement> focusable, zobacz <xref:System.Windows.ContentElement.Focusable%2A>.) Ponadto ta klasa zawiera [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] służącego do przechodzenia przez fokus na elementy powiązane.</span><span class="sxs-lookup"><span data-stu-id="814ba-107">For details on how to make a <xref:System.Windows.ContentElement> focusable, see <xref:System.Windows.ContentElement.Focusable%2A>.) In addition, this class contains [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that you can use for traversing the focus across related elements.</span></span>  
  
-   <span data-ttu-id="814ba-108">Zdarzenia: <xref:System.Windows.ContentElement> obejmuje zdarzeń powiązanych z danych wejściowych i skoncentrować się; obejmuje również zdarzenia dla zmian w stanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-108">Events: <xref:System.Windows.ContentElement> includes events that are related to input and focus; it also includes events for changes in state.</span></span> <span data-ttu-id="814ba-109">W wielu przypadkach <xref:System.Windows.ContentElement> zdarzenia są kierowane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-109">In many cases, the <xref:System.Windows.ContentElement> events are routed events.</span></span> <span data-ttu-id="814ba-110">W niektórych przypadkach kierowane zdarzenia mają zarówno w przypadku tunelowania, jak i propagacji strategii routingu, zgłaszany jako odrębne zdarzenia w odpowiedzi na tym samym stanu lub warunek.</span><span class="sxs-lookup"><span data-stu-id="814ba-110">In some cases, routed events have both tunneling and bubbling routing strategies, raised as separate events in response to the same state or condition.</span></span> <span data-ttu-id="814ba-111">Ponadto <xref:System.Windows.ContentElement> definiuje [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] że można zwiększyć kierowane zdarzenia i że można dodawać i usuwać programów obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-111">Also, <xref:System.Windows.ContentElement> defines [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] that can raise routed events and that can add or remove handlers to events.</span></span>  
  
 <span data-ttu-id="814ba-112"><xref:System.Windows.ContentElement> udostępnia wiele wspólnego [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] z <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-112"><xref:System.Windows.ContentElement> shares many common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] with <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="814ba-113">Tych wspólnych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] nie pochodzą z dziedziczenia klasy udostępnionego.</span><span class="sxs-lookup"><span data-stu-id="814ba-113">These common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] do not come from a shared class inheritance.</span></span> <span data-ttu-id="814ba-114">Ale mają nazewnictwa wspólne, podobne zachowanie i podobne wewnętrzny realizacji [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] w każdej klasie.</span><span class="sxs-lookup"><span data-stu-id="814ba-114">But they do share common naming, similar behavior, and similar internal implementation of [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in each class.</span></span> <span data-ttu-id="814ba-115">Podobieństwa jest ponieważ <xref:System.Windows.ContentElement> i <xref:System.Windows.UIElement> są każdej klasy, które są element podstawowy, mimo że każda ma inną zamiarach zachowanie modelu obiektu znaczników.</span><span class="sxs-lookup"><span data-stu-id="814ba-115">The similarity is because <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are each classes that are an element base, although each has different intentions for its markup object model behavior.</span></span>  
  
 <span data-ttu-id="814ba-116">W szczególności <xref:System.Windows.UIElement> descends z <xref:System.Windows.Media.Visual>, zapewniające grafiki niższego poziomu obsługę renderowania <xref:System.Windows.ContentElement> prostokątne regionu okna połączone, podczas gdy <xref:System.Windows.ContentElement> różni się renderowania, aby pojęcia więcej Typowe scenariusze dokumentu, takich jak przepływ i zawijania, co ułatwia są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-116">In particular, <xref:System.Windows.UIElement> descends from <xref:System.Windows.Media.Visual>, which provides the lower-level graphics support for rendering a <xref:System.Windows.ContentElement> to a rectangular region within a composited window, whereas <xref:System.Windows.ContentElement> defers rendering so that concepts more common to document scenarios, such as flow and wrapping, are more easily supported.</span></span> <span data-ttu-id="814ba-117">Te dwa związane z klasy również implementować wspólnych interfejsów <xref:System.Windows.IInputElement> i <xref:System.Windows.Media.Animation.IAnimatable>.</span><span class="sxs-lookup"><span data-stu-id="814ba-117">These two related classes also implement the common interfaces <xref:System.Windows.IInputElement> and <xref:System.Windows.Media.Animation.IAnimatable>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="814ba-118">
          <see cref="T:System.Windows.ContentElement" /> Klasa nie definiuje jeszcze wszystkie aspekty elementu zawartości pełny przepływ stylu prezentacji.</span>
        <span class="sxs-lookup">
          <span data-stu-id="814ba-118">The <see cref="T:System.Windows.ContentElement" /> class does not yet define all aspects of a complete content element for flow-style presentation.</span>
        </span>
        <span data-ttu-id="814ba-119">
          <see cref="T:System.Windows.FrameworkContentElement" /> jest natychmiast pochodne klasy <see cref="T:System.Windows.ContentElement" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="814ba-119">
            <see cref="T:System.Windows.FrameworkContentElement" /> is an immediately derived class of <see cref="T:System.Windows.ContentElement" />.</span>
        </span>
        <span data-ttu-id="814ba-120">
          <see cref="T:System.Windows.FrameworkContentElement" /> zawiera bardziej szczegółowy zestaw dodatkowych elementów członkowskich, które obsługuje renderowanie <see cref="T:System.Windows.FrameworkContentElement" /> w ramach hosta zawartości i przy użyciu systemu układu poziomie struktury WPF.</span>
        <span class="sxs-lookup">
          <span data-stu-id="814ba-120">
            <see cref="T:System.Windows.FrameworkContentElement" /> includes a more complete set of additional members that support rendering a <see cref="T:System.Windows.FrameworkContentElement" /> within a content host and using the WPF framework-level layout system.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ContentElement" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-121">Initializes a new instance of the <see cref="T:System.Windows.ContentElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-122">Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-122">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="814ba-123">Identyfikator kierowanego zdarzenia mają być obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-123">An identifier for the routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="814ba-124">Odwołanie do implementacji programu obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-124">A reference to the handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-125">Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-125">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-126">Tej procedury obsługi dla tego samego zdarzenia można dodać wiele razy bez podnoszenia Wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="814ba-126">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="814ba-127">Jednak program obsługi jest rzeczywiście wielokrotnie wywoływać gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-127">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="814ba-128">W związku z tym należy rozważyć, jak to zachowanie może mieć efekty uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-128">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="814ba-129">Ta metoda używane zwykle do implementacji metody dostępu "add", dla [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorca dostępu zdarzeń niestandardowych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-129">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="814ba-130">Identyfikator zdarzenia the.routed mają być obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-130">An identifier for the.routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="814ba-131">Odwołanie do implementacji programu obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-131">A reference to the handler implementation.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="814ba-132">
            <see langword="true" /> zarejestrować program obsługi w taki sposób, że jest wywoływana, nawet w przypadku, gdy zaznaczono kierowanego zdarzenia przetwarzanych w jego dane zdarzeń; <see langword="false" /> rejestrowania programu obsługi z domyślnego warunku, że nie zostanie wywołany, jeśli kierowanego zdarzenia jest już oznaczona obsłużone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-132">
              <see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span>
          </span>
          <span data-ttu-id="814ba-133">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-133">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-134">Nie rutynowo Pytaj do rehandle kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-134">Do not routinely ask to rehandle a routed event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-135">Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-135">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
          <span data-ttu-id="814ba-136">Określ <paramref name="handledEventsToo" /> jako <see langword="true" /> mają podanego programu obsługi, można wywołać dla kierowanego zdarzenia, który już został oznaczony jako obsługiwany przez inny element wzdłuż trasy zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-136">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-137">Przetwarzanie zdarzenia wejściowe niskiego poziomu w praktycznym sposobem jest złożonym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="814ba-137">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="814ba-138">Wiele formantów implementuje zachowanie, gdzie określone zdarzenie zostanie oznaczony jako obsługiwany i zastępuje inne zdarzenie bardziej intuicyjne.</span><span class="sxs-lookup"><span data-stu-id="814ba-138">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="814ba-139">Ogólnie rzecz biorąc formantu tylko oznaczy zdarzenia wejściowe platformy jako obsługiwane w przypadku niektórych zamiar projektu dla w ten sposób.</span><span class="sxs-lookup"><span data-stu-id="814ba-139">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="814ba-140">W niektórych scenariuszach te cele projektu może być wymaga z konkretnym obsługi zdarzenia wejściowego.</span><span class="sxs-lookup"><span data-stu-id="814ba-140">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="814ba-141">Jest w tych scenariuszach tego rejestrowanie programów obsługi z `handledEventsToo` jako `true` jest odpowiedni.</span><span class="sxs-lookup"><span data-stu-id="814ba-141">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="814ba-142">Jednak użytkownik nie należy tego robić regularnie.</span><span class="sxs-lookup"><span data-stu-id="814ba-142">But you should not do this routinely.</span></span> <span data-ttu-id="814ba-143">Wywoływanie programy obsługi zdarzeń w odpowiedzi na wszystkie zdarzenia, nawet jeśli obsługiwane będzie skomplikować własne przetwarzania logiki zdarzeń aplikacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-143">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="814ba-144">Jeśli logika obsługi jest znaczny spadek wydajności może zostać wyświetlony.</span><span class="sxs-lookup"><span data-stu-id="814ba-144">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="814ba-145">Należy zarezerwować stosowania Dołączanie programów obsługi zdarzeń już obsługiwane w sytuacji, gdy użytkownik ma już odnaleziony podczas procesu projektowania, że niektóre kontrolki są obsługi zdarzeń, które nadal mają być obsługiwane z logiką aplikacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-145">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="814ba-146">Inny technika unikanie klasy zachowania niektórych kombinacji zdarzenie kontroli obsługi polega na użyciu zamiast podglądu tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-146">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="814ba-147">Na przykład jeśli <xref:System.Windows.ContentElement.MouseLeftButtonDown> jest oznaczony jako obsługiwany przez Obsługa klasy może być możliwe dodanie obsługi <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="814ba-147">For example, if <xref:System.Windows.ContentElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="814ba-148">Tej procedury obsługi dla tego samego zdarzenia można dodać wiele razy bez podnoszenia Wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="814ba-148">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="814ba-149">Jednak program obsługi jest rzeczywiście wielokrotnie wywoływać gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-149">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="814ba-150">W związku z tym należy rozważyć, jak to zachowanie może mieć efekty uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-150">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="814ba-151">Ta metoda używane zwykle do implementacji metody dostępu "add", dla [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorca dostępu zdarzeń niestandardowych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-151">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ba-152">Poniższy przykład implementuje obsługi wywoływane na <xref:System.Windows.FrameworkElement.Initialized> zdarzenia na stronie dołącza zdefiniowanych obsługi do jednego z nazwanych elementów na stronie za pomocą `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-152">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="814ba-153">Czy można wywołać ten program obsługi, nawet jeśli inny element marszruty oznaczony dane zdarzenia udostępniony jako obsłużony przed osiągnięciem element obsługi trasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-153">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route">
          <span data-ttu-id="814ba-154">Programy obsługi są dodawane do trasy zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-154">The event route that handlers are added to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="814ba-155">Dane zdarzenia, które służy do dodawania obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-155">The event data that is used to add the handlers.</span>
          </span>
          <span data-ttu-id="814ba-156">Ta metoda używa <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości argumentów do utworzenia obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-156">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the arguments to create the handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-157">Dodaje obsługi do określonego <see cref="T:System.Windows.EventRoute" /> dla bieżącego <see cref="T:System.Windows.ContentElement" /> kolekcję procedur obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-157">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.ContentElement" /> event handler collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-158">Użyj tej metody dla elementów zawartości hosta (niezależnie od tego, czy wdrażają <xref:System.Windows.IContentHost>) aby dodać obsługę host zawartości elementów podrzędnych do hosta <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="814ba-158">Use this method for content host elements (regardless whether they implement <xref:System.Windows.IContentHost>) in order to add handlers for the content host child elements to the host <xref:System.Windows.EventRoute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-159">Pobiera lub ustawia wartość wskazującą, czy ten element może być użyty jako element docelowy operacji przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-159">Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-160">
            <see langword="true" /> Jeśli ten element może być używany jako obiekt docelowy operacji przeciągania i upuszczania. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-160">
              <see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-161">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-161">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-162">Operacje przeciągania i upuszczania nie są domyślnie włączone i musi być włączona celowo <xref:System.Windows.ContentElement.AllowDrop%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-162">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.ContentElement.AllowDrop%2A> to  `true`.</span></span> <span data-ttu-id="814ba-163">Poza tego ustawienia podstawowe zachowanie przeciągania i upuszczania całkowicie zależy od implementacji i nie jest zdefiniowany przez <xref:System.Windows.ContentElement> lub dowolnej klasy podstawowej elementu.</span><span class="sxs-lookup"><span data-stu-id="814ba-163">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.ContentElement> or any other base element class.</span></span> <span data-ttu-id="814ba-164">Niektóre formanty, na przykład <xref:System.Windows.Controls.RichTextBox>, ma domyślne zachowanie, ale nie <xref:System.Windows.ContentElement> klasy pochodnej mają takie zachowanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-164">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior, but no <xref:System.Windows.ContentElement> derived classes have such a behavior.</span></span> <span data-ttu-id="814ba-165">Aby uzyskać więcej informacji dotyczących operacji przeciągania i upuszczania, zobacz [przeciągania i upuszczania omówienie](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-165">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="814ba-166"><xref:System.Windows.FrameworkContentElement> zastępuje metadane dla tej właściwości zależności w jego wykonania.</span><span class="sxs-lookup"><span data-stu-id="814ba-166"><xref:System.Windows.FrameworkContentElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="814ba-167">W szczególności <xref:System.Windows.FrameworkContentElement> oznacza, że ta właściwość umożliwia dziedziczenie wartość właściwości (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> jest `true` w metadanych).</span><span class="sxs-lookup"><span data-stu-id="814ba-167">Specifically, <xref:System.Windows.FrameworkContentElement> designates that this property allows property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="814ba-168">Dziedziczenie wartości właściwości w tym kontekście oznacza, że istnieją elementy podrzędne z ma inne wartości <xref:System.Windows.ContentElement.AllowDrop%2A> przypisany za pomocą wartości lokalnej lub style, wartość najbliższym elemencie nadrzędnym z wartością przypisane (ponownie, albo w stylach domyślnie wartości lub wartości lokalnych), a następnie wartości z elementu nadrzędnego jest przypisany do wszystkich elementów podrzędnych nieprzypisane przez system właściwości.</span><span class="sxs-lookup"><span data-stu-id="814ba-168">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.ContentElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from that parent element is assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="814ba-169">Oznacza to, że możesz określić, czy zezwala upuszczania operacji w elemencie głównym, a następnie propaguje wartość do wszystkich <xref:System.Windows.FrameworkContentElement> elementy podrzędne, które nie specjalnie przypisano jej wartości `false`.</span><span class="sxs-lookup"><span data-stu-id="814ba-169">This means that you can specify whether to allow drop operations at the root element and then propagate the value to all <xref:System.Windows.FrameworkContentElement> child elements that have not specifically assigned it a value of `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-170">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-170">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-171">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-171">Identifier field</span></span>|<xref:System.Windows.ContentElement.AllowDropProperty>|  
|<span data-ttu-id="814ba-172">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-172">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-173">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-173">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="814ba-174">W poniższym przykładzie <xref:System.Windows.ContentElement.AllowDrop%2A> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="814ba-174">The following example sets <xref:System.Windows.ContentElement.AllowDrop%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#AllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#allowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-175">Identyfikuje <see cref="P:System.Windows.ContentElement.AllowDrop" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-175">Identifies the <see cref="P:System.Windows.ContentElement.AllowDrop" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-176">Zastosowanie animacji właściwości zależności określonego w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-176">Applies an animation to a specified dependency property on this element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="814ba-177">Identyfikator właściwości animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-177">The identifier for the property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="814ba-178">Zegar animacji, który kontroluje i deklaruje animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-178">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-179">Zastosowanie animacji właściwości zależności określonego w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-179">Applies an animation to a specified dependency property on this element.</span>
          </span>
          <span data-ttu-id="814ba-180">Wszelkie istniejące animacje są zatrzymane i zastąpione nowe animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-180">Any existing animations are stopped and replaced with the new animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-181">Aby usunąć animacji z właściwością, określ identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="814ba-181">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="814ba-182">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawową.</span><span class="sxs-lookup"><span data-stu-id="814ba-182">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="814ba-183">Jednak zegara pierwotnie skojarzone animacji nie zostanie zatrzymana.</span><span class="sxs-lookup"><span data-stu-id="814ba-183">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="814ba-184">Inne animacje przypisane do tego zegara będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="814ba-184">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="814ba-185">Właściwość animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-185">The property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="814ba-186">Zegar animacji, który kontroluje i deklaruje animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-186">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="814ba-187">Wartość wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-187">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="814ba-188">Wartość domyślna to <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, które spowoduje zatrzymanie wszelkich istniejących animacji i Zamień na nową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-188">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-189">Zastosowanie animacji właściwości zależności określonego w tym elemencie, z możliwością Określ, co się stanie, jeśli właściwość została już uruchomiona Animacja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-189">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-190">Aby usunąć animacji z właściwością, określ identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="814ba-190">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="814ba-191">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawową.</span><span class="sxs-lookup"><span data-stu-id="814ba-191">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="814ba-192">Jednak zegara pierwotnie skojarzone animacji nie zostanie zatrzymana.</span><span class="sxs-lookup"><span data-stu-id="814ba-192">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="814ba-193">Inne animacje przypisane do tego zegara będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="814ba-193">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-194">Pobiera wartość wskazującą, czy co najmniej jeden touch są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-194">Gets a value that indicates whether at least one touch is captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-195">
            <see langword="true" /> Jeśli co najmniej jeden touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-195">
              <see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-196">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-196">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-197">Pobiera wartość wskazującą, czy co najmniej jeden touch są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-197">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-198">
            <see langword="true" /> Jeśli co najmniej jeden touch są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-198">
              <see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-199">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-199">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-200">Pobiera wartość wskazującą, czy naciśnięciu dotykowego co najmniej jeden nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-200">Gets a value that indicates whether at least one touch is pressed over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-201">
            <see langword="true" /> Jeśli naciśnięciu dotykowego co najmniej jeden nad tym elementem; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-201">
              <see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-202">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-202">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-203">Pobiera wartość wskazującą, czy co najmniej jeden touch naciśnięciu za pośrednictwem tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-203">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-204">
            <see langword="true" /> Jeśli co najmniej jeden touch jest wciśnięty za pośrednictwem tego elementu lub elementów podrzędnych w jego drzewie wizualnym; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-204">
              <see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-205">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-205">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-206">Uruchamia animacji dla określonej właściwości animacji w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-206">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="814ba-207">Właściwość animacji, które jest określone jako identyfikatora właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-207">The property to animate, which is specified as a dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="814ba-208">Oś czasu animacji, aby rozpocząć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-208">The timeline of the animation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-209">Uruchamia animacji dla określonej właściwości animacji w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-209">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-210">Podczas sprawdzania, czy właściwość jest animowany, Zauważ, że animacja rozpocznie się i można je było uważać animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="814ba-210">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="814ba-211">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="814ba-211">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="814ba-212">Jeśli cały `animation` wartość jest `null`, wszystkie animacje są usuwane z właściwości i wartość właściwości zostanie przywrócony do jego wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="814ba-212">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="814ba-213">Jednak na osi czasu pierwotnie skojarzone animacji nie został on zatrzymany.</span><span class="sxs-lookup"><span data-stu-id="814ba-213">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="814ba-214">Inne animacje przypisane do tej osi czasu będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="814ba-214">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="814ba-215">Właściwość animacji, które jest określone jako identyfikatora właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-215">The property to animate, which is specified as the dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="814ba-216">Oś czasu animacji, które mają być stosowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-216">The timeline of the animation to be applied.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="814ba-217">Wartość wyliczenia, która określa, jak nowy animacji współdziała z dowolnego animacji bieżącego (uruchamianie), które już wpływu na wartość właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-217">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-218">Rozpoczyna się przez animację określonych dla określonej właściwości animacji w tym elemencie z opcją określenia co się stanie, jeśli właściwość została już uruchomiona Animacja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-218">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-219">Podczas sprawdzania, czy właściwość jest animowany, Zauważ, że animacja rozpocznie się i można je było uważać animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="814ba-219">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="814ba-220">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="814ba-220">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="814ba-221">Jeśli cały `animation` wartość jest `null`, wszystkie animacje są usuwane z właściwości i wartość właściwości zostanie przywrócony do jego wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="814ba-221">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="814ba-222">Jednak na osi czasu pierwotnie skojarzone animacji nie został on zatrzymany.</span><span class="sxs-lookup"><span data-stu-id="814ba-222">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="814ba-223">Inne animacje przypisane do tej osi czasu będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="814ba-223">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-224">Próbuje wymusić przechwytywanie myszy do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-224">Attempts to force capture of the mouse to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-225">
            <see langword="true" /> Jeśli pomyślnie przechwyceniu myszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-225">
              <see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-226">Można przechwycić elementu musi być włączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-226">To be captured, an element must be enabled.</span></span> <span data-ttu-id="814ba-227">Sprawdź, czy <xref:System.Windows.ContentElement.IsEnabled%2A> jest `true` przed wywołaniem <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-227">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="814ba-228">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureMouse%2A> zwraca `true`, następnie <xref:System.Windows.ContentElement.IsMouseCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-228">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.ContentElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="814ba-229">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureMouse%2A> zwraca `true`, a następnie <xref:System.Windows.ContentElement.GotMouseCapture> i <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenia są generowane, z <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> zdarzeń dane raportowane jako element gdzie <xref:System.Windows.ContentElement.CaptureMouse%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="814ba-229">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotMouseCapture> and <xref:System.Windows.ContentElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.ContentElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="814ba-230">Jeśli wymusisz przechwytywania może zakłócać Przechwytywanie istniejących — szczególnie w przypadku przechwytywania, które dotyczą przeciągania i upuszczania za pomocą myszy.</span><span class="sxs-lookup"><span data-stu-id="814ba-230">If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="814ba-231">Aby wyczyścić przechwytywanie myszy wszystkich elementów, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> z `element` podać jako parametr `null`.</span><span class="sxs-lookup"><span data-stu-id="814ba-231">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ba-232">Poniższy przykład przechwytuje mysz lub zwalnia Przechwytywanie według tego, czy wskaźnik myszy jest już przechwycona przez element.</span><span class="sxs-lookup"><span data-stu-id="814ba-232">The following example captures the mouse or releases capture, based on whether the mouse is already captured by the element.</span></span> <span data-ttu-id="814ba-233">Należy pamiętać, że w tym przykładzie rzutuje elementu docelowego potencjalnego przechwytywania <xref:System.Windows.IInputElement> interfejsu i w związku z tym jest początkowo wywoływania <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="814ba-233">Note that this example casts the prospective capture target element to the <xref:System.Windows.IInputElement> interface, and is thus initially calling the <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="814ba-234">Rzutowanie na <xref:System.Windows.IInputElement> to technika, który jest przydatne, jeśli nie wiesz, czy element ma być przechwytywanie myszy jest <xref:System.Windows.UIElement> lub <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-234">Casting to <xref:System.Windows.IInputElement> is a technique that is useful if you are unsure whether the element you want to have capture the mouse is a <xref:System.Windows.UIElement> or a <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="814ba-235">Rzutowanie interfejsu i metoda interfejsu wywołać następnie wywołania odpowiedniej implementacji CaptureMouse określonego typu wewnętrznie bez konieczności korzystania z wersji próbnej rzutować albo <xref:System.Windows.UIElement> lub <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-235">The interface cast and the interface method call then calls the appropriate type-specific CaptureMouse implementation internally without requiring a trial cast to either <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="814ba-236">Ten sam sposób rzutowanie działa w przypadku innych elementach członkowskich który <xref:System.Windows.IInputElement> definiuje, na przykład wiele zdarzeń związanych z danych wejściowych i innych metod dotyczących danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="814ba-236">This same casting technique works for other members that <xref:System.Windows.IInputElement> defines, for instance many of the input-related events, and other input-related methods.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-237">Próbuje wymusić Przechwytywanie pióra do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-237">Attempts to force capture of the stylus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-238">
            <see langword="true" /> Jeśli pomyślnie przechwyceniu pióra; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-238">
              <see langword="true" /> if the stylus is successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-239">Domyślna implementacja oparte na podstawowym domyślnego urządzenia pióro zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-239">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="814ba-240">Jednak jeśli rozszerzania wejściowych urządzeń, które implementacji urządzenia system wejściowy jest można tworzyć system pióro alternatywną implementację urządzenia, która może zwracać różne wyniki.</span><span class="sxs-lookup"><span data-stu-id="814ba-240">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="814ba-241">Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, gdy pióro znajduje się poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="814ba-241">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="814ba-242">Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="814ba-242">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="814ba-243">Wywołanie tej metody wymaga podstawowej statycznych <xref:System.Windows.Input.Stylus> metody <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-243">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="814ba-244">Zachowanie rzeczywistych przechwytywania jest implementowany przez pióro active implementacji urządzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-244">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="814ba-245">Można przechwycić elementu musi być włączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-245">To be captured, an element must be enabled.</span></span> <span data-ttu-id="814ba-246">Sprawdź, czy <xref:System.Windows.ContentElement.IsEnabled%2A> jest `true` zwrócić przed wywołaniem <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-246">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="814ba-247">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureStylus%2A> zwraca `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-247">If calling <xref:System.Windows.ContentElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="814ba-248">Urządzenie do przechwytywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-248">The device to capture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-249">Próbuje wymusić przechwytywania touch do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-249">Attempts to force capture of a touch to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-250">
            <see langword="true" /> Jeśli określona touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-250">
              <see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-251"><xref:System.Windows.ContentElement.CaptureTouch%2A> Zwraca `false` Jeśli <xref:System.Windows.Input.TouchDevice> aktualnie przechwycony do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="814ba-251"><xref:System.Windows.ContentElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="814ba-252">Jeśli <xref:System.Windows.ContentElement.CaptureTouch%2A> zwraca `true`, a następnie <xref:System.Windows.ContentElement.GotTouchCapture> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-252">If <xref:System.Windows.ContentElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="814ba-253">Aby zwolnić przechwytywania jednym naciśnięciem przycisku z tego elementu, użyj <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> — metoda i określ urządzeń dotykowych do zwolnienia.</span><span class="sxs-lookup"><span data-stu-id="814ba-253">To release capture of a single touch from this element, use the <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="814ba-254">Aby zwolnić wszystkie poprawki z tego elementu, użyj <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="814ba-254">To release all touches from this element, use the <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="814ba-255">
            <paramref name="touchDevice" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-255">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-256">Pobiera kolekcję <see cref="T:System.Windows.Input.CommandBinding" /> obiektów, które są skojarzone z tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-256">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects that are associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-257">Kolekcja wszystkich <see cref="T:System.Windows.Input.CommandBinding" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-257">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-258">A <xref:System.Windows.Input.CommandBinding> włącza obsługę określonego polecenia dla tego elementu oraz deklaruje powiązanie między poleceniem, jego zdarzeń i obsługi, które są dołączone przez ten element.</span><span class="sxs-lookup"><span data-stu-id="814ba-258">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element and declares the linkage between a command, its events, and the handlers that are attached by this element.</span></span>  
  
 <span data-ttu-id="814ba-259">Inny typowy sposób wypełnienia <xref:System.Windows.ContentElement.CommandBindings%2A> kolekcji jest użycie <xref:System.Windows.Input.CommandManager> metody programowo.</span><span class="sxs-lookup"><span data-stu-id="814ba-259">Another typical way to populate the <xref:System.Windows.ContentElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="814ba-260">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="814ba-260">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="814ba-261">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="814ba-261">XAML Values</span></span>  
 <span data-ttu-id="814ba-262">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="814ba-262">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="814ba-263">Co najmniej jeden <xref:System.Windows.Input.CommandBinding> elementów.</span><span class="sxs-lookup"><span data-stu-id="814ba-263">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="814ba-264">Każdy z nich powinien mieć <xref:System.Windows.Input.CommandBinding.Command%2A> atrybut ustawioną znanych poleceń i ustawić atrybuty dla <xref:System.Windows.Input.CommandBinding.CanExecute> i <xref:System.Windows.Input.CommandBinding.Executed> implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-264">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="814ba-265">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="814ba-265">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-266">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z tego elementu jako element docelowy przeciągania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-266">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-267">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-267">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-268">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-268">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-269">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-269">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-270">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-270">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragEnterEvent>|  
|<span data-ttu-id="814ba-271">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-271">Routing strategy</span></span>|<span data-ttu-id="814ba-272">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-272">Bubbling</span></span>|  
|<span data-ttu-id="814ba-273">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-273">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="814ba-274">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="814ba-274">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="814ba-275">Zastąpienie <xref:System.Windows.ContentElement.OnDragEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-275">Override <xref:System.Windows.ContentElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-276">Identyfikuje <see cref="E:System.Windows.ContentElement.DragEnter" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-276">Identifies the <see cref="E:System.Windows.ContentElement.DragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-277">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-277">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-278">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-278">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-279">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-279">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-280">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-280">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-281">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-281">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-282">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to element źródłowy przeciągania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-282">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-283">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-283">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-284">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-284">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-285">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-285">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-286">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-286">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragLeaveEvent>|  
|<span data-ttu-id="814ba-287">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-287">Routing strategy</span></span>|<span data-ttu-id="814ba-288">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-288">Bubbling</span></span>|  
|<span data-ttu-id="814ba-289">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-289">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="814ba-290">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="814ba-290">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="814ba-291">Zastąpienie <xref:System.Windows.ContentElement.OnDragLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-291">Override <xref:System.Windows.ContentElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-292">Identyfikuje <see cref="E:System.Windows.ContentElement.DragLeave" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-292">Identifies the <see cref="E:System.Windows.ContentElement.DragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-293">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-293">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-294">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-294">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-295">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-295">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-296">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-296">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-297">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-297">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-298">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-298">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-299">To zdarzenie występuje nawet w przypadku przeciągania pochodzi z granicami elementu.</span><span class="sxs-lookup"><span data-stu-id="814ba-299">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="814ba-300">Jeśli przeciąganie rozpoczyna się poza granicami i przenosi wewnątrz, to zdarzenie jest wywoływane również, jak również <xref:System.Windows.ContentElement.DragEnter> i powiązanych zdarzeń w wersji zapoznawczej.</span><span class="sxs-lookup"><span data-stu-id="814ba-300">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.ContentElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="814ba-301">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-301">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-302">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragOver> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-302">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-303">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-303">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-304">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-304">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragOverEvent>|  
|<span data-ttu-id="814ba-305">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-305">Routing strategy</span></span>|<span data-ttu-id="814ba-306">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-306">Bubbling</span></span>|  
|<span data-ttu-id="814ba-307">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-307">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="814ba-308">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="814ba-308">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="814ba-309">Zastąpienie <xref:System.Windows.ContentElement.OnDragOver%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-309">Override <xref:System.Windows.ContentElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-310">Identyfikuje <see cref="E:System.Windows.ContentElement.DragOver" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-310">Identifies the <see cref="E:System.Windows.ContentElement.DragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-311">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-311">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-312">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-312">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-313">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-313">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-314">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-314">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-315">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-315">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-316">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tego elementu jako element docelowy upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-316">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-317">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-317">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-318">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.Drop> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-318">Event handlers that are attached to the <xref:System.Windows.ContentElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-319">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-319">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-320">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-320">Identifier field</span></span>|<xref:System.Windows.ContentElement.DropEvent>|  
|<span data-ttu-id="814ba-321">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-321">Routing strategy</span></span>|<span data-ttu-id="814ba-322">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-322">Bubbling</span></span>|  
|<span data-ttu-id="814ba-323">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-323">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="814ba-324">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="814ba-324">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="814ba-325">Zastąpienie <xref:System.Windows.ContentElement.OnDrop%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-325">Override <xref:System.Windows.ContentElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-326">Identyfikuje <see cref="E:System.Windows.ContentElement.Drop" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-326">Identifies the <see cref="E:System.Windows.ContentElement.Drop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-327">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-327">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-328">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-328">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-329">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-329">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-330">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-330">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-331">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-331">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-332">Próbuje ustawić fokus do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-332">Attempts to set focus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-333">
            <see langword="true" /> Jeśli fokus klawiatury może należeć do tego elementu; <see langword="false" /> Jeśli wywołanie tej metody nie wymuszone fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-333">
              <see langword="true" /> if keyboard focus could be set to this element; <see langword="false" /> if this method call did not force focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-334">Być focusable, <xref:System.Windows.ContentElement.Focusable%2A> i <xref:System.Windows.ContentElement.IsEnabled%2A> muszą być `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-334">To be focusable, <xref:System.Windows.ContentElement.Focusable%2A> and <xref:System.Windows.ContentElement.IsEnabled%2A> must both be `true`.</span></span> <span data-ttu-id="814ba-335">Należy pamiętać, że prawie wszystkie <xref:System.Windows.ContentElement> klasy pochodnej nie są <xref:System.Windows.ContentElement.Focusable%2A> domyślnie.</span><span class="sxs-lookup"><span data-stu-id="814ba-335">Note that nearly all <xref:System.Windows.ContentElement> derived classes are not <xref:System.Windows.ContentElement.Focusable%2A> by default.</span></span>  
  
 <span data-ttu-id="814ba-336">Nawet jeśli element jest obsługa zdarzeń focusable i włączone, w obrębie określonego drzewa, (takie jak w przypadku złożonych kontrolek) może odpowiadać, nie zezwalając fokus, Podgląd zdarzeń fokusu w związku z tym ta metoda zwróci `false`.</span><span class="sxs-lookup"><span data-stu-id="814ba-336">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="814ba-337">Fokus na ogół podlega dwa oddzielne pojęcia: Klawiatura fokus i logiczny fokus, które nie zawsze są identyczne.</span><span class="sxs-lookup"><span data-stu-id="814ba-337">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="814ba-338">Ta metoda ustawia logiczny fokus.</span><span class="sxs-lookup"><span data-stu-id="814ba-338">This method sets the logical focus.</span></span> <span data-ttu-id="814ba-339">Brak programowy sposób ustawić fokus klawiatury w szczególności; fokus klawiatury jest określana przez dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="814ba-339">There is no programmatic means to set keyboard focus specifically; keyboard focus is determined by user input.</span></span> <span data-ttu-id="814ba-340">Aby uzyskać więcej informacji, zobacz [omówienie fokus](~/docs/framework/wpf/advanced/focus-overview.md) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-340">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="814ba-341">Jeśli wywołanie <xref:System.Windows.ContentElement.Focus%2A> zwraca `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> i <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> są również `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-341">If calling <xref:System.Windows.ContentElement.Focus%2A> returns `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> and <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="814ba-342">Jeśli powiązane właściwości nie są jeszcze `true`, podczas wywoływania <xref:System.Windows.ContentElement.Focus%2A>, co najmniej jeden z następujących zdarzeń pojawienia się w następującej kolejności: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (źródłowego jest nazwa nowego docelowego fokus), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (źródłowego jest nazwa nowego docelowego fokus).</span><span class="sxs-lookup"><span data-stu-id="814ba-342">If the related properties are not already `true`, when you call <xref:System.Windows.ContentElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ba-343">Poniższy przykład jest obsługi zdarzeń załadować strony, która umożliwia znalezienie określonej o nazwie akapitu w dokumencie i ustawia fokus.</span><span class="sxs-lookup"><span data-stu-id="814ba-343">The following example is a page-loaded event handler that finds a specified named paragraph in the document and sets focus to it.</span></span> <span data-ttu-id="814ba-344">Akapitów nie są focusable domyślnie; Ten akapit miało styl stosowany (tego nie pokazano) który używany styl <xref:System.Windows.Setter> dokonanie focusable.</span><span class="sxs-lookup"><span data-stu-id="814ba-344">Paragraphs are not focusable by default; this particular paragraph had a style applied (not shown) that used a style <xref:System.Windows.Setter> to make it focusable.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#Focus](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#focus)]
 [!code-vb[ContentElementsSmorgasbord#Focus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#focus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-345">Pobiera lub ustawia wartość wskazującą, czy element może odebrać fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-345">Gets or sets a value that indicates whether the element can receive focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-346">
            <see langword="true" /> Jeśli element jest focusable; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-346">
              <see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-347">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-347">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-348">Tylko element ukierunkowanych odbiera klawiatury.</span><span class="sxs-lookup"><span data-stu-id="814ba-348">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="814ba-349">Niektóre klasy pochodne mogą zastąpić metadanych dla tej właściwości zależności w taki sposób, że klasa pochodna jest focusable domyślnie.</span><span class="sxs-lookup"><span data-stu-id="814ba-349">Certain derived classes might override metadata for this dependency property such that the derived class is focusable by default.</span></span>  
  
 <span data-ttu-id="814ba-350">Gdy dziedziczone przez <xref:System.Windows.Documents.Hyperlink> lub jej klas pochodnych <xref:System.Windows.Documents.Hyperlink> zastępuje metadane dla tej właściwości zależności i zmienia wartość domyślna tej właściwości należy `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-350">When inherited by <xref:System.Windows.Documents.Hyperlink> or its derived classes, <xref:System.Windows.Documents.Hyperlink> overrides the metadata for this dependency property and redefines the default value of this property to be `true`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-351">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-351">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-352">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-352">Identifier field</span></span>|<xref:System.Windows.ContentElement.FocusableProperty>|  
|<span data-ttu-id="814ba-353">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-353">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-354">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-354">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="814ba-355">Poniższy przykład tworzy styl, który sprawia, że <xref:System.Windows.Documents.Paragraph> focusable domyślnie i nadaje mu visual zachowanie po odebraniu fokus.</span><span class="sxs-lookup"><span data-stu-id="814ba-355">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="814ba-356">Jeśli pochodzi od <see cref="T:System.Windows.ContentElement" />, należy wziąć pod uwagę, czy ma nazwę elementu na focusable, ponieważ domyślnie nie będzie focusable.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-356">When you derive from <see cref="T:System.Windows.ContentElement" />, consider whether you want your element to be focusable, because by default it will not be focusable.</span>
            </span>
            <span data-ttu-id="814ba-357">Jeśli chcesz, aby Twoje element ma być focusable, Zastąp metadanych dla tej właściwości w Twojej statycznego konstruktora klasy pochodnej w następujący sposób:</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-357">If you want your element to be focusable, override the metadata for this property in your derived class static constructor as follows:</span>
            </span>  
  
 [!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)]
 [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]  
  
 <span data-ttu-id="814ba-358">gdzie <paramref name="myElement" /> jest nazwą klasy typu, które są zastępowanie wartości metadanych na.</span><span class="sxs-lookup"><span data-stu-id="814ba-358">where <paramref name="myElement" /> is the class name of the type that you are overriding the metadata value on.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-359">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.Focusable" /> zmiany właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-359">Occurs when the value of the <see cref="P:System.Windows.ContentElement.Focusable" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-360">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-360">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-361">Identyfikuje <see cref="P:System.Windows.ContentElement.Focusable" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-361">Identifies the <see cref="P:System.Windows.ContentElement.Focusable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="814ba-362">Właściwość the.Dependency do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-362">The.dependency property to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-363">Zwraca wartość właściwości podstawowej dla określonej właściwości w tym elemencie, pomijając wszelkie animowany wartość z bieżącą lub zatrzymana animacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-363">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-364">Właściwość wartości tak, jakby animacji nie są dołączone do właściwości określonym zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-364">The property value as if no animations are attached to the specified dependency property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-365">Jeśli animacji nie są dołączone do właściwości, a następnie <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> zwracana wartość jest zawsze taki sam jak <xref:System.Windows.DependencyObject.GetValue%2A> zwracają wartość.</span><span class="sxs-lookup"><span data-stu-id="814ba-365">If no animations are attached to the property, then the <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="814ba-366">W przypadku animacji dołączony następnie wszystkie możliwe animacji uzyskane wartości w tym uruchomienia i zatrzymania wartości są ignorowane, a wartość właściwości jest określona, oparte na wszystkich innych możliwych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="814ba-366">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="814ba-367">Aby uzyskać więcej informacji, zobacz [pierwszeństwo wartość właściwości zależności](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-367">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-368">Po przesłonięciu w klasie pochodnej zwraca zamiast [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] nadrzędnego dla tego elementu, jeśli wizualny obiekt nadrzędny nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-368">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-369">Obiekt, jeśli połączenie alternatywny nadrzędny do raportu jest implementacja klasy pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-369">An object, if implementation of a derived class has an alternate parent connection to report.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-370">Domyślna implementacja wirtualnego ta metoda zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="814ba-370">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="814ba-371"><xref:System.Windows.FrameworkContentElement> udostępnia implementację praktyczne.</span><span class="sxs-lookup"><span data-stu-id="814ba-371"><xref:System.Windows.FrameworkContentElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="814ba-372">Alternatywne nadrzędnych są używane w przypadku zdarzeń routingu w przypadkach, gdy element tworzy alternatywnych nadrzędna struktura tak, aby jego zdarzeń są kierowane w taki sposób, aby diverges od standardowego wzorca routingu w górę drzewa wizualnego do standardowego elementu nadrzędnego, lub w dół Wyświetl podgląd strategii routingu.</span><span class="sxs-lookup"><span data-stu-id="814ba-372">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-373">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania i upuszczania, które obejmuje ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-373">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-374"><xref:System.Windows.ContentElement.GiveFeedback> Zdarzeń umożliwia źródło zdarzeń przeciągnij, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="814ba-374">The <xref:System.Windows.ContentElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="814ba-375">Wizualny wzmacnia, że operacja przeciągania i upuszczania jest w toku.</span><span class="sxs-lookup"><span data-stu-id="814ba-375">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="814ba-376">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.GiveFeedback> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-376">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-377">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GiveFeedback> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-377">Event handlers that are attached to the <xref:System.Windows.ContentElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-378">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-378">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-379">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-379">Identifier field</span></span>|<xref:System.Windows.ContentElement.GiveFeedbackEvent>|  
|<span data-ttu-id="814ba-380">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-380">Routing strategy</span></span>|<span data-ttu-id="814ba-381">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-381">Bubbling</span></span>|  
|<span data-ttu-id="814ba-382">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-382">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="814ba-383">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="814ba-383">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="814ba-384">Zastąpienie <xref:System.Windows.ContentElement.OnGiveFeedback%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-384">Override <xref:System.Windows.ContentElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-385">Identyfikuje <see cref="E:System.Windows.ContentElement.GiveFeedback" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-385">Identifies the <see cref="E:System.Windows.ContentElement.GiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-386">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-386">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-387">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-387">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-388">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-388">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-389">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-389">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-390">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-390">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-391">Występuje, gdy ten element pobiera fokus logiczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-391">Occurs when this element gets logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-392">Logiczny fokus różni się od fokus klawiatury, jeśli celowo wymusza fokus przy użyciu wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="814ba-392">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="814ba-393">W tym scenariuszu fokus klawiatury pozostaje, gdzie jest i element gdzie <xref:System.Windows.ContentElement.Focus%2A> metoda jest wywoływana nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="814ba-393">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="814ba-394">Bardziej dokładne interpretacja to zdarzenie jest jego jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsFocused%2A> właściwości elementu w trasie została zmieniona z `false` do `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-394">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="814ba-395">Ponieważ to zdarzenie używa propagacji routingu, element, który otrzymuje fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-395">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="814ba-396">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element uzyskanych fokus.</span><span class="sxs-lookup"><span data-stu-id="814ba-396">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-397">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-397">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-398">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-398">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotFocusEvent>|  
|<span data-ttu-id="814ba-399">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-399">Routing strategy</span></span>|<span data-ttu-id="814ba-400">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-400">Bubbling</span></span>|  
|<span data-ttu-id="814ba-401">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-401">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="814ba-402">Nie ma żadnego odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="814ba-402">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="814ba-403">Zastąpienie <xref:System.Windows.ContentElement.OnGotFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-403">Override <xref:System.Windows.ContentElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-404">Identyfikuje <see cref="E:System.Windows.ContentElement.GotFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-404">Identifies the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-405">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-405">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-406">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-406">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-407">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-407">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-408">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-408">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-409">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-409">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-410">Występuje, gdy klawiatura ma fokus w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-410">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-411"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> jest podobne zdarzenia, który śledzi zmiany stanu we właściwości, która przechowuje stan aktywny elementu; <xref:System.Windows.ContentElement.GotKeyboardFocus> zdarzenie jest zgłaszane w tych samych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="814ba-411"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.ContentElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="814ba-412">Ponieważ to zdarzenie używa propagacji routingu, element, który ma fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-412">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="814ba-413">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="814ba-413">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="814ba-414">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.GotKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-414">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-415">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-415">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-416">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-416">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-417">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-417">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="814ba-418">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-418">Routing strategy</span></span>|<span data-ttu-id="814ba-419">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-419">Bubbling</span></span>|  
|<span data-ttu-id="814ba-420">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-420">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="814ba-421">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="814ba-421">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="814ba-422">Zastąpienie <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-422">Override <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-423">Identyfikuje <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-423">Identifies the <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-424">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-424">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-425">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-425">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-426">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-426">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-427">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-427">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-428">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-428">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-429">Występuje, gdy ten element przechwytuje mysz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-429">Occurs when this element captures the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-430">Gdy element przechwytuje mysz, otrzymuje myszą nawet wtedy, gdy wskaźnik myszy znajduje się poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="814ba-430">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="814ba-431">Mysz zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania oraz pozostaje przechwycone, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="814ba-431">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="814ba-432">Ponieważ to zdarzenie używa propagacji routingu, element, który ma przechwytywania może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-432">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="814ba-433">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> zdarzeń przechwytywania danych, aby określić rzeczywistego elementu, który ma myszy.</span><span class="sxs-lookup"><span data-stu-id="814ba-433">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="814ba-434">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.GotMouseCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-434">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.ContentElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-435">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotMouseCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-435">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-436">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-436">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-437">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-437">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="814ba-438">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-438">Routing strategy</span></span>|<span data-ttu-id="814ba-439">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-439">Bubbling</span></span>|  
|<span data-ttu-id="814ba-440">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-440">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="814ba-441">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="814ba-441">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="814ba-442">Zastąpienie <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-442">Override <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-443">Identyfikuje <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-443">Identifies the <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-444">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-444">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-445">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-445">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-446">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-446">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-447">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-447">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-448">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-448">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-449">Występuje, gdy ten element przechwytuje pióro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-449">Occurs when this element captures the stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-450">Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, jeśli wskaźnik jest poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="814ba-450">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="814ba-451">Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania oraz zachowuje przechwytywania, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="814ba-451">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="814ba-452">Ponieważ to zdarzenie używa propagacji routingu, element, który ma przechwytywania może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-452">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="814ba-453">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="814ba-453">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="814ba-454">To zdarzenie tworzy alias dla dołączone zdarzenie dla tej klasy, aby <xref:System.Windows.ContentElement.GotStylusCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-454">This event creates an alias for the  attached event for this class so that <xref:System.Windows.ContentElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-455">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotStylusCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-455">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-456">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-456">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-457">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-457">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="814ba-458">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-458">Routing strategy</span></span>|<span data-ttu-id="814ba-459">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-459">Bubbling</span></span>|  
|<span data-ttu-id="814ba-460">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-460">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-461">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="814ba-461">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="814ba-462">Zastąpienie <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-462">Override <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-463">Identyfikuje <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-463">Identifies the <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-464">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-464">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-465">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-465">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-466">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-466">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-467">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-467">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-468">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-468">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-469">Występuje, gdy touch są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-469">Occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-470">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-470">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-471">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-471">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="814ba-472">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-472">Routing strategy</span></span>|<span data-ttu-id="814ba-473">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-473">Bubbling</span></span>|  
|<span data-ttu-id="814ba-474">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-474">Delegate</span></span>|<span data-ttu-id="814ba-475"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="814ba-475"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="814ba-476">Zastąpienie <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-476">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-477">Identyfikuje <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-477">Identifies the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-478">Pobiera wartość wskazującą, czy ten element ma wszystkie właściwości animowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-478">Gets a value that indicates whether this element has any animated properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-479">
            <see langword="true" /> Jeśli ten element ma animacje dołączony do żadnej z jej właściwości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-479">
              <see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-480">Ta właściwość zwraca `true` trwałe animacji (unclocked, zawsze uruchomiona) lub animacji, które mają określone osi czasu.</span><span class="sxs-lookup"><span data-stu-id="814ba-480">This property returns `true` either for persistent (unclocked, always-running) animations or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-481">Pobiera kolekcję powiązań wejściowych, które są skojarzone z tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-481">Gets the collection of input bindings that are associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-482">Kolekcję powiązań wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-482">The collection of input bindings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-483">Powiązania wejściowe obsługuje powiązanie polecenia, aby urządzenia wejściowe.</span><span class="sxs-lookup"><span data-stu-id="814ba-483">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="814ba-484">Na przykład <xref:System.Windows.Input.MouseBinding> implementuje wejściowych powiązania, które zawierają właściwości, które są specyficzne dla urządzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="814ba-484">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are specific to mouse devices.</span></span>  
  
 <span data-ttu-id="814ba-485">Kolekcję powiązań wejściowych obejmuje powiązania wejściowe, które odnoszą się do typu i powiązania wejściowe, które są zadeklarowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="814ba-485">The collection of input bindings includes both input bindings that pertain to the type and also input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="814ba-486">Powiązaną właściwość <xref:System.Windows.ContentElement.CommandBindings%2A>, utrzymuje kolekcję powiązań polecenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-486">A related property, <xref:System.Windows.ContentElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="814ba-487">Te powiązania różnią się od powiązania wejściowe reprezentują następny poziom w dół przetwarzania polecenia - akcje, które są powiązane z znanych poleceń i obsługi specyficzne dla nich.</span><span class="sxs-lookup"><span data-stu-id="814ba-487">These bindings differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands and class-specific handlers for them.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="814ba-488">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="814ba-488">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="814ba-489">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="814ba-489">XAML Values</span></span>  
 <span data-ttu-id="814ba-490">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="814ba-490">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="814ba-491">Co najmniej jeden <xref:System.Windows.Input.InputBinding> elementów (zazwyczaj <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding> klas pochodnych).</span><span class="sxs-lookup"><span data-stu-id="814ba-491">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="814ba-492">Każdy z tych powinien mieć <xref:System.Windows.Input.InputBinding.Command%2A> i <xref:System.Windows.Input.InputBinding.Gesture%2A> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="814ba-492">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-493">Pobiera lub ustawia wartość wskazującą, czy ten element jest włączony w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-493">Gets or sets a value that indicates whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-494">
            <see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-494">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-495">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-495">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-496">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-496">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-497">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-497">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsEnabledProperty>|  
|<span data-ttu-id="814ba-498">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-498">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-499">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-499">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="814ba-500">Poniższy przykład tworzy styl zawierający metody ustawiającej właściwości określające zachowanie alternatywny visual podczas <xref:System.Windows.Documents.Hyperlink> ustawiono <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span><span class="sxs-lookup"><span data-stu-id="814ba-500">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> is set to <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-501">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwość zmiany tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-501">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property on this element changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-502">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-502">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-503">Pobiera wartość, która jest zwracana wartość <see cref="P:System.Windows.ContentElement.IsEnabled" /> w klasach pochodnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-503">Gets a value that becomes the return value of <see cref="P:System.Windows.ContentElement.IsEnabled" /> in derived classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-504">
            <see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-504">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="814ba-505">Domyślna implementacja ta właściwość przechowuje wartości i oblicza również, czy element nadrzędny tego elementu jest włączone.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-505">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span>
            </span>
            <span data-ttu-id="814ba-506">(Jeśli element nadrzędny nie jest włączone, element podrzędny nie może efektywnie włączone w praktycznych [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Jeśli chcesz przesłonić tę implementację, upewnij się, że możesz wywoływać implementację podstawową w celu zachowania tego zachowania.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-506">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-507">Identyfikuje <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-507">Identifies the <see cref="P:System.Windows.ContentElement.IsEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-508">Pobiera wartość, która określa, czy ten element ma logiczny fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-508">Gets a value that determines whether this element has logical focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-509">
            <see langword="true" /> Jeśli ten element ma logiczny fokus; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-509">
              <see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-510">Logiczny fokus może się różnić od fokus klawiatury, jeśli aplikacja ma wiele podziałów fokus, takich jak między zawartość menu i pozostałej części aplikacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-510">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="814ba-511">W tym scenariuszu fokus klawiatury może zawierać tylko jeden element interfejsu użytkownika aplikacji, jednak niektóre elementy w innych działów fokus nadal mogą zachować logiczny fokus.</span><span class="sxs-lookup"><span data-stu-id="814ba-511">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="814ba-512">Aby uzyskać więcej informacji dotyczących logiczny fokus, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md) i [omówienie fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-512">For more information on logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-513">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-513">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-514">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-514">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsFocusedProperty>|  
|<span data-ttu-id="814ba-515">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-515">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-516">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-516">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="814ba-517">Poniższy przykład tworzy styl, który sprawia, że <xref:System.Windows.Documents.Paragraph> focusable domyślnie i nadaje mu visual zachowanie po odebraniu fokus.</span><span class="sxs-lookup"><span data-stu-id="814ba-517">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-518">Identyfikuje <see cref="P:System.Windows.ContentElement.IsFocused" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-518">Identifies the <see cref="P:System.Windows.ContentElement.IsFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-519">Pobiera wartość wskazującą, czy system IME, takich jak [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], jest włączony dla przetwarzania danych wejściowych do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-519">Gets a value that indicates whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], is enabled for processing the input to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-520">
            <see langword="true" /> Jeśli Metoda wejściowa jest aktywna; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-520">
              <see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-521">Wartość domyślna właściwości dołączonych jest <see langword="true" />, jednak ta wartość ma wpływ stan metody wprowadzania tekstu w czasie wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-521">The default value of the underlying attached property is <see langword="true" />; however, this value is influenced by the state of input methods at runtime.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-522">Ta właściwość zwraca wartość zwracaną przez dołączona właściwość <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> dla aktualnie włączonego metody wejściowe (klawiatury, mowy i innych urządzeniach wejściowych).</span><span class="sxs-lookup"><span data-stu-id="814ba-522">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-523">Pobiera wartość wskazującą, czy ten element ma fokus klawiatury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-523">Gets a value that indicates whether this element has keyboard focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-524">
            <see langword="true" /> Jeśli ten element ma fokus klawiatury; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-524">
              <see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-525">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-525">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-526">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-526">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-527">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-527">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="814ba-528">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-528">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-529">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-529">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-530">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-530">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-531">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-531">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-532">Identyfikuje <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-532">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-533">Pobiera wartość wskazującą, czy fokus klawiatury mieści się w dowolnym miejscu element lub elementy podrzędne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-533">Gets a value that indicates whether keyboard focus is anywhere within the element or child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-534">
            <see langword="true" /> Jeśli fokus klawiatury znajduje się na element lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-534">
              <see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-535">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-535">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-536">Zmiana wartości tej właściwości zwykle podnieść <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzeń, chyba że klasa pochodna przesłoniła <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> do pomijania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-536">Changes to the value of this property typically raise the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="814ba-537">Ta właściwość nie należy ustawiać bezpośrednio, ale można ustawić fokus do elementu, wywołując <xref:System.Windows.ContentElement.Focus%2A>, lub tworząc <xref:System.Windows.ContentElement.MoveFocus%2A> żądania.</span><span class="sxs-lookup"><span data-stu-id="814ba-537">You do not set this property directly, but you can set the focus to the element by calling <xref:System.Windows.ContentElement.Focus%2A>, or by making a <xref:System.Windows.ContentElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="814ba-538">Jedną z tych wywołań metody mogą ulec zmianie wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="814ba-538">Either of these method calls might change this property value.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-539">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-539">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-540">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-540">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="814ba-541">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-541">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-542">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-542">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-543">Występuje, gdy wartość <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-543">Occurs when the value of the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-544">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-544">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-545">Identyfikuje <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-545">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-546">Pobiera wartość wskazującą, czy wskaźnik myszy jest przechwytywany przez ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-546">Gets a value that indicates whether the mouse is captured by this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-547">
            <see langword="true" /> Jeśli element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-547">
              <see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-548">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-548">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-549">Stan przechwytywanie myszy powiązany jest w trakcie operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="814ba-549">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-550">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-550">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-551">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-551">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="814ba-552">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-552">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-553">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-553">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="814ba-554">Poniższy przykład powoduje stanu przechwytywanie myszy lub wyłącz zależności od tego, czy wskaźnik myszy jest już przechwycona przez element.</span><span class="sxs-lookup"><span data-stu-id="814ba-554">The following example turns the mouse capture state on or off based on whether the mouse is already captured by the element.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-555">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-555">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-556">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-556">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-557">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-557">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-558">Pobiera wartość określającą, czy przechwytywanie myszy jest przechowywane przez ten element lub elementy podrzędne w jego drzewie elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-558">Gets a value that determines whether mouse capture is held by this element or by child elements in its element tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-559">
            <see langword="true" /> Jeśli ten element lub zawartych w niej element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-559">
              <see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-560">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-560">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-561">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-561">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-562">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-562">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="814ba-563">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-563">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-564">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-564">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-565">Występuje, gdy wartość <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> zmiany w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-565">Occurs when the value of the <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-566">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-566">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-567">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-567">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-568">Pobiera wartość wskazującą, czy pozycja wskaźnika myszy odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-568">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-569">
            <see langword="true" /> Gdy wskaźnik myszy znajduje się nad takiego samego wyniku elementu, jako testu trafienia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-569">
              <see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-570">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-570">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-571">W odróżnieniu od <xref:System.Windows.ContentElement.IsMouseOver%2A>, ta właściwość jest tylko `true` , gdy wskaźnik myszy znajduje się nad elementem literału — podobnie jak w przypadku testu trafienia.</span><span class="sxs-lookup"><span data-stu-id="814ba-571">Unlike <xref:System.Windows.ContentElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test.</span></span> <span data-ttu-id="814ba-572">Gdy wskaźnik myszy jest nad elementu podrzędnego, w szczególności za pośrednictwem elementy, które są częścią szablonu głębiej i składania kanałów, element tej właściwości będzie `false`.</span><span class="sxs-lookup"><span data-stu-id="814ba-572">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="814ba-573">Jeśli nie wiadomo, jak kontrolka zostanie połączone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który należy zdefiniować), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="814ba-573">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="814ba-574">W przypadku większości scenariuszy, w którym nie tworzenia formantów, użyć <xref:System.Windows.ContentElement.IsMouseOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="814ba-574">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="814ba-575">Jeśli przycisk myszy jest przechwytywany przez ten element, a ta właściwość jest `true` w czasie przechwytywania, ta właściwość będzie zwracać `true` dopóki przechwytywanie myszy zostanie utracone i kursor nie znajduje się za pośrednictwem jego granic.</span><span class="sxs-lookup"><span data-stu-id="814ba-575">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-576">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-576">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-577">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-577">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="814ba-578">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-578">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-579">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-579">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-580">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-580">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-581">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-581">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-582">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-582">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-583">Pobiera wartość wskazującą, czy wskaźnik myszy znajduje się nad tym elementem (w tym elementy podrzędne visual lub jego składania kontroli).</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-583">Gets a value that indicates whether the mouse pointer is located over this element (including visual child elements, or its control compositing).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-584">
            <see langword="true" /> Gdy wskaźnik myszy znajduje się nad elementu lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-584">
              <see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-585">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-585">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-586">Mimo że podobne zdarzenia "IsMouseOverChanged" nie istnieje, czy kilka podobnych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-586">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="814ba-587">Na przykład można użyć <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, i <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="814ba-587">For example, you can use <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, and <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="814ba-588">Jeśli ten element przechwytuje mysz, ta właściwość pozostaje `true` dopóki przechwytywanie myszy zostanie utracone i wskaźnik myszy opuszczeniu granic elementu.</span><span class="sxs-lookup"><span data-stu-id="814ba-588">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-589">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-589">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-590">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-590">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseOverProperty>|  
|<span data-ttu-id="814ba-591">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-591">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-592">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-592">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="814ba-593">Poniższy przykład tworzy styl zawierający metody ustawiającej właściwości określające zachowanie alternatywny visual podczas <xref:System.Windows.Documents.Hyperlink> raporty <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-593">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> reports <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-594">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-594">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-595">Pobiera wartość wskazującą, czy pióro są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-595">Gets a value that indicates whether the stylus is captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-596">
            <see langword="true" /> Jeśli element ma Przechwytywanie pióra; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-596">
              <see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-597">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-597">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-598">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-598">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-599">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-599">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-600">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-600">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-601">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-601">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="814ba-602">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-602">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-603">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-603">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureStylus" />
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-604">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-604">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-605">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-605">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-606">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-606">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-607">Pobiera wartość określającą, czy przechwytywanie pióra jest przechowywane przez ten element, w tym elementów podrzędnych i składania formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-607">Gets a value that determines whether stylus capture is held by this element, including child elements and control compositing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-608">
            <see langword="true" /> Jeśli przechwytywanie pióra odbywa się w obrębie tego elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-608">
              <see langword="true" /> if stylus capture is held within this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-609">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-609">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-610">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-610">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-611">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-611">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-612">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-612">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="814ba-613">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-613">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-614">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-614">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-615">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-615">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-616">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-616">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-617">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-617">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-618">Pobiera wartość wskazującą, czy pozycja Pióro odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-618">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-619">
            <see langword="true" /> Jeśli znajduje się nad tego samego elementu jako testu trafienia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-619">
              <see langword="true" /> if the stylus is over the same element as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-620">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-620">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-621">W odróżnieniu od <xref:System.Windows.ContentElement.IsStylusOver%2A>, ta właściwość jest tylko `true` , gdy pióro znajduje się nad elementem.</span><span class="sxs-lookup"><span data-stu-id="814ba-621">Unlike <xref:System.Windows.ContentElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="814ba-622">Jeśli pióro jest na element podrzędny lub elementy, które są częścią elementu składania głębiej, ta właściwość będzie `false`.</span><span class="sxs-lookup"><span data-stu-id="814ba-622">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing, this property will be `false`.</span></span>  
  
 <span data-ttu-id="814ba-623">Jeśli nie wiadomo, jak kontrolka zostanie połączone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który należy zdefiniować), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="814ba-623">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="814ba-624">W przypadku większości scenariuszy, w którym nie tworzenia formantów, użyć <xref:System.Windows.ContentElement.IsStylusOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="814ba-624">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="814ba-625">Jeśli ten element ma Przechwytywanie pióra, ta właściwość jest `true` w czasie przechwytywania, ta właściwość pozostaje `true` aż do przechwycenia pióra zostaną utracone i pióro nie jest za pośrednictwem jego granic.</span><span class="sxs-lookup"><span data-stu-id="814ba-625">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="814ba-626">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-626">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-627">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-627">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-628">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-628">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-629">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-629">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="814ba-630">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-630">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-631">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-631">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-632">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> zmiany właściwości w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-632">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-633">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-633">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-634">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-634">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-635">Pobiera wartość wskazującą, czy Pióro znajduje się nad tym elementem (w tym elementy podrzędne visual).</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-635">Gets a value that indicates whether the stylus is located over this element (including visual child elements).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-636">
            <see langword="true" /> Jeśli znajduje się nad elementu lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-636">
              <see langword="true" /> if the stylus is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="814ba-637">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-637">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-638">Jeśli ten element ma Przechwytywanie pióra, ta właściwość pozostaje `true` dopóki nie zostanie utracone Przechwytywanie pióra i kursor znajduje się poza jej zakres.</span><span class="sxs-lookup"><span data-stu-id="814ba-638">If this element has stylus capture, this property remains `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="814ba-639">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-639">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-640">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-640">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="814ba-641">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="814ba-641">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-642">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-642">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusOverProperty>|  
|<span data-ttu-id="814ba-643">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="814ba-643">Metadata properties set to `true`</span></span>|<span data-ttu-id="814ba-644">Brak</span><span class="sxs-lookup"><span data-stu-id="814ba-644">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-645">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusOver" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-645">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-646">Występuje po naciśnięciu klawisza, gdy fokus jest w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-646">Occurs when a key is pressed while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-647">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.</span><span class="sxs-lookup"><span data-stu-id="814ba-647">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="814ba-648"><xref:System.Windows.ContentElement.KeyDown> Zdarzenie jest zdarzenie wprowadzania tekstu niższego poziomu, które mogą nie działać zgodnie z oczekiwaniami w niektórych formantów.</span><span class="sxs-lookup"><span data-stu-id="814ba-648">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="814ba-649">Jest tak, ponieważ niektóre formanty mają składania kontroli lub klasy obsługi udostępnia wyższego poziomu wersji tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="814ba-649">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="814ba-650">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.KeyDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-650">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.KeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-651">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.KeyDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-651">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-652">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-652">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-653">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-653">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyDownEvent>|  
|<span data-ttu-id="814ba-654">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-654">Routing strategy</span></span>|<span data-ttu-id="814ba-655">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-655">Bubbling</span></span>|  
|<span data-ttu-id="814ba-656">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-656">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="814ba-657">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-657">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="814ba-658">Zastąpienie <xref:System.Windows.ContentElement.OnKeyDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-658">Override <xref:System.Windows.ContentElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-659">Identyfikuje <see cref="E:System.Windows.ContentElement.KeyDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-659">Identifies the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-660">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-660">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-661">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-661">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-662">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-662">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-663">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-663">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-664">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-664">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-665">Występuje po zwolnieniu klawisza, gdy fokus jest w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-665">Occurs when a key is released while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-666">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.KeyUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-666">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.ContentElement.KeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-667">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.KeyUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-667">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-668">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-668">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-669">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-669">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyUpEvent>|  
|<span data-ttu-id="814ba-670">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-670">Routing strategy</span></span>|<span data-ttu-id="814ba-671">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-671">Bubbling</span></span>|  
|<span data-ttu-id="814ba-672">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-672">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="814ba-673">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-673">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="814ba-674">Zastąpienie <xref:System.Windows.ContentElement.OnKeyUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-674">Override <xref:System.Windows.ContentElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-675">Identyfikuje <see cref="E:System.Windows.ContentElement.KeyUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-675">Identifies the <see cref="E:System.Windows.ContentElement.KeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-676">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-676">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-677">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-677">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-678">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-678">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-679">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-679">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-680">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-680">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-681">Występuje po utracie fokusu logicznego przez ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-681">Occurs when this element loses logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-682">Logiczny fokus różni się od fokus klawiatury, gdy fokus celowo wymusza optymalizacji przy użyciu wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="814ba-682">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="814ba-683">W tym scenariuszu, pozostaje fokus klawiatury, gdzie jest i element gdzie <xref:System.Windows.ContentElement.Focus%2A> metoda jest wywoływana nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="814ba-683">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="814ba-684">Bardziej dokładne interpretacja to zdarzenie jest jego jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsFocused%2A> zmiany właściwości elementu w trasie z `true` do `false`.</span><span class="sxs-lookup"><span data-stu-id="814ba-684">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="814ba-685">Ponieważ to zdarzenie używa propagacji routingu, element traci fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-685">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="814ba-686">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element uzyskanych fokus.</span><span class="sxs-lookup"><span data-stu-id="814ba-686">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-687">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-687">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-688">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-688">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostFocusEvent>|  
|<span data-ttu-id="814ba-689">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-689">Routing strategy</span></span>|<span data-ttu-id="814ba-690">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-690">Bubbling</span></span>|  
|<span data-ttu-id="814ba-691">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-691">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="814ba-692">Nie ma żadnego odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="814ba-692">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="814ba-693">Zastąpienie <xref:System.Windows.ContentElement.OnLostFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-693">Override <xref:System.Windows.ContentElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-694">Identyfikuje <see cref="E:System.Windows.ContentElement.LostFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-694">Identifies the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-695">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-695">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-696">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-696">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-697">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-697">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-698">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-698">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-699">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-699">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-700">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-700">Occurs when the keyboard is no longer focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-701">Ponieważ to zdarzenie używa propagacji routingu, element utracie fokusu może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-701">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="814ba-702">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-702">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="814ba-703">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.LostKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-703">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-704">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-704">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-705">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-705">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-706">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-706">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="814ba-707">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-707">Routing strategy</span></span>|<span data-ttu-id="814ba-708">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-708">Bubbling</span></span>|  
|<span data-ttu-id="814ba-709">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-709">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="814ba-710">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="814ba-710">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="814ba-711">Zastąpienie <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-711">Override <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-712">Identyfikuje <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-712">Identifies the <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-713">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-713">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-714">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-714">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-715">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-715">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-716">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-716">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-717">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-717">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-718">Występuje, gdy ten element utraci przechwytywanie myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-718">Occurs when this element loses mouse capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-719">Gdy element przechwytuje mysz, otrzymuje myszą nawet, jeśli wskaźnik jest poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="814ba-719">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="814ba-720">Mysz jest zwykle przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="814ba-720">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="814ba-721">Ponieważ to zdarzenie używa propagacji routingu, element utraci Przechwytywanie może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-721">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="814ba-722">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element, który utracił przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="814ba-722">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="814ba-723">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.LostMouseCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-723">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-724">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostMouseCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-724">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-725">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-725">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-726">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-726">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="814ba-727">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-727">Routing strategy</span></span>|<span data-ttu-id="814ba-728">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-728">Bubbling</span></span>|  
|<span data-ttu-id="814ba-729">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-729">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="814ba-730">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="814ba-730">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="814ba-731">Zastąpienie <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-731">Override <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-732">Identyfikuje <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-732">Identifies the <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-733">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-733">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-734">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-734">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-735">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-735">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-736">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-736">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-737">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-737">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-738">Występuje, gdy ten element utraci Przechwytywanie pióra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-738">Occurs when this element loses stylus capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-739">Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, jeśli wskaźnik jest poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="814ba-739">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="814ba-740">Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="814ba-740">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="814ba-741">Ponieważ to zdarzenie używa propagacji routingu, element traci fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-741">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="814ba-742">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-742">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="814ba-743">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.LostStylusCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-743">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-744">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostStylusCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-744">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-745">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-745">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-746">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-746">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="814ba-747">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-747">Routing strategy</span></span>|<span data-ttu-id="814ba-748">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-748">Bubbling</span></span>|  
|<span data-ttu-id="814ba-749">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-749">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-750">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="814ba-750">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="814ba-751">Zastąpienie <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-751">Override <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-752">Identyfikuje <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-752">Identifies the <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-753">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-753">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-754">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-754">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-755">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-755">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-756">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-756">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-757">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-757">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-758">Występuje, gdy ten element utraci Przechwytywanie touch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-758">Occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-759">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-759">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-760">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-760">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="814ba-761">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-761">Routing strategy</span></span>|<span data-ttu-id="814ba-762">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-762">Bubbling</span></span>|  
|<span data-ttu-id="814ba-763">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-763">Delegate</span></span>|<span data-ttu-id="814ba-764"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="814ba-764"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="814ba-765">Zastąpienie <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-765">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-766">Identyfikuje <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-766">Identifies the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-767">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-767">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-768">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-768">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-769">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-769">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-770"><xref:System.Windows.ContentElement.MouseDown> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.ContentElement.MouseLeftButtonDown> lub <xref:System.Windows.ContentElement.MouseRightButtonDown>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="814ba-770">The <xref:System.Windows.ContentElement.MouseDown> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="814ba-771"><xref:System.Windows.ContentElement.MouseLeftButtonDown> i <xref:System.Windows.ContentElement.MouseRightButtonDown> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-771"><xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="814ba-772">Zobacz uwagi dla <xref:System.Windows.ContentElement.MouseLeftButtonDown> lub <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-772">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="814ba-773">Kilka <xref:System.Windows.ContentElement> pochodzi z klasy, które mają podobne kontroli zachowania, na przykład <xref:System.Windows.Documents.Hyperlink>, może być związanego z używaniem klasy obsługi zdarzenia przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="814ba-773">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="814ba-774">Lewy przycisk myszy w dół zdarzeń jest najbardziej prawdopodobne zdarzenia klasa Obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="814ba-774">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="814ba-775">Klasy obsługi często oznacza odpowiadającego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsłużone.</span><span class="sxs-lookup"><span data-stu-id="814ba-775">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="814ba-776">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-776">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="814ba-777">Wszystkie inne klasy lub wystąpienia obsługi, które są dołączone do elementów w kierunku propagacji do katalogu głównego w drzewie interfejsu użytkownika również nie zwykle są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="814ba-777">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="814ba-778">Można rozwiązać problem, który jest opisane w poprzednim ważne i nadal odbierać <xref:System.Windows.ContentElement.MouseDown> zdarzeń związanych z lewego przycisku myszy w dół zdarzenia w klasie pochodnej, który zawiera klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="814ba-778">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="814ba-779">Dołącz obsługi <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="814ba-779">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="814ba-780">Zauważyć, że jest zdarzeń w wersji zapoznawczej, dlatego trasy rozpoczyna się w katalogu głównym a tuneli do formantu.</span><span class="sxs-lookup"><span data-stu-id="814ba-780">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="814ba-781">Zarejestruj Obsługa w formancie proceduralnie przez wywołanie metody <xref:System.Windows.ContentElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-781">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-782">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-782">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-783">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-783">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseDownEvent>|  
|<span data-ttu-id="814ba-784">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-784">Routing strategy</span></span>|<span data-ttu-id="814ba-785">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-785">Bubbling</span></span>|  
|<span data-ttu-id="814ba-786">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-786">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-787">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-787">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="814ba-788">Zastąpienie <xref:System.Windows.ContentElement.OnMouseDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-788">Override <xref:System.Windows.ContentElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-789">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-789">Identifies the <see cref="E:System.Windows.ContentElement.MouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-790">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-790">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-791">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-791">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-792">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-792">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-793">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-793">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-794">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-794">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-795">Występuje, gdy wskaźnik myszy zostanie umieszczony granic tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-795">Occurs when the mouse pointer enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-796"><xref:System.Windows.ContentElement.MouseEnter> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-796"><xref:System.Windows.ContentElement.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="814ba-797">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="814ba-797">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="814ba-798">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="814ba-798">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="814ba-799">Mimo że <xref:System.Windows.ContentElement.MouseEnter> ścieżki, gdy wskaźnik myszy zostanie umieszczony granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsMouseOver%2A> zmieniono wartość właściwości z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="814ba-799">Although <xref:System.Windows.ContentElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="814ba-800">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-800">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-801">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-801">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-802">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-802">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-803">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-803">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseEnterEvent>|  
|<span data-ttu-id="814ba-804">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-804">Routing strategy</span></span>|<span data-ttu-id="814ba-805">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-805">Direct</span></span>|  
|<span data-ttu-id="814ba-806">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-806">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="814ba-807">Zastąpienie <xref:System.Windows.ContentElement.OnMouseEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-807">Override <xref:System.Windows.ContentElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-808">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseEnter" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-808">Identifies the <see cref="E:System.Windows.ContentElement.MouseEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-809">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-809">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-810">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-810">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-811">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-811">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-812">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-812">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-813">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-813">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-814">Występuje po opuszczeniu przez wskaźnik myszy granic tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-814">Occurs when the mouse pointer leaves the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-815"><xref:System.Windows.ContentElement.MouseLeave> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-815"><xref:System.Windows.ContentElement.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="814ba-816">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="814ba-816">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="814ba-817">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="814ba-817">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="814ba-818">Mimo że <xref:System.Windows.ContentElement.MouseLeave> ścieżki, gdy mysz opuści elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsMouseOver%2A> zmieniono wartość właściwości z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="814ba-818">Although <xref:System.Windows.ContentElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="814ba-819">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-819">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-820">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-820">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-821">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-821">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-822">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-822">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeaveEvent>|  
|<span data-ttu-id="814ba-823">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-823">Routing strategy</span></span>|<span data-ttu-id="814ba-824">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-824">Direct</span></span>|  
|<span data-ttu-id="814ba-825">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-825">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="814ba-826">Zastąpienie <xref:System.Windows.ContentElement.OnMouseLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-826">Override <xref:System.Windows.ContentElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-827">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeave" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-827">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-828">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-828">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-829">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-829">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-830">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-830">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-831">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-831">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-832">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-832">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-833">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-833">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-834">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-834">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="814ba-835">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-835">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="814ba-836">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-836">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="814ba-837">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="814ba-837">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="814ba-838">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="814ba-838">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="814ba-839">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-839">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="814ba-840">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-840">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="814ba-841">Kilka <xref:System.Windows.ContentElement> pochodzi z klasy, które mają podobne kontroli zachowania, na przykład <xref:System.Windows.Documents.Hyperlink>, może być związanego z używaniem klasy obsługi zdarzenia przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="814ba-841">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="814ba-842">Lewy przycisk myszy w dół zdarzeń jest najbardziej prawdopodobne zdarzenia klasa Obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="814ba-842">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="814ba-843">Klasy obsługi często oznacza odpowiadającego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsłużone.</span><span class="sxs-lookup"><span data-stu-id="814ba-843">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="814ba-844">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-844">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="814ba-845">Wszystkie inne klasy lub wystąpienia obsługi, które są dołączone do elementów w kierunku propagacji do katalogu głównego w drzewie interfejsu użytkownika również nie zwykle są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="814ba-845">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="814ba-846">Można rozwiązać problem, który jest opisane w poprzednim ważne i nadal odbierać <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzeń związanych z lewego przycisku myszy w dół zdarzenia w klasie pochodnej, który zawiera klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="814ba-846">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="814ba-847">Dołącz obsługi <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="814ba-847">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="814ba-848">Zauważyć, że jest zdarzeń w wersji zapoznawczej, dlatego trasy rozpoczyna się w katalogu głównym a tuneli do formantu.</span><span class="sxs-lookup"><span data-stu-id="814ba-848">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="814ba-849">Zarejestruj Obsługa w formancie proceduralnie przez wywołanie metody <xref:System.Windows.ContentElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-849">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-850">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-850">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-851">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-851">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="814ba-852">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-852">Routing strategy</span></span>|<span data-ttu-id="814ba-853">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-853">Direct</span></span>|  
|<span data-ttu-id="814ba-854">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-854">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-855">Zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-855">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-856">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-856">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-857">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-857">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-858">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-858">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-859">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-859">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-860">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-860">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-861">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-861">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-862">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-862">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-863">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-863">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="814ba-864">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-864">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="814ba-865">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-865">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="814ba-866">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="814ba-866">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="814ba-867">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="814ba-867">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="814ba-868">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-868">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="814ba-869">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-869">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-870">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-870">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-871">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-871">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="814ba-872">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-872">Routing strategy</span></span>|<span data-ttu-id="814ba-873">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-873">Direct</span></span>|  
|<span data-ttu-id="814ba-874">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-874">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-875">Zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-875">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-876">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-876">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-877">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-877">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-878">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-878">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-879">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-879">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-880">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-880">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-881">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-881">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-882">Występuje, gdy wskaźnik myszy porusza się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-882">Occurs when the mouse pointer moves while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-883">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-883">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-884">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-884">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-885">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-885">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-886">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-886">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseMoveEvent>|  
|<span data-ttu-id="814ba-887">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-887">Routing strategy</span></span>|<span data-ttu-id="814ba-888">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-888">Bubbling</span></span>|  
|<span data-ttu-id="814ba-889">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-889">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="814ba-890">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="814ba-890">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="814ba-891">Zastąpienie <xref:System.Windows.ContentElement.OnMouseMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-891">Override <xref:System.Windows.ContentElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-892">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-892">Identifies the <see cref="E:System.Windows.ContentElement.MouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-893">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-893">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-894">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-894">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-895">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-895">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-896">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-896">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-897">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-897">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-898">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-898">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-899">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-899">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="814ba-900">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-900">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="814ba-901">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-901">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="814ba-902">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="814ba-902">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="814ba-903">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="814ba-903">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="814ba-904">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-904">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="814ba-905">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-905">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="814ba-906">Prawy przycisk myszy zdarzeń często ma natywnej obsługi w scenariuszach aplikacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-906">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="814ba-907">Na przykład prawym przyciskiem myszy w dół może wyświetlić menu kontekstowe.</span><span class="sxs-lookup"><span data-stu-id="814ba-907">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="814ba-908">Zobacz [omówienie ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-908">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-909">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-909">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-910">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-910">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="814ba-911">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-911">Routing strategy</span></span>|<span data-ttu-id="814ba-912">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-912">Direct</span></span>|  
|<span data-ttu-id="814ba-913">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-913">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-914">Zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-914">Override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-915">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-915">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-916">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-916">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-917">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-917">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-918">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-918">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-919">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-919">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-920">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-920">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-921">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-921">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-922">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-922">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="814ba-923">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-923">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="814ba-924">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-924">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="814ba-925">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="814ba-925">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="814ba-926">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="814ba-926">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="814ba-927">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-927">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="814ba-928">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-928">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-929">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-929">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-930">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-930">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="814ba-931">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-931">Routing strategy</span></span>|<span data-ttu-id="814ba-932">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-932">Direct</span></span>|  
|<span data-ttu-id="814ba-933">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-933">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-934">Zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-934">Override <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-935">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-935">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-936">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-936">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-937">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-937">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-938">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-938">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-939">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-939">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-940">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-940">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-941">Występuje po zwolnieniu dowolnego przycisku myszy nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-941">Occurs when any mouse button is released over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-942">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-942">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-943">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-943">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-944"><xref:System.Windows.ContentElement.MouseUp> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.ContentElement.MouseLeftButtonUp> lub <xref:System.Windows.ContentElement.MouseRightButtonUp>, które odpowiadają wersji jednego z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="814ba-944">The <xref:System.Windows.ContentElement.MouseUp> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="814ba-945"><xref:System.Windows.ContentElement.MouseLeftButtonUp> i <xref:System.Windows.ContentElement.MouseRightButtonUp> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-945"><xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="814ba-946">Zobacz uwagi dla <xref:System.Windows.ContentElement.MouseLeftButtonUp> lub <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-946">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-947">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-947">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-948">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-948">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseUpEvent>|  
|<span data-ttu-id="814ba-949">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-949">Routing strategy</span></span>|<span data-ttu-id="814ba-950">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-950">Bubbling</span></span>|  
|<span data-ttu-id="814ba-951">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-951">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-952">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-952">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="814ba-953">Zastąpienie <xref:System.Windows.ContentElement.OnMouseUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-953">Override <xref:System.Windows.ContentElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-954">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-954">Identifies the <see cref="E:System.Windows.ContentElement.MouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-955">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-955">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-956">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-956">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-957">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-957">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-958">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-958">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-959">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-959">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-960">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-960">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-961">Przechwytywanie myszy lub fokus pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony <xref:System.Windows.ContentElement.MouseWheel> zdarzeń z elementu ukierunkowanych lub przechwycone, wskaźnik myszy może się okazać za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="814ba-961">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.ContentElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="814ba-962">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.MouseWheel> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-962">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseWheel> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-963">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseWheel> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-963">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-964">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-964">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-965">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-965">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseWheelEvent>|  
|<span data-ttu-id="814ba-966">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-966">Routing strategy</span></span>|<span data-ttu-id="814ba-967">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-967">Bubbling</span></span>|  
|<span data-ttu-id="814ba-968">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-968">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="814ba-969">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="814ba-969">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="814ba-970">Zastąpienie <xref:System.Windows.ContentElement.OnMouseWheel%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-970">Override <xref:System.Windows.ContentElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-971">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseWheel" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-971">Identifies the <see cref="E:System.Windows.ContentElement.MouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-972">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-972">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-973">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-973">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-974">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-974">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-975">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-975">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-976">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-976">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="814ba-977">Żądanie przechodzenie, zawierającego właściwości, która wskazuje albo tryb przechodzenia w istniejących kolejności tabulacji lub kierunek przenoszenia wizualnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-977">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-978">Próbuje Przenieś fokus z tego elementu do innego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-978">Attempts to move focus from this element to another element.</span>
          </span>
          <span data-ttu-id="814ba-979">Przenieś fokus kierunek jest określany przez kierunek wskazówki jest interpretowana w obrębie organizacji elementu nadrzędnego visual dla tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-979">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-980">
            <see langword="true" /> Jeśli wykonano żądanej przechodzenie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-980">
              <see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-981">Upewnij się, że należy sprawdzić wartość zwrotną tej metody.</span><span class="sxs-lookup"><span data-stu-id="814ba-981">Make sure you check the return value of this method.</span></span> <span data-ttu-id="814ba-982">Zwracana wartość `false` może być zwrócony, jeśli działa podczas przechodzenia do tabulatora jest definiowana za pomocą formantu kompozycji, a nie żądał żądania przechodzenia do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="814ba-982">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-983">Zwraca specyficzne <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji dla [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastruktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-983">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-984">Określonego typu <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-984">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="814ba-985">Implementacja tej metody jest zazwyczaj wywołanie konstruktora określonego <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> wdrożenia i zwraca je jako wartości zwracane.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-985">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span>
            </span>
            <span data-ttu-id="814ba-986">Wszystkie <see cref="T:System.Windows.ContentElement" /> klas pochodnych należy zaimplementować tę metodę w celu zapewnienia ich własnych określonych <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacje do [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastruktury.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-986">All <see cref="T:System.Windows.ContentElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
            </span>
            <span data-ttu-id="814ba-987">Aby uzyskać szczegółowe informacje dotyczące implementacji tego wzorca, zobacz <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-987">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-988">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-988">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-989">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-989">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-990">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-990">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-991">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-991">This method has no default implementation.</span></span> <span data-ttu-id="814ba-992">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-992">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-993">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-993">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-994">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-994">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-995">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-995">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-996">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-996">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-997">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-997">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-998">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-998">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-999">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-999">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1000">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1000">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1001">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragLeave" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1001">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1002">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1002">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1003">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1003">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1004">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1004">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1005">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1005">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1006">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1006">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1007">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1007">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1008">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1008">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1009">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1009">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1010">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1010">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1011">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1011">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1012">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1012">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1013">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragOver" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1013">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1014">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1014">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1015">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1015">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1016">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1016">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1017">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1017">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1018">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1018">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1019">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1019">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1020">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1020">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1021">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1021">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1022">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1022">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1023">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1023">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1024">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1024">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1025">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1025">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1026">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1026">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1027">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1027">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1028">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1028">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1029">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1029">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1030">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1030">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1031">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1031">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1032">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1032">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1033">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1033">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1034">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1034">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1035">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1035">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1036">
            <see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1036">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1037">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.GiveFeedback" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1037">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1038">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1038">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1039">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1039">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1040">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1040">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1041">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1041">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1042">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1042">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1043">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1043">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1044">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1044">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1045">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1045">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1046">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1046">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1047">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1047">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1048">A <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1048">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="814ba-1049">Te dane zdarzenie musi zawierać identyfikator <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1049">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1050">Zgłasza <see cref="E:System.Windows.ContentElement.GotFocus" /> kierowanego zdarzenia przy użyciu dane zdarzenia przekazane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1050">Raises the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event by using the event data provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1051">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, który wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1051">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="814ba-1052">To na \* implementacji metody jest przeznaczona do zgłoszenia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby zgłosić zdarzenie po <xref:System.Windows.ContentElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="814ba-1052">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="814ba-1053"><xref:System.Windows.ContentElement.OnGotFocus%2A> Implementacji różni się od niektórych innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na \* implementacji, które zapewniają tylko wygodny sposób, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1053">The <xref:System.Windows.ContentElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="814ba-1054">W przypadku braku zamierzonego i nietypowych potrzebę nie wywoływanie zdarzeń fokusu, upewnij się, że wdrożenie wywołuje implementacji podstawowej.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1054">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span>
            </span>
            <span data-ttu-id="814ba-1055">W przeciwnym razie <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzenie nie jest wywoływane podczas operacji typowych użytkownika, które zwykle Ustaw fokus w tym elemencie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1055">Otherwise, the <see cref="E:System.Windows.ContentElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span>
            </span>
            <span data-ttu-id="814ba-1056">Jeśli nie chcesz, aby Twoje element ma być focusable, użytkownik może uniemożliwić element focusable przez ustawienie <see cref="P:System.Windows.ContentElement.Focusable" /> do <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1056">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span>
            </span>
            <span data-ttu-id="814ba-1057">Należy pamiętać, że domyślnie <see cref="P:System.Windows.ContentElement.Focusable" /> nie jest focusable, w związku z tym ustawienie <see cref="P:System.Windows.ContentElement.Focusable" /> celowo może nie być konieczne.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1057">Note that by default a <see cref="P:System.Windows.ContentElement.Focusable" /> is not focusable, therefore setting <see cref="P:System.Windows.ContentElement.Focusable" /> deliberately might not be necessary.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1058">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1058">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1059">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1059">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1060">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1060">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1061">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1061">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1062">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1062">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1063">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1063">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1064">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1064">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1065">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1065">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1066">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1066">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1067">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1067">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1068">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1068">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1069">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1069">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1070">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1070">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1071">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1071">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1072">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1072">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1073">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1073">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1074">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1074">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1075">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1075">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1076">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1076">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1077">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1077">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1078">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1078">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1079">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1079">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1080">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1080">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1081">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1081">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1082">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1082">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1083">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1083">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1084">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1084">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1085">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1085">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1086">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1086">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1087">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1087">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1088">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1088">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1089">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1089">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1090">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1090">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1091">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1091">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1092">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1092">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1093">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1093">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1094">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1094">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1095">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> kierowanego zdarzenia, gdy touch są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1095">Provides class handling for the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1096"><xref:System.Windows.ContentElement.OnGotTouchCapture%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1096">The <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="814ba-1097">Zastąpienie <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.GotTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1097">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.GotTouchCapture> event.</span></span> <span data-ttu-id="814ba-1098">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1098">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1099">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1099">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1100">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1100">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="814ba-1101">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1101">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1102">Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> zmiany właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="814ba-1102">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="814ba-1103">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="814ba-1103">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="814ba-1104">Następnie przy użyciu <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1104">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="814ba-1105">Zwróć uwagę, że <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1105">Notice that the  <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="814ba-1106">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1106">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="814ba-1107">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1107">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1108">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1108">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1109">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1109">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1110">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1110">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1111">Wywoływana tuż przed <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zdarzenie jest wywoływane przez ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1111">Invoked just before the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span>
          </span>
          <span data-ttu-id="814ba-1112">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1112">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1113">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="814ba-1113">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="814ba-1114">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="814ba-1114">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="814ba-1115">Następnie przy użyciu <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1115">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="814ba-1116">Zwróć uwagę, że <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1116">Notice that the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="814ba-1117">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1117">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="814ba-1118">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1118">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1119">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1119">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1120">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1120">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1121">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1121">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1122">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1122">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="814ba-1123">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1123">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1124">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsMouseCaptured%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="814ba-1124">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="814ba-1125">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="814ba-1125">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="814ba-1126">Następnie przy użyciu <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1126">Then the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="814ba-1127">Zwróć uwagę, że <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1127">Notice that the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="814ba-1128">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1128">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="814ba-1129">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1129">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1130">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1130">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1131">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1131">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1132">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1132">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1133">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1133">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="814ba-1134">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1134">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="814ba-1135">Tej metody wirtualnej jest wywoływane, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> zmienia się wartość właściwości zależności.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1135">This virtual method is raised when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property changes its value.</span>
            </span>
            <span data-ttu-id="814ba-1136">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1136">The virtual method is raised first and can manipulate the event data as necessary.</span>
            </span>
            <span data-ttu-id="814ba-1137">Następnie przy użyciu <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> zdarzenia z tego samego wystąpienia danych zdarzenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1137">Then the <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span>
            </span>
            <span data-ttu-id="814ba-1138">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia; W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1138">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span>
            </span>
            <span data-ttu-id="814ba-1139">Ta metoda ma domyślnej implementacji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1139">This method has no default implementation.</span>
            </span>
            <span data-ttu-id="814ba-1140">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1140">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span>
            </span>
            <span data-ttu-id="814ba-1141">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1141">You may call base either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1142">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1142">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1143">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1143">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="814ba-1144">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1144">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1145">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="814ba-1145">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="814ba-1146">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="814ba-1146">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="814ba-1147">Następnie przy użyciu <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1147">Then the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="814ba-1148">Zwróć uwagę, że <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1148">Notice that the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="814ba-1149">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1149">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="814ba-1150">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1150">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1151">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1151">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1152">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1152">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1153">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1153">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1154">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1154">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="814ba-1155">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1155">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1156">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusCaptured%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="814ba-1156">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="814ba-1157">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="814ba-1157">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="814ba-1158">Następnie przy użyciu <xref:System.Windows.ContentElement.IsStylusCapturedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1158">Then the <xref:System.Windows.ContentElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="814ba-1159">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1159">Notice that the event is not a routed event.</span></span> <span data-ttu-id="814ba-1160">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1160">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="814ba-1161">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1161">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1162">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1162">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1163">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1163">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1164">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1164">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1165">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1165">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="814ba-1166">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1166">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1167">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="814ba-1167">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="814ba-1168">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="814ba-1168">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="814ba-1169">Następnie przy użyciu <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1169">Then the <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="814ba-1170">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1170">Notice that the event is not a routed event.</span></span> <span data-ttu-id="814ba-1171">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1171">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="814ba-1172">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1172">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1173">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1173">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1174">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1174">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1175">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1175">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1176">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1176">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="814ba-1177">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1177">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1178">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="814ba-1178">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="814ba-1179">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="814ba-1179">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="814ba-1180">Następnie przy użyciu <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1180">Then the <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="814ba-1181">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1181">Notice that the event is not a routed event.</span></span> <span data-ttu-id="814ba-1182">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1182">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="814ba-1183">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1183">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1184">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1184">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1185">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1185">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1186">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1186">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1187">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1187">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1188">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1188">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1189">Uderzenia w klawisze są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="814ba-1189">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="814ba-1190">Inne funkcje programowania, które opierają się na naciśnięcia klawiszy, na przykład powiązania wejściowego i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest uwidaczniany jako ogólne naciśnięcie klawisza.</span><span class="sxs-lookup"><span data-stu-id="814ba-1190">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="814ba-1191">Te dane wejściowe funkcji systemu oznaczanie zdarzenia jako obsługiwany, następnie <xref:System.Windows.ContentElement.OnKeyDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="814ba-1191">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="814ba-1192">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1192">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1193">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1193">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1194">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1194">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1195">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1195">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1196">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1196">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1197">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1197">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1198">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1198">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1199">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1199">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1200">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1200">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1201">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1201">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1202">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1202">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1203">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1203">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1204">Uderzenia w klawisze są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="814ba-1204">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="814ba-1205">Inne funkcje programowania, które opierają się na naciśnięcia klawiszy, na przykład powiązania wejściowego i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest uwidaczniany jako ogólne naciśnięcie klawisza.</span><span class="sxs-lookup"><span data-stu-id="814ba-1205">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="814ba-1206">Te dane wejściowe funkcji systemu oznaczanie zdarzenia jako obsługiwany, następnie <xref:System.Windows.ContentElement.OnKeyUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="814ba-1206">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="814ba-1207">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1207">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1208">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1208">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1209">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1209">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1210">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1210">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1211">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1211">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1212">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1212">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1213">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1213">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1214">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1214">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1215">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1215">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1216">A <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1216">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="814ba-1217">Te dane zdarzenie musi zawierać identyfikator <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1217">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1218">Zgłasza <see cref="E:System.Windows.ContentElement.LostFocus" /> kierowanego zdarzenia przy użyciu dane zdarzenia, które jest dostępne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1218">Raises the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event by using the event data that is provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1219">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, który wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1219">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="814ba-1220">To na \* implementacji metody jest przeznaczona do zgłoszenia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby zgłosić zdarzenie po <xref:System.Windows.ContentElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="814ba-1220">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="814ba-1221">Ta implementacja różni się od niektórych innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na \* implementacji, które zapewniają tylko wygodny sposób, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1221">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="814ba-1222">W przypadku braku zamierzonego i nietypowych potrzebę nie wywoływanie zdarzeń fokusu, upewnij się, że wdrożenie wywołuje implementacji podstawowej.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1222">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span>
            </span>
            <span data-ttu-id="814ba-1223">W przeciwnym razie <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzenie nie jest wywoływane podczas operacji typowych użytkownika, które zwykle Ustaw fokus w tym elemencie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1223">Otherwise, the <see cref="E:System.Windows.ContentElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span>
            </span>
            <span data-ttu-id="814ba-1224">Jeśli nie chcesz, aby Twoje element ma być focusable, użytkownik może uniemożliwić element focusable przez ustawienie <see cref="P:System.Windows.ContentElement.Focusable" /> do <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="814ba-1224">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1225">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1225">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1226">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1226">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1227">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1227">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1228">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1228">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1229">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1229">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1230">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1230">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1231">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1231">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1232">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1232">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1233">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1233">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1234">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1234">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1235">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1235">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1236">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1236">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1237">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1237">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1238">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1238">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1239">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1239">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1240">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1240">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1241">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1241">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1242">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1242">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1243">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1243">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1244">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1244">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1245">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1245">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1246">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1246">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1247">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1247">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1248">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1248">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1249">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1249">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1250">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1250">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1251">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1251">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1252">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1252">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1253">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1253">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1254">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1254">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1255">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1255">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1256">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1256">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1257">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1257">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1258">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1258">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1259">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1259">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1260">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1260">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1261">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1261">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1262">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> kierowanego zdarzenia, gdy ten element utraci Przechwytywanie touch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1262">Provides class handling for the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1263"><xref:System.Windows.ContentElement.OnLostTouchCapture%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1263">The <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="814ba-1264">Zastąpienie <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.LostTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1264">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.LostTouchCapture> event.</span></span> <span data-ttu-id="814ba-1265">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1265">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1266">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1266">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1267">Te dane zdarzeń raporty szczegółowe informacje o został naciśnięty przycisk myszy i stanie obsłużone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1267">This event data reports details about the mouse button that was pressed and the handled state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1268">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1268">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1269">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1269">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1270">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="814ba-1270">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="814ba-1271">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1271">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="814ba-1272">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.ContentElement.OnMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="814ba-1272">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="814ba-1273">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.ContentElement.MouseLeftButtonDown> i <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1273">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="814ba-1274">Jedną z tych zdarzeń może zostać zgłoszone w elemencie odbierającą podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="814ba-1274">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="814ba-1275">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1275">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="814ba-1276">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1276">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="814ba-1277">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-1277">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="814ba-1278">Obsługa <xref:System.Windows.ContentElement.OnMouseDown%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy w dół akcje.</span><span class="sxs-lookup"><span data-stu-id="814ba-1278">By handling <xref:System.Windows.ContentElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="814ba-1279">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1279">This behavior might be unwanted; therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="814ba-1280">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1280">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="814ba-1281">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1281">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1282">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1282">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1283">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1283">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1284">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1284">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1285">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1285">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1286">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1286">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1287">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1287">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1288">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1288">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1289">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1289">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1290">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1290">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1291">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1291">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="814ba-1292">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1292">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1293">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1293">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1294">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1294">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1295">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1295">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="814ba-1296">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1296">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1297">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia, ze strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="814ba-1297">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="814ba-1298">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1298">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1299">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1299">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1300">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1300">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="814ba-1301">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1301">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1302">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1302">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1303">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1303">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1304">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1304">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="814ba-1305">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1305">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1306">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia, ze strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="814ba-1306">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="814ba-1307">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1307">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1308">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1308">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1309">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1309">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1310">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> kierowanego zdarzenia w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1310">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event is raised on this element.</span>
          </span>
          <span data-ttu-id="814ba-1311">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1311">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1312"><xref:System.Windows.ContentElement.MouseLeftButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="814ba-1312">The <xref:System.Windows.ContentElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="814ba-1313"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1313"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="814ba-1314">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1314">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="814ba-1315">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1315">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="814ba-1316">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1316">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="814ba-1317">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="814ba-1317">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="814ba-1318">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1318">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="814ba-1319">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1319">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="814ba-1320">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1320">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="814ba-1321">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="814ba-1321">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="814ba-1322">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1322">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="814ba-1323">Na przykład może pochodzić od <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania Podstawowa implementacja; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1323">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1324">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1324">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1325">Dane zdarzenia raporty zwolnienie lewego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1325">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1326">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1326">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1327">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1327">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1328"><xref:System.Windows.ContentElement.MouseLeftButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="814ba-1328">The <xref:System.Windows.ContentElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="814ba-1329"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1329"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="814ba-1330">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.MouseLeftButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1330">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="814ba-1331">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1331">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="814ba-1332">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1332">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="814ba-1333">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="814ba-1333">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="814ba-1334">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1334">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="814ba-1335">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1335">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1336">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1336">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1337">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1337">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1338">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1338">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1339">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1339">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1340">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1340">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1341">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1341">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1342">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1342">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1343">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1343">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1344">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1344">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1345">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1345">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1346">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1346">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1347">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1347">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1348">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1348">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1349">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1349">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1350">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1350">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1351">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1351">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1352"><xref:System.Windows.ContentElement.MouseRightButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="814ba-1352">The <xref:System.Windows.ContentElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="814ba-1353"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1353"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="814ba-1354">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.MouseRightButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1354">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="814ba-1355">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1355">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="814ba-1356">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1356">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="814ba-1357">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="814ba-1357">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="814ba-1358">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1358">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="814ba-1359">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1359">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="814ba-1360">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1360">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="814ba-1361">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="814ba-1361">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="814ba-1362">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1362">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="814ba-1363">Na przykład może pochodzić od <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> jednak w klasie pochodnej bez base wywołujący; to zastąpienie wyłącza kontekstu menu usług formantu, które są częścią z <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1363">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1364">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1364">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1365">Dane zdarzenia raporty zwolnienie prawego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1365">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1366">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1366">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1367">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1367">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1368"><xref:System.Windows.ContentElement.MouseRightButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="814ba-1368">The <xref:System.Windows.ContentElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="814ba-1369"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1369"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="814ba-1370">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.MouseRightButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1370">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="814ba-1371">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1371">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="814ba-1372">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1372">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="814ba-1373">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="814ba-1373">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="814ba-1374">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1374">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="814ba-1375">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1375">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1376">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1376">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1377">Dane zdarzenia raporty, wydanej przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1377">The event data reports that the mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1378">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1378">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1379">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1379">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1380">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="814ba-1380">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="814ba-1381">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1381">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="814ba-1382">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.ContentElement.OnMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="814ba-1382">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="814ba-1383">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.ContentElement.MouseLeftButtonUp> i <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1383">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="814ba-1384">Jedną z tych zdarzeń może zostać wywołane w elemencie odbierania podczas <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="814ba-1384">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="814ba-1385">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1385">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="814ba-1386">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1386">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="814ba-1387">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-1387">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="814ba-1388">Obsługa <xref:System.Windows.ContentElement.OnMouseUp%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy zapasowej akcje.</span><span class="sxs-lookup"><span data-stu-id="814ba-1388">By handling <xref:System.Windows.ContentElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="814ba-1389">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1389">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="814ba-1390">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1390">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="814ba-1391">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1391">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1392">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1392">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1393">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1393">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1394">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1394">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1395">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1395">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1396">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1396">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1397">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1397">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1398">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1398">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1399">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1399">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1400">
            <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1400">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1401">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1401">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1402">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1402">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1403">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1403">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1404">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1404">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1405">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1405">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1406">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1406">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1407">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1407">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1408">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1408">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1409">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1409">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1410">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1410">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1411">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1411">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1412">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1412">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1413">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1413">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1414">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1414">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1415">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1415">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1416">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1416">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1417">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1417">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1418">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1418">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1419">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1419">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1420">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1420">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1421">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1421">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1422">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1422">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1423">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1423">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1424">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1424">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1425">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1425">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1426">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1426">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1427">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1427">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1428">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1428">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1429">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1429">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1430">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1430">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1431">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1431">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1432">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1432">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1433">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1433">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1434">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1434">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1435">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1435">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1436">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1436">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1437">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1437">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1438">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1438">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1439">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1439">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1440">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1440">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1441">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1441">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1442">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1442">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1443">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1443">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1444">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1444">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1445">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1445">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1446">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1446">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1447">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1447">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1448">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1448">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1449">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1449">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1450">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1450">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1451">
            <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1451">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1452">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDrop" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1452">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1453">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1453">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1454">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1454">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1455">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1455">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1456">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1456">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1457">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1457">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1458">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1458">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1459">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1459">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1460">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1460">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1461">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1461">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1462">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1462">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1463">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1463">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1464">
            <see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1464">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1465">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1465">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1466">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1466">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1467">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1467">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1468">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1468">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1469">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1469">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1470">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1470">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1471">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1471">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1472">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1472">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1473">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1473">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1474">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1474">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1475">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1475">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1476">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1476">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1477">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1477">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1478">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1478">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1479">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1479">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1480">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1480">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1481">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1481">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1482">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1482">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1483">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1483">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1484">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1484">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1485">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1485">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1486">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1486">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1487">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1487">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1488">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1488">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1489">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1489">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1490">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1490">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1491">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1491">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1492">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1492">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1493">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1493">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1494">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1494">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1495">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1495">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1496">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1496">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1497">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1497">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1498">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1498">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1499">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1499">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1500">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1500">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1501">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1501">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1502">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1502">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1503">
            <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1503">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1504">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1504">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1505">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1505">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1506">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1506">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1507">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1507">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1508">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1508">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1509">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1509">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1510">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1510">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1511">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1511">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1512">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1512">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1513">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1513">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1514">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1514">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1515">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1515">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1516">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1516">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1517">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1517">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1518">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1518">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1519">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1519">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1520">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1520">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1521">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1521">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1522">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1522">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1523">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1523">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1524">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1524">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1525">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1525">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1526">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1526">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1527">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1527">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1528">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1528">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1529">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1529">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1530">Dane zdarzenia zgłasza, że zostały naciśnięte przyciski myszy jeden lub więcej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1530">The event data reports that one or more mouse buttons were pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1531">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1531">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1532">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1532">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1533">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="814ba-1533">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="814ba-1534">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1534">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="814ba-1535">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="814ba-1535">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="814ba-1536">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1536">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="814ba-1537">Jedną z tych zdarzeń może zostać zgłoszone w elemencie odbierającą podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="814ba-1537">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="814ba-1538">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1538">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="814ba-1539">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1539">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="814ba-1540">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-1540">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="814ba-1541">Obsługa <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy w dół akcje.</span><span class="sxs-lookup"><span data-stu-id="814ba-1541">By handling <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="814ba-1542">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1542">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="814ba-1543">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1543">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="814ba-1544">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1544">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1545">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1545">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1546">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1546">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1547">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1547">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1548">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1548">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1549">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1549">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1550">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1550">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1551">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1551">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1552">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1552">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1553">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1553">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1554">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1554">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1555">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1555">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1556">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1556">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1557">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1557">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1558"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="814ba-1558">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="814ba-1559"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1559"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="814ba-1560">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1560">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="814ba-1561">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1561">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="814ba-1562">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1562">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="814ba-1563">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="814ba-1563">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="814ba-1564">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1564">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="814ba-1565">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1565">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="814ba-1566">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1566">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="814ba-1567">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="814ba-1567">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="814ba-1568">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1568">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="814ba-1569">Na przykład może pochodzić od <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania Podstawowa implementacja; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1569">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1570">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1570">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1571">Dane zdarzenia raporty zwolnienie lewego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1571">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1572">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1572">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1573">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1573">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1574"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="814ba-1574">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="814ba-1575"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1575"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="814ba-1576">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1576">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="814ba-1577">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1577">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="814ba-1578">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1578">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="814ba-1579">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="814ba-1579">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="814ba-1580">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1580">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="814ba-1581">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1581">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1582">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1582">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1583">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1583">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1584">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1584">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1585">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1585">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1586">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1586">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1587">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1587">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1588">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1588">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1589">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1589">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1590">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1590">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1591">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1591">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1592">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1592">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1593">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1593">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1594">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1594">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1595">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1595">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1596">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1596">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1597">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1597">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1598">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1598">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1599"><xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="814ba-1599">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="814ba-1600"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1600"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="814ba-1601">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1601">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="814ba-1602">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1602">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="814ba-1603">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1603">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="814ba-1604">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="814ba-1604">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="814ba-1605">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1605">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="814ba-1606">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1606">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="814ba-1607">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1607">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="814ba-1608">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="814ba-1608">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="814ba-1609">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1609">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="814ba-1610">Na przykład może pochodzić od <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> jednak w klasie pochodnej bez base wywołujący; to zastąpienie wyłącza kontekstu menu usług formantu, które są częścią z <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1610">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1611">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1611">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1612">Dane zdarzenia raporty zwolnienie prawego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1612">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1613">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1613">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1614">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1614">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1615"><xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="814ba-1615">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="814ba-1616"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1616"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="814ba-1617">Mimo że można zaznaczyć <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1617">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="814ba-1618">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1618">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="814ba-1619">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1619">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="814ba-1620">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="814ba-1620">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="814ba-1621">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1621">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="814ba-1622">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1622">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1623">
            <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1623">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="814ba-1624">Dane zdarzenia raporty wydane jednego lub więcej przycisków myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1624">The event data reports that one or more mouse buttons were released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1625">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1625">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1626">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1626">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1627">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="814ba-1627">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="814ba-1628">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="814ba-1628">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="814ba-1629">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="814ba-1629">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="814ba-1630">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-1630">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="814ba-1631">Jedną z tych zdarzeń może zostać wywołane w elemencie odbierania podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="814ba-1631">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="814ba-1632">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1632">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="814ba-1633">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1633">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="814ba-1634">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="814ba-1634">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="814ba-1635">Obsługa <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy zapasowej akcje.</span><span class="sxs-lookup"><span data-stu-id="814ba-1635">By handling <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="814ba-1636">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1636">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="814ba-1637">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1637">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="814ba-1638">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1638">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1639">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1639">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1640">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1640">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1641">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1641">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1642">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1642">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1643">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1643">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1644">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1644">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1645">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1645">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1646">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1646">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1647">
            <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1647">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1648">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1648">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1649">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1649">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1650">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1650">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1651">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1651">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1652">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1652">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1653">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1653">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1654">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1654">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1655">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1655">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1656">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1656">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1657">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1657">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1658">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1658">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1659">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1659">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1660">
            <see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1660">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1661">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1661">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1662">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1662">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1663">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1663">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1664">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1664">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1665">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1665">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1666">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1666">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1667">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1667">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1668">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1668">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1669">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1669">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1670">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1670">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1671">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1671">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1672">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1672">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1673">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1673">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1674">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1674">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1675">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1675">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1676">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1676">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1677">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1677">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1678">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1678">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1679">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1679">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1680">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1680">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1681">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1681">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1682">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1682">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1683">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1683">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1684">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1684">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1685">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1685">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1686">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1686">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1687">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1687">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1688">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1688">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1689">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1689">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1690">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1690">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1691">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1691">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1692">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1692">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1693">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1693">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1694">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1694">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1695">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1695">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1696">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1696">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1697">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1697">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1698">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1698">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1699">
            <see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1699">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1700">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1700">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1701">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1701">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1702">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1702">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1703">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1703">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1704">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1704">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1705">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1705">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1706">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1706">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1707">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1707">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1708">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1708">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1709">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1709">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1710">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1710">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1711">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1711">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1712">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1712">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1713">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1713">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1714">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1714">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1715">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1715">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1716">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1716">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1717">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1717">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1718">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1718">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1719">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1719">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1720">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1720">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1721">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1721">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1722">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1722">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1723">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1723">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1724">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1724">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1725">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1725">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1726">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1726">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1727">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1727">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1728">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1728">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1729">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1729">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1730">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1730">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1731">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1731">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1732">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1732">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1733">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1733">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1734">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1734">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1735">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1735">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1736">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1736">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1737">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1737">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1738">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1738">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1739">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1739">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1740">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1740">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1741">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1741">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1742">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1742">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1743">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1743">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1744">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1744">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1745">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1745">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1746">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1746">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1747">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1747">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1748">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1748">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1749">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1749">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1750">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1750">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1751">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1751">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1752">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1752">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1753">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1753">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1754">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1754">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1755">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1755">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1756">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1756">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1757">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1757">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1758">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1758">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1759">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1759">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1760">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1760">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1761">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1761">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1762">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1762">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1763">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1763">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1764">
            <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1764">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1765">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1765">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1766">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1766">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1767">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1767">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1768">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1768">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1769">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1769">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1770">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1770">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1771">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1771">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1772">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1772">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1773">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1773">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1774">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1774">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1775">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1775">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1776">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1776">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1777">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1777">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1778">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1778">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1779">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1779">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1780">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1780">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1781">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1781">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1782">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1782">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1783">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1783">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1784">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1784">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1785">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1785">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1786">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1786">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1787">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1787">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1788">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1788">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1789">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1789">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1790">
            <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1790">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1791">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1791">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1792">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1792">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1793">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1793">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1794">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1794">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1795">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1795">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1796">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1796">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1797">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1797">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1798">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1798">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1799">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1799">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1800">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1800">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1801">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1801">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="814ba-1802">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1802">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.ContentElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1803">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1803">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1804">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> kierowanego zdarzenia, gdy touch naciśnie tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1804">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1805"><xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1805">The <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="814ba-1806">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.PreviewTouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1806">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="814ba-1807">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1807">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1808">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1808">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1809">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch znajduje się wewnątrz tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1809">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1810"><xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1810">The <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="814ba-1811">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.PreviewTouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1811">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="814ba-1812">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1812">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1813">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1813">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1814">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> kierowanego zdarzenia, która występuje po zwolnieniu touch wewnątrz tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1814">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1815"><xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1815">The <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="814ba-1816">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.PreviewTouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1816">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="814ba-1817">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1817">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1818">
            <see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1818">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1819">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1819">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1820">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1820">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1821">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1821">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1822">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1822">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1823">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1823">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1824">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1824">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1825">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1825">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1826">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1826">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1827">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1827">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1828">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1828">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1829">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1829">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1830">
            <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1830">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1831">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1831">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1832">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1832">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1833">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1833">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1834">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1834">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1835">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1835">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1836">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1836">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1837">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1837">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1838">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1838">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1839">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1839">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1840">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1840">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1841">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1841">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1842">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1842">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1843">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1843">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1844">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1844">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1845">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1845">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1846">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1846">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1847">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1847">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1848">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1848">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1849">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1849">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1850">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1850">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1851">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1851">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1852">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1852">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1853">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1853">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1854">
            <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1854">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1855">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1855">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1856">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1856">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1857">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1857">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1858">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1858">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1859">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1859">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1860">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1860">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1861">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1861">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1862">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1862">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1863">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1863">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1864">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1864">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1865">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1865">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1866">
            <see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1866">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1867">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1867">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1868">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1868">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1869">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1869">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1870">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1870">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1871">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1871">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1872">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1872">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1873">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1873">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1874">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1874">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1875">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1875">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1876">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1876">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1877">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1877">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1878">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1878">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1879">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie jest zgłaszane przez ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1879">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="814ba-1880">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1880">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1881">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1881">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1882">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1882">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1883">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1883">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="814ba-1884">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1884">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1885">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1885">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1886">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1886">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1887">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1887">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1888">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1888">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1889">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1889">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1890">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1890">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1891">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1891">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1892">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1892">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1893">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1893">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1894">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1894">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1895">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1895">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1896">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1896">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1897">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1897">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1898">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1898">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1899">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1899">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1900">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1900">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1901">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1901">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1902">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1902">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1903">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1903">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1904">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1904">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1905">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1905">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1906">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1906">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1907">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1907">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1908">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1908">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1909">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1909">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1910">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1910">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1911">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1911">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1912">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie jest zgłaszane przez ten element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1912">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="814ba-1913">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1913">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1914">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1914">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1915">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1915">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="814ba-1916">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="814ba-1916">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="814ba-1917">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1917">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1918">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1918">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1919">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="814ba-1919">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1920">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1920">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1921">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1921">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1922">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1922">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1923">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1923">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1924">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1924">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1925">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1925">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1926">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1926">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1927">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1927">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1928">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1928">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1929">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1929">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1930">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1930">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1931">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1931">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1932">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1932">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1933">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1933">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1934">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1934">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1935">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1935">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1936">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1936">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1937">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1937">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1938">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1938">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1939">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1939">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1940">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1940">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1941">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1941">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1942">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1942">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1943">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1943">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1944">
            <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1944">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1945">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1945">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1946">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1946">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1947">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1947">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1948">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1948">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1949">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1949">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1950">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1950">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1951">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1951">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1952">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1952">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1953">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1953">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1954">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1954">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1955">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1955">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1956">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1956">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1957">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1957">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1958">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1958">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1959">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1959">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1960">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1960">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1961">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1961">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1962">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1962">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1963">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1963">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1964">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1964">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1965">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1965">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1966">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1966">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1967">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1967">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1968">
            <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1968">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1969">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1969">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="814ba-1970">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1970">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1971">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1971">This method has no default implementation.</span></span> <span data-ttu-id="814ba-1972">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1972">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="814ba-1973">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="814ba-1973">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="814ba-1974">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1974">In this case the matching event is a routed event.</span></span> <span data-ttu-id="814ba-1975">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-1975">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="814ba-1976">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1976">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="814ba-1977">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="814ba-1977">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="814ba-1978">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.ContentElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1978">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="814ba-1979">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-1979">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1980">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1980">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1981">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.TouchDown" /> kierowanego zdarzenia, gdy touch naciśnie wewnątrz tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1981">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1982"><xref:System.Windows.ContentElement.OnTouchDown%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1982">The <xref:System.Windows.ContentElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="814ba-1983">Zastąpienie <xref:System.Windows.ContentElement.OnTouchDown%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.TouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1983">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchDown> event.</span></span> <span data-ttu-id="814ba-1984">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnTouchDown%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1984">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1985">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1985">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1986">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.TouchEnter" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch z zewnątrz do wewnątrz granic tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1986">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1987"><xref:System.Windows.ContentElement.OnTouchEnter%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1987">The <xref:System.Windows.ContentElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="814ba-1988">Zastąpienie <xref:System.Windows.ContentElement.OnTouchEnter%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.TouchEnter> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1988">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchEnter> event.</span></span> <span data-ttu-id="814ba-1989">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnTouchEnter%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1989">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1990">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1990">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1991">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.TouchLeave" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch z wnętrza poza granicami tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1991">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1992"><xref:System.Windows.ContentElement.OnTouchLeave%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1992">The <xref:System.Windows.ContentElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="814ba-1993">Zastąpienie <xref:System.Windows.ContentElement.OnTouchLeave%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.TouchLeave> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1993">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchLeave> event.</span></span> <span data-ttu-id="814ba-1994">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnTouchLeave%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1994">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-1995">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1995">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-1996">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.TouchMove" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch znajduje się wewnątrz tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-1996">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-1997"><xref:System.Windows.ContentElement.OnTouchMove%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-1997">The <xref:System.Windows.ContentElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="814ba-1998">Zastąpienie <xref:System.Windows.ContentElement.OnTouchMove%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.TouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-1998">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchMove> event.</span></span> <span data-ttu-id="814ba-1999">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnTouchMove%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-1999">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-2000">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2000">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-2001">Udostępnia klasę obsługi <see cref="E:System.Windows.ContentElement.TouchUp" /> kierowanego zdarzenia, która występuje po zwolnieniu touch wewnątrz tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2001">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2002"><xref:System.Windows.ContentElement.OnTouchUp%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2002">The <xref:System.Windows.ContentElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="814ba-2003">Zastąpienie <xref:System.Windows.ContentElement.OnTouchUp%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.ContentElement.TouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-2003">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchUp> event.</span></span> <span data-ttu-id="814ba-2004">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.ContentElement.OnTouchUp%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2004">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="814ba-2005">Kierunek przechodzenie żądanego fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2005">The direction of the requested focus traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-2006">W przypadku przesłonięcia w klasie pochodnej zwraca element, który będzie fokusu dla kierunku przechodzenie określonego fokus bez faktycznie przeniesienie fokusu do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2006">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-2007">Element otrzymałby fokus <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> zostały faktycznie wywołany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2007">The element that would have received focus if <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2008">Domyślna implementacja tej metody tej klasy jest niekompletne i zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="814ba-2008">The default implementation of this method in this class is incomplete and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2009">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z tego elementu jako element docelowy przeciągania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2009">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2010">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2010">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2011">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2011">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2012">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2012">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2013">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2013">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="814ba-2014">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2014">Routing strategy</span></span>|<span data-ttu-id="814ba-2015">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2015">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2016">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2016">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="814ba-2017">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2017">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="814ba-2018">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2018">Override <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2019">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2019">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2020">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2020">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2021">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2021">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2022">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2022">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2023">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2023">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2024">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2024">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2025">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to element źródłowy przeciągania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2025">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2026">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2026">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2027">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2027">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2028">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2028">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2029">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2029">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="814ba-2030">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2030">Routing strategy</span></span>|<span data-ttu-id="814ba-2031">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2031">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2032">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2032">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="814ba-2033">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2033">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="814ba-2034">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2034">Override <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2035">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2035">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2036">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2036">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2037">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2037">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2038">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2038">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2039">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2039">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2040">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2040">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2041">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2041">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2042">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragOver> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2042">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2043">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragOver> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2043">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2044">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2044">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2045">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2045">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragOverEvent>|  
|<span data-ttu-id="814ba-2046">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2046">Routing strategy</span></span>|<span data-ttu-id="814ba-2047">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2047">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2048">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2048">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="814ba-2049">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2049">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="814ba-2050">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2050">Override <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2051">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2051">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2052">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2052">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2053">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2053">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2054">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2054">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2055">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2055">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2056">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2056">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2057">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tego elementu jako element docelowy upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2057">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2058">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDrop> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2058">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDrop> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2059">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDrop> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2059">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2060">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2060">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2061">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2061">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDropEvent>|  
|<span data-ttu-id="814ba-2062">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2062">Routing strategy</span></span>|<span data-ttu-id="814ba-2063">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2063">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2064">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2064">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="814ba-2065">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2065">The corresponding bubbling event is <xref:System.Windows.ContentElement.Drop>.</span></span>  
  
-   <span data-ttu-id="814ba-2066">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewDrop%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2066">Override <xref:System.Windows.ContentElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2067">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDrop" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2067">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDrop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2068">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2068">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2069">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2069">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2070">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2070">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2071">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2071">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2072">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2072">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2073">Występuje, gdy rozpoczęto operację przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2073">Occurs when a drag-and-drop operation is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2074"><xref:System.Windows.ContentElement.PreviewGiveFeedback> Zdarzeń umożliwia źródło zdarzeń przeciągnij, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="814ba-2074">The <xref:System.Windows.ContentElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="814ba-2075">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewGiveFeedback> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2075">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2076">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewGiveFeedback> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2076">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2077">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2077">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2078">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2078">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="814ba-2079">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2079">Routing strategy</span></span>|<span data-ttu-id="814ba-2080">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2080">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2081">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2081">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="814ba-2082">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2082">The corresponding bubbling event is <xref:System.Windows.ContentElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="814ba-2083">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2083">Override <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2084">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2084">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2085">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2085">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2086">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2086">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2087">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2087">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2088">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2088">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2089">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2089">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2090">Występuje, gdy klawiatura ma fokus w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2090">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2091">Ponieważ to zdarzenie używa tunelowania routingu, element, który ma fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-2091">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="814ba-2092">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="814ba-2092">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="814ba-2093">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2093">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2094">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2094">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2095">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2095">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2096">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2096">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="814ba-2097">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2097">Routing strategy</span></span>|<span data-ttu-id="814ba-2098">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2098">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2099">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2099">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="814ba-2100">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2100">The corresponding bubbling event is <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="814ba-2101">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2101">Override <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2102">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2102">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2103">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2103">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2104">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2104">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2105">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2105">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2106">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2106">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2107">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2107">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2108">Występuje po naciśnięciu klawisza, gdy klawiatura ma fokus w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2108">Occurs when a key is pressed while the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2109">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.</span><span class="sxs-lookup"><span data-stu-id="814ba-2109">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="814ba-2110"><xref:System.Windows.ContentElement.KeyDown> Zdarzenie jest zdarzenie wprowadzania tekstu niższego poziomu, które mogą nie działać zgodnie z oczekiwaniami w niektórych formantów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2110">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="814ba-2111">Jest tak, ponieważ niektóre formanty mają składania kontroli lub klasy obsługi udostępnia wyższego poziomu wersji tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="814ba-2111">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="814ba-2112">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewKeyDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2112">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2113">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewKeyDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2113">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2114">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2114">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2115">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2115">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="814ba-2116">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2116">Routing strategy</span></span>|<span data-ttu-id="814ba-2117">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2117">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2118">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2118">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="814ba-2119">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2119">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="814ba-2120">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2120">Override <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2121">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2121">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2122">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2122">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2123">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2123">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2124">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2124">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2125">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2125">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2126">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2126">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2127">Występuje po zwolnieniu klawisza, gdy klawiatura ma fokus w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2127">Occurs when a key is released while the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2128">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.</span><span class="sxs-lookup"><span data-stu-id="814ba-2128">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="814ba-2129"><xref:System.Windows.ContentElement.KeyUp> Zdarzenie jest zdarzenie wprowadzania tekstu niższego poziomu, które mogą nie działać zgodnie z oczekiwaniami w niektórych formantów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2129">The <xref:System.Windows.ContentElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="814ba-2130">Jest tak, ponieważ niektóre formanty mają składania kontroli lub klasy obsługi udostępnia wyższego poziomu wersji tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="814ba-2130">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="814ba-2131">Aby uzyskać więcej informacji Sprawdź dokumentację dla pojedynczych formantów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2131">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="814ba-2132">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewKeyUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2132">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2133">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewKeyUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2133">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2134">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2134">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2135">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2135">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="814ba-2136">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2136">Routing strategy</span></span>|<span data-ttu-id="814ba-2137">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2137">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2138">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2138">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="814ba-2139">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2139">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="814ba-2140">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2140">Override <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2141">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2141">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2142">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2142">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2143">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2143">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2144">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2144">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2145">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2145">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2146">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2146">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2147">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2147">Occurs when the keyboard is no longer focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2148">Ponieważ to zdarzenie używa tunelowania routingu, element utracie fokusu może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="814ba-2148">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="814ba-2149">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2149">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="814ba-2150">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2150">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2151">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2151">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2152">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2152">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2153">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2153">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="814ba-2154">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2154">Routing strategy</span></span>|<span data-ttu-id="814ba-2155">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2155">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2156">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2156">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="814ba-2157">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2157">The corresponding bubbling event is <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="814ba-2158">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2158">Override <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2159">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2159">Identifies the <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2160">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2160">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2161">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2161">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2162">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2162">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2163">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2163">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2164">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2164">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2165">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2165">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2166">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2166">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2167">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2167">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2168"><xref:System.Windows.ContentElement.PreviewMouseDown> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="814ba-2168">The <xref:System.Windows.ContentElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="814ba-2169"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2169"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="814ba-2170">Zobacz uwagi dla <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2170">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2171">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2171">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2172">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2172">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="814ba-2173">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2173">Routing strategy</span></span>|<span data-ttu-id="814ba-2174">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2174">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2175">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2175">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-2176">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2176">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="814ba-2177">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2177">Override <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2178">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2178">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2179">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2179">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2180">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2180">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2181">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2181">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2182">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2182">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2183">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2183">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2184">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2184">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2185">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2185">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="814ba-2186">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2186">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="814ba-2187">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-2187">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="814ba-2188">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2188">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="814ba-2189">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="814ba-2189">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="814ba-2190">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2190">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="814ba-2191">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2191">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2192">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2192">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2193">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2193">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="814ba-2194">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2194">Routing strategy</span></span>|<span data-ttu-id="814ba-2195">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-2195">Direct</span></span>|  
|<span data-ttu-id="814ba-2196">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2196">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-2197">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2197">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2198">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2198">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2199">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2199">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2200">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2200">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2201">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2201">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2202">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2202">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2203">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2203">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2204">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2204">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2205">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2205">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="814ba-2206">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2206">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="814ba-2207">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-2207">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="814ba-2208">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2208">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="814ba-2209">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="814ba-2209">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="814ba-2210">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2210">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="814ba-2211">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2211">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2212">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2212">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2213">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2213">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="814ba-2214">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2214">Routing strategy</span></span>|<span data-ttu-id="814ba-2215">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-2215">Direct</span></span>|  
|<span data-ttu-id="814ba-2216">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2216">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-2217">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2217">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2218">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2218">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2219">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2219">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2220">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2220">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2221">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2221">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2222">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2222">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2223">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2223">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2224">Występuje po przemieszczeniu wskaźnika myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2224">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2225">To zdarzenie zarówno występuje, gdy wskaźnik myszy po raz pierwszy najedzie na granice elementu, a także gdy wskaźnik myszy jest przesuwany zachowując nadal w granicach elementu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2225">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="814ba-2226">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2226">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2227">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2227">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2228">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2228">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2229">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2229">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="814ba-2230">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2230">Routing strategy</span></span>|<span data-ttu-id="814ba-2231">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2231">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2232">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2232">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="814ba-2233">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2233">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="814ba-2234">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2234">Override <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2235">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2235">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2236">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2236">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2237">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2237">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2238">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2238">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2239">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2239">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2240">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2240">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2241">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2241">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2242">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2242">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="814ba-2243">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2243">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="814ba-2244">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-2244">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="814ba-2245">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2245">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="814ba-2246">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="814ba-2246">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="814ba-2247">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2247">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="814ba-2248">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2248">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2249">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2249">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2250">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2250">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="814ba-2251">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2251">Routing strategy</span></span>|<span data-ttu-id="814ba-2252">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-2252">Direct</span></span>|  
|<span data-ttu-id="814ba-2253">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2253">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-2254">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2254">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2255">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2255">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2256">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2256">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2257">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2257">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2258">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2258">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2259">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2259">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2260">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2260">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2261">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2261">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2262">Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2262">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="814ba-2263">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2263">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="814ba-2264">Argumenty to zdarzenie ujawnia argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-2264">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="814ba-2265">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.ContentElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2265">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="814ba-2266">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.ContentElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="814ba-2266">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="814ba-2267">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2267">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="814ba-2268">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2268">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2269">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2269">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2270">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2270">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="814ba-2271">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2271">Routing strategy</span></span>|<span data-ttu-id="814ba-2272">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-2272">Direct</span></span>|  
|<span data-ttu-id="814ba-2273">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2273">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-2274">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2274">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2275">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2275">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2276">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2276">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2277">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2277">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2278">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2278">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2279">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2279">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2280">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2280">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2281">Występuje po zwolnieniu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2281">Occurs when any mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2282">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2282">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2283">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2283">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2284"><xref:System.Windows.ContentElement.PreviewMouseUp> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="814ba-2284">The <xref:System.Windows.ContentElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="814ba-2285"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2285"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="814ba-2286">Zobacz uwagi dla <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2286">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2287">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2287">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2288">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2288">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="814ba-2289">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2289">Routing strategy</span></span>|<span data-ttu-id="814ba-2290">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2290">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2291">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2291">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-2292">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2292">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="814ba-2293">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2293">Override <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2294">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2294">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2295">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2295">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2296">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2296">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2297">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2297">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2298">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2298">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2299">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2299">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2300">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2300">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2301">Przechwytywanie myszy lub fokus pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli to zdarzenie zostanie wyświetlony w elemencie ukierunkowanych lub przechwycone, wskaźnik myszy może się okazać za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2301">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="814ba-2302">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2302">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2303">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2303">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2304">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2304">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2305">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2305">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="814ba-2306">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2306">Routing strategy</span></span>|<span data-ttu-id="814ba-2307">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2307">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2308">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2308">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="814ba-2309">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2309">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="814ba-2310">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2310">Override <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2311">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2311">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2312">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2312">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2313">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2313">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2314">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2314">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2315">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2315">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2316">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2316">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2317">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2317">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2318"><xref:System.Windows.ContentElement.PreviewQueryContinueDrag> Zdarzeń umożliwia źródła przeciągania zadeklarować, czy można anulować operację przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="814ba-2318">The <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="814ba-2319">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2319">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2320">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2320">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2321">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2321">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2322">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2322">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="814ba-2323">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2323">Routing strategy</span></span>|<span data-ttu-id="814ba-2324">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2324">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2325">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2325">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="814ba-2326">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2326">The corresponding bubbling event is <xref:System.Windows.ContentElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="814ba-2327">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2327">Override <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2328">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2328">Identifies the <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2329">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2329">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2330">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2330">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2331">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2331">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2332">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2332">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2333">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2333">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2334">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2334">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2335">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusButtonDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2335">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2336">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusButtonDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2336">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2337">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2337">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2338">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2338">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2339">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2339">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2340">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2340">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="814ba-2341">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2341">Routing strategy</span></span>|<span data-ttu-id="814ba-2342">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2342">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2343">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2343">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-2344">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2344">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="814ba-2345">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2345">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2346">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2346">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2347">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2347">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2348">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2348">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2349">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2349">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2350">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2350">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2351">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2351">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2352">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2352">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2353">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusButtonUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2353">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2354">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusButtonUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2354">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2355">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2355">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2356">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2356">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2357">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2358">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2358">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="814ba-2359">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2359">Routing strategy</span></span>|<span data-ttu-id="814ba-2360">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2360">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2361">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2361">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-2362">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2362">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="814ba-2363">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2363">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2364">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2364">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2365">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2365">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2366">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2366">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2367">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2367">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2368">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2368">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2369">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2369">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2370">Występuje, gdy pióro dotyka digitizera, gdy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2370">Occurs when the stylus touches the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2371">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2371">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2372">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2372">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2373">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2373">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2374">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2374">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2375">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2375">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2376">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2376">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="814ba-2377">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2377">Routing strategy</span></span>|<span data-ttu-id="814ba-2378">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2378">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2379">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2379">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="814ba-2380">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2380">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="814ba-2381">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2381">Override <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2382">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2382">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2383">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2383">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2384">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2384">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2385">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2385">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2386">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2386">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2387">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2387">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2388">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2388">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2389">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusInAirMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2389">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2390">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusInAirMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2390">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2391">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2391">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2392">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2392">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2393">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2393">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2394">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2394">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="814ba-2395">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2395">Routing strategy</span></span>|<span data-ttu-id="814ba-2396">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2396">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2397">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2397">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2398">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2398">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="814ba-2399">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2399">Override <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2400">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2400">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2401">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2401">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2402">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2402">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2403">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2403">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2404">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2404">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2405">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2405">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2406">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2406">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2407">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusInRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2407">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2408">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusInRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2408">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2409">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2409">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2410">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2410">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2411">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2411">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2412">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2412">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="814ba-2413">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2413">Routing strategy</span></span>|<span data-ttu-id="814ba-2414">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2414">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2415">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2415">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2416">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2416">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="814ba-2417">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2417">Override <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2418">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2418">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2419">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2419">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2420">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2420">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2421">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2421">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2422">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2422">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2423">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2423">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2424">Występuje, gdy pióro jest przemieszczane nad elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2424">Occurs when the stylus moves while over the element.</span>
          </span>
          <span data-ttu-id="814ba-2425">Pióro musi być przemieszczane podczas wykrywania przez Dyskretyzator Aby zgłosić to zdarzenie, w przeciwnym razie <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> zgłaszane jest zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2425">The stylus must move while being detected by the  digitizer  to raise this event, otherwise, <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2426">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2426">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2427">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2427">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2428">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2428">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2429">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2429">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2430">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2430">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2431">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2431">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="814ba-2432">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2432">Routing strategy</span></span>|<span data-ttu-id="814ba-2433">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2433">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2434">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2434">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2435">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2435">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="814ba-2436">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2436">Override <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2437">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2437">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2438">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2438">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2439">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2439">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2440">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2440">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2441">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2441">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2442">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2442">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2443">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2443">Occurs when the stylus is too far from the digitizer to be detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2444">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2444">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2445">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2445">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2446">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2446">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2447">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2447">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2448">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2448">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2449">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2449">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="814ba-2450">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2450">Routing strategy</span></span>|<span data-ttu-id="814ba-2451">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2451">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2452">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2452">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2453">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2453">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="814ba-2454">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2454">Override <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2455">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2455">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2456">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2456">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2457">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2457">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2458">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2458">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2459">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2459">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2460">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2460">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2461">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2461">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2462">Informacje o gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2462">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="814ba-2463">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2463">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2464">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2464">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2465">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2465">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2466">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2466">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2467">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2467">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2468">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2468">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="814ba-2469">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2469">Routing strategy</span></span>|<span data-ttu-id="814ba-2470">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2470">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2471">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2471">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="814ba-2472">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2472">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="814ba-2473">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2473">Override <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2474">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2474">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2475">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2475">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2476">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2476">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2477">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2477">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2478">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2478">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2479">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2479">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2480">Występuje, gdy użytkownik wywołuje pióra od dyskretyzatora, gdy pióro znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2480">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2481">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2481">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2482">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2482">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2483">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2483">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2484">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2484">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2485">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2485">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2486">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2486">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="814ba-2487">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2487">Routing strategy</span></span>|<span data-ttu-id="814ba-2488">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2488">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2489">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2489">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2490">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2490">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="814ba-2491">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2491">Override <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2492">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2492">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2493">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2493">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2494">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2494">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2495">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2495">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2496">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2496">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2497">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2497">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2498">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2498">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2499"><xref:System.Windows.ContentElement.PreviewTextInput> Zdarzeń umożliwia składnika lub aplikacji do nasłuchiwania wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2499">The <xref:System.Windows.ContentElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="814ba-2500">Klawiatura jest podstawowy sposób <xref:System.Windows.ContentElement.PreviewTextInput>; ale można również generować mowy, pisma ręcznego i innych urządzeniach wejściowych <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2500">The keyboard is the primary means of <xref:System.Windows.ContentElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="814ba-2501">Z powodu kombinacji klawiszy — w klawiatury domyślne lub za pośrednictwem edytory input method — wiele zdarzeń klucza mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2501">Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="814ba-2502">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewTextInput> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2502">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2503">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewTextInput> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2503">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2504">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2504">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2505">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2505">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTextInputEvent>|  
|<span data-ttu-id="814ba-2506">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2506">Routing strategy</span></span>|<span data-ttu-id="814ba-2507">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2507">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2508">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2508">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="814ba-2509">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2509">The corresponding bubbling event is <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="814ba-2510">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2510">Override <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2511">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2511">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2512">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2512">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2513">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2513">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2514">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2514">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2515">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2515">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2516">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2516">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2517">Występuje, gdy palcem krawędzi ekranu, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2517">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2518">Domyślnie <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzeń nie występują dopóki palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="814ba-2518">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="814ba-2519">Naciśnięcie klawisza palcem na ekranie i zawierający bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2519">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="814ba-2520">Naciśnij i przytrzymaj klawisz jest odpowiednikiem kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="814ba-2520">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="814ba-2521">Powoduje <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia jak palcem krawędzi ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączona właściwość do `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2521">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2522">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2522">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2523">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2523">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="814ba-2524">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2524">Routing strategy</span></span>|<span data-ttu-id="814ba-2525">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2525">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2526">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2526">Delegate</span></span>|<span data-ttu-id="814ba-2527"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2527"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="814ba-2528">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2528">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="814ba-2529">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2529">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2530">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2530">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2531">Występuje po przemieszczeniu palcem na ekranie, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2531">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2532">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2532">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2533">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2533">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="814ba-2534">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2534">Routing strategy</span></span>|<span data-ttu-id="814ba-2535">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2535">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2536">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2536">Delegate</span></span>|<span data-ttu-id="814ba-2537"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2537"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="814ba-2538">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2538">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="814ba-2539">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2539">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2540">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2540">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2541">Występuje, gdy jest wywoływane palcem poza ekran, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2541">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2542">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2542">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2543">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2543">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="814ba-2544">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2544">Routing strategy</span></span>|<span data-ttu-id="814ba-2545">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="814ba-2545">Tunneling</span></span>|  
|<span data-ttu-id="814ba-2546">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2546">Delegate</span></span>|<span data-ttu-id="814ba-2547"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2547"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="814ba-2548">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.ContentElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2548">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="814ba-2549">Zastąpienie <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2549">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2550">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2550">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2551">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2551">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2552"><xref:System.Windows.ContentElement.QueryContinueDrag> Zdarzeń umożliwia ustalenie, czy można anulować operację przeciągania i upuszczania źródła przeciągania.</span><span class="sxs-lookup"><span data-stu-id="814ba-2552">The <xref:System.Windows.ContentElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="814ba-2553">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.QueryContinueDrag> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2553">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2554">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.QueryContinueDrag> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2554">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2555">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2555">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2556">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2556">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryContinueDragEvent>|  
|<span data-ttu-id="814ba-2557">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2557">Routing strategy</span></span>|<span data-ttu-id="814ba-2558">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2558">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2559">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2559">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="814ba-2560">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2560">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="814ba-2561">Zastąpienie <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2561">Override <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2562">Identyfikuje <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2562">Identifies the <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2563">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2563">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2564">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2564">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2565">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2565">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2566">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2566">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2567">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2567">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2568">Występuje, gdy kursor jest wymagane do wyświetlenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2568">Occurs when the cursor is requested to display.</span>
          </span>
          <span data-ttu-id="814ba-2569">To zdarzenie jest zgłaszane w elemencie każdym razem, gdy wskaźnik myszy jest przesuwany do nowej lokalizacji, która oznacza, że obiekt kursora może zaistnieć konieczność zmiany na podstawie jego nowego położenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2569">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2570">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.QueryCursor> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2570">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryCursor> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2571">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.QueryCursor> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2571">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2572">Kursor jest odwołuje się ta nazwa zdarzenia nie jest kursor tekstu (czasem nazywane punktu wstawiania).</span><span class="sxs-lookup"><span data-stu-id="814ba-2572">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="814ba-2573">Zamiast tego kursor znajduje się w tym kontekście jest obiekt, który deklaruje na ekranie graficzną związane z kilku możliwych urządzeń związanych z danych wejściowych lub pojęcia dotyczące programowania w języku systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="814ba-2573">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="814ba-2574">Ten obiekt jest reprezentowana przez <xref:System.Windows.Input.Cursor> klasy na platformie WPF.</span><span class="sxs-lookup"><span data-stu-id="814ba-2574">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="814ba-2575">System wejściowy WPF umożliwia zmianę tego kursora, gdy reprezentuje na ekranie położenia wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="814ba-2575">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="814ba-2576">Możesz użyć wstępnie zdefiniowanych wartości z <xref:System.Windows.Input.Cursors> wyliczenia, lub można zadeklarować niestandardowych kursora jako plik obrazu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2576">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="814ba-2577">Nasłuchiwanie <xref:System.Windows.ContentElement.QueryCursor> zdarzenie nie jest technikę efektywne zarządzanie kursora.</span><span class="sxs-lookup"><span data-stu-id="814ba-2577">Listening for the <xref:System.Windows.ContentElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="814ba-2578">Zamiast tego każdy element powinien definiować własne zachowania kursora w <xref:System.Windows.FrameworkContentElement.Cursor%2A> i <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2578">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="814ba-2579">Należy polegać wyłącznie na <xref:System.Windows.ContentElement.QueryCursor> WPF poziomie struktury podstawowych elementów nie jest używany, czy w dodatkowej okolicznościach gdy Definiowanie zachowania kursor na podstawie na element nie spełnia Twoje potrzeby.</span><span class="sxs-lookup"><span data-stu-id="814ba-2579">You should only rely on <xref:System.Windows.ContentElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="814ba-2580">Aby uzyskać więcej informacji na implementacji zachowanie kursora w odpowiedzi na <xref:System.Windows.ContentElement.QueryCursor>, zobacz <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2580">For more information on implementing cursor behavior in response to <xref:System.Windows.ContentElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2581">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2581">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2582">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2582">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryCursorEvent>|  
|<span data-ttu-id="814ba-2583">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2583">Routing strategy</span></span>|<span data-ttu-id="814ba-2584">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2584">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2585">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2585">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="814ba-2586">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="814ba-2586">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="814ba-2587">Zastąpienie <xref:System.Windows.ContentElement.OnQueryCursor%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2587">Override <xref:System.Windows.ContentElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2588">Identyfikuje <see cref="E:System.Windows.ContentElement.QueryCursor" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2588">Identifies the <see cref="E:System.Windows.ContentElement.QueryCursor" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2589">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2589">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2590">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2590">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2591">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2591">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2592">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2592">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2593">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2593">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="814ba-2594">A <see cref="T:System.Windows.RoutedEventArgs" /> zawiera dane zdarzeń i identyfikuje również zdarzeń, aby wywołać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2594">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-2595">Wywołuje określone kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2595">Raises a specific routed event.</span>
          </span>
          <span data-ttu-id="814ba-2596">
            <see cref="T:System.Windows.RoutedEvent" /> Wygenerowany zostanie zidentyfikowana w <see cref="T:System.Windows.RoutedEventArgs" /> wystąpienia, który został dostarczony (jako <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości danych zdarzeń).</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2596">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2597">`e` Parametr jest typu jako typu podstawowego wspólne dla wszystkich danych kierowanego zdarzenia; jednak dane zdarzenia powinny być podane specyficzny typem danych zdarzenia, który jest dostępny dla zdarzeń zgłaszanych, ponieważ <xref:System.Windows.RoutedEventArgs> zawiera klasy pochodne rzeczywiste dane określone właściwości, które są przeznaczone do określonego zdarzenia, gdy jest on uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="814ba-2597">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="814ba-2598"><xref:System.Windows.RoutedEventArgs> nie jest tylko właściwości stan dla zdarzeń; identyfikuje które kierowanego zdarzenia, aby wywołać.</span><span class="sxs-lookup"><span data-stu-id="814ba-2598"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="814ba-2599">Ten wzorzec wywoływanie zdarzeń i danych kierowanego zdarzenia zarówno różnią się od [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] klasy zdarzenia i dane, które zwykle zawierają tylko właściwości, które są powiązane ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="814ba-2599">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ba-2600">Poniższy przykład tworzy dane zdarzenia, dołącza identyfikator zdarzenia do danych, a następnie używa wystąpienie danych zdarzeń, aby wywołać zdarzenie niestandardowe routingiem.</span><span class="sxs-lookup"><span data-stu-id="814ba-2600">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#raiseevent)]
 [!code-vb[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2601">Zwalnia wszystkie urządzenia touch przechwyconych z tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2601">Releases all captured touch devices from this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2602">Jeżeli ten element przechwytywania, zwalnia przechwytywanie myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2602">Releases the mouse capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2603">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2603">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="814ba-2604">Należy wziąć pod uwagę wartości <xref:System.Windows.ContentElement.IsMouseCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="814ba-2604">Consider checking the value of <xref:System.Windows.ContentElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="814ba-2605">Poniższe procedury obsługi przechwytuje lub zwalnia przechwytywanie myszy zgodnie z Stany przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="814ba-2605">The following handler captures or releases mouse capture according to mouse button states.</span></span> <span data-ttu-id="814ba-2606">W przykładzie pokazano sposób użycia ruchów myszy przechwyconych dla alternatywnej celów innych niż wskaźnika myszy [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="814ba-2606">The example shows how to use captured mouse movement for alternative purposes other than moving the mouse pointer in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2607">Zwalnia Przechwytywanie urządzenia pióra, jeżeli ten element przechwytywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2607">Releases the stylus device capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2608">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2608">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="814ba-2609">Należy wziąć pod uwagę wartości <xref:System.Windows.ContentElement.IsStylusCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="814ba-2609">Consider checking the value of <xref:System.Windows.ContentElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="814ba-2610">Urządzenie do zwolnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2610">The device to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-2611">Próbuje zwolnić urządzenia określonego touch z tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2611">Attempts to release the specified touch device from this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-2612">
            <see langword="true" /> Jeśli urządzenie touch zwolnieniu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2612">
              <see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="814ba-2613">
            <paramref name="touchDevice" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2613">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="814ba-2614">Identyfikator zdarzenia the.routed, dla którego jest umocowana Obsługa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2614">The identifier of the.routed event for which the handler is attached.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="814ba-2615">Implementacja określony program obsługi, aby usunąć z kolekcji programu obsługi zdarzeń w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2615">The specific handler implementation to remove from the event handler collection on this element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="814ba-2616">Usuwa obsługi określonego kierowanego zdarzenia z tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2616">Removes the specified routed event handler from this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2617">Najbardziej typowym scenariuszem stosowania to [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] jest podczas implementowania [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzeń "otoki", który jest skojarzony z routingiem zdarzenie niestandardowe, w szczególności, gdy należy wdrożyć logikę "Usuń" dla programów obsługi na [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] poziom.</span><span class="sxs-lookup"><span data-stu-id="814ba-2617">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="814ba-2618">Przykład, w którym następuje to uwagi części przedstawiono w tym scenariuszu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2618">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="814ba-2619">Wywołanie tej metody nie ma znaczenia, jeśli nie było żadnych programów obsługi zarejestrowany z kryteriami zgodnych parametrów wejściowych dla wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="814ba-2619">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="814ba-2620">Jeśli więcej niż jeden program obsługi jest dołączony pasujących kryteria tylko pierwszego programu obsługi w przypadku obsługi magazyn zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="814ba-2620">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="814ba-2621">To zachowanie jest zgodne z [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zachowanie `-=` operatora.</span><span class="sxs-lookup"><span data-stu-id="814ba-2621">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="814ba-2622">Ani `routedEvent` ani `handler` może być `null`.</span><span class="sxs-lookup"><span data-stu-id="814ba-2622">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="814ba-2623">Podjęto próbę podać te wartości jako `null` zgłosi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="814ba-2623">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="814ba-2624">Ta metoda powoduje ignorowanie `handledEventsToo` informacje o parametrach, która jest dostępna, jeśli program obsługi został po raz pierwszy dodane z <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisie, który włącza obsługę zdarzeń już obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2624">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="814ba-2625">Dowolnego typu program obsługi zostanie usunięta.</span><span class="sxs-lookup"><span data-stu-id="814ba-2625">Either type of handler is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2626">Zwraca czy procesy serializacji powinny serializować zawartości <see cref="P:System.Windows.ContentElement.CommandBindings" /> właściwości wystąpienia tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2626">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-2627">
            <see langword="true" /> Jeśli <see cref="P:System.Windows.ContentElement.CommandBindings" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2627">
              <see langword="true" /> if the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2628">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.ContentElement.CommandBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="814ba-2628">This will return `true` if <xref:System.Windows.ContentElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="814ba-2629">To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.UIElement.CommandBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="814ba-2629">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="814ba-2630">Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="814ba-2630">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="814ba-2631">Zwykle wywołuje tę metodę albo opracowywanie projektanta lub tworzenie własnych Dołączanie formantu <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2631">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="814ba-2632">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych z ShouldSerialize i zresetować metody](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2632">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2633">Zwraca czy procesy serializacji powinny serializować zawartości <see cref="P:System.Windows.ContentElement.InputBindings" /> właściwości wystąpienia tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2633">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.InputBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="814ba-2634">
            <see langword="true" /> Jeśli <see cref="P:System.Windows.ContentElement.InputBindings" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2634">
              <see langword="true" /> if the <see cref="P:System.Windows.ContentElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2635">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.ContentElement.InputBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="814ba-2635">This will return `true` if <xref:System.Windows.ContentElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="814ba-2636">To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.UIElement.InputBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="814ba-2636">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="814ba-2637">Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="814ba-2637">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="814ba-2638">Zwykle wywołuje tę metodę albo opracowywanie projektanta lub tworzenie własnych Dołączanie formantu <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2638">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="814ba-2639">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych z ShouldSerialize i zresetować metody](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2639">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2640">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2640">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2641">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusButtonDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2641">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2642">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusButtonDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2642">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2643">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2643">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2644">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2644">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2645">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2645">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2646">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2646">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonDownEvent>|  
|<span data-ttu-id="814ba-2647">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2647">Routing strategy</span></span>|<span data-ttu-id="814ba-2648">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2648">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2649">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2649">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-2650">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2650">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="814ba-2651">Zastąpienie <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2651">Override <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2652">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2652">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2653">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2653">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2654">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2654">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2655">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2655">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2656">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2656">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2657">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2657">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2658">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2658">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2659">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusButtonUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2659">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2660">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusButtonUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2660">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2661">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2661">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2662">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2662">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2663">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2663">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2664">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2664">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonUpEvent>|  
|<span data-ttu-id="814ba-2665">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2665">Routing strategy</span></span>|<span data-ttu-id="814ba-2666">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2666">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2667">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2667">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="814ba-2668">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2668">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="814ba-2669">Zastąpienie <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2669">Override <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2670">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2670">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2671">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2671">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2672">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2672">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2673">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2673">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2674">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2674">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2675">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2675">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2676">Występuje, gdy pióro dotyka digitizera, gdy pióro znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2676">Occurs when the stylus touches the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2677">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2677">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2678">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2678">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2679">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2679">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2680">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2680">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2681">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2681">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2682">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2682">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusDownEvent>|  
|<span data-ttu-id="814ba-2683">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2683">Routing strategy</span></span>|<span data-ttu-id="814ba-2684">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2684">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2685">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2685">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="814ba-2686">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2686">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="814ba-2687">Zastąpienie <xref:System.Windows.ContentElement.OnStylusDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2687">Override <xref:System.Windows.ContentElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2688">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2688">Identifies the <see cref="E:System.Windows.ContentElement.StylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2689">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2689">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2690">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2690">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2691">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2691">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2692">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2692">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2693">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2693">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2694">Występuje po pokonaniu przez pióro granic tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2694">Occurs when the stylus enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2695"><xref:System.Windows.ContentElement.StylusEnter> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-2695"><xref:System.Windows.ContentElement.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="814ba-2696">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2696">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="814ba-2697">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="814ba-2697">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="814ba-2698">Mimo że <xref:System.Windows.ContentElement.StylusEnter> śledzi po pokonaniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsStylusOver%2A> zmieniono wartość właściwości z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="814ba-2698">Although <xref:System.Windows.ContentElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="814ba-2699">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2699">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2700">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2700">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2701">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2701">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2702">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2702">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2703">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2703">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2704">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2704">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusEnterEvent>|  
|<span data-ttu-id="814ba-2705">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2705">Routing strategy</span></span>|<span data-ttu-id="814ba-2706">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-2706">Direct</span></span>|  
|<span data-ttu-id="814ba-2707">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2707">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2708">Zastąpienie <xref:System.Windows.ContentElement.OnStylusEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2708">Override <xref:System.Windows.ContentElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2709">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusEnter" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2709">Identifies the <see cref="E:System.Windows.ContentElement.StylusEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2710">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2710">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2711">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2711">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2712">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2712">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2713">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2713">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2714">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2714">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2715">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2715">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2716">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusInAirMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2716">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2717">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusInAirMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2717">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2718">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2718">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2719">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2719">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2720">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2720">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2721">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2721">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="814ba-2722">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2722">Routing strategy</span></span>|<span data-ttu-id="814ba-2723">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2723">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2724">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2724">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2725">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2725">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="814ba-2726">Zastąpienie <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2726">Override <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2727">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2727">Identifies the <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2728">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2728">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2729">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2729">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2730">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2730">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2731">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2731">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2732">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2732">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2733">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2733">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2734">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusInRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2734">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2735">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusInRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2735">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2736">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2736">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2737">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2737">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2738">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2738">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2739">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2739">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInRangeEvent>|  
|<span data-ttu-id="814ba-2740">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2740">Routing strategy</span></span>|<span data-ttu-id="814ba-2741">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2741">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2742">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2742">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2743">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2743">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="814ba-2744">Zastąpienie <xref:System.Windows.ContentElement.OnStylusInRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2744">Override <xref:System.Windows.ContentElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2745">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusInRange" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2745">Identifies the <see cref="E:System.Windows.ContentElement.StylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2746">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2746">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2747">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2747">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2748">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2748">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2749">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2749">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2750">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2750">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2751">Występuje po opuszczeniu przez pióro granic elementu przez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2751">Occurs when the stylus leaves the bounds of the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2752"><xref:System.Windows.ContentElement.StylusLeave> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="814ba-2752"><xref:System.Windows.ContentElement.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="814ba-2753">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2753">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="814ba-2754">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="814ba-2754">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="814ba-2755">Mimo że <xref:System.Windows.ContentElement.StylusLeave> śledzi po opuszczeniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsStylusOver%2A> zmieniono wartość właściwości z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="814ba-2755">Although <xref:System.Windows.ContentElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="814ba-2756">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2756">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2757">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2757">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2758">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2758">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2759">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2759">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2760">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2760">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2761">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2761">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusLeaveEvent>|  
|<span data-ttu-id="814ba-2762">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2762">Routing strategy</span></span>|<span data-ttu-id="814ba-2763">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-2763">Direct</span></span>|  
|<span data-ttu-id="814ba-2764">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2764">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2765">Zastąpienie <xref:System.Windows.ContentElement.OnStylusLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2765">Override <xref:System.Windows.ContentElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2766">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusLeave" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2766">Identifies the <see cref="E:System.Windows.ContentElement.StylusLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2767">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2767">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2768">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2768">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2769">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2769">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2770">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2770">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2771">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2771">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2772">Występuje, gdy pióro jest przemieszczane nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2772">Occurs when the stylus moves over this element.</span>
          </span>
          <span data-ttu-id="814ba-2773">Pióro musi dotykać powierzchni dyskretyzatora, aby zgłosić to zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2773">The stylus must move while on the digitizer to raise this event.</span>
          </span>
          <span data-ttu-id="814ba-2774">W przeciwnym razie <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> zgłaszane jest zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2774">Otherwise, <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2775">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2775">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2776">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2776">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2777">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2777">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2778">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2778">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2779">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2779">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2780">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2780">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusMoveEvent>|  
|<span data-ttu-id="814ba-2781">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2781">Routing strategy</span></span>|<span data-ttu-id="814ba-2782">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2782">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2783">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2783">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2784">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2784">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="814ba-2785">Zastąpienie <xref:System.Windows.ContentElement.OnStylusMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2785">Override <xref:System.Windows.ContentElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2786">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2786">Identifies the <see cref="E:System.Windows.ContentElement.StylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2787">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2787">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2788">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2788">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2789">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2789">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2790">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2790">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2791">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2791">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2792">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2792">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2793">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusOutOfRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2793">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2794">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusOutOfRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2794">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2795">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2795">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2796">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2796">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2797">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2797">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2798">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2798">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="814ba-2799">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2799">Routing strategy</span></span>|<span data-ttu-id="814ba-2800">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2800">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2801">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2801">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2802">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2802">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="814ba-2803">Zastąpienie <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2803">Override <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2804">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2804">Identifies the <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2805">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2805">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2806">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2806">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2807">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2807">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2808">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2808">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2809">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2809">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2810">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2810">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2811">Aby uzyskać więcej informacji na temat gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2811">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="814ba-2812">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusSystemGesture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2812">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2813">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusSystemGesture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2813">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2814">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2814">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2815">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2815">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2816">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2816">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2817">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2817">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="814ba-2818">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2818">Routing strategy</span></span>|<span data-ttu-id="814ba-2819">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2819">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2820">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2820">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="814ba-2821">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2821">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="814ba-2822">Zastąpienie <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2822">Override <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2823">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2823">Identifies the <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2824">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2824">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2825">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2825">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2826">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2826">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2827">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2827">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2828">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2828">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2829">Występuje, gdy użytkownik wywołuje pióra od dyskretyzatora, gdy znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2829">Occurs when the user raises the stylus off the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2830">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.StylusUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2830">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2831">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2831">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="814ba-2832">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="814ba-2832">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="814ba-2833">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="814ba-2833">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2834">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2834">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2835">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2835">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusUpEvent>|  
|<span data-ttu-id="814ba-2836">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2836">Routing strategy</span></span>|<span data-ttu-id="814ba-2837">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2837">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2838">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2838">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="814ba-2839">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2839">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="814ba-2840">Zastąpienie <xref:System.Windows.ContentElement.OnStylusUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2840">Override <xref:System.Windows.ContentElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2841">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2841">Identifies the <see cref="E:System.Windows.ContentElement.StylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2842">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2842">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2843">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2843">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2844">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2844">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2845">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2845">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2846">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2846">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2847">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2847">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="814ba-2848">To zdarzenie może już oznaczony jako obsługiwany przez wewnętrznych implementacje połączone formantów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2848">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="814ba-2849">Zobacz uwagi poniżej.</span><span class="sxs-lookup"><span data-stu-id="814ba-2849">See Remark below.</span></span>  
  
 <span data-ttu-id="814ba-2850"><xref:System.Windows.ContentElement.TextInput> Zdarzeń już może być oznaczony jako obsługiwany przez wewnętrznych implementacje połączone formantów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2850">The <xref:System.Windows.ContentElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="814ba-2851">Na przykład <xref:System.Windows.Controls.TextBox> jest formantem połączone gdzie <xref:System.Windows.ContentElement.TextInput> zdarzeń jest już oznaczona jako obsługiwany; w jego składania.</span><span class="sxs-lookup"><span data-stu-id="814ba-2851">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.ContentElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="814ba-2852">Formanty to zrobić, ponieważ formant wymaga interpretować niektóre typy danych wejściowych, takich jak klawiszy strzałek jako mające specjalne znaczenie tego formantu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2852">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="814ba-2853">Jeśli używasz <xref:System.Windows.ContentElement.PreviewTextInput> jako zdarzenie, gdzie możesz dołączyć obsługi wprowadzania tekstu, może zostać wyświetlony w poszukiwaniu lepszych wyników.</span><span class="sxs-lookup"><span data-stu-id="814ba-2853">If you use <xref:System.Windows.ContentElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="814ba-2854">Ta technika prowadzenia większości przypadkach, gdy formant kompozycji już oznaczył to zdarzenie, ponieważ obsługiwane i uniemożliwia odbieranie zdarzeń wzdłuż trasy zdarzenia programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="814ba-2854">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="814ba-2855"><xref:System.Windows.ContentElement.TextInput> Zdarzeń umożliwia składnika lub aplikacji do nasłuchiwania wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2855">The <xref:System.Windows.ContentElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="814ba-2856">Klawiatura jest podstawowy sposób <xref:System.Windows.ContentElement.TextInput>, ale może też wiązać mowy, pisma ręcznego i innych urządzeniach wejściowych <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2856">The keyboard is the primary means of <xref:System.Windows.ContentElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
 <span data-ttu-id="814ba-2857">Z powodu kombinacji klawiszy — w klawiatury domyślne lub za pośrednictwem edytory input method — wiele zdarzeń klucza może zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2857">Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="814ba-2858">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.ContentElement.TextInput> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.ContentElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="814ba-2858">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.TextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="814ba-2859">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.TextInput> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2859">Event handlers that are attached to the <xref:System.Windows.ContentElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2860">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2860">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2861">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2861">Identifier field</span></span>|<xref:System.Windows.ContentElement.TextInputEvent>|  
|<span data-ttu-id="814ba-2862">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2862">Routing strategy</span></span>|<span data-ttu-id="814ba-2863">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2863">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2864">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2864">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="814ba-2865">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2865">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="814ba-2866">Zastąpienie <xref:System.Windows.ContentElement.OnTextInput%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2866">Override <xref:System.Windows.ContentElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2867">Identyfikuje <see cref="E:System.Windows.ContentElement.TextInput" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2867">Identifies the <see cref="E:System.Windows.ContentElement.TextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2868">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="814ba-2868">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="814ba-2869">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="814ba-2869">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="814ba-2870">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="814ba-2870">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="814ba-2871">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2871">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="814ba-2872">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2872">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2873">Występuje, gdy palcem krawędzi ekranu, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2873">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2874">Domyślnie <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzeń nie występują dopóki palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="814ba-2874">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="814ba-2875">Naciśnięcie klawisza palcem na ekranie i zawierający bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2875">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="814ba-2876">Naciśnij i przytrzymaj klawisz jest odpowiednikiem kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="814ba-2876">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="814ba-2877">Powoduje <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia jak palcem krawędzi ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączona właściwość do `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="814ba-2877">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2878">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2878">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2879">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2879">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchDownEvent>|  
|<span data-ttu-id="814ba-2880">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2880">Routing strategy</span></span>|<span data-ttu-id="814ba-2881">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2881">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2882">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2882">Delegate</span></span>|<span data-ttu-id="814ba-2883"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2883"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="814ba-2884">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2884">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="814ba-2885">Zastąpienie <xref:System.Windows.ContentElement.OnTouchDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2885">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2886">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchDown" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2886">Identifies the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2887">Występuje po przemieszczeniu touch z zewnątrz do wewnątrz granic tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2887">Occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="814ba-2888">To zdarzenie jest zawsze zgłaszane, czy urządzenie touch są przechwytywane do tego elementu interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="814ba-2888">This event is always raised, whether or not the touch device is captured to this UI element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2889">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2889">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2890">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2890">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchEnterEvent>|  
|<span data-ttu-id="814ba-2891">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2891">Routing strategy</span></span>|<span data-ttu-id="814ba-2892">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-2892">Direct</span></span>|  
|<span data-ttu-id="814ba-2893">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2893">Delegate</span></span>|<span data-ttu-id="814ba-2894"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2894"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="814ba-2895">Zastąpienie <xref:System.Windows.ContentElement.OnTouchEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2895">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2896">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchEnter" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2896">Identifies the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2897">Pobiera wszystkie urządzenia touch, które są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2897">Gets all touch devices that are captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-2898">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2898">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2899">Pobiera wszystkie urządzenia touch, które są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2899">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-2900">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2900">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2901">Pobiera wszystkie urządzenia touch znajdujących się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2901">Gets all touch devices that are over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-2902">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów znajdujących się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2902">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2903">Pobiera wszystkie urządzenia touch znajdujących się nad tym elementem lub wszystkie elementy podrzędne w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2903">Gets all touch devices that are over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="814ba-2904">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przez ten element lub wszystkie elementy podrzędne w jego drzewie wizualnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2904">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2905">Występuje po przemieszczeniu touch z wnętrza poza granicami tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2905">Occurs when a touch moves from inside to outside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2906">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2906">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2907">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2907">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchLeaveEvent>|  
|<span data-ttu-id="814ba-2908">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2908">Routing strategy</span></span>|<span data-ttu-id="814ba-2909">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="814ba-2909">Direct</span></span>|  
|<span data-ttu-id="814ba-2910">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2910">Delegate</span></span>|<span data-ttu-id="814ba-2911"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2911"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="814ba-2912">Zastąpienie <xref:System.Windows.ContentElement.OnTouchLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2912">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2913">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchLeave" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2913">Identifies the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2914">Występuje po przemieszczeniu palcem na ekranie, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2914">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2915">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2915">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2916">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2916">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchMoveEvent>|  
|<span data-ttu-id="814ba-2917">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2917">Routing strategy</span></span>|<span data-ttu-id="814ba-2918">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2918">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2919">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2919">Delegate</span></span>|<span data-ttu-id="814ba-2920"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2920"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="814ba-2921">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2921">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="814ba-2922">Zastąpienie <xref:System.Windows.ContentElement.OnTouchMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2922">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2923">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchMove" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2923">Identifies the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2924">Występuje, gdy jest wywoływane palcem poza ekran, gdy palca znajduje się nad tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2924">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="814ba-2925">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="814ba-2925">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="814ba-2926">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="814ba-2926">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchUpEvent>|  
|<span data-ttu-id="814ba-2927">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="814ba-2927">Routing strategy</span></span>|<span data-ttu-id="814ba-2928">Propagacji</span><span class="sxs-lookup"><span data-stu-id="814ba-2928">Bubbling</span></span>|  
|<span data-ttu-id="814ba-2929">Delegate</span><span class="sxs-lookup"><span data-stu-id="814ba-2929">Delegate</span></span>|<span data-ttu-id="814ba-2930"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2930"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="814ba-2931">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="814ba-2931">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="814ba-2932">Zastąpienie <xref:System.Windows.ContentElement.OnTouchUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="814ba-2932">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="814ba-2933">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchUp" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="814ba-2933">Identifies the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>