<Type Name="ContentElement" FullName="System.Windows.ContentElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc7653685170d80e0651cbab3558cde3975c6a3c" /><Meta Name="ms.sourcegitcommit" Value="ddce15914650a504a7399d539ac1f7cfed3c2caa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/07/2019" /><Meta Name="ms.locfileid" Value="66759949" /></Metadata><TypeSignature Language="C#" Value="public class ContentElement : System.Windows.DependencyObject, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentElement extends System.Windows.DependencyObject implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentElement&#xA;Inherits DependencyObject&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentElement : System::Windows::DependencyObject, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type ContentElement = class&#xA;    inherit DependencyObject&#xA;    interface IInputElement&#xA;    interface IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="77e71-101">Udostępnia klasę bazową poziom core WPF dla elementów zawartości.</span><span class="sxs-lookup"><span data-stu-id="77e71-101">Provides a WPF core-level base class for content elements.</span></span> <span data-ttu-id="77e71-102">Elementów zawartości zaprojektowano tak, aby obejrzeć prezentację styl przepływu, modelu przy użyciu intuicyjnego układ zorientowane na znaczników i celowo prosty model obiektu.</span><span class="sxs-lookup"><span data-stu-id="77e71-102">Content elements are designed for flow-style presentation, using an intuitive markup-oriented layout model and a deliberately simple object model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-103"><xref:System.Windows.ContentElement> definiuje następujące wspólne cechy zawartości:</span><span class="sxs-lookup"><span data-stu-id="77e71-103"><xref:System.Windows.ContentElement> defines the following common content characteristics:</span></span>  
  
-   <span data-ttu-id="77e71-104">Dane wejściowe: Wszystkie <xref:System.Windows.ContentElement> pochodnej klasy zapewniają obsługę podstawowych przechwytywania wprowadzania z klawiatury, myszy, operacji przeciągania i upuszczania, kontrolki pióra i akceleratorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-104">Input: All <xref:System.Windows.ContentElement> derived classes provide support for basic input capture from keyboard, mouse, drag-and-drop operations, stylus controls, and accelerators.</span></span>  
  
-   <span data-ttu-id="77e71-105">Focus: Wszystkie <xref:System.Windows.ContentElement> klas pochodnych są potencjalnie focusable.</span><span class="sxs-lookup"><span data-stu-id="77e71-105">Focus: All <xref:System.Windows.ContentElement> derived classes are potentially focusable.</span></span> <span data-ttu-id="77e71-106">(Jednak focusable domyślny stan dla <xref:System.Windows.ContentElement> klasa bazowa jest `false`.</span><span class="sxs-lookup"><span data-stu-id="77e71-106">(However, the default focusable state for the <xref:System.Windows.ContentElement> base class is `false`.</span></span> <span data-ttu-id="77e71-107">Aby uzyskać szczegółowe informacje dotyczące sposobu wprowadzania <xref:System.Windows.ContentElement> focusable, zobacz <xref:System.Windows.ContentElement.Focusable%2A>.) Ponadto ta klasa zawiera [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] służące do przechodzenia przez fokus między powiązanych elementów.</span><span class="sxs-lookup"><span data-stu-id="77e71-107">For details on how to make a <xref:System.Windows.ContentElement> focusable, see <xref:System.Windows.ContentElement.Focusable%2A>.) In addition, this class contains [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that you can use for traversing the focus across related elements.</span></span>  
  
-   <span data-ttu-id="77e71-108">Zdarzenia: <xref:System.Windows.ContentElement> dotyczy zdarzeń powiązanych z danych wejściowych i skoncentrować się; obejmuje również zdarzenia dla zmian w stanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-108">Events: <xref:System.Windows.ContentElement> includes events that are related to input and focus; it also includes events for changes in state.</span></span> <span data-ttu-id="77e71-109">W wielu przypadkach <xref:System.Windows.ContentElement> zdarzenia to zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-109">In many cases, the <xref:System.Windows.ContentElement> events are routed events.</span></span> <span data-ttu-id="77e71-110">W niektórych przypadkach zdarzenia trasowane mają zarówno w przypadku tunelowania, jak i propagacji strategii routingu, zgłaszany jako odrębne zdarzenia w odpowiedzi na samą stanu lub warunku.</span><span class="sxs-lookup"><span data-stu-id="77e71-110">In some cases, routed events have both tunneling and bubbling routing strategies, raised as separate events in response to the same state or condition.</span></span> <span data-ttu-id="77e71-111">Ponadto <xref:System.Windows.ContentElement> definiuje [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] że można Zgłoś kierowane zdarzeń i że można dodawać i usuwać programy obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-111">Also, <xref:System.Windows.ContentElement> defines [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] that can raise routed events and that can add or remove handlers to events.</span></span>  
  
 <span data-ttu-id="77e71-112"><xref:System.Windows.ContentElement> udostępnia wiele typowych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] z <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-112"><xref:System.Windows.ContentElement> shares many common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] with <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="77e71-113">Tych wspólnych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] nie pochodzą z dziedziczenia klasy udostępnione.</span><span class="sxs-lookup"><span data-stu-id="77e71-113">These common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] do not come from a shared class inheritance.</span></span> <span data-ttu-id="77e71-114">Jednak mają nazewnictwa wspólne, podobne zachowanie i podobne wewnętrzną implementację [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] w każdej klasie.</span><span class="sxs-lookup"><span data-stu-id="77e71-114">But they do share common naming, similar behavior, and similar internal implementation of [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in each class.</span></span> <span data-ttu-id="77e71-115">Jest on, ponieważ <xref:System.Windows.ContentElement> i <xref:System.Windows.UIElement> są każdej klasy, które są elementu podstawowego, mimo że każdy ma inną intencji zachowanie modelu obiektu znaczników.</span><span class="sxs-lookup"><span data-stu-id="77e71-115">The similarity is because <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are each classes that are an element base, although each has different intentions for its markup object model behavior.</span></span>  
  
 <span data-ttu-id="77e71-116">W szczególności <xref:System.Windows.UIElement> descends z <xref:System.Windows.Media.Visual>, który zapewnia obsługę grafiki niższego poziomu w celu renderowania <xref:System.Windows.ContentElement> do prostokątny obszar, w tym oknie złożone, natomiast <xref:System.Windows.ContentElement> odracza renderowania tak, aby pojęcia więcej Typowe scenariusze dokumentu, takich jak przepływ i pakowania, aby łatwiej są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-116">In particular, <xref:System.Windows.UIElement> descends from <xref:System.Windows.Media.Visual>, which provides the lower-level graphics support for rendering a <xref:System.Windows.ContentElement> to a rectangular region within a composited window, whereas <xref:System.Windows.ContentElement> defers rendering so that concepts more common to document scenarios, such as flow and wrapping, are more easily supported.</span></span> <span data-ttu-id="77e71-117">Te dwa powiązanych klas także implementować wspólnych interfejsów <xref:System.Windows.IInputElement> i <xref:System.Windows.Media.Animation.IAnimatable>.</span><span class="sxs-lookup"><span data-stu-id="77e71-117">These two related classes also implement the common interfaces <xref:System.Windows.IInputElement> and <xref:System.Windows.Media.Animation.IAnimatable>.</span></span>  

 ## <a name="notes-to-inheritors"></a><span data-ttu-id="77e71-118">Uwagi dotyczące obiektów dziedziczących</span><span class="sxs-lookup"><span data-stu-id="77e71-118">Notes to inheritors</span></span>

 <span data-ttu-id="77e71-119"><xref:System.Windows.ContentElement> Klasy nie definiuje jeszcze wszystkich aspektów kompletny element zawartości, aby obejrzeć prezentację styl przepływu.</span><span class="sxs-lookup"><span data-stu-id="77e71-119">The <xref:System.Windows.ContentElement> class does not yet define all aspects of a complete content element for flow-style presentation.</span></span> <span data-ttu-id="77e71-120"><xref:System.Windows.FrameworkContentElement> jest natychmiast pochodnej klasy <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-120"><xref:System.Windows.FrameworkContentElement> is an immediately derived class of <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="77e71-121"><xref:System.Windows.FrameworkContentElement> zawiera bardziej szczegółowy zestaw dodatkowe elementy członkowskie, które obsługują renderowania <xref:System.Windows.FrameworkContentElement> w ramach hosta zawartości i korzystania z systemu poziomie struktury układu WPF.</span><span class="sxs-lookup"><span data-stu-id="77e71-121"><xref:System.Windows.FrameworkContentElement> includes a more complete set of additional members that support rendering a <xref:System.Windows.FrameworkContentElement> within a content host and using the WPF framework-level layout system.</span></span>

 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ContentElement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-122">Initializes a new instance of the <see cref="T:System.Windows.ContentElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="77e71-123">Dodaje program obsługi zdarzenia trasowanego określonego zdarzenia trasowane, dodanie obsługi kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-123">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="77e71-124">Identyfikator zdarzenia trasowanego mają być obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-124">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="77e71-125">Odwołanie do implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-125">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="77e71-126">Dodaje program obsługi zdarzenia trasowanego określonego zdarzenia trasowane, dodanie obsługi kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-126">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-127">Tę samą procedurę obsługi zdarzenie, dla którego można dodać wiele razy bez zgłaszania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="77e71-127">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="77e71-128">Jednak program obsługi jest faktycznie wywoływana wiele razy, gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-128">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="77e71-129">W związku z tym należy rozważyć, jak to zachowanie może mieć skutki uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-129">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="77e71-130">Zazwyczaj ta metoda umożliwia implementację metody dostępu "add", aby uzyskać [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorzec dostępu do zdarzenia niestandardowe zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-130">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="77e71-131">Identyfikator zdarzenia the.routed mają być obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-131">An identifier for the.routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="77e71-132">Odwołanie do implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-132">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="77e71-133"><see langword="true" /> można zarejestrować program obsługi w taki sposób, że jest wywoływana, nawet wtedy, gdy zdarzenie trasowane jest oznaczony jako obsługiwane w jej danych zdarzeń; <see langword="false" /> zarejestrować program obsługi z warunkiem domyślne, które nie będą wywoływane, jeśli zdarzenie trasowane jest oznaczona jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-133"><see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="77e71-134">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-134">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="77e71-135">Nie rutynowo poproś o rehandle zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-135">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="77e71-136">Dodaje program obsługi zdarzenia trasowanego określonego zdarzenia trasowane, dodanie obsługi kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="77e71-137">Określ <paramref name="handledEventsToo" /> jako <see langword="true" /> zapewnienie podana program obsługi, można wywołać dla zdarzenia trasowanego, który już został oznaczony jako obsługiwane w innym elemencie wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-137">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-138">Przetwarzanie zdarzeń wejściowych niskiego poziomu w praktycznym sposobem jest złożonym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="77e71-138">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="77e71-139">Wiele kontrolek zaimplementować zachowanie, gdzie określone zdarzenie jest oznaczony jako obsłużony i zastępuje inne zdarzenie bardziej intuicyjne.</span><span class="sxs-lookup"><span data-stu-id="77e71-139">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="77e71-140">Ogólnie rzecz biorąc kontrolki tylko oznaczy zdarzenie wejściowe platformy jako obsługiwane w przypadku niektórych zamiar projekt, aby to zrobić.</span><span class="sxs-lookup"><span data-stu-id="77e71-140">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="77e71-141">W niektórych scenariuszach te zamiarach projekt może nie być, wymaga usługi określonego obsługi zdarzeń wejściowych.</span><span class="sxs-lookup"><span data-stu-id="77e71-141">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="77e71-142">Jest on przeznaczony dla tych scenariuszy tego rejestrowanie obsługi za pomocą `handledEventsToo` jako `true` jest odpowiednia.</span><span class="sxs-lookup"><span data-stu-id="77e71-142">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="77e71-143">Jednak możesz nie należy tego robić regularnie.</span><span class="sxs-lookup"><span data-stu-id="77e71-143">But you should not do this routinely.</span></span> <span data-ttu-id="77e71-144">Wywoływanie programów obsługi w odpowiedzi na wszystkie zdarzenia, nawet jeśli obsługiwany będzie skomplikować własnych zdarzeń aplikacji logiki przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="77e71-144">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="77e71-145">Jeśli logika obsługi jest istotne, mogą pojawić się spadek wydajności.</span><span class="sxs-lookup"><span data-stu-id="77e71-145">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="77e71-146">Należy zarezerwować użytkowania dołączanie programy obsługi dla już obsługi zdarzeń dla sytuacji, w którym możesz mieć już odnaleziony podczas procesu projektowania, że niektóre formanty obsługi zdarzeń, które chcesz nadal obsługiwać za pomocą aplikacji logiki.</span><span class="sxs-lookup"><span data-stu-id="77e71-146">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="77e71-147">Inna technika unikanie klasy zachowania niektórych kombinacji kontroli zdarzenie obsługi polega na użyciu alternatywne (wersja zapoznawcza) to zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-147">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="77e71-148">Na przykład jeśli <xref:System.Windows.ContentElement.MouseLeftButtonDown> jest oznaczony jako obsłużonych Obsługa klasy może być możliwe dodanie obsługi <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="77e71-148">For example, if <xref:System.Windows.ContentElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="77e71-149">Tę samą procedurę obsługi zdarzenie, dla którego można dodać wiele razy bez zgłaszania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="77e71-149">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="77e71-150">Jednak program obsługi jest faktycznie wywoływana wiele razy, gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-150">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="77e71-151">W związku z tym należy rozważyć, jak to zachowanie może mieć skutki uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-151">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="77e71-152">Zazwyczaj ta metoda umożliwia implementację metody dostępu "add", aby uzyskać [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorzec dostępu do zdarzenia niestandardowe zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-152">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77e71-153">Poniższy przykład wykonuje program obsługi wywoływane na <xref:System.Windows.FrameworkElement.Initialized> zdarzenie na stronie, która dołącza obsługę zdefiniowanych do jednego z nazwanych elementów na stronie za pomocą `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-153">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="77e71-154">Czy można wywołać ten program obsługi, nawet wtedy, gdy inny element wzdłuż trasy oznaczone dane zdarzenia udostępnionego jako obsłużony przed osiągnięciem element obsługi dla trasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-154">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="77e71-155">Programy obsługi są dodawane do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-155">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="77e71-156">Dane zdarzenia, które służy do dodawania obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-156">The event data that is used to add the handlers.</span></span> <span data-ttu-id="77e71-157">Ta metoda używa <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości argumentów, aby utworzyć procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-157">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the arguments to create the handlers.</span></span></param>
        <summary><span data-ttu-id="77e71-158">Dodaje obsługi do określonego <see cref="T:System.Windows.EventRoute" /> dla bieżącego <see cref="T:System.Windows.ContentElement" /> kolekcję procedur obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-158">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.ContentElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-159">Użyj tej metody dla elementów hosta zawartości (niezależnie od tego, czy implementują <xref:System.Windows.IContentHost>) aby można było dodać procedury obsługi dla hosta zawartości elementów podrzędnych do hosta <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="77e71-159">Use this method for content host elements (regardless whether they implement <xref:System.Windows.IContentHost>) in order to add handlers for the content host child elements to the host <xref:System.Windows.EventRoute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.ContentElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-160">Pobiera lub ustawia wartość wskazującą, czy ten element może służyć jako obiekt docelowy operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-160">Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="77e71-161"><see langword="true" /> Jeśli ten element może być używany jako obiekt docelowy operacji przeciągania i upuszczania. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-161"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-162">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-162">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-163">Operacje przeciągania i upuszczania nie są domyślnie włączone i musi być włączona celowo <xref:System.Windows.ContentElement.AllowDrop%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-163">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.ContentElement.AllowDrop%2A> to  `true`.</span></span> <span data-ttu-id="77e71-164">Po przekroczeniu tego ustawienia podstawowe, przeciągnij i upuść działanie zależy wyłącznie od implementacji i nie jest zdefiniowany przez <xref:System.Windows.ContentElement> lub dowolnej klasy elementu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="77e71-164">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.ContentElement> or any other base element class.</span></span> <span data-ttu-id="77e71-165">Niektóre kontrolki, na przykład <xref:System.Windows.Controls.RichTextBox>, mają domyślne zachowanie, ale nie <xref:System.Windows.ContentElement> klasy pochodnej mają takie zachowanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-165">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior, but no <xref:System.Windows.ContentElement> derived classes have such a behavior.</span></span> <span data-ttu-id="77e71-166">Aby uzyskać więcej informacji na temat przeciągania i upuszczania, zobacz [przeciągania i upuszczania Przegląd](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-166">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="77e71-167"><xref:System.Windows.FrameworkContentElement> zastępuje metadanych dla tej właściwości zależności w swojej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-167"><xref:System.Windows.FrameworkContentElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="77e71-168">W szczególności <xref:System.Windows.FrameworkContentElement> wskazuje, że ta właściwość umożliwia dziedziczenie wartości właściwości (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> jest `true` w metadanych).</span><span class="sxs-lookup"><span data-stu-id="77e71-168">Specifically, <xref:System.Windows.FrameworkContentElement> designates that this property allows property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="77e71-169">Dziedziczenie wartości właściwości w tym kontekście oznacza, że jeśli są elementami podrzędnymi bez innych wartości dla <xref:System.Windows.ContentElement.AllowDrop%2A> przypisane przy użyciu wartości lokalnych lub style, wartość przypisaną wartość (ponownie, albo w stylach domyślnie najbliższym elemencie nadrzędnym wartości lub wartości lokalnej), a następnie wartość z elementu nadrzędnego jest przypisany do wszystkich elementów podrzędnych nieprzypisane przez system właściwości.</span><span class="sxs-lookup"><span data-stu-id="77e71-169">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.ContentElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from that parent element is assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="77e71-170">Oznacza to, że można określić, czy do Zezwalaj na operacje listy w elemencie głównym, a następnie propaguje wartość do wszystkich <xref:System.Windows.FrameworkContentElement> elementy podrzędne, które nie specjalnie przypisano jej wartości `false`.</span><span class="sxs-lookup"><span data-stu-id="77e71-170">This means that you can specify whether to allow drop operations at the root element and then propagate the value to all <xref:System.Windows.FrameworkContentElement> child elements that have not specifically assigned it a value of `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-171">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-171">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-172">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-172">Identifier field</span></span>|<xref:System.Windows.ContentElement.AllowDropProperty>|  
|<span data-ttu-id="77e71-173">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-173">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-174">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-174">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="77e71-175">Poniższy przykład ustawia <xref:System.Windows.ContentElement.AllowDrop%2A> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="77e71-175">The following example sets <xref:System.Windows.ContentElement.AllowDrop%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#AllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#allowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-176">Identyfikuje <see cref="P:System.Windows.ContentElement.AllowDrop" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-176">Identifies the <see cref="P:System.Windows.ContentElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="77e71-177">Stosuje animacji z właściwością określona zależność, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-177">Applies an animation to a specified dependency property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="77e71-178">Identyfikator właściwości animować.</span><span class="sxs-lookup"><span data-stu-id="77e71-178">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="77e71-179">Zegar animacji, formantów, która deklaruje animacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-179">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="77e71-180">Stosuje animacji z właściwością określona zależność, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-180">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="77e71-181">Istniejących animacjach zostaną zatrzymane i zastąpione nowej animacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-181">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-182">Aby usunąć animacji z właściwością, należy określić identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="77e71-182">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="77e71-183">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawowa.</span><span class="sxs-lookup"><span data-stu-id="77e71-183">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="77e71-184">Zegar pierwotnie skojarzone animacji nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="77e71-184">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="77e71-185">Inne animacji przypisane do tego zegara będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="77e71-185">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="77e71-186">Właściwość animować.</span><span class="sxs-lookup"><span data-stu-id="77e71-186">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="77e71-187">Zegar animacji, formantów, która deklaruje animacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-187">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="77e71-188">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-188">A value of the enumeration.</span></span> <span data-ttu-id="77e71-189">Wartość domyślna to <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, co spowoduje zatrzymanie wszelkich istniejących animacji i Zastąp nowym plikiem.</span><span class="sxs-lookup"><span data-stu-id="77e71-189">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="77e71-190">Dotyczy animacji właściwości określonej zależności w tym elemencie, umożliwiającym określenie, co się stanie, jeśli właściwość jest już uruchomiona Animacja.</span><span class="sxs-lookup"><span data-stu-id="77e71-190">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-191">Aby usunąć animacji z właściwością, należy określić identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="77e71-191">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="77e71-192">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawowa.</span><span class="sxs-lookup"><span data-stu-id="77e71-192">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="77e71-193">Zegar pierwotnie skojarzone animacji nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="77e71-193">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="77e71-194">Inne animacji przypisane do tego zegara będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="77e71-194">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-195">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-195">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="77e71-196"><see langword="true" /> Jeśli co najmniej jeden touch, które są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-196"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-197">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-197">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-198">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="77e71-198">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="77e71-199"><see langword="true" /> Jeśli co najmniej jeden touch, które są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-199"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-200">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-200">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-201">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia wciśnięto się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-201">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="77e71-202"><see langword="true" /> Jeśli co najmniej jednego dotknięcia jest wciśnięty nad tym elementem; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-202"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-203">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-203">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-204">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia naciśnięciu za pośrednictwem tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="77e71-204">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="77e71-205"><see langword="true" /> Jeśli co najmniej jednego dotknięcia jest wciśnięty za pośrednictwem tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-205"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-206">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-206">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="77e71-207">W tym elemencie, rozpoczyna się animacji dla określonej właściwości animowany.</span><span class="sxs-lookup"><span data-stu-id="77e71-207">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="77e71-208">Właściwość, animować, określany jako identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-208">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="77e71-209">Oś czasu animacji, aby rozpocząć.</span><span class="sxs-lookup"><span data-stu-id="77e71-209">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="77e71-210">W tym elemencie, rozpoczyna się animacji dla określonej właściwości animowany.</span><span class="sxs-lookup"><span data-stu-id="77e71-210">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-211">Podczas sprawdzania, czy właściwość jest animowany, pamiętaj, że animacja rozpocznie się i uznaje się animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="77e71-211">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="77e71-212">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, a następnie zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="77e71-212">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="77e71-213">Jeśli cały `animation` wartość `null`wszystkich animacji są usuwane z właściwości i wartości właściwości wraca do swojej wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="77e71-213">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="77e71-214">Oś czasu animacji pierwotnie skojarzone nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="77e71-214">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="77e71-215">Inne animacji, przypisany do tej osi czasu będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="77e71-215">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="77e71-216">Właściwość, animować, określany jako identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-216">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="77e71-217">Oś czasu animacji, które mają być stosowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-217">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="77e71-218">Wartość wyliczenia, która określa, jak nowej animacji współdziała z dowolnego animacji bieżącego (uruchomione), które już mają wpływ na wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="77e71-218">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="77e71-219">Rozpoczyna się, które określonych animacji dla określonej właściwości animowany, w tym elemencie, przy użyciu opcji określania, co się stanie, jeśli właściwość jest już uruchomiona Animacja.</span><span class="sxs-lookup"><span data-stu-id="77e71-219">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-220">Podczas sprawdzania, czy właściwość jest animowany, pamiętaj, że animacja rozpocznie się i uznaje się animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="77e71-220">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="77e71-221">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, a następnie zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="77e71-221">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="77e71-222">Jeśli cały `animation` wartość `null`wszystkich animacji są usuwane z właściwości i wartości właściwości wraca do swojej wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="77e71-222">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="77e71-223">Oś czasu animacji pierwotnie skojarzone nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="77e71-223">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="77e71-224">Inne animacji, przypisany do tej osi czasu będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="77e71-224">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="contentElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-225">Próbuje wymusić przechwytywanie myszy do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-225">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="77e71-226"><see langword="true" /> Jeśli przycisk myszy jest pomyślnie przechwycono; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-226"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-227">Mają być przechwycone, element musi być włączona.</span><span class="sxs-lookup"><span data-stu-id="77e71-227">To be captured, an element must be enabled.</span></span> <span data-ttu-id="77e71-228">Sprawdź, czy <xref:System.Windows.ContentElement.IsEnabled%2A> jest `true` przed wywołaniem <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-228">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="77e71-229">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureMouse%2A> zwraca `true`, następnie <xref:System.Windows.ContentElement.IsMouseCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-229">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.ContentElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="77e71-230">Wywołanie <xref:System.Windows.ContentElement.CaptureMouse%2A> zwraca `true`, a następnie <xref:System.Windows.ContentElement.GotMouseCapture> i <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenia są wywoływane, za pomocą <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> w zdarzeniu dane raportowane jako element gdzie <xref:System.Windows.ContentElement.CaptureMouse%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="77e71-230">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotMouseCapture> and <xref:System.Windows.ContentElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.ContentElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="77e71-231">Jeśli wymusisz przechwytywania, może zakłócać istniejącego przechwycenia — szczególnie w przypadku przechwytywania, które odnoszą się do przeciągania i upuszczania za pomocą myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-231">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="77e71-232">Aby wyczyścić przechwytywanie myszy ze wszystkich elementów, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> z `element` podana jako parametr `null`.</span><span class="sxs-lookup"><span data-stu-id="77e71-232">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77e71-233">Poniższy przykład przechwytuje mysz lub zwalnia przechwytywanie, podstawą tego, czy przycisk myszy jest już przechwytywany przez element.</span><span class="sxs-lookup"><span data-stu-id="77e71-233">The following example captures the mouse or releases capture, based on whether the mouse is already captured by the element.</span></span> <span data-ttu-id="77e71-234">Należy pamiętać, że w tym przykładzie rzutuje elementu docelowego potencjalnych przechwytywania <xref:System.Windows.IInputElement> interfejsu, a w związku z tym początkowo jest wywoływany <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="77e71-234">Note that this example casts the prospective capture target element to the <xref:System.Windows.IInputElement> interface, and is thus initially calling the <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="77e71-235">Rzutowanie na <xref:System.Windows.IInputElement> to technika, która jest przydatne w przypadku braku pewności, czy element ma być przechwytywanie myszy jest <xref:System.Windows.UIElement> lub <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-235">Casting to <xref:System.Windows.IInputElement> is a technique that is useful if you are unsure whether the element you want to have capture the mouse is a <xref:System.Windows.UIElement> or a <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="77e71-236">Rzutowanie interfejsu, jak i metody interfejsu wywołać następnie wywołania odpowiedniej implementacji CaptureMouse specyficznych dla typu wewnętrznie bez konieczności korzystania z wersji próbnej rzutować albo <xref:System.Windows.UIElement> lub <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-236">The interface cast and the interface method call then calls the appropriate type-specific CaptureMouse implementation internally without requiring a trial cast to either <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="77e71-237">Ta sama technika rzutowania działa dla innych członków, <xref:System.Windows.IInputElement> definiuje, na przykład wiele zdarzeń związanych z danych wejściowych i innych metod dotyczących danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="77e71-237">This same casting technique works for other members that <xref:System.Windows.IInputElement> defines, for instance many of the input-related events, and other input-related methods.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="contentElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-238">Próbuje wymusić Przechwytywanie pióra do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-238">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="77e71-239"><see langword="true" /> Jeśli pióro pomyślnie są przechwytywane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-239"><see langword="true" /> if the stylus is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-240">Domyślna implementacja oparte na podstawowej domyślnego urządzenia pióro zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-240">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="77e71-241">Jednak jeśli rozszerzania wejściowych urządzeń, które zapewniają implementację urządzenia wejściowego systemu jest możliwe utworzenie systemu z implementacją urządzenia alternatywnych pióra, która może zwracać różne wyniki.</span><span class="sxs-lookup"><span data-stu-id="77e71-241">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="77e71-242">Po przechwyceniu pióra przez element, odbierze wejście pióra, nawet wtedy, gdy pióro znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="77e71-242">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="77e71-243">Pióro są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-243">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="77e71-244">Wywołanie tej metody wywołuje odpowiednią statyczne <xref:System.Windows.Input.Stylus> metoda <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-244">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="77e71-245">Zachowanie rzeczywistego przechwytywania jest implementowany przez wdrożenia urządzeniami active pióra.</span><span class="sxs-lookup"><span data-stu-id="77e71-245">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="77e71-246">Mają być przechwycone, element musi być włączona.</span><span class="sxs-lookup"><span data-stu-id="77e71-246">To be captured, an element must be enabled.</span></span> <span data-ttu-id="77e71-247">Sprawdź, czy <xref:System.Windows.ContentElement.IsEnabled%2A> jest `true` zwrócić przed wywołaniem <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-247">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="77e71-248">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureStylus%2A> zwraca `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-248">If calling <xref:System.Windows.ContentElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="77e71-249">Urządzenie do przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="77e71-249">The device to capture.</span></span></param>
        <summary><span data-ttu-id="77e71-250">Próbuje wymusić przechwytywania touch do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-250">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="77e71-251"><see langword="true" /> Jeśli określony touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-251"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-252"><xref:System.Windows.ContentElement.CaptureTouch%2A> zwróci `false` Jeśli <xref:System.Windows.Input.TouchDevice> aktualnie są przechwytywane do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-252"><xref:System.Windows.ContentElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="77e71-253">Jeśli <xref:System.Windows.ContentElement.CaptureTouch%2A> zwraca `true`, a następnie <xref:System.Windows.ContentElement.GotTouchCapture> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-253">If <xref:System.Windows.ContentElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="77e71-254">Aby zwolnić przechwytywania jednym naciśnięciem przycisku z tego elementu, należy użyć <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> metodę i określić urządzeń dotykowych do wydania.</span><span class="sxs-lookup"><span data-stu-id="77e71-254">To release capture of a single touch from this element, use the <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="77e71-255">Aby zwolnić wszystkie ma z tego elementu, należy użyć <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="77e71-255">To release all touches from this element, use the <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="77e71-256"><paramref name="touchDevice" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-256"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.ContentElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-257">Pobiera kolekcję <see cref="T:System.Windows.Input.CommandBinding" /> obiekty, które są skojarzone z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-257">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="77e71-258">Kolekcja wszystkich <see cref="T:System.Windows.Input.CommandBinding" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="77e71-258">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-259">A <xref:System.Windows.Input.CommandBinding> włącza obsługę określonego polecenia dla tego elementu oraz deklaruje powiązanie między poleceniem, jego zdarzeń i obsługi, które są dołączone przez ten element.</span><span class="sxs-lookup"><span data-stu-id="77e71-259">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element and declares the linkage between a command, its events, and the handlers that are attached by this element.</span></span>  
  
 <span data-ttu-id="77e71-260">Inny typowy sposób, aby wypełnić <xref:System.Windows.ContentElement.CommandBindings%2A> kolekcji jest użycie <xref:System.Windows.Input.CommandManager> metody programowo.</span><span class="sxs-lookup"><span data-stu-id="77e71-260">Another typical way to populate the <xref:System.Windows.ContentElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="77e71-261">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="77e71-261">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="77e71-262">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="77e71-262">XAML Values</span></span>  
 <span data-ttu-id="77e71-263">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="77e71-263">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="77e71-264">Co najmniej jeden <xref:System.Windows.Input.CommandBinding> elementów.</span><span class="sxs-lookup"><span data-stu-id="77e71-264">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="77e71-265">Każdy z nich powinien mieć <xref:System.Windows.Input.CommandBinding.Command%2A> znane polecenie ustawioną wartość atrybutu i atrybuty ustawione dla <xref:System.Windows.Input.CommandBinding.CanExecute> i <xref:System.Windows.Input.CommandBinding.Executed> implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-265">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="77e71-266">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="77e71-266">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-267">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element docelowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="77e71-267">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-268">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-268">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-269">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-269">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-270">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-270">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-271">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-271">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragEnterEvent>|  
|<span data-ttu-id="77e71-272">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-272">Routing strategy</span></span>|<span data-ttu-id="77e71-273">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-273">Bubbling</span></span>|  
|<span data-ttu-id="77e71-274">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-274">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="77e71-275">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="77e71-275">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="77e71-276">Zastąp <xref:System.Windows.ContentElement.OnDragEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-276">Override <xref:System.Windows.ContentElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-277">Identyfikuje <see cref="E:System.Windows.ContentElement.DragEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-277">Identifies the <see cref="E:System.Windows.ContentElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-278">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-278">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-279">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-279">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-280">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-280">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-281">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-281">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-282">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-282">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-283">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element źródłowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="77e71-283">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-284">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-284">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-285">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-285">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-286">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-286">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-287">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-287">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragLeaveEvent>|  
|<span data-ttu-id="77e71-288">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-288">Routing strategy</span></span>|<span data-ttu-id="77e71-289">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-289">Bubbling</span></span>|  
|<span data-ttu-id="77e71-290">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-290">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="77e71-291">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="77e71-291">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="77e71-292">Zastąp <xref:System.Windows.ContentElement.OnDragLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-292">Override <xref:System.Windows.ContentElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-293">Identyfikuje <see cref="E:System.Windows.ContentElement.DragLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-293">Identifies the <see cref="E:System.Windows.ContentElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-294">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-294">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-295">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-295">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-296">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-296">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-297">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-297">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-298">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-298">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-299">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-299">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-300">To zdarzenie występuje nawet wtedy, gdy przeciągania pochodzi z granicami elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-300">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="77e71-301">Jeśli przeciąganie rozpoczyna się poza granicami i przenosi wewnątrz, to zdarzenie jest również inicjowane, jak również <xref:System.Windows.ContentElement.DragEnter> i powiązane zdarzenia (wersja zapoznawcza).</span><span class="sxs-lookup"><span data-stu-id="77e71-301">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.ContentElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="77e71-302">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-302">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-303">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragOver> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-303">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-304">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-304">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-305">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-305">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragOverEvent>|  
|<span data-ttu-id="77e71-306">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-306">Routing strategy</span></span>|<span data-ttu-id="77e71-307">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-307">Bubbling</span></span>|  
|<span data-ttu-id="77e71-308">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-308">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="77e71-309">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="77e71-309">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="77e71-310">Zastąp <xref:System.Windows.ContentElement.OnDragOver%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-310">Override <xref:System.Windows.ContentElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-311">Identyfikuje <see cref="E:System.Windows.ContentElement.DragOver" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-311">Identifies the <see cref="E:System.Windows.ContentElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-312">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-312">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-313">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-313">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-314">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-314">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-315">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-315">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-316">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-316">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-317">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania za pomocą tego elementu jako element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-317">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-318">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-318">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-319">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.Drop> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-319">Event handlers that are attached to the <xref:System.Windows.ContentElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-320">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-320">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-321">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-321">Identifier field</span></span>|<xref:System.Windows.ContentElement.DropEvent>|  
|<span data-ttu-id="77e71-322">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-322">Routing strategy</span></span>|<span data-ttu-id="77e71-323">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-323">Bubbling</span></span>|  
|<span data-ttu-id="77e71-324">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-324">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="77e71-325">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="77e71-325">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="77e71-326">Zastąp <xref:System.Windows.ContentElement.OnDrop%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-326">Override <xref:System.Windows.ContentElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-327">Identyfikuje <see cref="E:System.Windows.ContentElement.Drop" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-327">Identifies the <see cref="E:System.Windows.ContentElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-328">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-328">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-329">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-329">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-330">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-330">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-331">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-331">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-332">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-332">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="contentElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-333">Próbuje ustawić fokus na ten element.</span><span class="sxs-lookup"><span data-stu-id="77e71-333">Attempts to set focus to this element.</span></span></summary>
        <returns><span data-ttu-id="77e71-334"><see langword="true" /> Jeśli mógł zostać ustawiony fokus klawiatury do tego elementu; <see langword="false" /> wywołanie tej metody nie wymuszenia fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-334"><see langword="true" /> if keyboard focus could be set to this element; <see langword="false" /> if this method call did not force focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-335">Jako focusable, <xref:System.Windows.ContentElement.Focusable%2A> i <xref:System.Windows.ContentElement.IsEnabled%2A> muszą być `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-335">To be focusable, <xref:System.Windows.ContentElement.Focusable%2A> and <xref:System.Windows.ContentElement.IsEnabled%2A> must both be `true`.</span></span> <span data-ttu-id="77e71-336">Należy pamiętać, że niemal we wszystkich <xref:System.Windows.ContentElement> klas pochodnych nie są <xref:System.Windows.ContentElement.Focusable%2A> domyślnie.</span><span class="sxs-lookup"><span data-stu-id="77e71-336">Note that nearly all <xref:System.Windows.ContentElement> derived classes are not <xref:System.Windows.ContentElement.Focusable%2A> by default.</span></span>  
  
 <span data-ttu-id="77e71-337">Nawet, jeśli element jest obsługa zdarzeń focusable i włączony, w obrębie określonego drzewa, (takie jak w przypadku kontrolek złożonych) może odpowiadać na zdarzenia fokusu w wersji zapoznawczej, nie zezwalając fokus, więc ta metoda zwróci `false`.</span><span class="sxs-lookup"><span data-stu-id="77e71-337">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="77e71-338">Fokus na ogół jest regulowane przez dwie oddzielne koncepcje: za pomocą klawiatury fokus i fokus logiczny, które nie zawsze są identyczne.</span><span class="sxs-lookup"><span data-stu-id="77e71-338">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="77e71-339">Ta metoda ustawia fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="77e71-339">This method sets the logical focus.</span></span> <span data-ttu-id="77e71-340">Brak programowy sposób specjalnie; Ustaw fokus klawiatury fokus klawiatury jest określany przez dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="77e71-340">There is no programmatic means to set keyboard focus specifically; keyboard focus is determined by user input.</span></span> <span data-ttu-id="77e71-341">Aby uzyskać więcej informacji, zobacz [Przegląd fokus](~/docs/framework/wpf/advanced/focus-overview.md) i [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-341">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="77e71-342">Jeśli wywołanie <xref:System.Windows.ContentElement.Focus%2A> zwraca `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> i <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> są również `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-342">If calling <xref:System.Windows.ContentElement.Focus%2A> returns `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> and <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="77e71-343">Jeśli powiązane właściwości nie są już `true`, gdy wywołujesz <xref:System.Windows.ContentElement.Focus%2A>, co najmniej jeden z następujących zdarzeń, które są wywoływane w następującej kolejności: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (źródło jest nowy obiekt docelowy fokus), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (źródło jest nowy obiekt docelowy koncentracji uwagi).</span><span class="sxs-lookup"><span data-stu-id="77e71-343">If the related properties are not already `true`, when you call <xref:System.Windows.ContentElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77e71-344">Poniższy przykład jest obsługi zdarzeń załadować strony, który umożliwia znalezienie określonej nazwie akapit w dokumencie i ustawia fokus do niego.</span><span class="sxs-lookup"><span data-stu-id="77e71-344">The following example is a page-loaded event handler that finds a specified named paragraph in the document and sets focus to it.</span></span> <span data-ttu-id="77e71-345">Nie są focusable domyślnie; akapitów tego konkretnego akapitu miał zastosowanego stylu (niewyświetlany) które używane stylu <xref:System.Windows.Setter> się focusable.</span><span class="sxs-lookup"><span data-stu-id="77e71-345">Paragraphs are not focusable by default; this particular paragraph had a style applied (not shown) that used a style <xref:System.Windows.Setter> to make it focusable.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#Focus](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#focus)]
 [!code-vb[ContentElementsSmorgasbord#Focus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#focus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.ContentElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-346">Pobiera lub ustawia wartość wskazującą, czy element może odebrać fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-346">Gets or sets a value that indicates whether the element can receive focus.</span></span></summary>
        <value><span data-ttu-id="77e71-347"><see langword="true" /> Jeśli element jest focusable; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-347"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="77e71-348">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-348">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-349">Tylko wąsko zdefiniowany element otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="77e71-349">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="77e71-350">Niektóre klasy pochodne mogą zastąpić metadane dla tej właściwości zależności w taki sposób, że klasa pochodna jest focusable domyślnie.</span><span class="sxs-lookup"><span data-stu-id="77e71-350">Certain derived classes might override metadata for this dependency property such that the derived class is focusable by default.</span></span>  
  
 <span data-ttu-id="77e71-351">W przypadku dziedziczonych przez <xref:System.Windows.Documents.Hyperlink> lub jej klasy pochodne <xref:System.Windows.Documents.Hyperlink> zastępuje metadanych dla tej właściwości zależności i zmienia wartość domyślna tej właściwości to `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-351">When inherited by <xref:System.Windows.Documents.Hyperlink> or its derived classes, <xref:System.Windows.Documents.Hyperlink> overrides the metadata for this dependency property and redefines the default value of this property to be `true`.</span></span>  
  
### <a name="dependency-property-information"></a><span data-ttu-id="77e71-352">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-352">Dependency property information</span></span>
  
|||  
|-|-|  
|<span data-ttu-id="77e71-353">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-353">Identifier field</span></span>|<xref:System.Windows.ContentElement.FocusableProperty>|  
|<span data-ttu-id="77e71-354">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-354">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-355">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-355">None</span></span>|  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="77e71-356">Uwagi dotyczące obiektów dziedziczących</span><span class="sxs-lookup"><span data-stu-id="77e71-356">Notes to inheritors</span></span>

<span data-ttu-id="77e71-357">Po utworzeniu klasy pochodnej z <xref:System.Windows.ContentElement>, należy wziąć pod uwagę, czy chcesz, aby Twoje element ma być focusable, ponieważ domyślnie nie będzie focusable.</span><span class="sxs-lookup"><span data-stu-id="77e71-357">When you derive from <xref:System.Windows.ContentElement>, consider whether you want your element to be focusable, because by default it will not be focusable.</span></span> <span data-ttu-id="77e71-358">Jeśli chcesz, aby Twoje element ma być focusable, zastąpić metadane dla tej właściwości w swojej klasie pochodnej, statyczny Konstruktor w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="77e71-358">If you want your element to be focusable, override the metadata for this property in your derived class static constructor as follows:</span></span>  

[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)]
[!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]  
  
<span data-ttu-id="77e71-359">gdzie `myElement` jest nazwą klasy typu, który jest zastąpienie wartości metadanych na.</span><span class="sxs-lookup"><span data-stu-id="77e71-359">where `myElement` is the class name of the type that you are overriding the metadata value on.</span></span>
  
## Examples  
 <span data-ttu-id="77e71-360">Poniższy przykład tworzy styl, który sprawia, że <xref:System.Windows.Documents.Paragraph> focusable domyślnie i nadaje jej zachowanie visual po odebraniu fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-360">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-361">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.Focusable" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="77e71-361">Occurs when the value of the <see cref="P:System.Windows.ContentElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-362">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-362">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-363">Identyfikuje <see cref="P:System.Windows.ContentElement.Focusable" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-363">Identifies the <see cref="P:System.Windows.ContentElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="contentElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="77e71-364">Właściwość the.Dependency do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-364">The.dependency property to check.</span></span></param>
        <summary><span data-ttu-id="77e71-365">Zwraca wartość właściwości podstawowej dla określonej właściwości dla tego elementu, bez uwzględnienia wszelkie animowane wartość z bieżącą lub zatrzymać animację.</span><span class="sxs-lookup"><span data-stu-id="77e71-365">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="77e71-366">Właściwość wartości tak, jakby nie animacji są dołączone do właściwości określonej zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-366">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-367">Jeśli nie animacje są dołączone do właściwości, a następnie <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> wartość zwracana jest zawsze taka sama jak <xref:System.Windows.DependencyObject.GetValue%2A> zwracają wartość.</span><span class="sxs-lookup"><span data-stu-id="77e71-367">If no animations are attached to the property, then the <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="77e71-368">W przypadku dołączonych animacji, następnie wszystkie możliwe animacje uzyskane wartości w tym początek wartości są ignorowane i wartość właściwości jest ustalana na wszystkich innych możliwych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="77e71-368">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="77e71-369">Aby uzyskać więcej informacji, zobacz [następstwo wartości właściwości](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-369">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="contentElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-370">Po przesłonięciu w klasie pochodnej zwraca alternatywę [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] nadrzędny dla tego elementu, jeśli istnieje visual elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="77e71-370">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="77e71-371">Obiekt, który, jeśli implementacja klasy pochodnej z połączeniem alternatywny nadrzędny do raportu.</span><span class="sxs-lookup"><span data-stu-id="77e71-371">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-372">Domyślna implementacja wirtualnych tej metody zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="77e71-372">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="77e71-373"><xref:System.Windows.FrameworkContentElement> udostępnia implementację praktyczne.</span><span class="sxs-lookup"><span data-stu-id="77e71-373"><xref:System.Windows.FrameworkContentElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="77e71-374">Alternatywne nadrzędnych są używane do routingu zdarzeń, w przypadkach, gdy element tworzy alternatywnych nadrzędnej struktury tak, aby jego zdarzeń są kierowane w taki sposób, że diverges ze standardowego wzorca routingu w górę drzewa wizualnego do standardowego elementu nadrzędnego, lub w dół w Wyświetl podgląd strategii routingu.</span><span class="sxs-lookup"><span data-stu-id="77e71-374">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-375">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania i upuszczania, które obejmuje ten element.</span><span class="sxs-lookup"><span data-stu-id="77e71-375">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-376"><xref:System.Windows.ContentElement.GiveFeedback> Zdarzeń umożliwia źródło zdarzenia przeciągania, aby modyfikować wygląd wskaźnika myszy, aby dać wizualną opinię użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-376">The <xref:System.Windows.ContentElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="77e71-377">Wizualną opinię wzmacnia to, że trwa operacja przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-377">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="77e71-378">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.GiveFeedback> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-378">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-379">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GiveFeedback> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-379">Event handlers that are attached to the <xref:System.Windows.ContentElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-380">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-380">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-381">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-381">Identifier field</span></span>|<xref:System.Windows.ContentElement.GiveFeedbackEvent>|  
|<span data-ttu-id="77e71-382">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-382">Routing strategy</span></span>|<span data-ttu-id="77e71-383">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-383">Bubbling</span></span>|  
|<span data-ttu-id="77e71-384">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-384">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="77e71-385">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="77e71-385">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="77e71-386">Zastąp <xref:System.Windows.ContentElement.OnGiveFeedback%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-386">Override <xref:System.Windows.ContentElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-387">Identyfikuje <see cref="E:System.Windows.ContentElement.GiveFeedback" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-387">Identifies the <see cref="E:System.Windows.ContentElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-388">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-388">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-389">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-389">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-390">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-390">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-391">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-391">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-392">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-392">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-393">Występuje, gdy ten element pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="77e71-393">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-394">Fokus logiczny różni się od fokus klawiatury, gdy fokus jest celowo wymuszone za pomocą wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="77e71-394">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="77e71-395">W tym scenariuszu fokus klawiatury pozostaje, gdzie jest i element gdzie <xref:System.Windows.ContentElement.Focus%2A> wywoływana jest metoda nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="77e71-395">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="77e71-396">Bardziej precyzyjne interpretacji to zdarzenie jest jej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsFocused%2A> zmiany właściwości elementu w trasie z `false` do `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-396">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="77e71-397">Ponieważ to zdarzenie używa routingu propagacji, element, który otrzymuje fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-397">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="77e71-398">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który zdobyte fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-398">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-399">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-399">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-400">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-400">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotFocusEvent>|  
|<span data-ttu-id="77e71-401">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-401">Routing strategy</span></span>|<span data-ttu-id="77e71-402">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-402">Bubbling</span></span>|  
|<span data-ttu-id="77e71-403">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-403">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="77e71-404">Nie ma żadnego odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="77e71-404">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="77e71-405">Zastąp <xref:System.Windows.ContentElement.OnGotFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-405">Override <xref:System.Windows.ContentElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-406">Identyfikuje <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-406">Identifies the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-407">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-407">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-408">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-408">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-409">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-409">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-410">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-410">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-411">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-411">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-412">Występuje, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-412">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-413"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> jest podobne zdarzenie, który śledzi zmiany stanu we właściwości, która przechowuje stan aktywny elementu; <xref:System.Windows.ContentElement.GotKeyboardFocus> zdarzenie jest zgłaszane w wielu z tych samych warunkach.</span><span class="sxs-lookup"><span data-stu-id="77e71-413"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.ContentElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="77e71-414">Ponieważ to zdarzenie używa routingu propagacji, element, który ma fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-414">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="77e71-415">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który jest ustawiony fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-415">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="77e71-416">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.GotKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-416">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-417">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-417">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-418">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-418">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-419">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-419">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="77e71-420">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-420">Routing strategy</span></span>|<span data-ttu-id="77e71-421">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-421">Bubbling</span></span>|  
|<span data-ttu-id="77e71-422">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-422">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="77e71-423">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="77e71-423">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="77e71-424">Zastąp <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-424">Override <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-425">Identyfikuje <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-425">Identifies the <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-426">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-426">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-427">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-427">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-428">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-428">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-429">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-429">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-430">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-430">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-431">Występuje, gdy ten element przechwytuje mysz.</span><span class="sxs-lookup"><span data-stu-id="77e71-431">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-432">Gdy element przechwytuje mysz, otrzymuje wejście myszy nawet wtedy, gdy wskaźnik myszy znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="77e71-432">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="77e71-433">Mysz są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania i pozostaje przechwycone, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-433">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="77e71-434">Ponieważ to zdarzenie używa routingu propagacji, element, który ma przechwytywania może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-434">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="77e71-435">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w zdarzeniu przechwytywania danych, aby określić rzeczywisty element, który ma myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-435">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="77e71-436">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.GotMouseCapture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-436">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.ContentElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-437">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotMouseCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-437">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-438">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-438">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-439">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-439">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="77e71-440">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-440">Routing strategy</span></span>|<span data-ttu-id="77e71-441">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-441">Bubbling</span></span>|  
|<span data-ttu-id="77e71-442">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-442">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="77e71-443">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="77e71-443">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="77e71-444">Zastąp <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-444">Override <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-445">Identyfikuje <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-445">Identifies the <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-446">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-446">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-447">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-447">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-448">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-448">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-449">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-449">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-450">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-450">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-451">Występuje, gdy ten element przechwytuje pióro.</span><span class="sxs-lookup"><span data-stu-id="77e71-451">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-452">Po przechwyceniu pióra przez element, odbierze wejście pióra, nawet jeśli kursor znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="77e71-452">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="77e71-453">Pióro są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania i zachowuje przechwytywania, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-453">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="77e71-454">Ponieważ to zdarzenie używa routingu propagacji, element, który ma przechwytywania może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-454">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="77e71-455">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który ma przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="77e71-455">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="77e71-456">To zdarzenie tworzy alias dla dołączone zdarzenie dla tej klasy, aby <xref:System.Windows.ContentElement.GotStylusCapture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-456">This event creates an alias for the  attached event for this class so that <xref:System.Windows.ContentElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-457">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotStylusCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-457">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-458">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-458">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-459">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-459">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="77e71-460">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-460">Routing strategy</span></span>|<span data-ttu-id="77e71-461">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-461">Bubbling</span></span>|  
|<span data-ttu-id="77e71-462">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-462">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-463">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="77e71-463">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="77e71-464">Zastąp <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-464">Override <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-465">Identyfikuje <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-465">Identifies the <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-466">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-466">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-467">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-467">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-468">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-468">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-469">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-469">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-470">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-470">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-471">Występuje, gdy touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-471">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-472">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-472">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-473">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-473">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="77e71-474">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-474">Routing strategy</span></span>|<span data-ttu-id="77e71-475">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-475">Bubbling</span></span>|  
|<span data-ttu-id="77e71-476">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-476">Delegate</span></span>|<span data-ttu-id="77e71-477"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="77e71-477"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="77e71-478">Zastąp <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-478">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-479">Identyfikuje <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-479">Identifies the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-480">Pobiera wartość wskazującą, czy ten element ma wszystkie właściwości animowany.</span><span class="sxs-lookup"><span data-stu-id="77e71-480">Gets a value that indicates whether this element has any animated properties.</span></span></summary>
        <value><span data-ttu-id="77e71-481"><see langword="true" /> Jeśli ten element ma animacji dołączone do żadnej z jej właściwości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-481"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-482">Ta właściwość zwraca `true` zarówno dla trwałego animacji (unclocked, zawsze uruchomiona) i animacji, które mają szczególne osi czasu.</span><span class="sxs-lookup"><span data-stu-id="77e71-482">This property returns `true` either for persistent (unclocked, always-running) animations or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.ContentElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-483">Pobiera kolekcję powiązania danych wejściowych, które są skojarzone z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-483">Gets the collection of input bindings that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="77e71-484">Kolekcja powiązania danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="77e71-484">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-485">Powiązania danych wejściowych obsługuje powiązanie polecenia, aby urządzenia wejściowe.</span><span class="sxs-lookup"><span data-stu-id="77e71-485">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="77e71-486">Na przykład <xref:System.Windows.Input.MouseBinding> implementuje wejściowych powiązania, które zawierają właściwości, które są specyficzne dla urządzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-486">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are specific to mouse devices.</span></span>  
  
 <span data-ttu-id="77e71-487">Kolekcja powiązania danych wejściowych zawiera powiązania danych wejściowych, które odnoszą się do typu i powiązania danych wejściowych, które są zadeklarowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="77e71-487">The collection of input bindings includes both input bindings that pertain to the type and also input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="77e71-488">Powiązaną właściwość <xref:System.Windows.ContentElement.CommandBindings%2A>, przechowuje kolekcję powiązań polecenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-488">A related property, <xref:System.Windows.ContentElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="77e71-489">Te powiązania różnią się od powiązania danych wejściowych reprezentują wyższy poziom szczegółów przetwarzania polecenia - akcje, które są powiązane z polecenia znane i obsługi swoiste dla klas dla nich.</span><span class="sxs-lookup"><span data-stu-id="77e71-489">These bindings differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands and class-specific handlers for them.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="77e71-490">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="77e71-490">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="77e71-491">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="77e71-491">XAML Values</span></span>  
 <span data-ttu-id="77e71-492">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="77e71-492">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="77e71-493">Co najmniej jeden <xref:System.Windows.Input.InputBinding> elementów (zazwyczaj <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding> klas pochodnych).</span><span class="sxs-lookup"><span data-stu-id="77e71-493">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="77e71-494">Każdy z nich powinny mieć <xref:System.Windows.Input.InputBinding.Command%2A> i <xref:System.Windows.Input.InputBinding.Gesture%2A> atrybut.</span><span class="sxs-lookup"><span data-stu-id="77e71-494">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.ContentElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-495">Pobiera lub ustawia wartość wskazującą, czy ten element jest włączony w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="77e71-495">Gets or sets a value that indicates whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="77e71-496"><see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-496"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-497">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-497">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-498">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-498">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-499">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-499">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsEnabledProperty>|  
|<span data-ttu-id="77e71-500">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-500">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-501">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-501">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="77e71-502">Poniższy przykład tworzy styl, który zawiera metoda ustawiająca właściwości, który zapewnia alternatywny zachowanie programu visual podczas <xref:System.Windows.Documents.Hyperlink> ustawiono <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span><span class="sxs-lookup"><span data-stu-id="77e71-502">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> is set to <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-503">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwość zmiany tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-503">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-504">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-504">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.ContentElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-505">Pobiera wartość, która staje się wartość zwracaną przez <see cref="P:System.Windows.ContentElement.IsEnabled" /> w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-505">Gets a value that becomes the return value of <see cref="P:System.Windows.ContentElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="77e71-506"><see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-506"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## <a name="notes-to-inheritors"></a><span data-ttu-id="77e71-507">Uwagi dotyczące obiektów dziedziczących</span><span class="sxs-lookup"><span data-stu-id="77e71-507">Notes to inheritors</span></span>

<span data-ttu-id="77e71-508">Domyślna implementacja tej właściwości przechowuje wartość i oblicza również, czy element nadrzędny tego elementu jest włączony.</span><span class="sxs-lookup"><span data-stu-id="77e71-508">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="77e71-509">Element nadrzędny nie jest włączone, element podrzędny nie może skutecznie włączone w interfejsie użytkownika praktyczne.</span><span class="sxs-lookup"><span data-stu-id="77e71-509">If the parent is not enabled, the child element cannot be effectively enabled in practical user interface.</span></span> <span data-ttu-id="77e71-510">Jeśli chcesz przesłonić tę implementację, należy upewnić się, że wywoływać implementację podstawową, aby zachować to zachowanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-510">If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-511">Identyfikuje <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-511">Identifies the <see cref="P:System.Windows.ContentElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.ContentElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-512">Pobiera wartość określającą, czy ten element ma fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="77e71-512">Gets a value that determines whether this element has logical focus.</span></span></summary>
        <value><span data-ttu-id="77e71-513"><see langword="true" /> Jeśli ten element ma fokus logiczny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-513"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-514">Fokus logiczny może różnić się od fokus klawiatury, jeśli aplikacja ma wiele działów fokus, takich jak między zawartość menu i pozostałą częścią aplikacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-514">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="77e71-515">W tym scenariuszu fokus klawiatury może być tylko na jednym z elementów interfejsu użytkownika aplikacji, jednak niektóre elementy w innych działów fokus może nadal przechowywać fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="77e71-515">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="77e71-516">Aby uzyskać więcej informacji na temat logiczny fokus, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Przegląd fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-516">For more information on logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-517">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-517">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-518">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-518">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsFocusedProperty>|  
|<span data-ttu-id="77e71-519">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-519">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-520">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-520">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="77e71-521">Poniższy przykład tworzy styl, który sprawia, że <xref:System.Windows.Documents.Paragraph> focusable domyślnie i nadaje jej zachowanie visual po odebraniu fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-521">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-522">Identyfikuje <see cref="P:System.Windows.ContentElement.IsFocused" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-522">Identifies the <see cref="P:System.Windows.ContentElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-523">Pobiera wartość wskazującą, czy system metodę wprowadzania, takich jak [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], jest włączone do przetwarzania danych wejściowych do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-523">Gets a value that indicates whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="77e71-524"><see langword="true" /> Jeśli metoda wprowadzania danych jest aktywna; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-524"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-525">Wartość domyślna właściwości dołączone to <see langword="true" />; Jednakże, ta wartość ma wpływ stan metody wprowadzania danych w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="77e71-525">The default value of the underlying attached property is <see langword="true" />; however, this value is influenced by the state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-526">Ta właściwość zwraca wartość, która jest zwracana przez właściwość dołączonych <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> dla aktualnie włączonego metody wprowadzania (klawiatury, mowy i inne urządzenia wejściowego).</span><span class="sxs-lookup"><span data-stu-id="77e71-526">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-527">Pobiera wartość wskazującą, czy ten element ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="77e71-527">Gets a value that indicates whether this element has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="77e71-528"><see langword="true" /> Jeśli ten element ma fokus klawiatury; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-528"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-529">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-529">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-530">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-530">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-531">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-531">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="77e71-532">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-532">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-533">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-533">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-534">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-534">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-535">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-535">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-536">Identyfikuje <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-536">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-537">Pobiera wartość wskazującą, czy fokus klawiatury mieści się w dowolnym miejscu elementu lub elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-537">Gets a value that indicates whether keyboard focus is anywhere within the element or child elements.</span></span></summary>
        <value><span data-ttu-id="77e71-538"><see langword="true" /> Jeśli fokus klawiatury jest ustawiony na element lub jego elementy podrzędne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-538"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-539">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-539">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-540">Zmiana wartości tej właściwości zwykle podnieść <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzeń, chyba że klasa pochodna przesłoniła <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> do pomijania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-540">Changes to the value of this property typically raise the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="77e71-541">Ta właściwość nie zostanie ustawiony bezpośrednio, ale można ustawić fokus na element przez wywołanie metody <xref:System.Windows.ContentElement.Focus%2A>, lub przez dokonywanie <xref:System.Windows.ContentElement.MoveFocus%2A> żądania.</span><span class="sxs-lookup"><span data-stu-id="77e71-541">You do not set this property directly, but you can set the focus to the element by calling <xref:System.Windows.ContentElement.Focus%2A>, or by making a <xref:System.Windows.ContentElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="77e71-542">Jedną z tych wywołań metody wywołuje może zmienić wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="77e71-542">Either of these method calls might change this property value.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-543">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-543">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-544">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-544">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="77e71-545">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-545">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-546">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-546">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-547">Występuje, gdy wartość <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-547">Occurs when the value of the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-548">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-548">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-549">Identyfikuje <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-549">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.ContentElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-550">Pobiera wartość wskazującą, czy przycisk myszy jest przechwytywany przez ten element.</span><span class="sxs-lookup"><span data-stu-id="77e71-550">Gets a value that indicates whether the mouse is captured by this element.</span></span></summary>
        <value><span data-ttu-id="77e71-551"><see langword="true" /> Jeśli element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-551"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-552">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-552">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-553">Stanu przechwytywanie myszy powiązany jest w trakcie operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-553">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-554">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-554">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-555">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-555">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="77e71-556">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-556">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-557">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-557">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="77e71-558">Poniższy przykład włącza stanu przechwytywanie myszy lub wyłącza zależnie od tego, czy przycisk myszy jest już przechwytywany przez element.</span><span class="sxs-lookup"><span data-stu-id="77e71-558">The following example turns the mouse capture state on or off based on whether the mouse is already captured by the element.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-559">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-559">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-560">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-560">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-561">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-561">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-562">Pobiera wartość określającą, czy przechwytywanie myszy są przechowywane przez ten element lub elementy podrzędne w jego drzewo elementów.</span><span class="sxs-lookup"><span data-stu-id="77e71-562">Gets a value that determines whether mouse capture is held by this element or by child elements in its element tree.</span></span></summary>
        <value><span data-ttu-id="77e71-563"><see langword="true" /> Jeśli ten element lub element zawarty ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-563"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-564">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-564">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-565">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-565">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-566">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-566">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="77e71-567">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-567">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-568">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-568">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-569">Występuje, gdy wartość <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> zmiany w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-569">Occurs when the value of the <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-570">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-570">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-571">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-571">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-572">Pobiera wartość wskazującą, czy pozycji wskaźnika myszy odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="77e71-572">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="77e71-573"><see langword="true" /> Jeśli wskaźnik myszy znajduje się nad ten sam wynik elementu jako hit test; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-573"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-574">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-574">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-575">W odróżnieniu od <xref:System.Windows.ContentElement.IsMouseOver%2A>, ta właściwość jest tylko `true` gdy wskaźnik myszy znajduje się nad elementem literału — podobnie jak w przypadku hit test.</span><span class="sxs-lookup"><span data-stu-id="77e71-575">Unlike <xref:System.Windows.ContentElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="77e71-576">Jeśli zamiast tego wskaźnik myszy znajduje się za pośrednictwem elementu podrzędnego, w szczególności za pośrednictwem elementy, które są częścią szablonu bardziej elementu i składania, ta właściwość będzie miał `false`.</span><span class="sxs-lookup"><span data-stu-id="77e71-576">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="77e71-577">Jeśli nie masz pewności, jak kontrolka jest złożone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który zdefiniujesz), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="77e71-577">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="77e71-578">W przypadku większości scenariuszy, w którym nie tworzenia formantów, należy użyć <xref:System.Windows.ContentElement.IsMouseOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="77e71-578">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="77e71-579">Jeśli przycisk myszy jest przechwytywany przez ten element, a ta właściwość jest `true` w czasie przechwytywania, ta właściwość będzie zwracać `true` dopóki przechwytywanie myszy zostanie utracone i wskaźnik nie znajduje się nad jej zakresem.</span><span class="sxs-lookup"><span data-stu-id="77e71-579">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-580">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-580">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-581">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-581">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="77e71-582">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-582">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-583">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-583">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-584">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-584">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-585">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-585">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-586">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-586">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.ContentElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-587">Pobiera wartość wskazującą, czy wskaźnik myszy znajduje się nad tym elementem (w tym elementy wizualne podrzędne lub jego składania kontroli).</span><span class="sxs-lookup"><span data-stu-id="77e71-587">Gets a value that indicates whether the mouse pointer is located over this element (including visual child elements, or its control compositing).</span></span></summary>
        <value><span data-ttu-id="77e71-588"><see langword="true" /> Jeśli wskaźnik myszy znajduje się za pośrednictwem elementu lub jego elementy podrzędne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-588"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-589">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-589">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-590">Chociaż analogiczne zdarzenie "IsMouseOverChanged" nie istnieje, są w kilku podobne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-590">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="77e71-591">Na przykład, można użyć <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, i <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="77e71-591">For example, you can use <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, and <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="77e71-592">Jeśli ten element przechwytuje mysz, ta właściwość pozostaje `true` dopóki przechwytywanie myszy zostanie utracona i opuszczeniu granic elementu przez wskaźnik myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-592">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-593">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-593">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-594">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-594">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseOverProperty>|  
|<span data-ttu-id="77e71-595">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-595">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-596">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-596">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="77e71-597">Poniższy przykład tworzy styl, który zawiera metoda ustawiająca właściwości, który zapewnia alternatywny zachowanie programu visual podczas <xref:System.Windows.Documents.Hyperlink> raporty <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-597">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> reports <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-598">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-598">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.ContentElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-599">Pobiera wartość wskazującą, czy pióro są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-599">Gets a value that indicates whether the stylus is captured to this element.</span></span></summary>
        <value><span data-ttu-id="77e71-600"><see langword="true" /> Jeśli element ma Przechwytywanie pióra; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-600"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-601">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-601">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-602">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-602">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-603">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-603">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-604">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-604">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-605">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-605">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="77e71-606">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-606">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-607">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-607">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureStylus" />
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-608">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-608">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-609">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-609">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-610">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-610">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-611">Pobiera wartość określającą, czy przechowywane przechwycenia pióra przez ten element, w tym elementy podrzędne i składania kontroli.</span><span class="sxs-lookup"><span data-stu-id="77e71-611">Gets a value that determines whether stylus capture is held by this element, including child elements and control compositing.</span></span></summary>
        <value><span data-ttu-id="77e71-612"><see langword="true" /> Jeśli przechwytywanie pióra są przechowywane w ramach tego elementu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-612"><see langword="true" /> if stylus capture is held within this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-613">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-613">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-614">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-614">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-615">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-615">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-616">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-616">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="77e71-617">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-617">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-618">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-618">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-619">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-619">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-620">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-620">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-621">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-621">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-622">Pobiera wartość wskazującą, czy pozycja Pióro odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="77e71-622">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="77e71-623"><see langword="true" /> gdy pióro znajduje się nad tym samym elemencie jako hit test; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-623"><see langword="true" /> if the stylus is over the same element as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-624">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-624">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-625">W odróżnieniu od <xref:System.Windows.ContentElement.IsStylusOver%2A>, ta właściwość jest tylko `true` , gdy pióro znajduje się nad elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-625">Unlike <xref:System.Windows.ContentElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="77e71-626">W przypadku pióro zamiast za pośrednictwem elementu podrzędnego lub elementy, które są częścią elementu bardziej składania, ta właściwość będzie miał `false`.</span><span class="sxs-lookup"><span data-stu-id="77e71-626">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing, this property will be `false`.</span></span>  
  
 <span data-ttu-id="77e71-627">Jeśli nie masz pewności, jak kontrolka jest złożone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który zdefiniujesz), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="77e71-627">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="77e71-628">W przypadku większości scenariuszy, w którym nie tworzenia formantów, należy użyć <xref:System.Windows.ContentElement.IsStylusOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="77e71-628">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="77e71-629">Jeśli ten element ma Przechwytywanie pióra, ta właściwość jest `true` w czasie przechwytywania, ta właściwość pozostaje `true` aż do przechwycenia pióra zostaną utracone i pióro nie znajduje się nad jej zakresem.</span><span class="sxs-lookup"><span data-stu-id="77e71-629">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="77e71-630">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-630">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-631">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-631">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-632">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-632">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-633">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-633">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="77e71-634">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-634">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-635">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-635">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-636">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-636">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-637">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-637">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-638">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-638">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.ContentElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-639">Pobiera wartość wskazującą, czy Pióro znajduje się nad tym elementem (w tym elementy podrzędne visual).</span><span class="sxs-lookup"><span data-stu-id="77e71-639">Gets a value that indicates whether the stylus is located over this element (including visual child elements).</span></span></summary>
        <value><span data-ttu-id="77e71-640"><see langword="true" /> gdy pióro znajduje się nad elementem i jego elementy podrzędne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-640"><see langword="true" /> if the stylus is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="77e71-641">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-641">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-642">Jeśli ten element ma Przechwytywanie pióra, ta właściwość pozostaje `true` aż do przechwycenia pióra zostaną utracone i wskaźnik znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="77e71-642">If this element has stylus capture, this property remains `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="77e71-643">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-643">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-644">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-644">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="77e71-645">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="77e71-645">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-646">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-646">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusOverProperty>|  
|<span data-ttu-id="77e71-647">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="77e71-647">Metadata properties set to `true`</span></span>|<span data-ttu-id="77e71-648">Brak</span><span class="sxs-lookup"><span data-stu-id="77e71-648">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-649">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-649">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-650">Występuje po naciśnięciu klawisza, gdy fokus znajduje się w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-650">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-651">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak polecenia i tekst.</span><span class="sxs-lookup"><span data-stu-id="77e71-651">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="77e71-652"><xref:System.Windows.ContentElement.KeyDown> Zdarzeń jest tekst niższego poziomu zdarzenie danych wejściowych, które mogą nie zachowywać się, zgodnie z oczekiwaniami na niektórych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="77e71-652">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="77e71-653">Jest to, ponieważ niektóre kontrolki zostały składania do sterowania lub obsługa klasy, zapewniająca wyższego poziomu wersję tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="77e71-653">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="77e71-654">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.KeyDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-654">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.KeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-655">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.KeyDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-655">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-656">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-656">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-657">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-657">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyDownEvent>|  
|<span data-ttu-id="77e71-658">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-658">Routing strategy</span></span>|<span data-ttu-id="77e71-659">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-659">Bubbling</span></span>|  
|<span data-ttu-id="77e71-660">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-660">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="77e71-661">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-661">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="77e71-662">Zastąp <xref:System.Windows.ContentElement.OnKeyDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-662">Override <xref:System.Windows.ContentElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-663">Identyfikuje <see cref="E:System.Windows.ContentElement.KeyDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-663">Identifies the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-664">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-664">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-665">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-665">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-666">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-666">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-667">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-667">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-668">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-668">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-669">Występuje po zwolnieniu klawisza gdy fokus znajduje się w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-669">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-670">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.KeyUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-670">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.ContentElement.KeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-671">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.KeyUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-671">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-672">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-672">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-673">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-673">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyUpEvent>|  
|<span data-ttu-id="77e71-674">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-674">Routing strategy</span></span>|<span data-ttu-id="77e71-675">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-675">Bubbling</span></span>|  
|<span data-ttu-id="77e71-676">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-676">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="77e71-677">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-677">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="77e71-678">Zastąp <xref:System.Windows.ContentElement.OnKeyUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-678">Override <xref:System.Windows.ContentElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-679">Identyfikuje <see cref="E:System.Windows.ContentElement.KeyUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-679">Identifies the <see cref="E:System.Windows.ContentElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-680">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-680">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-681">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-681">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-682">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-682">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-683">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-683">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-684">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-684">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-685">Występuje po utracie fokusu logicznego przez ten element.</span><span class="sxs-lookup"><span data-stu-id="77e71-685">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-686">Fokus logiczny różni się od fokus klawiatury, gdy fokus jest celowo wymuszone natychmiast za pomocą wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="77e71-686">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="77e71-687">W tym scenariuszu, pozostaje fokus klawiatury, gdzie jest i element gdzie <xref:System.Windows.ContentElement.Focus%2A> wywoływana jest metoda nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="77e71-687">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="77e71-688">Bardziej precyzyjne interpretacji to zdarzenie jest jej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsFocused%2A> właściwość elementu w trasie zmieni się z `true` do `false`.</span><span class="sxs-lookup"><span data-stu-id="77e71-688">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="77e71-689">Ponieważ to zdarzenie używa routingu propagacji, element, który traci fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-689">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="77e71-690">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który zdobyte fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-690">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-691">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-691">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-692">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-692">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostFocusEvent>|  
|<span data-ttu-id="77e71-693">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-693">Routing strategy</span></span>|<span data-ttu-id="77e71-694">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-694">Bubbling</span></span>|  
|<span data-ttu-id="77e71-695">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-695">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="77e71-696">Nie ma żadnego odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="77e71-696">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="77e71-697">Zastąp <xref:System.Windows.ContentElement.OnLostFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-697">Override <xref:System.Windows.ContentElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-698">Identyfikuje <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-698">Identifies the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-699">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-699">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-700">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-700">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-701">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-701">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-702">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-702">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-703">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-703">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-704">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-704">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-705">Ponieważ to zdarzenie używa routingu propagacji, element, który utraty fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-705">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="77e71-706">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-706">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="77e71-707">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.LostKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-707">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-708">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-708">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-709">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-709">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-710">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-710">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="77e71-711">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-711">Routing strategy</span></span>|<span data-ttu-id="77e71-712">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-712">Bubbling</span></span>|  
|<span data-ttu-id="77e71-713">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-713">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="77e71-714">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="77e71-714">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="77e71-715">Zastąp <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-715">Override <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-716">Identyfikuje <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-716">Identifies the <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-717">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-717">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-718">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-718">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-719">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-719">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-720">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-720">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-721">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-721">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-722">Występuje, gdy ten element utraci przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-722">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-723">Gdy element przechwytuje mysz, otrzymuje wejście myszy nawet wtedy, gdy wskaźnik myszy znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="77e71-723">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="77e71-724">Mysz są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-724">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="77e71-725">Ponieważ to zdarzenie używa routingu propagacji, element utraci Przechwytywanie może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-725">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="77e71-726">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="77e71-726">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="77e71-727">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.LostMouseCapture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-727">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-728">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostMouseCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-728">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-729">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-729">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-730">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-730">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="77e71-731">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-731">Routing strategy</span></span>|<span data-ttu-id="77e71-732">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-732">Bubbling</span></span>|  
|<span data-ttu-id="77e71-733">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-733">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="77e71-734">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="77e71-734">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="77e71-735">Zastąp <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-735">Override <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-736">Identyfikuje <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-736">Identifies the <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-737">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-737">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-738">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-738">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-739">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-739">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-740">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-740">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-741">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-741">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-742">Występuje, gdy ten element utraci Przechwytywanie pióra.</span><span class="sxs-lookup"><span data-stu-id="77e71-742">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-743">Po przechwyceniu pióra przez element, odbierze wejście pióra, nawet jeśli kursor znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="77e71-743">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="77e71-744">Pióro są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-744">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="77e71-745">Ponieważ to zdarzenie używa routingu propagacji, element, który traci fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-745">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="77e71-746">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-746">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="77e71-747">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.LostStylusCapture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-747">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-748">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostStylusCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-748">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-749">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-749">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-750">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-750">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="77e71-751">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-751">Routing strategy</span></span>|<span data-ttu-id="77e71-752">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-752">Bubbling</span></span>|  
|<span data-ttu-id="77e71-753">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-753">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-754">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="77e71-754">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="77e71-755">Zastąp <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-755">Override <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-756">Identyfikuje <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-756">Identifies the <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-757">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-757">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-758">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-758">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-759">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-759">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-760">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-760">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-761">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-761">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-762">Występuje, gdy ten element utraci Przechwytywanie touch.</span><span class="sxs-lookup"><span data-stu-id="77e71-762">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-763">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-763">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-764">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-764">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="77e71-765">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-765">Routing strategy</span></span>|<span data-ttu-id="77e71-766">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-766">Bubbling</span></span>|  
|<span data-ttu-id="77e71-767">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-767">Delegate</span></span>|<span data-ttu-id="77e71-768"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="77e71-768"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="77e71-769">Zastąp <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-769">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-770">Identyfikuje <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-770">Identifies the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-771">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-771">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-772">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-772">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-773">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-773">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-774"><xref:System.Windows.ContentElement.MouseDown> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.ContentElement.MouseLeftButtonDown> lub <xref:System.Windows.ContentElement.MouseRightButtonDown>, które odpowiadają naciśnij jednego z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="77e71-774">The <xref:System.Windows.ContentElement.MouseDown> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="77e71-775"><xref:System.Windows.ContentElement.MouseLeftButtonDown> i <xref:System.Windows.ContentElement.MouseRightButtonDown> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-775"><xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="77e71-776">Zobacz uwagi, na <xref:System.Windows.ContentElement.MouseLeftButtonDown> lub <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-776">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="77e71-777">Kilka <xref:System.Windows.ContentElement> pochodnych klas, które mają podobne do kontroli zachowania, na przykład <xref:System.Windows.Documents.Hyperlink>, może być zarezerwowanymi obsługę klasy dla zdarzenia przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-777">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="77e71-778">Lewy przycisk myszy wciśnięty zdarzeń jest najbardziej prawdopodobne zdarzenie, aby mieć klasę, obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="77e71-778">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="77e71-779">Klasy obsługi często oznacza bazowego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-779">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="77e71-780">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="77e71-780">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="77e71-781">Wszystkie inne klasy lub wystąpienia programów obsługi, które są dołączone do elementów w propagacji kierunku ku główny w drzewie interfejsu użytkownika również nie zazwyczaj są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-781">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="77e71-782">Możesz rozwiązać ten problem, który jest opisany w poprzednim ważne i nadal otrzymywać <xref:System.Windows.ContentElement.MouseDown> zdarzeń związanych z lewego przycisku myszy w dół do zdarzenia w klasie pochodnej, która ma klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="77e71-782">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="77e71-783">Dołącz programy obsługi dla <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="77e71-783">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="77e71-784">Zwróć uwagę, że ponieważ jest to zdarzenie (wersja zapoznawcza), trasy rozpoczyna się w katalogu głównym i tunele do formantu.</span><span class="sxs-lookup"><span data-stu-id="77e71-784">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="77e71-785">Rejestrowanie programu obsługi w kontrolce proceduralnie przez wywołanie metody <xref:System.Windows.ContentElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-785">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-786">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-786">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-787">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-787">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseDownEvent>|  
|<span data-ttu-id="77e71-788">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-788">Routing strategy</span></span>|<span data-ttu-id="77e71-789">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-789">Bubbling</span></span>|  
|<span data-ttu-id="77e71-790">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-790">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-791">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-791">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="77e71-792">Zastąp <xref:System.Windows.ContentElement.OnMouseDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-792">Override <xref:System.Windows.ContentElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-793">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-793">Identifies the <see cref="E:System.Windows.ContentElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-794">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-794">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-795">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-795">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-796">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-796">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-797">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-797">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-798">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-798">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-799">Występuje po umieszczeniu wskaźnika myszy granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-799">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-800"><xref:System.Windows.ContentElement.MouseEnter> jest [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="77e71-800"><xref:System.Windows.ContentElement.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="77e71-801">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-801">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="77e71-802">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="77e71-802">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="77e71-803">Mimo że <xref:System.Windows.ContentElement.MouseEnter> ścieżki po wejściu wskaźnika myszy w granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsMouseOver%2A> wartość właściwości została zmieniona z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-803">Although <xref:System.Windows.ContentElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="77e71-804">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseEnter> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-804">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-805">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-805">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-806">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-806">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-807">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-807">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseEnterEvent>|  
|<span data-ttu-id="77e71-808">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-808">Routing strategy</span></span>|<span data-ttu-id="77e71-809">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-809">Direct</span></span>|  
|<span data-ttu-id="77e71-810">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-810">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="77e71-811">Zastąp <xref:System.Windows.ContentElement.OnMouseEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-811">Override <xref:System.Windows.ContentElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-812">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-812">Identifies the <see cref="E:System.Windows.ContentElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-813">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-813">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-814">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-814">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-815">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-815">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-816">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-816">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-817">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-817">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-818">Występuje po opuszczeniu przez wskaźnik myszy granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-818">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-819"><xref:System.Windows.ContentElement.MouseLeave> jest [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="77e71-819"><xref:System.Windows.ContentElement.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="77e71-820">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-820">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="77e71-821">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="77e71-821">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="77e71-822">Mimo że <xref:System.Windows.ContentElement.MouseLeave> ścieżki, gdy wskaźnik myszy opuszcza elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsMouseOver%2A> wartość właściwości została zmieniona z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-822">Although <xref:System.Windows.ContentElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="77e71-823">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseLeave> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-823">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-824">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-824">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-825">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-825">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-826">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-826">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeaveEvent>|  
|<span data-ttu-id="77e71-827">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-827">Routing strategy</span></span>|<span data-ttu-id="77e71-828">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-828">Direct</span></span>|  
|<span data-ttu-id="77e71-829">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-829">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="77e71-830">Zastąp <xref:System.Windows.ContentElement.OnMouseLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-830">Override <xref:System.Windows.ContentElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-831">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-831">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-832">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-832">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-833">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-833">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-834">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-834">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-835">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-835">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-836">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-836">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-837">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-837">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-838">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasy przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-838">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="77e71-839">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-839">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="77e71-840">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-840">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="77e71-841">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-841">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="77e71-842">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="77e71-842">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="77e71-843">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-843">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="77e71-844">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-844">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="77e71-845">Kilka <xref:System.Windows.ContentElement> pochodnych klas, które mają podobne do kontroli zachowania, na przykład <xref:System.Windows.Documents.Hyperlink>, może być zarezerwowanymi obsługę klasy dla zdarzenia przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-845">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="77e71-846">Lewy przycisk myszy wciśnięty zdarzeń jest najbardziej prawdopodobne zdarzenie, aby mieć klasę, obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="77e71-846">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="77e71-847">Klasy obsługi często oznacza bazowego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-847">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="77e71-848">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="77e71-848">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="77e71-849">Wszystkie inne klasy lub wystąpienia programów obsługi, które są dołączone do elementów w propagacji kierunku ku główny w drzewie interfejsu użytkownika również nie zazwyczaj są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-849">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="77e71-850">Możesz rozwiązać ten problem, który jest opisany w poprzednim ważne i nadal otrzymywać <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzeń związanych z lewego przycisku myszy w dół do zdarzenia w klasie pochodnej, która ma klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="77e71-850">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="77e71-851">Dołącz programy obsługi dla <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="77e71-851">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="77e71-852">Zwróć uwagę, że ponieważ jest to zdarzenie (wersja zapoznawcza), trasy rozpoczyna się w katalogu głównym i tunele do formantu.</span><span class="sxs-lookup"><span data-stu-id="77e71-852">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="77e71-853">Rejestrowanie programu obsługi w kontrolce proceduralnie przez wywołanie metody <xref:System.Windows.ContentElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-853">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-854">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-854">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-855">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-855">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="77e71-856">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-856">Routing strategy</span></span>|<span data-ttu-id="77e71-857">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-857">Direct</span></span>|  
|<span data-ttu-id="77e71-858">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-858">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-859">Zastąp <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-859">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-860">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-860">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-861">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-861">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-862">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-862">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-863">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-863">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-864">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-864">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-865">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-865">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-866">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-866">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-867">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasy przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-867">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="77e71-868">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-868">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="77e71-869">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-869">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="77e71-870">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-870">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="77e71-871">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="77e71-871">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="77e71-872">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-872">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="77e71-873">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-873">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-874">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-874">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-875">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-875">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="77e71-876">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-876">Routing strategy</span></span>|<span data-ttu-id="77e71-877">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-877">Direct</span></span>|  
|<span data-ttu-id="77e71-878">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-878">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-879">Zastąp <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-879">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-880">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-880">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-881">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-881">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-882">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-882">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-883">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-883">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-884">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-884">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-885">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-885">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-886">Występuje, gdy wskaźnik myszy porusza się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-886">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-887">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-887">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-888">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-888">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-889">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-889">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-890">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-890">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseMoveEvent>|  
|<span data-ttu-id="77e71-891">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-891">Routing strategy</span></span>|<span data-ttu-id="77e71-892">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-892">Bubbling</span></span>|  
|<span data-ttu-id="77e71-893">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-893">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="77e71-894">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="77e71-894">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="77e71-895">Zastąp <xref:System.Windows.ContentElement.OnMouseMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-895">Override <xref:System.Windows.ContentElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-896">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-896">Identifies the <see cref="E:System.Windows.ContentElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-897">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-897">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-898">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-898">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-899">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-899">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-900">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-900">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-901">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-901">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-902">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-902">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-903">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasy przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-903">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="77e71-904">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-904">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="77e71-905">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-905">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="77e71-906">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-906">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="77e71-907">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="77e71-907">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="77e71-908">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-908">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="77e71-909">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-909">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="77e71-910">Zdarzenia myszy w prawy przycisk często mają natywnej obsługi w scenariuszach aplikacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-910">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="77e71-911">Na przykład prawym przyciskiem myszy w dół, może wyświetlić menu kontekstowe.</span><span class="sxs-lookup"><span data-stu-id="77e71-911">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="77e71-912">Zobacz [ContextMenu — Przegląd](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-912">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-913">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-913">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-914">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-914">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="77e71-915">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-915">Routing strategy</span></span>|<span data-ttu-id="77e71-916">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-916">Direct</span></span>|  
|<span data-ttu-id="77e71-917">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-917">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-918">Zastąp <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-918">Override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-919">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-919">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-920">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-920">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-921">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-921">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-922">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-922">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-923">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-923">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-924">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-924">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-925">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-925">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-926">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasy przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-926">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="77e71-927">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-927">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="77e71-928">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-928">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="77e71-929">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-929">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="77e71-930">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="77e71-930">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="77e71-931">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-931">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="77e71-932">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-932">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-933">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-933">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-934">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-934">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="77e71-935">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-935">Routing strategy</span></span>|<span data-ttu-id="77e71-936">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-936">Direct</span></span>|  
|<span data-ttu-id="77e71-937">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-937">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-938">Zastąp <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-938">Override <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-939">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-939">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-940">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-940">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-941">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-941">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-942">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-942">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-943">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-943">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-944">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-944">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-945">Występuje po zwolnieniu dowolnego przycisku myszy nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-945">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-946">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-946">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-947">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-947">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-948"><xref:System.Windows.ContentElement.MouseUp> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.ContentElement.MouseLeftButtonUp> lub <xref:System.Windows.ContentElement.MouseRightButtonUp>, które odpowiadają wersji jednej z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="77e71-948">The <xref:System.Windows.ContentElement.MouseUp> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="77e71-949"><xref:System.Windows.ContentElement.MouseLeftButtonUp> i <xref:System.Windows.ContentElement.MouseRightButtonUp> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-949"><xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="77e71-950">Zobacz uwagi, na <xref:System.Windows.ContentElement.MouseLeftButtonUp> lub <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-950">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-951">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-951">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-952">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-952">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseUpEvent>|  
|<span data-ttu-id="77e71-953">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-953">Routing strategy</span></span>|<span data-ttu-id="77e71-954">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-954">Bubbling</span></span>|  
|<span data-ttu-id="77e71-955">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-955">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-956">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-956">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="77e71-957">Zastąp <xref:System.Windows.ContentElement.OnMouseUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-957">Override <xref:System.Windows.ContentElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-958">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-958">Identifies the <see cref="E:System.Windows.ContentElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-959">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-959">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-960">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-960">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-961">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-961">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-962">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-962">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-963">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-963">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-964">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-964">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-965">Zespół lub myszy przechwytywania pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony <xref:System.Windows.ContentElement.MouseWheel> zdarzeń z elementu wąsko zdefiniowany lub przechwycone, wskaźnik myszy może mieć w rzeczywistości za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-965">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.ContentElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="77e71-966">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseWheel> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-966">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseWheel> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-967">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseWheel> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-967">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-968">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-968">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-969">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-969">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseWheelEvent>|  
|<span data-ttu-id="77e71-970">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-970">Routing strategy</span></span>|<span data-ttu-id="77e71-971">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-971">Bubbling</span></span>|  
|<span data-ttu-id="77e71-972">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-972">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="77e71-973">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="77e71-973">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="77e71-974">Zastąp <xref:System.Windows.ContentElement.OnMouseWheel%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-974">Override <xref:System.Windows.ContentElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-975">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseWheel" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-975">Identifies the <see cref="E:System.Windows.ContentElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-976">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-976">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-977">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-977">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-978">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-978">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-979">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-979">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-980">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-980">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="contentElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="77e71-981">Żądanie przechodzenia, który zawiera właściwość, która wskazuje trybie przechodzenia w istniejących kolejność tabulacji, lub kierunku, aby przenieść wizualnie.</span><span class="sxs-lookup"><span data-stu-id="77e71-981">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="77e71-982">Próbuje przenieść fokus z tego elementu do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-982">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="77e71-983">Kierunek, aby przenieść fokus jest określona przez kierunku orientacji, jest interpretowany w ramach organizacji visual element nadrzędny tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-983">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="77e71-984"><see langword="true" /> Jeśli żądana przechodzenie została wykonana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-984"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-985">Upewnij się, że wartość zwracana przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="77e71-985">Make sure you check the return value of this method.</span></span> <span data-ttu-id="77e71-986">Zwracana wartość wynosząca `false` może zostać zwrócona, jeśli podczas przechodzenia działa w tabulatora, który jest definiowany przez kompozycji formantu, a żądania przechodzenia nie zażądał opakowywania.</span><span class="sxs-lookup"><span data-stu-id="77e71-986">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contentElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-987">Zwraca swoiste dla klas <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacje infrastruktury Windows Presentation Foundation (WPF).</span><span class="sxs-lookup"><span data-stu-id="77e71-987">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.</span></span></summary>
        <returns><span data-ttu-id="77e71-988">Konkretny typ <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-988">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="77e71-989">Uwagi dotyczące obiektów dziedziczących</span><span class="sxs-lookup"><span data-stu-id="77e71-989">Notes to inheritors</span></span>

<span data-ttu-id="77e71-990">Implementacja tej metody jest zwykle wywołanie konstruktora określonego <xref:System.Windows.Automation.Peers.AutomationPeer> implementacji i zwracanie go jako wartość zwracaną.</span><span class="sxs-lookup"><span data-stu-id="77e71-990">The implementation of this method is typically to call the constructor of a specific <xref:System.Windows.Automation.Peers.AutomationPeer> implementation, and return it as the return value.</span></span>  
  
 <span data-ttu-id="77e71-991">Wszystkie <xref:System.Windows.ContentElement> klas pochodnych należy zaimplementować tę metodę w celu zapewnienia ich własnych określonych <xref:System.Windows.Automation.Peers.AutomationPeer> implementacji w infrastrukturze programu WPF.</span><span class="sxs-lookup"><span data-stu-id="77e71-991">All <xref:System.Windows.ContentElement> derived classes should implement this method in order to provide their own specific <xref:System.Windows.Automation.Peers.AutomationPeer> implementations to the WPF infrastructure.</span></span> <span data-ttu-id="77e71-992">Szczegółowe informacje na temat implementowania tego wzorca, <xref:System.Windows.Automation.Peers.AutomationPeer>.</span><span class="sxs-lookup"><span data-stu-id="77e71-992">For details on implementing this pattern, see <xref:System.Windows.Automation.Peers.AutomationPeer>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-993"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-993">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-994">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-994">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-995">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-995">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-996">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-996">This method has no default implementation.</span></span> <span data-ttu-id="77e71-997">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-997">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-998">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-998">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-999">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-999">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1000">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1000">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1001">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1001">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1002">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1002">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1003">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1003">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1004">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1004">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1005"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1005">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1006">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragLeave" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1006">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1007">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1007">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1008">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1008">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1009">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1009">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1010">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1010">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1011">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1011">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1012">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1012">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1013">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1013">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1014">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1014">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1015">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1015">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1016">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1016">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1017"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1017">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1018">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragOver" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1018">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1019">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1019">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1020">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1020">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1021">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1021">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1022">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1022">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1023">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1023">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1024">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1024">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1025">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1025">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1026">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1026">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1027">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1027">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1028">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1028">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1029"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1029">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1030">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1030">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1031">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1031">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1032">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1032">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1033">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1033">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1034">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1034">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1035">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1035">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1036">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1036">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1037">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1037">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1038">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1038">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1039">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1039">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1040">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1040">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1041"><see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1041">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1042">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.GiveFeedback" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1042">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1043">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1043">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1044">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1044">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1045">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1045">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1046">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1046">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1047">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1047">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1048">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1048">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1049">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1049">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1050">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1050">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1051">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1051">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1052">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1052">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1053">Element <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1053">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="77e71-1054">Te dane zdarzeń musi zawierać identyfikator <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1054">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="77e71-1055">Wywołuje <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzenia trasowanego przy użyciu podanych danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1055">Raises the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1056">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, która wywołuje zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1056">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="77e71-1057">To na\* implementacja metody jest przeznaczona do podniesienia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby wygenerować zdarzenie po <xref:System.Windows.ContentElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="77e71-1057">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="77e71-1058"><xref:System.Windows.ContentElement.OnGotFocus%2A> Implementacji różni się od niektórych innych Windows Presentation Foundation (WPF) na\* implementacji, które tylko zapewniają wygodny sposób, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1058">The <xref:System.Windows.ContentElement.OnGotFocus%2A> implementation differs from some other Windows Presentation Foundation (WPF) On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="77e71-1059">Uwagi dotyczące obiektów dziedziczących</span><span class="sxs-lookup"><span data-stu-id="77e71-1059">Notes to inheritors</span></span>

<span data-ttu-id="77e71-1060">Jeśli nie masz zamierzone i nietypowe potrzeby nie zgłaszać zdarzenia fokusu, upewnij się, że Twoja implementacja wywołuje implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="77e71-1060">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="77e71-1061">W przeciwnym razie <xref:System.Windows.ContentElement.GotFocus> zdarzenie nie jest wywoływane podczas operacji typowy użytkownik, które zwykle ustawić fokus na ten element.</span><span class="sxs-lookup"><span data-stu-id="77e71-1061">Otherwise, the <xref:System.Windows.ContentElement.GotFocus> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="77e71-1062">Jeśli nie zamierzasz swoje element ma być focusable, użytkownik może uniemożliwić elementu focusable, ustawiając <xref:System.Windows.ContentElement.Focusable> do `false`.</span><span class="sxs-lookup"><span data-stu-id="77e71-1062">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <xref:System.Windows.ContentElement.Focusable> to `false`.</span></span>
<span data-ttu-id="77e71-1063">Należy pamiętać, że domyślnie <xref:System.Windows.ContentElement.Focusable> nie jest focusable, w związku z tym ustawienie <xref:System.Windows.ContentElement.Focusable> celowo może nie być konieczne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1063">Note that by default a <xref:System.Windows.ContentElement.Focusable> is not focusable, therefore setting <xref:System.Windows.ContentElement.Focusable> deliberately might not be necessary.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1064"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1064">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1065">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1065">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1066">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1066">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1067">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1067">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1068">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1068">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1069">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1069">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1070">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1070">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1071">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1071">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1072">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1072">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1073">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1073">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1074">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1074">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1075">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1075">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1076"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1076">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1077">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1077">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1078">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1078">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1079">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1079">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1080">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1080">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1081">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1081">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1082">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1082">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1083">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1083">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1084">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1084">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1085">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1085">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1086">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1086">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1087">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1087">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1088"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1088">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1089">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1089">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1090">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1090">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1091">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1091">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1092">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1092">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1093">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1093">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1094">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1094">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1095">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1095">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1096">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1096">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1097">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1097">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1098">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1098">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1099">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1099">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1100">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1100">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1101">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> zdarzenia trasowane, które występuje, gdy touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-1101">Provides class handling for the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1102"><xref:System.Windows.ContentElement.OnGotTouchCapture%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1102">The <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="77e71-1103">Zastąp <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.GotTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1103">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.GotTouchCapture> event.</span></span> <span data-ttu-id="77e71-1104">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1104">Be sure to call the base class' <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1105"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1105">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1106">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1106">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="77e71-1107">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1107">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1108">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> zmiany właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="77e71-1108">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="77e71-1109">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="77e71-1109">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="77e71-1110">A następnie <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1110">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="77e71-1111">Należy zauważyć, że <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1111">Notice that the  <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="77e71-1112">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1112">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="77e71-1113">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1113">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1114">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1114">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1115">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1115">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1116">Element <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1116">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1117">Wywoływane tuż przed <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zdarzenie jest wywoływane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="77e71-1117">Invoked just before the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="77e71-1118">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1118">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1119">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="77e71-1119">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="77e71-1120">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="77e71-1120">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="77e71-1121">A następnie <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1121">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="77e71-1122">Należy zauważyć, że <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1122">Notice that the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="77e71-1123">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1123">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="77e71-1124">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1124">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1125">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1125">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1126">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1126">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1127"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1127">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1128">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1128">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="77e71-1129">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1129">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1130">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsMouseCaptured%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="77e71-1130">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="77e71-1131">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="77e71-1131">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="77e71-1132">A następnie <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1132">Then the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="77e71-1133">Należy zauważyć, że <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1133">Notice that the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="77e71-1134">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1134">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="77e71-1135">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1135">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1136">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1136">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1137">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1137">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1138">Element <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1138">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1139">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1139">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="77e71-1140">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1140">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="77e71-1141">Tej metody wirtualnej jest wywoływane, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="77e71-1141">This virtual method is raised when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="77e71-1142">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="77e71-1142">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="77e71-1143">A następnie <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1143">Then the <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="77e71-1144">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane; W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1144">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="77e71-1145">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1145">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1146">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1146">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1147">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1147">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1148"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1148">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1149">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1149">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="77e71-1150">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1150">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1151">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="77e71-1151">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="77e71-1152">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="77e71-1152">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="77e71-1153">A następnie <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1153">Then the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="77e71-1154">Należy zauważyć, że <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1154">Notice that the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="77e71-1155">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1155">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="77e71-1156">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1156">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1157">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1157">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1158">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1158">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1159">Element <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1159">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1160">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1160">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="77e71-1161">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1161">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1162">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusCaptured%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="77e71-1162">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="77e71-1163">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="77e71-1163">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="77e71-1164">A następnie <xref:System.Windows.ContentElement.IsStylusCapturedChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1164">Then the <xref:System.Windows.ContentElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="77e71-1165">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1165">Notice that the event is not a routed event.</span></span> <span data-ttu-id="77e71-1166">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1166">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="77e71-1167">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1167">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1168">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1168">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1169">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1169">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1170"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1170">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1171">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1171">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="77e71-1172">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1172">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1173">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="77e71-1173">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="77e71-1174">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="77e71-1174">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="77e71-1175">A następnie <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1175">Then the <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="77e71-1176">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1176">Notice that the event is not a routed event.</span></span> <span data-ttu-id="77e71-1177">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1177">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="77e71-1178">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1178">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1179">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1179">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1180">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1180">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1181"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1181">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1182">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1182">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="77e71-1183">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1183">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1184">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="77e71-1184">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="77e71-1185">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="77e71-1185">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="77e71-1186">A następnie <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1186">Then the <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="77e71-1187">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1187">Notice that the event is not a routed event.</span></span> <span data-ttu-id="77e71-1188">W związku z tym nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1188">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="77e71-1189">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1189">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1190">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1190">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1191">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1191">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1192"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1192">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1193">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1193">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1194">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1194">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1195">Naciśnięć klawiszy są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="77e71-1195">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="77e71-1196">Inne funkcje programowania, które zależą od naciśnięć klawiszy, na przykład powiązania danych wejściowych i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest ona uwidoczniona jako ogólne naciśnięcia klawisza.</span><span class="sxs-lookup"><span data-stu-id="77e71-1196">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="77e71-1197">Te dane wejściowe funkcji systemu oznaczyć zdarzenia jako obsłużony, następnie <xref:System.Windows.ContentElement.OnKeyDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="77e71-1197">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="77e71-1198">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1198">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1199">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1199">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1200">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1200">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1201">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1201">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1202">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1202">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1203">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1203">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1204">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1204">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1205">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1205">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1206">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1206">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1207"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1207">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1208">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1208">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1209">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1209">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1210">Naciśnięć klawiszy są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="77e71-1210">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="77e71-1211">Inne funkcje programowania, które zależą od naciśnięć klawiszy, na przykład powiązania danych wejściowych i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest ona uwidoczniona jako ogólne naciśnięcia klawisza.</span><span class="sxs-lookup"><span data-stu-id="77e71-1211">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="77e71-1212">Te dane wejściowe funkcji systemu oznaczyć zdarzenia jako obsłużony, następnie <xref:System.Windows.ContentElement.OnKeyUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="77e71-1212">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="77e71-1213">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1213">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1214">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1214">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1215">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1215">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1216">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1216">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1217">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1217">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1218">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1218">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1219">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1219">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1220">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1220">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1221">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1221">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1222">Element <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1222">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="77e71-1223">Te dane zdarzeń musi zawierać identyfikator <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1223">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="77e71-1224">Wywołuje <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzenia trasowanego przy użyciu dane zdarzenia, które są dostarczane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1224">Raises the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1225">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, która wywołuje zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1225">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="77e71-1226">To na\* implementacja metody jest przeznaczona do podniesienia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby wygenerować zdarzenie po <xref:System.Windows.ContentElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="77e71-1226">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="77e71-1227">Ta implementacja różni się od niektórych innych Windows Presentation Foundation (WPF) na\* implementacji, które tylko zapewniają wygodny sposób, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1227">This implementation differs from some other Windows Presentation Foundation (WPF) On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="77e71-1228">Jeśli nie masz zamierzone i nietypowe potrzeby nie zgłaszać zdarzenia fokusu, upewnij się, że Twoja implementacja wywołuje implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="77e71-1228">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="77e71-1229">W przeciwnym razie <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzenie nie jest wywoływane podczas operacji typowy użytkownik, które zwykle ustawić fokus na ten element.</span><span class="sxs-lookup"><span data-stu-id="77e71-1229">Otherwise, the <see cref="E:System.Windows.ContentElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="77e71-1230">Jeśli nie zamierzasz swoje element ma być focusable, użytkownik może uniemożliwić elementu focusable, ustawiając <see cref="P:System.Windows.ContentElement.Focusable" /> do <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-1230">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1231"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1231">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1232">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1232">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1233">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1233">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1234">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1234">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1235">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1235">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1236">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1236">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1237">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1237">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1238">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1238">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1239">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1239">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1240">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1240">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1241">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1241">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1242">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1242">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1243"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1243">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1244">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1244">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1245">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1245">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1246">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1246">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1247">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1247">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1248">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1248">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1249">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1249">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1250">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1250">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1251">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1251">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1252">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1252">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1253">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1253">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1254">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1254">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1255"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1255">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1256">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1256">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1257">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1257">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1258">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1258">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1259">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1259">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1260">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1260">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1261">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1261">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1262">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1262">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1263">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1263">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1264">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1264">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1265">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1265">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1266">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1266">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1267">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1267">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1268">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> zdarzenie trasowane, który występuje, gdy ten element utraci Przechwytywanie touch.</span><span class="sxs-lookup"><span data-stu-id="77e71-1268">Provides class handling for the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1269"><xref:System.Windows.ContentElement.OnLostTouchCapture%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1269">The <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="77e71-1270">Zastąp <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.LostTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1270">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.LostTouchCapture> event.</span></span> <span data-ttu-id="77e71-1271">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1271">Be sure to call the base class' <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1272"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1272">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1273">Te dane zdarzeń raporty szczegółowe informacje o przycisku myszy, który został naciśnięty i obsługiwanego stanu.</span><span class="sxs-lookup"><span data-stu-id="77e71-1273">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="77e71-1274">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1274">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1275">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1275">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1276">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="77e71-1276">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="77e71-1277">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1277">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="77e71-1278">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.ContentElement.OnMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="77e71-1278">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="77e71-1279">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.ContentElement.MouseLeftButtonDown> i <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1279">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="77e71-1280">Jedną z tych zdarzeń mogą być wywoływane na elemencie odbieranie po <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="77e71-1280">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="77e71-1281">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1281">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="77e71-1282">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1282">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="77e71-1283">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-1283">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="77e71-1284">Obsługa <xref:System.Windows.ContentElement.OnMouseDown%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy szczegółów akcji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1284">By handling <xref:System.Windows.ContentElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="77e71-1285">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1285">This behavior might be unwanted; therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="77e71-1286">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na\* metody; należy wziąć pod uwagę, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1286">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="77e71-1287">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1287">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1288">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1288">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1289">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1289">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1290">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1290">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1291">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1291">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1292">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1292">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1293">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1293">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1294">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1294">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1295">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1295">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1296"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1296">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1297">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1297">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="77e71-1298">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1298">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1299">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1299">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1300">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1300">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1301">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1301">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="77e71-1302">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1302">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1303">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego, za pomocą strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1303">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="77e71-1304">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1304">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1305"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1305">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1306">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1306">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="77e71-1307">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1307">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1308">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1308">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1309">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1309">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1310">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1310">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="77e71-1311">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1311">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1312">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego, za pomocą strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1312">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="77e71-1313">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1313">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1314"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1314">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1315">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1315">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="77e71-1316">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> trasowane zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1316">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="77e71-1317">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1317">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1318"><xref:System.Windows.ContentElement.MouseLeftButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="77e71-1318">The <xref:System.Windows.ContentElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="77e71-1319"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1319"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="77e71-1320">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1320">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="77e71-1321">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1321">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="77e71-1322">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1322">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="77e71-1323">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="77e71-1323">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="77e71-1324">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1324">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77e71-1325">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1325">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="77e71-1326">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1326">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="77e71-1327">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="77e71-1327">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="77e71-1328">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1328">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="77e71-1329">Na przykład może pochodzić z <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania implementację podstawową; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1329">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1330"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1330">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1331">Dane zdarzenia raportów zwolnienie lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1331">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="77e71-1332">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1332">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1333">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1333">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1334"><xref:System.Windows.ContentElement.MouseLeftButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="77e71-1334">The <xref:System.Windows.ContentElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="77e71-1335"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1335"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="77e71-1336">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseLeftButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1336">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="77e71-1337">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1337">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="77e71-1338">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1338">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="77e71-1339">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="77e71-1339">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="77e71-1340">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1340">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77e71-1341">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1341">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1342"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1342">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1343">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1343">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1344">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1344">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1345">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1345">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1346">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1346">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1347">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1347">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1348">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1348">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1349">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1349">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1350">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1350">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1351">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1351">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1352">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1352">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1353">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1353">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1354"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1354">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1355">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1355">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="77e71-1356">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1356">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1357">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1357">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1358"><xref:System.Windows.ContentElement.MouseRightButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="77e71-1358">The <xref:System.Windows.ContentElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="77e71-1359"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1359"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="77e71-1360">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseRightButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1360">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="77e71-1361">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1361">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="77e71-1362">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1362">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="77e71-1363">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="77e71-1363">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="77e71-1364">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1364">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77e71-1365">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1365">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="77e71-1366">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1366">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="77e71-1367">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="77e71-1367">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="77e71-1368">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1368">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="77e71-1369">Na przykład może pochodzić z <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> w klasie pochodnej bez wywoływania bazy; jednak to zastąpienie powoduje wyłączenie kontekstu menu usługi na kontrolki, które są dostępne w ramach programu <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1369">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1370"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1370">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1371">Dane zdarzenia raportów zwolnienie prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1371">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="77e71-1372">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1372">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1373">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1373">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1374"><xref:System.Windows.ContentElement.MouseRightButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="77e71-1374">The <xref:System.Windows.ContentElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="77e71-1375"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1375"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="77e71-1376">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseRightButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1376">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="77e71-1377">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1377">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="77e71-1378">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1378">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="77e71-1379">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="77e71-1379">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="77e71-1380">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1380">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77e71-1381">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1381">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1382"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1382">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1383">Dane zdarzenia raportów, czy przycisk myszy został wydany.</span><span class="sxs-lookup"><span data-stu-id="77e71-1383">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="77e71-1384">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1384">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1385">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1385">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1386">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="77e71-1386">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="77e71-1387">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1387">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="77e71-1388">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.ContentElement.OnMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="77e71-1388">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="77e71-1389">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.ContentElement.MouseLeftButtonUp> i <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1389">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="77e71-1390">Jedną z tych zdarzeń może zostać wywołane na odbieranie elementu po <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="77e71-1390">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="77e71-1391">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1391">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="77e71-1392">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1392">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="77e71-1393">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-1393">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="77e71-1394">Obsługa <xref:System.Windows.ContentElement.OnMouseUp%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy się akcje.</span><span class="sxs-lookup"><span data-stu-id="77e71-1394">By handling <xref:System.Windows.ContentElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="77e71-1395">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1395">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="77e71-1396">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na\* metody; należy wziąć pod uwagę, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1396">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="77e71-1397">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1397">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1398">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1398">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1399">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1399">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1400">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1400">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1401">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1401">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1402">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1402">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1403">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1403">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1404">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1404">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1405">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1405">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1406"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1406">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1407">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1407">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1408">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1408">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1409">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1409">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1410">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1410">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1411">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1411">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1412">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1412">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1413">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1413">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1414">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1414">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1415">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1415">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1416">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1416">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1417">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1417">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1418"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1418">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1419">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1419">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1420">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1420">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1421">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1421">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1422">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1422">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1423">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1423">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1424">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1424">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1425">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1425">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1426">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1426">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1427">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1427">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1428">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1428">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1429">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1429">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1430">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1430">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1431"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1431">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1432">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1432">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1433">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1433">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1434">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1434">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1435">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1435">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1436">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1436">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1437">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1437">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1438">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1438">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1439">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1439">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1440">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1440">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1441">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1441">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1442">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1442">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1443">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1443">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1444"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1444">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1445">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1445">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1446">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1446">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1447">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1447">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1448">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1448">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1449">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1449">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1450">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1450">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1451">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1451">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1452">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1452">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1453">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1453">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1454">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1454">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1455">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1455">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1456">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1456">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1457"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1457">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1458">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDrop" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1458">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1459">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1459">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1460">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1460">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1461">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1461">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1462">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1462">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1463">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1463">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1464">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1464">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1465">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1465">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1466">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1466">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1467">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1467">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1468">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1468">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1469">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1469">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1470"><see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1470">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1471">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1471">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1472">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1472">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1473">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1473">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1474">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1474">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1475">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1475">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1476">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1476">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1477">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1477">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1478">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1478">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1479">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1479">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1480">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1480">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1481">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1481">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1482">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1482">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1483"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1483">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1484">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1484">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1485">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1485">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1486">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1486">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1487">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1487">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1488">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1488">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1489">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1489">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1490">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1490">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1491">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1491">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1492">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1492">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1493">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1493">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1494">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1494">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1495">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1495">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1496"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1496">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1497">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1497">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1498">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1498">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1499">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1499">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1500">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1500">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1501">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1501">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1502">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1502">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1503">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1503">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1504">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1504">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1505">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1505">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1506">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1506">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1507">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1507">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1508">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1508">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1509"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1509">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1510">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1510">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1511">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1511">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1512">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1512">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1513">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1513">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1514">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1514">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1515">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1515">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1516">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1516">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1517">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1517">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1518">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1518">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1519">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1519">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1520">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1520">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1521">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1521">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1522"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1522">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1523">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1523">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1524">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1524">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1525">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1525">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1526">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1526">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1527">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1527">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1528">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1528">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1529">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1529">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1530">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1530">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1531">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1531">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1532">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1532">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1533">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1533">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1534">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1534">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1535"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1535">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1536">Dane zdarzenia zgłasza, że zostały naciśnięte przyciski myszy jeden lub więcej.</span><span class="sxs-lookup"><span data-stu-id="77e71-1536">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="77e71-1537">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone zdarzenie trasowane osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1537">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1538">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1538">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1539">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="77e71-1539">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="77e71-1540">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1540">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="77e71-1541">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="77e71-1541">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="77e71-1542">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1542">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="77e71-1543">Jedną z tych zdarzeń mogą być wywoływane na elemencie odbieranie po <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="77e71-1543">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="77e71-1544">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1544">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="77e71-1545">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1545">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="77e71-1546">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-1546">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="77e71-1547">Obsługa <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy szczegółów akcji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1547">By handling <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="77e71-1548">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1548">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="77e71-1549">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na\* metody; należy wziąć pod uwagę, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1549">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="77e71-1550">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1550">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1551">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1551">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1552">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1552">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1553">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1553">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1554">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1554">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1555">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1555">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1556">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1556">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1557">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1557">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1558">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1558">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1559">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1559">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1560"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1560">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1561">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1561">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="77e71-1562">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1562">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1563">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1563">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1564"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="77e71-1564">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="77e71-1565"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1565"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="77e71-1566">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1566">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="77e71-1567">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1567">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="77e71-1568">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1568">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="77e71-1569">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="77e71-1569">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="77e71-1570">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1570">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77e71-1571">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1571">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="77e71-1572">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1572">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="77e71-1573">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="77e71-1573">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="77e71-1574">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1574">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="77e71-1575">Na przykład może pochodzić z <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania implementację podstawową; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1575">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1576"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1576">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1577">Dane zdarzenia raportów zwolnienie lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1577">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="77e71-1578">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1578">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1579">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1579">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1580"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="77e71-1580">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="77e71-1581"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1581"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="77e71-1582">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1582">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="77e71-1583">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1583">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="77e71-1584">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1584">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="77e71-1585">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="77e71-1585">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="77e71-1586">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1586">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77e71-1587">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1587">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1588"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1588">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1589">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1589">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1590">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1590">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1591">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1591">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1592">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1592">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1593">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1593">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1594">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1594">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1595">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1595">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1596">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1596">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1597">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1597">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1598">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1598">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1599">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1599">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1600">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1600">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1601"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1601">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1602">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1602">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="77e71-1603">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1603">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1604">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1604">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1605"><xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="77e71-1605">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="77e71-1606"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1606"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="77e71-1607">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1607">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="77e71-1608">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1608">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="77e71-1609">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1609">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="77e71-1610">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="77e71-1610">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="77e71-1611">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1611">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77e71-1612">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1612">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="77e71-1613">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1613">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="77e71-1614">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="77e71-1614">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="77e71-1615">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1615">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="77e71-1616">Na przykład może pochodzić z <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> w klasie pochodnej bez wywoływania bazy; jednak to zastąpienie powoduje wyłączenie kontekstu menu usługi na kontrolki, które są dostępne w ramach programu <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1616">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1617"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1617">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1618">Dane zdarzenia raportów zwolnienie prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1618">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="77e71-1619">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1619">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1620">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1620">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1621"><xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="77e71-1621">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="77e71-1622"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1622"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="77e71-1623">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1623">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="77e71-1624">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1624">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="77e71-1625">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1625">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="77e71-1626">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="77e71-1626">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="77e71-1627">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1627">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77e71-1628">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1628">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1629"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1629">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="77e71-1630">Dane zdarzenia raportów, że jeden lub więcej przycisków myszy zostały wydane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1630">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="77e71-1631">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1631">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1632">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1632">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1633">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="77e71-1633">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="77e71-1634">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="77e71-1634">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="77e71-1635">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="77e71-1635">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="77e71-1636">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-1636">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="77e71-1637">Jedną z tych zdarzeń może zostać wywołane na odbieranie elementu po <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="77e71-1637">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="77e71-1638">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1638">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="77e71-1639">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1639">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="77e71-1640">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="77e71-1640">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="77e71-1641">Obsługa <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy się akcje.</span><span class="sxs-lookup"><span data-stu-id="77e71-1641">By handling <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="77e71-1642">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1642">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="77e71-1643">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na\* metody; należy wziąć pod uwagę, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1643">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="77e71-1644">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1644">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1645">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1645">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1646">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1646">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1647">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1647">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1648">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1648">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1649">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1649">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1650">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1650">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1651">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1651">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1652">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1652">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1653"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1653">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1654">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1654">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1655">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1655">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1656">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1656">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1657">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1657">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1658">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1658">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1659">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1659">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1660">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1660">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1661">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1661">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1662">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1662">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1663">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1663">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1664">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1664">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1665">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1665">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1666"><see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1666">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1667">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1667">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1668">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1668">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1669">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1669">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1670">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1670">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1671">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1671">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1672">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1672">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1673">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1673">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1674">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1674">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1675">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1675">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1676">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1676">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1677">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1677">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1678">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1678">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1679"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1679">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1680">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1680">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1681">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1681">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1682">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1682">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1683">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1683">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1684">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1684">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1685">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1685">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1686">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1686">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1687">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1687">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1688">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1688">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1689">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1689">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1690">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1690">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1691">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1691">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1692"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1692">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1693">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1693">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1694">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1694">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1695">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1695">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1696">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1696">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1697">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1697">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1698">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1698">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1699">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1699">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1700">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1700">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1701">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1701">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1702">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1702">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1703">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1703">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1704">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1704">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1705"><see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1705">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1706">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1706">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1707">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1707">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1708">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1708">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1709">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1709">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1710">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1710">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1711">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1711">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1712">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1712">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1713">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1713">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1714">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1714">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1715">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1715">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1716">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1716">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1717">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1717">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1718"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1718">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1719">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1719">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1720">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1720">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1721">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1721">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1722">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1722">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1723">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1723">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1724">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1724">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1725">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1725">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1726">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1726">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1727">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1727">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1728">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1728">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1729">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1729">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1730">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1730">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1731"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1731">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1732">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1732">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1733">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1733">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1734">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1734">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1735">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1735">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1736">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1736">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1737">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1737">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1738">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1738">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1739">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1739">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1740">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1740">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1741">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1741">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1742">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1742">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1743">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1743">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1744"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1744">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1745">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1745">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1746">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1746">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1747">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1747">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1748">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1748">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1749">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1749">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1750">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1750">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1751">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1751">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1752">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1752">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1753">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1753">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1754">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1754">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1755">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1755">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1756">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1756">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1757"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1757">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1758">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1758">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1759">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1759">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1760">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1760">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1761">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1761">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1762">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1762">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1763">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1763">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1764">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1764">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1765">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1765">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1766">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1766">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1767">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1767">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1768">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1768">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1769">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1769">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1770"><see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1770">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1771">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1771">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1772">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1772">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1773">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1773">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1774">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1774">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1775">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1775">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1776">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1776">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1777">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1777">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1778">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1778">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1779">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1779">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1780">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1780">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1781">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1781">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1782">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1782">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1783"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1783">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1784">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1784">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1785">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1785">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1786">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1786">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1787">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1787">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1788">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1788">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1789">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1789">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1790">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1790">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1791">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1791">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1792">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1792">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1793">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1793">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1794">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1794">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1795">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1795">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1796"><see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1796">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1797">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1797">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1798">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1798">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1799">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1799">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1800">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1800">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1801">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1801">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1802">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1802">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1803">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1803">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1804">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1804">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1805">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1805">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1806">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1806">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1807">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1807">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="77e71-1808">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1808">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.ContentElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1809">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1809">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1810">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> zdarzenia trasowane, które występuje, gdy touch naciśnięcie tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-1810">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1811"><xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1811">The <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="77e71-1812">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.PreviewTouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1812">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="77e71-1813">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1813">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1814">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1814">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1815">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> zdarzenie trasowane, która występuje po przemieszczeniu touch, gdy są połączeni z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-1815">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1816"><xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1816">The <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="77e71-1817">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.PreviewTouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1817">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="77e71-1818">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1818">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1819">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1819">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1820">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> zdarzenie trasowane, która występuje po zwolnieniu touch wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-1820">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1821"><xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1821">The <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="77e71-1822">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.PreviewTouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1822">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="77e71-1823">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1823">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1824"><see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1824">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1825">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1825">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1826">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1826">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1827">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1827">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1828">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1828">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1829">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1829">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1830">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1830">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1831">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1831">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1832">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1832">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1833">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1833">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1834">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1834">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1835">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1835">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="contentElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1836"><see cref="T:System.Windows.Input.QueryCursorEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1836">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1837">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1837">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1838">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1838">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1839">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1839">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1840">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1840">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1841">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1841">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1842">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1842">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1843">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1843">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1844">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1844">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1845">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1845">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1846">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1846">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1847">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1847">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1848"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1848">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1849">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1849">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1850">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1850">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1851">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1851">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1852">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1852">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1853">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1853">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1854">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1854">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1855">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1855">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1856">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1856">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1857">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1857">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1858">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1858">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1859">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1859">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1860"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1860">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1861">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1861">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1862">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1862">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1863">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1863">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1864">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1864">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1865">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1865">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1866">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1866">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1867">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1867">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1868">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1868">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1869">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1869">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1870">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1870">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1871">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1871">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1872"><see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1872">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1873">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1873">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1874">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1874">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1875">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1875">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1876">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1876">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1877">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1877">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1878">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1878">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1879">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1879">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1880">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1880">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1881">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1881">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1882">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1882">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1883">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1883">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1884"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1884">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1885">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie jest wywoływane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="77e71-1885">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="77e71-1886">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1886">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1887">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1887">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1888">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1888">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1889">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1889">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="77e71-1890">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1890">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1891">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1891">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1892">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1892">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1893"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1893">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1894">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1894">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1895">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1895">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1896">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1896">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1897">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1897">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1898">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1898">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1899">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1899">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1900">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1900">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1901">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1901">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1902">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1902">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1903">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1903">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1904">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1904">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1905"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1905">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1906">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1906">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1907">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1907">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1908">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1908">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1909">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1909">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1910">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1910">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1911">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1911">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1912">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1912">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1913">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1913">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1914">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1914">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1915">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1915">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1916">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1916">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1917"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1917">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1918">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie jest wywoływane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="77e71-1918">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="77e71-1919">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1919">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1920">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1920">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1921">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1921">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="77e71-1922">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="77e71-1922">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="77e71-1923">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1923">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1924">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1924">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1925">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1925">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1926"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1926">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1927">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1927">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1928">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1928">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1929">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1929">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1930">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1930">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1931">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1931">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1932">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1932">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1933">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1933">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1934">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1934">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1935">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1935">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1936">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1936">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1937">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1937">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1938"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1938">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1939">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1939">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1940">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1940">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1941">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1941">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1942">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1942">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1943">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1943">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1944">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1944">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1945">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1945">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1946">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1946">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1947">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1947">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1948">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1948">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1949">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1949">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1950"><see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1950">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1951">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1951">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1952">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1952">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1953">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1953">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1954">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1954">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1955">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1955">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1956">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1956">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1957">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1957">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1958">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1958">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1959">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1959">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1960">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1960">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1961">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1961">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1962"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1962">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1963">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1963">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1964">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1964">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1965">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1965">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1966">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1966">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1967">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1967">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1968">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1968">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1969">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1969">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1970">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1970">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1971">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1971">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1972">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1972">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1973">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1973">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1974"><see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1974">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1975">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-1975">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="77e71-1976">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1976">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1977">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1977">This method has no default implementation.</span></span> <span data-ttu-id="77e71-1978">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1978">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="77e71-1979">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na\* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1979">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="77e71-1980">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-1980">In this case the matching event is a routed event.</span></span> <span data-ttu-id="77e71-1981">Wzorzec implementacji On\* metody różni się dla zdarzenia trasowane ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-1981">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="77e71-1982">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1982">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="77e71-1983">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="77e71-1983">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="77e71-1984">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1984">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="77e71-1985">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-1985">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1986">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1986">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1987">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchDown" /> zdarzenia trasowane, które występuje, gdy touch naciśnie wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-1987">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1988"><xref:System.Windows.ContentElement.OnTouchDown%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1988">The <xref:System.Windows.ContentElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="77e71-1989">Zastąp <xref:System.Windows.ContentElement.OnTouchDown%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.TouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1989">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchDown> event.</span></span> <span data-ttu-id="77e71-1990">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnTouchDown%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1990">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1991">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1991">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1992">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchEnter" /> zdarzenie trasowane, który występuje, gdy touch z zewnątrz do wewnątrz granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-1992">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1993"><xref:System.Windows.ContentElement.OnTouchEnter%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1993">The <xref:System.Windows.ContentElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="77e71-1994">Zastąp <xref:System.Windows.ContentElement.OnTouchEnter%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.TouchEnter> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1994">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchEnter> event.</span></span> <span data-ttu-id="77e71-1995">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnTouchEnter%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-1995">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-1996">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-1996">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-1997">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchLeave" /> zdarzenie trasowane, który występuje, gdy touch z wnętrza poza granicami tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-1997">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-1998"><xref:System.Windows.ContentElement.OnTouchLeave%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-1998">The <xref:System.Windows.ContentElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="77e71-1999">Zastąp <xref:System.Windows.ContentElement.OnTouchLeave%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.TouchLeave> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-1999">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchLeave> event.</span></span> <span data-ttu-id="77e71-2000">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnTouchLeave%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2000">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-2001">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2001">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-2002">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchMove" /> zdarzenie trasowane, która występuje po przemieszczeniu touch, gdy są połączeni z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2002">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2003"><xref:System.Windows.ContentElement.OnTouchMove%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2003">The <xref:System.Windows.ContentElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="77e71-2004">Zastąp <xref:System.Windows.ContentElement.OnTouchMove%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.TouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2004">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchMove> event.</span></span> <span data-ttu-id="77e71-2005">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnTouchMove%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2005">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-2006">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2006">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="77e71-2007">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchUp" /> zdarzenie trasowane, która występuje po zwolnieniu touch wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2007">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2008"><xref:System.Windows.ContentElement.OnTouchUp%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2008">The <xref:System.Windows.ContentElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="77e71-2009">Zastąp <xref:System.Windows.ContentElement.OnTouchUp%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.TouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2009">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchUp> event.</span></span> <span data-ttu-id="77e71-2010">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnTouchUp%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2010">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="contentElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="77e71-2011">Kierunek przechodzenia przez żądany fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-2011">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="77e71-2012">Po przesłonięciu w klasie pochodnej zwraca element, który będzie fokus na kierunek przechodzenia przez określony fokus bez faktycznego przenosząc fokus do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2012">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="77e71-2013">Element, który otrzymałby fokus <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> faktycznie została wywołana.</span><span class="sxs-lookup"><span data-stu-id="77e71-2013">The element that would have received focus if <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2014">Domyślna implementacja tej metody tej klasy jest niekompletne i zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="77e71-2014">The default implementation of this method in this class is incomplete and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2015">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element docelowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2015">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2016">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragEnter> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2016">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2017">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2017">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2018">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2018">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2019">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2019">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="77e71-2020">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2020">Routing strategy</span></span>|<span data-ttu-id="77e71-2021">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2021">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2022">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2022">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="77e71-2023">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2023">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="77e71-2024">Zastąp <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2024">Override <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2025">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2025">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2026">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2026">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2027">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2027">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2028">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2028">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2029">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2029">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2030">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2030">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2031">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element źródłowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2031">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2032">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragLeave> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2032">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2033">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2033">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2034">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2034">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2035">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2035">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="77e71-2036">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2036">Routing strategy</span></span>|<span data-ttu-id="77e71-2037">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2037">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2038">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2038">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="77e71-2039">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2039">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="77e71-2040">Zastąp <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2040">Override <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2041">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2041">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2042">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2042">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2043">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2043">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2044">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2044">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2045">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2045">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2046">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2046">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2047">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2047">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2048">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragOver> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2048">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2049">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragOver> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2049">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2050">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2050">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2051">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2051">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragOverEvent>|  
|<span data-ttu-id="77e71-2052">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2052">Routing strategy</span></span>|<span data-ttu-id="77e71-2053">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2053">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2054">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2054">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="77e71-2055">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2055">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="77e71-2056">Zastąp <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2056">Override <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2057">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2057">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2058">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2058">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2059">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2059">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2060">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2060">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2061">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2061">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2062">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2062">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2063">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania za pomocą tego elementu jako element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2063">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2064">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDrop> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2064">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDrop> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2065">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDrop> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2065">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2066">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2066">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2067">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2067">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDropEvent>|  
|<span data-ttu-id="77e71-2068">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2068">Routing strategy</span></span>|<span data-ttu-id="77e71-2069">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2069">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2070">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2070">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="77e71-2071">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2071">The corresponding bubbling event is <xref:System.Windows.ContentElement.Drop>.</span></span>  
  
-   <span data-ttu-id="77e71-2072">Zastąp <xref:System.Windows.ContentElement.OnPreviewDrop%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2072">Override <xref:System.Windows.ContentElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2073">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDrop" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2073">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2074">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2074">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2075">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2075">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2076">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2076">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2077">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2077">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2078">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2078">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2079">Występuje po rozpoczęciu operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2079">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2080"><xref:System.Windows.ContentElement.PreviewGiveFeedback> Zdarzeń umożliwia źródło zdarzenia przeciągania, aby modyfikować wygląd wskaźnika myszy, aby dać wizualną opinię użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2080">The <xref:System.Windows.ContentElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="77e71-2081">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewGiveFeedback> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2081">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2082">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewGiveFeedback> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2082">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2083">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2083">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2084">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2084">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="77e71-2085">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2085">Routing strategy</span></span>|<span data-ttu-id="77e71-2086">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2086">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2087">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2087">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="77e71-2088">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2088">The corresponding bubbling event is <xref:System.Windows.ContentElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="77e71-2089">Zastąp <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2089">Override <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2090">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2090">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2091">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2091">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2092">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2092">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2093">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2093">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2094">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2094">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2095">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2095">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2096">Występuje, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2096">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2097">Ponieważ to zdarzenie używa tunelowania, routingu, element, który ma fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2097">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="77e71-2098">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który jest ustawiony fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-2098">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="77e71-2099">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2099">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2100">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2100">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2101">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2101">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2102">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2102">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="77e71-2103">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2103">Routing strategy</span></span>|<span data-ttu-id="77e71-2104">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2104">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2105">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2105">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="77e71-2106">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2106">The corresponding bubbling event is <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="77e71-2107">Zastąp <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2107">Override <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2108">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2108">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2109">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2109">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2110">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2110">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2111">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2111">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2112">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2112">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2113">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2113">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2114">Występuje po naciśnięciu klawisza, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2114">Occurs when a key is pressed while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2115">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak polecenia i tekst.</span><span class="sxs-lookup"><span data-stu-id="77e71-2115">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="77e71-2116"><xref:System.Windows.ContentElement.KeyDown> Zdarzeń jest tekst niższego poziomu zdarzenie danych wejściowych, które mogą nie zachowywać się, zgodnie z oczekiwaniami na niektórych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="77e71-2116">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="77e71-2117">Jest to, ponieważ niektóre kontrolki zostały składania do sterowania lub obsługa klasy, zapewniająca wyższego poziomu wersję tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="77e71-2117">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="77e71-2118">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewKeyDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2118">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2119">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewKeyDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2119">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2120">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2121">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2121">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="77e71-2122">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2122">Routing strategy</span></span>|<span data-ttu-id="77e71-2123">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2123">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2124">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2124">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="77e71-2125">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2125">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="77e71-2126">Zastąp <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2126">Override <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2127">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2127">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2128">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2128">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2129">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2129">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2130">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2130">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2131">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2131">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2132">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2132">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2133">Występuje po zwolnieniu klawisza, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2133">Occurs when a key is released while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2134">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak polecenia i tekst.</span><span class="sxs-lookup"><span data-stu-id="77e71-2134">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="77e71-2135"><xref:System.Windows.ContentElement.KeyUp> Zdarzeń jest tekst niższego poziomu zdarzenie danych wejściowych, które mogą nie zachowywać się, zgodnie z oczekiwaniami na niektórych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="77e71-2135">The <xref:System.Windows.ContentElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="77e71-2136">Jest to, ponieważ niektóre kontrolki zostały składania do sterowania lub obsługa klasy, zapewniająca wyższego poziomu wersję tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="77e71-2136">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="77e71-2137">Aby uzyskać szczegółowe informacje Sprawdź w dokumentacji dotyczącej poszczególnych formantów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2137">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="77e71-2138">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewKeyUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2138">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2139">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewKeyUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2139">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2140">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2140">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2141">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2141">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="77e71-2142">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2142">Routing strategy</span></span>|<span data-ttu-id="77e71-2143">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2143">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2144">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2144">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="77e71-2145">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2145">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="77e71-2146">Zastąp <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2146">Override <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2147">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2147">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2148">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2148">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2149">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2149">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2150">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2150">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2151">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2151">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2152">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2152">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2153">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2153">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2154">Ponieważ to zdarzenie używa tunelowania, routingu, element, który utraty fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2154">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="77e71-2155">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty fokus.</span><span class="sxs-lookup"><span data-stu-id="77e71-2155">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="77e71-2156">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2156">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2157">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2157">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2158">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2158">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2159">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2159">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="77e71-2160">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2160">Routing strategy</span></span>|<span data-ttu-id="77e71-2161">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2161">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2162">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2162">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="77e71-2163">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2163">The corresponding bubbling event is <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="77e71-2164">Zastąp <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2164">Override <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2165">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2165">Identifies the <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2166">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2166">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2167">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2167">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2168">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2168">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2169">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2169">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2170">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2170">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2171">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2171">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2172">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2172">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2173">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2173">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2174"><xref:System.Windows.ContentElement.PreviewMouseDown> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, które odpowiadają naciśnij jednego z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="77e71-2174">The <xref:System.Windows.ContentElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="77e71-2175"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2175"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="77e71-2176">Zobacz uwagi, na <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2176">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2177">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2177">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2178">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2178">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="77e71-2179">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2179">Routing strategy</span></span>|<span data-ttu-id="77e71-2180">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2180">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2181">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2181">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-2182">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2182">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="77e71-2183">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2183">Override <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2184">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2184">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2185">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2185">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2186">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2186">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2187">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2187">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2188">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2188">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2189">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2189">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2190">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2190">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2191">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj trasy tunelowania przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2191">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="77e71-2192">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2192">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="77e71-2193">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2193">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="77e71-2194">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2194">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="77e71-2195">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="77e71-2195">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="77e71-2196">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2196">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="77e71-2197">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2197">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2198">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2198">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2199">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2199">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="77e71-2200">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2200">Routing strategy</span></span>|<span data-ttu-id="77e71-2201">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-2201">Direct</span></span>|  
|<span data-ttu-id="77e71-2202">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2202">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-2203">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2203">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2204">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2204">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2205">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2205">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2206">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2206">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2207">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2207">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2208">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2208">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2209">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2209">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2210">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2210">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2211">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj trasy tunelowania przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2211">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="77e71-2212">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2212">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="77e71-2213">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2213">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="77e71-2214">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2214">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="77e71-2215">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="77e71-2215">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="77e71-2216">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2216">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="77e71-2217">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2217">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2218">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2218">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2219">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2219">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="77e71-2220">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2220">Routing strategy</span></span>|<span data-ttu-id="77e71-2221">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-2221">Direct</span></span>|  
|<span data-ttu-id="77e71-2222">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2222">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-2223">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2223">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2224">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2224">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2225">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2225">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2226">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2227">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2227">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2228">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2228">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2229">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2229">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2230">Występuje po przemieszczeniu wskaźnika myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2230">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2231">To zdarzenie występuje zarówno, gdy wskaźnik myszy po raz pierwszy najedzie na granice elementu, a także gdy wskaźnik myszy porusza się pozostając nadal w granicach elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2231">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="77e71-2232">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2232">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2233">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2233">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2234">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2234">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2235">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2235">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="77e71-2236">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2236">Routing strategy</span></span>|<span data-ttu-id="77e71-2237">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2237">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2238">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2238">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="77e71-2239">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2239">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="77e71-2240">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2240">Override <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2241">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2241">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2242">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2242">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2243">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2243">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2244">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2244">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2245">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2245">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2246">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2246">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2247">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2247">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2248">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj trasy tunelowania przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2248">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="77e71-2249">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2249">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="77e71-2250">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2250">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="77e71-2251">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2251">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="77e71-2252">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="77e71-2252">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="77e71-2253">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2253">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="77e71-2254">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2254">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2255">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2255">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2256">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2256">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="77e71-2257">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2257">Routing strategy</span></span>|<span data-ttu-id="77e71-2258">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-2258">Direct</span></span>|  
|<span data-ttu-id="77e71-2259">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2259">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-2260">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2260">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2261">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2261">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2262">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2262">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2263">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2264">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2264">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2265">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2265">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2266">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2266">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2267">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2267">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2268">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj trasy tunelowania przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2268">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="77e71-2269">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2269">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="77e71-2270">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2270">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="77e71-2271">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2271">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="77e71-2272">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="77e71-2272">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="77e71-2273">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2273">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="77e71-2274">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2274">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2275">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2275">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2276">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2276">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="77e71-2277">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2277">Routing strategy</span></span>|<span data-ttu-id="77e71-2278">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-2278">Direct</span></span>|  
|<span data-ttu-id="77e71-2279">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2279">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-2280">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2280">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2281">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2281">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2282">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2282">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2283">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2283">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2284">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2284">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2285">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2285">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2286">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2286">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2287">Występuje po zwolnieniu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2287">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2288">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2288">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2289">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2289">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2290"><xref:System.Windows.ContentElement.PreviewMouseUp> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, które odpowiadają naciśnij jednego z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="77e71-2290">The <xref:System.Windows.ContentElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="77e71-2291"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2291"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="77e71-2292">Zobacz uwagi, na <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2292">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2293">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2293">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2294">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2294">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="77e71-2295">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2295">Routing strategy</span></span>|<span data-ttu-id="77e71-2296">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2296">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2297">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2297">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-2298">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2298">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="77e71-2299">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2299">Override <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2300">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2300">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2301">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2301">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2302">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2302">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2303">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2303">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2304">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2304">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2305">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2305">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2306">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2306">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2307">Zespół lub myszy przechwytywania pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony to zdarzenie od elementu wąsko zdefiniowany lub przechwycone, wskaźnik myszy może mieć w rzeczywistości za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2307">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="77e71-2308">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2308">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2309">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2309">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2310">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2310">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2311">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2311">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="77e71-2312">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2312">Routing strategy</span></span>|<span data-ttu-id="77e71-2313">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2313">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2314">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2314">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="77e71-2315">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2315">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="77e71-2316">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2316">Override <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2317">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2317">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2318">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2318">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2319">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2319">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2320">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2320">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2321">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2321">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2322">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2322">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2323">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2323">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2324"><xref:System.Windows.ContentElement.PreviewQueryContinueDrag> Zdarzeń umożliwia źródłom przeciągania zadeklarować, czy operacja przeciągania i upuszczania powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="77e71-2324">The <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="77e71-2325">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2325">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2326">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2326">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2327">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2327">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2328">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2328">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="77e71-2329">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2329">Routing strategy</span></span>|<span data-ttu-id="77e71-2330">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2330">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2331">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2331">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="77e71-2332">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2332">The corresponding bubbling event is <xref:System.Windows.ContentElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="77e71-2333">Zastąp <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2333">Override <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2334">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2334">Identifies the <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2335">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2335">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2336">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2336">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2337">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2337">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2338">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2338">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2339">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2339">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2340">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2340">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2341">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusButtonDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2341">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2342">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusButtonDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2342">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2343">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2343">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2344">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2344">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2345">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2345">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2346">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2346">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="77e71-2347">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2347">Routing strategy</span></span>|<span data-ttu-id="77e71-2348">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2348">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2349">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2349">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-2350">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2350">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="77e71-2351">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2351">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2352">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2352">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2353">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2353">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2354">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2354">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2355">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2355">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2356">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2356">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2357">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2357">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2358">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2358">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2359">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusButtonUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2359">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2360">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusButtonUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2360">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2361">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2361">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2362">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2362">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2363">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2363">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2364">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2364">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="77e71-2365">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2365">Routing strategy</span></span>|<span data-ttu-id="77e71-2366">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2366">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2367">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2367">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-2368">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2368">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="77e71-2369">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2369">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2370">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2370">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2371">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2371">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2372">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2372">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2373">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2373">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2374">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2374">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2375">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2375">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2376">Występuje po dotknięciu dyskretyzatora jest przemieszczany nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2376">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2377">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2377">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2378">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2378">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2379">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2379">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2380">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2380">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2381">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2381">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2382">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2382">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="77e71-2383">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2383">Routing strategy</span></span>|<span data-ttu-id="77e71-2384">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2384">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2385">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2385">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="77e71-2386">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2386">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="77e71-2387">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2387">Override <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2388">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2388">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2389">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2389">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2390">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2390">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2391">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2391">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2392">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2392">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2393">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2393">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2394">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="77e71-2394">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2395">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusInAirMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2395">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2396">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusInAirMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2396">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2397">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2397">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2398">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2398">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2399">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2399">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2400">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2400">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="77e71-2401">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2401">Routing strategy</span></span>|<span data-ttu-id="77e71-2402">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2402">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2403">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2403">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2404">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2404">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="77e71-2405">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2405">Override <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2406">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2406">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2407">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2407">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2408">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2408">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2409">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2409">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2410">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2410">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2411">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2411">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2412">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby wykryć, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2412">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2413">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusInRange> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2413">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2414">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusInRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2414">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2415">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2415">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2416">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2416">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2417">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2417">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2418">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2418">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="77e71-2419">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2419">Routing strategy</span></span>|<span data-ttu-id="77e71-2420">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2420">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2421">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2421">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2422">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2422">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="77e71-2423">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2423">Override <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2424">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2424">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2425">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2425">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2426">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2426">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2427">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2427">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2428">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2428">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2429">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2429">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2430">Występuje, gdy pióro jest przemieszczane nad elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2430">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="77e71-2431">Pióro musi być przemieszczane podczas wykrywania przez Dyskretyzator Aby zgłosić to zdarzenie, w przeciwnym razie <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> jest zgłaszane w zamian.</span><span class="sxs-lookup"><span data-stu-id="77e71-2431">The stylus must move while being detected by the  digitizer  to raise this event, otherwise, <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2432">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2432">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2433">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2433">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2434">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2434">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2435">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2435">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2436">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2436">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2437">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2437">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="77e71-2438">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2438">Routing strategy</span></span>|<span data-ttu-id="77e71-2439">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2439">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2440">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2440">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2441">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2441">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="77e71-2442">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2442">Override <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2443">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2443">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2444">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2444">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2445">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2445">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2446">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2446">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2447">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2447">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2448">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2448">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2449">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte.</span><span class="sxs-lookup"><span data-stu-id="77e71-2449">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2450">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2450">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2451">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2451">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2452">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2452">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2453">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2453">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2454">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2454">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2455">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2455">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="77e71-2456">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2456">Routing strategy</span></span>|<span data-ttu-id="77e71-2457">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2457">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2458">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2458">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2459">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2459">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="77e71-2460">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2460">Override <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2461">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2461">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2462">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2462">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2463">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2463">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2464">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2464">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2465">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2465">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2466">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2466">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2467">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span><span class="sxs-lookup"><span data-stu-id="77e71-2467">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2468">Aby uzyskać informacji na temat gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2468">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="77e71-2469">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2469">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2470">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2470">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2471">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2471">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2472">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2472">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2473">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2473">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2474">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2474">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="77e71-2475">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2475">Routing strategy</span></span>|<span data-ttu-id="77e71-2476">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2476">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2477">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2477">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="77e71-2478">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2478">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="77e71-2479">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2479">Override <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2480">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2480">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2481">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2481">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2482">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2482">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2483">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2483">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2484">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2484">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2485">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2485">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2486">Występuje, gdy użytkownik zgłasza pióra od dyskretyzatora, gdy pióro znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2486">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2487">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2487">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2488">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2488">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2489">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2489">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2490">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2490">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2491">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2491">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2492">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2492">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="77e71-2493">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2493">Routing strategy</span></span>|<span data-ttu-id="77e71-2494">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2494">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2495">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2495">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2496">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2496">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="77e71-2497">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2497">Override <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2498">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2498">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2499">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2499">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2500">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2500">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2501">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2501">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2502">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2502">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2503">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2503">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2504">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2504">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2505"><xref:System.Windows.ContentElement.PreviewTextInput> Zdarzeń umożliwia składnik lub aplikację do nasłuchiwania pod kątem wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2505">The <xref:System.Windows.ContentElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="77e71-2506">Klawiatura jest podstawowym sposobem <xref:System.Windows.ContentElement.PreviewTextInput>; ale można również wygenerować mowy, pisma ręcznego i inne urządzenia wejściowego <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2506">The keyboard is the primary means of <xref:System.Windows.ContentElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="77e71-2507">Ze względu na kombinacje klawiszy - klawiatury domyślne albo za pośrednictwem edytory input method - wiele kluczowych zdarzeń mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2507">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="77e71-2508">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewTextInput> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2508">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2509">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewTextInput> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2509">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2510">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2510">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2511">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2511">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTextInputEvent>|  
|<span data-ttu-id="77e71-2512">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2512">Routing strategy</span></span>|<span data-ttu-id="77e71-2513">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2513">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2514">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2514">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="77e71-2515">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2515">The corresponding bubbling event is <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="77e71-2516">Zastąp <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2516">Override <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2517">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2517">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2518">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2518">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2519">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2519">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2520">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2520">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2521">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2521">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2522">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2522">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2523">Występuje, gdy palcem dotyka ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2523">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2524">Domyślnie <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia nie występują aż palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="77e71-2524">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="77e71-2525">Naciśnięcie klawisza palcem na ekranie i przytrzymanie bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2525">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="77e71-2526">Naciśnij i przytrzymaj klawisz zachowanie jest odpowiednikiem myszy kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-2526">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="77e71-2527">Aby spowodować <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia tak szybko, jak palcem dotyka ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączonych właściwości `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2527">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2528">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2528">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2529">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2529">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="77e71-2530">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2530">Routing strategy</span></span>|<span data-ttu-id="77e71-2531">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2531">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2532">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2532">Delegate</span></span>|<span data-ttu-id="77e71-2533"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2533"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="77e71-2534">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2534">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="77e71-2535">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2535">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2536">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2536">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2537">Występuje po przemieszczeniu palcem na ekranie, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2537">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2538">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2538">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2539">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2539">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="77e71-2540">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2540">Routing strategy</span></span>|<span data-ttu-id="77e71-2541">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2541">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2542">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2542">Delegate</span></span>|<span data-ttu-id="77e71-2543"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2543"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="77e71-2544">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2544">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="77e71-2545">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2545">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2546">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2546">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2547">Występuje, gdy zostanie wywołane palcem zniżki w stosunku do ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2547">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2548">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2548">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2549">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2549">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="77e71-2550">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2550">Routing strategy</span></span>|<span data-ttu-id="77e71-2551">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="77e71-2551">Tunneling</span></span>|  
|<span data-ttu-id="77e71-2552">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2552">Delegate</span></span>|<span data-ttu-id="77e71-2553"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2553"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="77e71-2554">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2554">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="77e71-2555">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2555">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2556">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2556">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2557">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2557">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2558"><xref:System.Windows.ContentElement.QueryContinueDrag> Zdarzeń umożliwia źródłom przeciągania określenie, czy operacja przeciągania i upuszczania powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="77e71-2558">The <xref:System.Windows.ContentElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="77e71-2559">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.QueryContinueDrag> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2559">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2560">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.QueryContinueDrag> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2560">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2561">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2561">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2562">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2562">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryContinueDragEvent>|  
|<span data-ttu-id="77e71-2563">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2563">Routing strategy</span></span>|<span data-ttu-id="77e71-2564">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2564">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2565">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2565">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="77e71-2566">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2566">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="77e71-2567">Zastąp <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2567">Override <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2568">Identyfikuje <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2568">Identifies the <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2569">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2569">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2570">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2570">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2571">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2571">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2572">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2572">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2573">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2573">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2574">Występuje, gdy Zażądano wyświetlenia kursora.</span><span class="sxs-lookup"><span data-stu-id="77e71-2574">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="77e71-2575">To zdarzenie jest zgłaszane w elemencie za każdym razem, wskaźnik myszy przesuwa się do nowej lokalizacji, która oznacza, że obiekt kursora może wymagać zmiany na podstawie jego nowego położenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2575">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2576">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.QueryCursor> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2576">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryCursor> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2577">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.QueryCursor> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2577">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2578">Kursor jest określone przy użyciu tej nazwy zdarzeń nie jest kursor tekstu (czasami znana jako funkcja punktu wstawiania).</span><span class="sxs-lookup"><span data-stu-id="77e71-2578">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="77e71-2579">Zamiast tego kursor znajduje się w tym kontekście jest obiekt, który deklaruje na ekranie graficzną związane z kilku możliwych urządzeń powiązane dane wejściowe lub pojęcia związane z programowaniem Windows.</span><span class="sxs-lookup"><span data-stu-id="77e71-2579">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="77e71-2580">Ten obiekt jest reprezentowany przez <xref:System.Windows.Input.Cursor> klasy na platformie WPF.</span><span class="sxs-lookup"><span data-stu-id="77e71-2580">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="77e71-2581">System wejściowy WPF umożliwia zmianę tego kursora, gdy reprezentuje on na ekranie pozycji wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-2581">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="77e71-2582">Możesz użyć wstępnie zdefiniowanych wartości z <xref:System.Windows.Input.Cursors> wyliczenia lub możesz zadeklarować niestandardowe kursora w formie pliku obrazu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2582">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="77e71-2583">Nasłuchiwanie <xref:System.Windows.ContentElement.QueryCursor> zdarzenie nie jest technikę efektywne zarządzanie kursora.</span><span class="sxs-lookup"><span data-stu-id="77e71-2583">Listening for the <xref:System.Windows.ContentElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="77e71-2584">Zamiast tego każdy element należy zdefiniować własne zachowanie kursora z <xref:System.Windows.FrameworkContentElement.Cursor%2A> i <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2584">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="77e71-2585">Należy polegać wyłącznie na <xref:System.Windows.ContentElement.QueryCursor> nie używasz WPF poziomie struktury podstawowych elementów, czy w dodatkowej okoliczności gdzie definiująca zachowanie kursor na zasadzie na element nie spełnia Twoich potrzeb.</span><span class="sxs-lookup"><span data-stu-id="77e71-2585">You should only rely on <xref:System.Windows.ContentElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="77e71-2586">Więcej informacji na temat implementowania zachowanie kursora w odpowiedzi na <xref:System.Windows.ContentElement.QueryCursor>, zobacz <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2586">For more information on implementing cursor behavior in response to <xref:System.Windows.ContentElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2587">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2587">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2588">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2588">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryCursorEvent>|  
|<span data-ttu-id="77e71-2589">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2589">Routing strategy</span></span>|<span data-ttu-id="77e71-2590">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2590">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2591">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2591">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="77e71-2592">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2592">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="77e71-2593">Zastąp <xref:System.Windows.ContentElement.OnQueryCursor%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2593">Override <xref:System.Windows.ContentElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2594">Identyfikuje <see cref="E:System.Windows.ContentElement.QueryCursor" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2594">Identifies the <see cref="E:System.Windows.ContentElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2595">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2595">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2596">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2596">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2597">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2597">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2598">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2598">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2599">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2599">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="77e71-2600">A <see cref="T:System.Windows.RoutedEventArgs" /> , zawierający dane zdarzenia, a także identyfikuje zdarzenia w celu podniesienia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2600">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="77e71-2601">Wywołuje określone zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2601">Raises a specific routed event.</span></span> <span data-ttu-id="77e71-2602"><see cref="T:System.Windows.RoutedEvent" /> Zgłoszenie jest identyfikowana w ramach <see cref="T:System.Windows.RoutedEventArgs" /> wystąpienia, który znajduje się (jako <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości danych zdarzenia).</span><span class="sxs-lookup"><span data-stu-id="77e71-2602">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2603">`e` Wpisaniu parametru jako typu podstawowego wspólne dla wszystkich danych zdarzenia trasowanego; jednak dane zdarzeń należy nadać jako typ danych bardziej konkretny od pozostałych zdarzeń, który jest dostępny dla wywoływanego, zdarzenia, ponieważ <xref:System.Windows.RoutedEventArgs> zawierają klasy pochodne właściwości rzeczywiste określone dane, które są przeznaczone dla określonych zdarzeń, gdy pojawia się ono.</span><span class="sxs-lookup"><span data-stu-id="77e71-2603">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="77e71-2604"><xref:System.Windows.RoutedEventArgs> nie jest po prostu właściwości stanu zdarzeń; identyfikuje zdarzenia trasowane do pozyskania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2604"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="77e71-2605">Ten wzorzec wywoływanie zdarzeń i danych zdarzenia trasowanego zarówno różnią się od [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] klasy zdarzenia i dane, które zwykle tylko zawierają właściwości, które są związane ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2605">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77e71-2606">Poniższy przykład tworzy dane zdarzenia, dołącza identyfikator zdarzenia do danych, a następnie używa wystąpienie danych zdarzeń, aby wywołać niestandardowe zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2606">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#raiseevent)]
 [!code-vb[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="contentElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-2607">Zwalnia wszystkie urządzeń dotykowych przechwycone z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2607">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="contentElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-2608">Jeśli ten element przechowywane przechwytywania, zwalnia przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-2608">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2609">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2609">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="77e71-2610">Należy wziąć pod uwagę wartości <xref:System.Windows.ContentElement.IsMouseCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="77e71-2610">Consider checking the value of <xref:System.Windows.ContentElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77e71-2611">Poniższe procedury obsługi przechwytuje lub zwalnia przechwytywanie myszy zgodnie z Stany przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-2611">The following handler captures or releases mouse capture according to mouse button states.</span></span> <span data-ttu-id="77e71-2612">W przykładzie pokazano sposób użycia ruchów myszy przechwycone, dla alternatywnej do celów innych niż przesunąć wskaźnik myszy w [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="77e71-2612">The example shows how to use captured mouse movement for alternative purposes other than moving the mouse pointer in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="contentElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-2613">Zwalnia Przechwytywanie urządzenia pióra, jeśli ten element przechowywane przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2613">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2614">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2614">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="77e71-2615">Należy wziąć pod uwagę wartości <xref:System.Windows.ContentElement.IsStylusCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="77e71-2615">Consider checking the value of <xref:System.Windows.ContentElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="77e71-2616">Urządzenie do wydania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2616">The device to release.</span></span></param>
        <summary><span data-ttu-id="77e71-2617">Próbuje zwolnić urządzeń dotykowych określony z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2617">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="77e71-2618"><see langword="true" /> w przypadku urządzeń dotykowych zwolnieniu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-2618"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="77e71-2619"><paramref name="touchDevice" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-2619"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="77e71-2620">Identyfikator zdarzenia the.routed, dla którego dołączono program obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-2620">The identifier of the.routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="77e71-2621">Implementacja określoną funkcję obsługi do usunięcia z kolekcji programu obsługi zdarzeń w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2621">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="77e71-2622">Usuwa obsługi określonego zdarzenia trasowane z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2622">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2623">Najbardziej typowym scenariuszem dla za pomocą tego [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] jest podczas implementowania [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzeń "opakowanie", który jest skojarzony z niestandardowe zdarzenie trasowane, szczególnie w przypadku, gdy implementują logikę "Usuń" programów obsługi na [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] poziom.</span><span class="sxs-lookup"><span data-stu-id="77e71-2623">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="77e71-2624">Przykład znajdujący się to uwagi sekcji ilustruje ten scenariusz.</span><span class="sxs-lookup"><span data-stu-id="77e71-2624">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="77e71-2625">Wywołanie tej metody nie ma wpływu, jeśli nie było żadnych procedury obsługi zarejestrowane przy użyciu kryteriów zgodnych parametrów wejściowych dla wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="77e71-2625">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="77e71-2626">Jeśli więcej niż jeden program obsługi jest dołączony, które pasują do kryteriów, tylko pierwszego programu obsługi, w przypadku magazynu program obsługi jest usuwany.</span><span class="sxs-lookup"><span data-stu-id="77e71-2626">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="77e71-2627">To zachowanie jest zgodne z [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zachowanie `-=` operatora.</span><span class="sxs-lookup"><span data-stu-id="77e71-2627">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="77e71-2628">Ani `routedEvent` ani `handler` może być `null`.</span><span class="sxs-lookup"><span data-stu-id="77e71-2628">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="77e71-2629">Próbują dostarczyć albo wartość jako `null` zgłosi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="77e71-2629">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="77e71-2630">Ta metoda ignoruje `handledEventsToo` informacje o parametrach, która jest dostępna, jeśli program obsługi po raz pierwszy zostały dodane za pomocą <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu, który umożliwia obsługę zdarzeń już obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2630">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="77e71-2631">Dowolnego typu obsługi jest usuwany.</span><span class="sxs-lookup"><span data-stu-id="77e71-2631">Either type of handler is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-2632">Zwraca, czy procesy serializacji należy serializować zawartość <see cref="P:System.Windows.ContentElement.CommandBindings" /> właściwości wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-2632">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="77e71-2633"><see langword="true" /> Jeśli <see cref="P:System.Windows.ContentElement.CommandBindings" /> wartość właściwości powinna być Zserializowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-2633"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2634">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.ContentElement.CommandBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="77e71-2634">This will return `true` if <xref:System.Windows.ContentElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="77e71-2635">To `ShouldSerialize` podana metoda, ponieważ <xref:System.Windows.UIElement.CommandBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="77e71-2635">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="77e71-2636">Ta metoda wskazuje, czy właściwość zmieniła się z jego wartość domyślną.</span><span class="sxs-lookup"><span data-stu-id="77e71-2636">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="77e71-2637">Zazwyczaj wywołuje tę metodę albo tworzenie projektanta lub tworzenia własnych dołączanie kontrolki <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2637">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="77e71-2638">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych za pomocą resetowania metod ShouldSerialize i](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2638">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77e71-2639">Zwraca, czy procesy serializacji należy serializować zawartość <see cref="P:System.Windows.ContentElement.InputBindings" /> właściwości wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="77e71-2639">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="77e71-2640"><see langword="true" /> Jeśli <see cref="P:System.Windows.ContentElement.InputBindings" /> wartość właściwości powinna być Zserializowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77e71-2640"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2641">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.ContentElement.InputBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="77e71-2641">This will return `true` if <xref:System.Windows.ContentElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="77e71-2642">To `ShouldSerialize` podana metoda, ponieważ <xref:System.Windows.UIElement.InputBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="77e71-2642">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="77e71-2643">Ta metoda wskazuje, czy właściwość zmieniła się z jego wartość domyślną.</span><span class="sxs-lookup"><span data-stu-id="77e71-2643">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="77e71-2644">Zazwyczaj wywołuje tę metodę albo tworzenie projektanta lub tworzenia własnych dołączanie kontrolki <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2644">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="77e71-2645">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych za pomocą resetowania metod ShouldSerialize i](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2645">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2646">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2646">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2647">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusButtonDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2647">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2648">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusButtonDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2648">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2649">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2649">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2650">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2650">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2651">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2651">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2652">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2652">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonDownEvent>|  
|<span data-ttu-id="77e71-2653">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2653">Routing strategy</span></span>|<span data-ttu-id="77e71-2654">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2654">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2655">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2655">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-2656">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2656">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="77e71-2657">Zastąp <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2657">Override <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2658">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2658">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2659">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2659">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2660">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2660">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2661">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2661">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2662">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2662">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2663">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2663">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2664">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2664">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2665">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusButtonUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2665">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2666">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusButtonUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2666">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2667">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2667">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2668">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2668">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2669">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2669">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2670">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2670">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonUpEvent>|  
|<span data-ttu-id="77e71-2671">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2671">Routing strategy</span></span>|<span data-ttu-id="77e71-2672">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2672">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2673">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2673">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="77e71-2674">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2674">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="77e71-2675">Zastąp <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2675">Override <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2676">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2676">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2677">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2677">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2678">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2678">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2679">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2679">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2680">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2680">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2681">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2681">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2682">Występuje po dotknięciu dyskretyzatora, gdy pióro znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2682">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2683">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2683">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2684">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2684">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2685">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2685">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2686">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2686">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2687">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2687">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2688">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2688">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusDownEvent>|  
|<span data-ttu-id="77e71-2689">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2689">Routing strategy</span></span>|<span data-ttu-id="77e71-2690">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2690">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2691">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2691">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="77e71-2692">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2692">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="77e71-2693">Zastąp <xref:System.Windows.ContentElement.OnStylusDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2693">Override <xref:System.Windows.ContentElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2694">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2694">Identifies the <see cref="E:System.Windows.ContentElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2695">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2695">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2696">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2696">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2697">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2697">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2698">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2698">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2699">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2699">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2700">Występuje po pokonaniu przez pióro granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2700">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2701"><xref:System.Windows.ContentElement.StylusEnter> jest [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="77e71-2701"><xref:System.Windows.ContentElement.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="77e71-2702">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2702">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="77e71-2703">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="77e71-2703">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="77e71-2704">Mimo że <xref:System.Windows.ContentElement.StylusEnter> ścieżki po pokonaniu przez granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsStylusOver%2A> wartość właściwości została zmieniona z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2704">Although <xref:System.Windows.ContentElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="77e71-2705">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusEnter> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2705">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2706">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2706">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2707">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2707">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2708">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2708">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2709">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2709">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2710">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2710">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusEnterEvent>|  
|<span data-ttu-id="77e71-2711">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2711">Routing strategy</span></span>|<span data-ttu-id="77e71-2712">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-2712">Direct</span></span>|  
|<span data-ttu-id="77e71-2713">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2713">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2714">Zastąp <xref:System.Windows.ContentElement.OnStylusEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2714">Override <xref:System.Windows.ContentElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2715">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2715">Identifies the <see cref="E:System.Windows.ContentElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2716">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2716">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2717">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2717">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2718">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2718">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2719">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2719">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2720">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2720">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2721">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="77e71-2721">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2722">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusInAirMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2722">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2723">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusInAirMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2723">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2724">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2724">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2725">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2725">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2726">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2726">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2727">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2727">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="77e71-2728">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2728">Routing strategy</span></span>|<span data-ttu-id="77e71-2729">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2729">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2730">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2730">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2731">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2731">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="77e71-2732">Zastąp <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2732">Override <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2733">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2733">Identifies the <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2734">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2734">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2735">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2735">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2736">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2736">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2737">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2737">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2738">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2738">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2739">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby wykryć, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2739">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2740">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusInRange> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2740">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2741">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusInRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2741">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2742">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2742">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2743">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2743">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2744">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2744">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2745">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2745">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInRangeEvent>|  
|<span data-ttu-id="77e71-2746">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2746">Routing strategy</span></span>|<span data-ttu-id="77e71-2747">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2747">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2748">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2748">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2749">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2749">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="77e71-2750">Zastąp <xref:System.Windows.ContentElement.OnStylusInRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2750">Override <xref:System.Windows.ContentElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2751">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusInRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2751">Identifies the <see cref="E:System.Windows.ContentElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2752">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2752">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2753">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2753">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2754">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2754">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2755">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2755">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2756">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2756">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2757">Występuje po opuszczeniu przez pióro granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2757">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2758"><xref:System.Windows.ContentElement.StylusLeave> jest [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="77e71-2758"><xref:System.Windows.ContentElement.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="77e71-2759">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2759">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="77e71-2760">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="77e71-2760">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="77e71-2761">Mimo że <xref:System.Windows.ContentElement.StylusLeave> ścieżki po opuszczeniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsStylusOver%2A> wartość właściwości została zmieniona z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2761">Although <xref:System.Windows.ContentElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="77e71-2762">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusLeave> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2762">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2763">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2763">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2764">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2764">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2765">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2765">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2766">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2766">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2767">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2767">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusLeaveEvent>|  
|<span data-ttu-id="77e71-2768">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2768">Routing strategy</span></span>|<span data-ttu-id="77e71-2769">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-2769">Direct</span></span>|  
|<span data-ttu-id="77e71-2770">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2770">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2771">Zastąp <xref:System.Windows.ContentElement.OnStylusLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2771">Override <xref:System.Windows.ContentElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2772">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2772">Identifies the <see cref="E:System.Windows.ContentElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2773">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2773">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2774">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2774">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2775">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2775">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2776">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2776">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2777">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2777">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2778">Występuje, gdy pióro jest przemieszczane nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2778">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="77e71-2779">Pióro musi dotykać dyskretyzatora, aby zgłosić to zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="77e71-2779">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="77e71-2780">W przeciwnym razie <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> jest zgłaszane w zamian.</span><span class="sxs-lookup"><span data-stu-id="77e71-2780">Otherwise, <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2781">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2781">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2782">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2782">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2783">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2783">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2784">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2784">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2785">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2785">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2786">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2786">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusMoveEvent>|  
|<span data-ttu-id="77e71-2787">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2787">Routing strategy</span></span>|<span data-ttu-id="77e71-2788">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2788">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2789">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2789">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2790">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2790">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="77e71-2791">Zastąp <xref:System.Windows.ContentElement.OnStylusMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2791">Override <xref:System.Windows.ContentElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2792">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2792">Identifies the <see cref="E:System.Windows.ContentElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2793">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2793">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2794">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2794">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2795">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2795">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2796">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2796">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2797">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2797">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2798">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2798">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2799">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusOutOfRange> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2799">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2800">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusOutOfRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2800">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2801">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2801">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2802">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2802">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2803">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2803">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2804">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2804">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="77e71-2805">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2805">Routing strategy</span></span>|<span data-ttu-id="77e71-2806">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2806">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2807">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2807">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2808">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2808">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="77e71-2809">Zastąp <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2809">Override <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2810">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2810">Identifies the <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2811">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2811">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2812">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2812">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2813">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2813">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2814">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2814">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2815">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2815">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2816">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span><span class="sxs-lookup"><span data-stu-id="77e71-2816">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2817">Aby uzyskać więcej informacji na temat gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2817">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="77e71-2818">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusSystemGesture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2818">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2819">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusSystemGesture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2819">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2820">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2820">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2821">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2821">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2822">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2822">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2823">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2823">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="77e71-2824">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2824">Routing strategy</span></span>|<span data-ttu-id="77e71-2825">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2825">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2826">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2826">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="77e71-2827">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2827">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="77e71-2828">Zastąp <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2828">Override <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2829">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2829">Identifies the <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2830">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2830">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2831">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2831">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2832">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2832">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2833">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2833">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2834">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2834">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2835">Występuje, gdy użytkownik zgłasza pióra od dyskretyzatora, gdy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2835">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2836">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2836">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2837">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2837">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="77e71-2838">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="77e71-2838">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="77e71-2839">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="77e71-2839">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2840">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2840">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2841">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2841">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusUpEvent>|  
|<span data-ttu-id="77e71-2842">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2842">Routing strategy</span></span>|<span data-ttu-id="77e71-2843">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2843">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2844">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2844">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="77e71-2845">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2845">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="77e71-2846">Zastąp <xref:System.Windows.ContentElement.OnStylusUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2846">Override <xref:System.Windows.ContentElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2847">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2847">Identifies the <see cref="E:System.Windows.ContentElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2848">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2848">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2849">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2849">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2850">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2850">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2851">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2851">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2852">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2852">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2853">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2853">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="77e71-2854">To zdarzenie jest już może być oznaczony jako obsługiwane przez wewnętrzne implementacje formanty złożone.</span><span class="sxs-lookup"><span data-stu-id="77e71-2854">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="77e71-2855">Zobacz uwagi poniżej.</span><span class="sxs-lookup"><span data-stu-id="77e71-2855">See Remark below.</span></span>  
  
 <span data-ttu-id="77e71-2856"><xref:System.Windows.ContentElement.TextInput> Zdarzeń może już być oznaczony jako obsługiwane przez wewnętrzne implementacje formanty złożone.</span><span class="sxs-lookup"><span data-stu-id="77e71-2856">The <xref:System.Windows.ContentElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="77e71-2857">Na przykład <xref:System.Windows.Controls.TextBox> jest formantem złożone gdzie <xref:System.Windows.ContentElement.TextInput> zdarzeń już jest oznaczony jako obsługiwany; w jego składania.</span><span class="sxs-lookup"><span data-stu-id="77e71-2857">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.ContentElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="77e71-2858">Formanty to zrobić, ponieważ kontrolka wymaga do interpretacji niektóre typy danych wejściowych, np. klawiszy strzałek, jako mające specjalne znaczenie dla tej kontrolki.</span><span class="sxs-lookup"><span data-stu-id="77e71-2858">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="77e71-2859">Jeśli używasz <xref:System.Windows.ContentElement.PreviewTextInput> jako zdarzenie, gdzie możesz dołączyć obsługi wprowadzania tekstu, może zostać wyświetlony w poszukiwaniu lepszych wyników.</span><span class="sxs-lookup"><span data-stu-id="77e71-2859">If you use <xref:System.Windows.ContentElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="77e71-2860">Ta technika zmierzone w większości przypadków gdzie kompozycji formantu ma już oznaczone na to zdarzenie, jako obsłużony i uniemożliwia odbieranie zdarzeń wzdłuż trasy zdarzenia programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="77e71-2860">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="77e71-2861"><xref:System.Windows.ContentElement.TextInput> Zdarzeń umożliwia składnik lub aplikację do nasłuchiwania pod kątem wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2861">The <xref:System.Windows.ContentElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="77e71-2862">Klawiatura jest podstawowym sposobem <xref:System.Windows.ContentElement.TextInput>, ale mowy, pisma ręcznego i inne urządzenia wejściowego może też wiązać <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2862">The keyboard is the primary means of <xref:System.Windows.ContentElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
 <span data-ttu-id="77e71-2863">Ze względu na kombinacje klawiszy - klawiatury domyślne albo za pośrednictwem edytory input method - wiele kluczowych zdarzeń mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2863">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="77e71-2864">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.TextInput> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="77e71-2864">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.TextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="77e71-2865">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.TextInput> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="77e71-2865">Event handlers that are attached to the <xref:System.Windows.ContentElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2866">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2866">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2867">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2867">Identifier field</span></span>|<xref:System.Windows.ContentElement.TextInputEvent>|  
|<span data-ttu-id="77e71-2868">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2868">Routing strategy</span></span>|<span data-ttu-id="77e71-2869">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2869">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2870">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2870">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="77e71-2871">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2871">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="77e71-2872">Zastąp <xref:System.Windows.ContentElement.OnTextInput%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2872">Override <xref:System.Windows.ContentElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2873">Identyfikuje <see cref="E:System.Windows.ContentElement.TextInput" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2873">Identifies the <see cref="E:System.Windows.ContentElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2874">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="77e71-2874">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="77e71-2875">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="77e71-2875">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="77e71-2876">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="77e71-2876">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="77e71-2877">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2877">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="77e71-2878">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2878">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2879">Występuje, gdy palcem dotyka ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2879">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2880">Domyślnie <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia nie występują aż palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="77e71-2880">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="77e71-2881">Naciśnięcie klawisza palcem na ekranie i przytrzymanie bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2881">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="77e71-2882">Naciśnij i przytrzymaj klawisz zachowanie jest odpowiednikiem myszy kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="77e71-2882">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="77e71-2883">Aby spowodować <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia tak szybko, jak palcem dotyka ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączonych właściwości `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2883">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2884">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2884">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2885">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2885">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchDownEvent>|  
|<span data-ttu-id="77e71-2886">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2886">Routing strategy</span></span>|<span data-ttu-id="77e71-2887">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2887">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2888">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2888">Delegate</span></span>|<span data-ttu-id="77e71-2889"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2889"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="77e71-2890">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2890">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="77e71-2891">Zastąp <xref:System.Windows.ContentElement.OnTouchDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2891">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2892">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2892">Identifies the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2893">Występuje, gdy touch z zewnątrz do wewnątrz granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2893">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77e71-2894">To zdarzenie jest zawsze inicjowane, czy urządzenia dotykowe są przechwytywane do tego elementu interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="77e71-2894">This event is always raised, whether or not the touch device is captured to this UI element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2895">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2895">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2896">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2896">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchEnterEvent>|  
|<span data-ttu-id="77e71-2897">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2897">Routing strategy</span></span>|<span data-ttu-id="77e71-2898">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-2898">Direct</span></span>|  
|<span data-ttu-id="77e71-2899">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2899">Delegate</span></span>|<span data-ttu-id="77e71-2900"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2900"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="77e71-2901">Zastąp <xref:System.Windows.ContentElement.OnTouchEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2901">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2902">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2902">Identifies the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2903">Pobiera wszystkie urządzenia dotykowe, które są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2903">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="77e71-2904">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2904">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2905">Pobiera wszystkie urządzenia dotykowe, które są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2905">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="77e71-2906">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2906">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2907">Pobiera wszystkie urządzenia dotykowe, znajdujących się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2907">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="77e71-2908">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiekty znajdujące się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2908">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2909">Pobiera wszystkie urządzenia dotykowe, znajdujących się nad tym elementem lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2909">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="77e71-2910">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przez ten element lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2910">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2911">Występuje, gdy touch z wnętrza poza granicami tego elementu.</span><span class="sxs-lookup"><span data-stu-id="77e71-2911">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2912">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2912">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2913">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2913">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchLeaveEvent>|  
|<span data-ttu-id="77e71-2914">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2914">Routing strategy</span></span>|<span data-ttu-id="77e71-2915">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="77e71-2915">Direct</span></span>|  
|<span data-ttu-id="77e71-2916">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2916">Delegate</span></span>|<span data-ttu-id="77e71-2917"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2917"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="77e71-2918">Zastąp <xref:System.Windows.ContentElement.OnTouchLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2918">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2919">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2919">Identifies the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2920">Występuje po przemieszczeniu palcem na ekranie, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2920">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2921">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2921">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2922">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2922">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchMoveEvent>|  
|<span data-ttu-id="77e71-2923">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2923">Routing strategy</span></span>|<span data-ttu-id="77e71-2924">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2924">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2925">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2925">Delegate</span></span>|<span data-ttu-id="77e71-2926"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2926"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="77e71-2927">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2927">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="77e71-2928">Zastąp <xref:System.Windows.ContentElement.OnTouchMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2928">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2929">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2929">Identifies the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2930">Występuje, gdy zostanie wywołane palcem zniżki w stosunku do ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="77e71-2930">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="77e71-2931">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="77e71-2931">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="77e71-2932">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="77e71-2932">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchUpEvent>|  
|<span data-ttu-id="77e71-2933">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="77e71-2933">Routing strategy</span></span>|<span data-ttu-id="77e71-2934">Propagacja</span><span class="sxs-lookup"><span data-stu-id="77e71-2934">Bubbling</span></span>|  
|<span data-ttu-id="77e71-2935">Delegate</span><span class="sxs-lookup"><span data-stu-id="77e71-2935">Delegate</span></span>|<span data-ttu-id="77e71-2936"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2936"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="77e71-2937">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="77e71-2937">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="77e71-2938">Zastąp <xref:System.Windows.ContentElement.OnTouchUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="77e71-2938">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77e71-2939">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="77e71-2939">Identifies the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>