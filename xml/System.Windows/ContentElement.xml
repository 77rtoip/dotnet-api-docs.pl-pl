<Type Name="ContentElement" FullName="System.Windows.ContentElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa85743d6a364530c4a2bb6414241b766420cfc5" /><Meta Name="ms.sourcegitcommit" Value="f9e71795ba0f9c2dfaa74bec233343ed0f3ffd99" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/14/2019" /><Meta Name="ms.locfileid" Value="57935500" /></Metadata><TypeSignature Language="C#" Value="public class ContentElement : System.Windows.DependencyObject, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentElement extends System.Windows.DependencyObject implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentElement&#xA;Inherits DependencyObject&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentElement : System::Windows::DependencyObject, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type ContentElement = class&#xA;    inherit DependencyObject&#xA;    interface IInputElement&#xA;    interface IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="33a31-101">Udostępnia klasę bazową poziom core WPF dla elementów zawartości.</span><span class="sxs-lookup"><span data-stu-id="33a31-101">Provides a WPF core-level base class for content elements.</span></span> <span data-ttu-id="33a31-102">Elementów zawartości zaprojektowano tak, aby obejrzeć prezentację styl przepływu, modelu przy użyciu intuicyjnego układ zorientowane na znaczników i celowo prosty model obiektu.</span><span class="sxs-lookup"><span data-stu-id="33a31-102">Content elements are designed for flow-style presentation, using an intuitive markup-oriented layout model and a deliberately simple object model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-103"><xref:System.Windows.ContentElement> definiuje następujące wspólne cechy zawartości:</span><span class="sxs-lookup"><span data-stu-id="33a31-103"><xref:System.Windows.ContentElement> defines the following common content characteristics:</span></span>  
  
-   <span data-ttu-id="33a31-104">Dane wejściowe: Wszystkie <xref:System.Windows.ContentElement> pochodnej klasy zapewniają obsługę podstawowych przechwytywania wprowadzania z klawiatury, myszy, operacji przeciągania i upuszczania, kontrolki pióra i akceleratorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-104">Input: All <xref:System.Windows.ContentElement> derived classes provide support for basic input capture from keyboard, mouse, drag-and-drop operations, stylus controls, and accelerators.</span></span>  
  
-   <span data-ttu-id="33a31-105">Focus: Wszystkie <xref:System.Windows.ContentElement> klas pochodnych są potencjalnie focusable.</span><span class="sxs-lookup"><span data-stu-id="33a31-105">Focus: All <xref:System.Windows.ContentElement> derived classes are potentially focusable.</span></span> <span data-ttu-id="33a31-106">(Jednak focusable domyślny stan dla <xref:System.Windows.ContentElement> klasa bazowa jest `false`.</span><span class="sxs-lookup"><span data-stu-id="33a31-106">(However, the default focusable state for the <xref:System.Windows.ContentElement> base class is `false`.</span></span> <span data-ttu-id="33a31-107">Aby uzyskać szczegółowe informacje dotyczące sposobu wprowadzania <xref:System.Windows.ContentElement> focusable, zobacz <xref:System.Windows.ContentElement.Focusable%2A>.) Ponadto ta klasa zawiera [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] służące do przechodzenia przez fokus między powiązanych elementów.</span><span class="sxs-lookup"><span data-stu-id="33a31-107">For details on how to make a <xref:System.Windows.ContentElement> focusable, see <xref:System.Windows.ContentElement.Focusable%2A>.) In addition, this class contains [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that you can use for traversing the focus across related elements.</span></span>  
  
-   <span data-ttu-id="33a31-108">Zdarzenia: <xref:System.Windows.ContentElement> dotyczy zdarzeń powiązanych z danych wejściowych i skoncentrować się; obejmuje również zdarzenia dla zmian w stanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-108">Events: <xref:System.Windows.ContentElement> includes events that are related to input and focus; it also includes events for changes in state.</span></span> <span data-ttu-id="33a31-109">W wielu przypadkach <xref:System.Windows.ContentElement> zdarzenia to zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-109">In many cases, the <xref:System.Windows.ContentElement> events are routed events.</span></span> <span data-ttu-id="33a31-110">W niektórych przypadkach zdarzenia trasowane mają zarówno w przypadku tunelowania, jak i propagacji strategii routingu, zgłaszany jako odrębne zdarzenia w odpowiedzi na samą stanu lub warunku.</span><span class="sxs-lookup"><span data-stu-id="33a31-110">In some cases, routed events have both tunneling and bubbling routing strategies, raised as separate events in response to the same state or condition.</span></span> <span data-ttu-id="33a31-111">Ponadto <xref:System.Windows.ContentElement> definiuje [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] że można Zgłoś kierowane zdarzeń i że można dodawać i usuwać programy obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-111">Also, <xref:System.Windows.ContentElement> defines [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] that can raise routed events and that can add or remove handlers to events.</span></span>  
  
 <span data-ttu-id="33a31-112"><xref:System.Windows.ContentElement> udostępnia wiele typowych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] z <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-112"><xref:System.Windows.ContentElement> shares many common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] with <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="33a31-113">Tych wspólnych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] nie pochodzą z dziedziczenia klasy udostępnione.</span><span class="sxs-lookup"><span data-stu-id="33a31-113">These common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] do not come from a shared class inheritance.</span></span> <span data-ttu-id="33a31-114">Jednak mają nazewnictwa wspólne, podobne zachowanie i podobne wewnętrzną implementację [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] w każdej klasie.</span><span class="sxs-lookup"><span data-stu-id="33a31-114">But they do share common naming, similar behavior, and similar internal implementation of [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in each class.</span></span> <span data-ttu-id="33a31-115">Jest on, ponieważ <xref:System.Windows.ContentElement> i <xref:System.Windows.UIElement> są każdej klasy, które są elementu podstawowego, mimo że każdy ma inną intencji zachowanie modelu obiektu znaczników.</span><span class="sxs-lookup"><span data-stu-id="33a31-115">The similarity is because <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are each classes that are an element base, although each has different intentions for its markup object model behavior.</span></span>  
  
 <span data-ttu-id="33a31-116">W szczególności <xref:System.Windows.UIElement> descends z <xref:System.Windows.Media.Visual>, który zapewnia obsługę grafiki niższego poziomu w celu renderowania <xref:System.Windows.ContentElement> do prostokątny obszar, w tym oknie złożone, natomiast <xref:System.Windows.ContentElement> odracza renderowania tak, aby pojęcia więcej Typowe scenariusze dokumentu, takich jak przepływ i pakowania, aby łatwiej są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-116">In particular, <xref:System.Windows.UIElement> descends from <xref:System.Windows.Media.Visual>, which provides the lower-level graphics support for rendering a <xref:System.Windows.ContentElement> to a rectangular region within a composited window, whereas <xref:System.Windows.ContentElement> defers rendering so that concepts more common to document scenarios, such as flow and wrapping, are more easily supported.</span></span> <span data-ttu-id="33a31-117">Te dwa powiązanych klas także implementować wspólnych interfejsów <xref:System.Windows.IInputElement> i <xref:System.Windows.Media.Animation.IAnimatable>.</span><span class="sxs-lookup"><span data-stu-id="33a31-117">These two related classes also implement the common interfaces <xref:System.Windows.IInputElement> and <xref:System.Windows.Media.Animation.IAnimatable>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="33a31-118"><see cref="T:System.Windows.ContentElement" /> Klasy nie definiuje jeszcze wszystkich aspektów kompletny element zawartości, aby obejrzeć prezentację styl przepływu.</span><span class="sxs-lookup"><span data-stu-id="33a31-118">The <see cref="T:System.Windows.ContentElement" /> class does not yet define all aspects of a complete content element for flow-style presentation.</span></span> <span data-ttu-id="33a31-119"><see cref="T:System.Windows.FrameworkContentElement" /> jest natychmiast pochodnej klasy <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-119"><see cref="T:System.Windows.FrameworkContentElement" /> is an immediately derived class of <see cref="T:System.Windows.ContentElement" />.</span></span> <span data-ttu-id="33a31-120"><see cref="T:System.Windows.FrameworkContentElement" /> zawiera bardziej szczegółowy zestaw dodatkowe elementy członkowskie, które obsługują renderowania <see cref="T:System.Windows.FrameworkContentElement" /> w ramach hosta zawartości i korzystania z systemu poziomie struktury układu WPF.</span><span class="sxs-lookup"><span data-stu-id="33a31-120"><see cref="T:System.Windows.FrameworkContentElement" /> includes a more complete set of additional members that support rendering a <see cref="T:System.Windows.FrameworkContentElement" /> within a content host and using the WPF framework-level layout system.</span></span></para></block>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ContentElement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-121">Initializes a new instance of the <see cref="T:System.Windows.ContentElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33a31-122">Dodaje program obsługi zdarzenia trasowanego określonego zdarzenia trasowane, dodanie obsługi kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-122">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="33a31-123">Identyfikator zdarzenia trasowanego mają być obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-123">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="33a31-124">Odwołanie do implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-124">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="33a31-125">Dodaje program obsługi zdarzenia trasowanego określonego zdarzenia trasowane, dodanie obsługi kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-125">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-126">Tę samą procedurę obsługi zdarzenie, dla którego można dodać wiele razy bez zgłaszania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="33a31-126">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="33a31-127">Jednak program obsługi jest faktycznie wywoływana wiele razy, gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-127">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="33a31-128">W związku z tym należy rozważyć, jak to zachowanie może mieć skutki uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-128">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="33a31-129">Zazwyczaj ta metoda umożliwia implementację metody dostępu "add", aby uzyskać [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorzec dostępu do zdarzenia niestandardowe zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-129">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="33a31-130">Identyfikator zdarzenia the.routed mają być obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-130">An identifier for the.routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="33a31-131">Odwołanie do implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-131">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="33a31-132"><see langword="true" /> można zarejestrować program obsługi w taki sposób, że jest wywoływana, nawet wtedy, gdy zdarzenie trasowane jest oznaczony jako obsługiwane w jej danych zdarzeń; <see langword="false" /> zarejestrować program obsługi z warunkiem domyślne, które nie będą wywoływane, jeśli zdarzenie trasowane jest oznaczona jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-132"><see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="33a31-133">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-133">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="33a31-134">Nie rutynowo poproś o rehandle zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-134">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="33a31-135">Dodaje program obsługi zdarzenia trasowanego określonego zdarzenia trasowane, dodanie obsługi kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-135">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="33a31-136">Określ <paramref name="handledEventsToo" /> jako <see langword="true" /> zapewnienie podana program obsługi, można wywołać dla zdarzenia trasowanego, który już został oznaczony jako obsługiwane w innym elemencie wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-136">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-137">Przetwarzanie zdarzeń wejściowych niskiego poziomu w praktycznym sposobem jest złożonym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="33a31-137">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="33a31-138">Wiele kontrolek zaimplementować zachowanie, gdzie określone zdarzenie jest oznaczony jako obsłużony i zastępuje inne zdarzenie bardziej intuicyjne.</span><span class="sxs-lookup"><span data-stu-id="33a31-138">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="33a31-139">Ogólnie rzecz biorąc kontrolki tylko oznaczy zdarzenie wejściowe platformy jako obsługiwane w przypadku niektórych zamiar projekt, aby to zrobić.</span><span class="sxs-lookup"><span data-stu-id="33a31-139">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="33a31-140">W niektórych scenariuszach te zamiarach projekt może nie być, wymaga usługi określonego obsługi zdarzeń wejściowych.</span><span class="sxs-lookup"><span data-stu-id="33a31-140">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="33a31-141">Jest on przeznaczony dla tych scenariuszy tego rejestrowanie obsługi za pomocą `handledEventsToo` jako `true` jest odpowiednia.</span><span class="sxs-lookup"><span data-stu-id="33a31-141">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="33a31-142">Jednak możesz nie należy tego robić regularnie.</span><span class="sxs-lookup"><span data-stu-id="33a31-142">But you should not do this routinely.</span></span> <span data-ttu-id="33a31-143">Wywoływanie programów obsługi w odpowiedzi na wszystkie zdarzenia, nawet jeśli obsługiwany będzie skomplikować własnych zdarzeń aplikacji logiki przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="33a31-143">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="33a31-144">Jeśli logika obsługi jest istotne, mogą pojawić się spadek wydajności.</span><span class="sxs-lookup"><span data-stu-id="33a31-144">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="33a31-145">Należy zarezerwować użytkowania dołączanie programy obsługi dla już obsługi zdarzeń dla sytuacji, w którym możesz mieć już odnaleziony podczas procesu projektowania, że niektóre formanty obsługi zdarzeń, które chcesz nadal obsługiwać za pomocą aplikacji logiki.</span><span class="sxs-lookup"><span data-stu-id="33a31-145">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="33a31-146">Inna technika unikanie klasy zachowania niektórych kombinacji kontroli zdarzenie obsługi polega na użyciu alternatywne (wersja zapoznawcza) to zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-146">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="33a31-147">Na przykład jeśli <xref:System.Windows.ContentElement.MouseLeftButtonDown> jest oznaczony jako obsłużonych Obsługa klasy może być możliwe dodanie obsługi <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="33a31-147">For example, if <xref:System.Windows.ContentElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="33a31-148">Tę samą procedurę obsługi zdarzenie, dla którego można dodać wiele razy bez zgłaszania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="33a31-148">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="33a31-149">Jednak program obsługi jest faktycznie wywoływana wiele razy, gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-149">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="33a31-150">W związku z tym należy rozważyć, jak to zachowanie może mieć skutki uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-150">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="33a31-151">Zazwyczaj ta metoda umożliwia implementację metody dostępu "add", aby uzyskać [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorzec dostępu do zdarzenia niestandardowe zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-151">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33a31-152">Poniższy przykład wykonuje program obsługi wywoływane na <xref:System.Windows.FrameworkElement.Initialized> zdarzenie na stronie, która dołącza obsługę zdefiniowanych do jednego z nazwanych elementów na stronie za pomocą `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-152">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="33a31-153">Czy można wywołać ten program obsługi, nawet wtedy, gdy inny element wzdłuż trasy oznaczone dane zdarzenia udostępnionego jako obsłużony przed osiągnięciem element obsługi dla trasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-153">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="33a31-154">Programy obsługi są dodawane do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-154">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="33a31-155">Dane zdarzenia, które służy do dodawania obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-155">The event data that is used to add the handlers.</span></span> <span data-ttu-id="33a31-156">Ta metoda używa <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości argumentów, aby utworzyć procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-156">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the arguments to create the handlers.</span></span></param>
        <summary><span data-ttu-id="33a31-157">Dodaje obsługi do określonego <see cref="T:System.Windows.EventRoute" /> dla bieżącego <see cref="T:System.Windows.ContentElement" /> kolekcję procedur obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-157">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.ContentElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-158">Użyj tej metody dla elementów hosta zawartości (niezależnie od tego, czy implementują <xref:System.Windows.IContentHost>) aby można było dodać procedury obsługi dla hosta zawartości elementów podrzędnych do hosta <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="33a31-158">Use this method for content host elements (regardless whether they implement <xref:System.Windows.IContentHost>) in order to add handlers for the content host child elements to the host <xref:System.Windows.EventRoute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.ContentElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-159">Pobiera lub ustawia wartość wskazującą, czy ten element może służyć jako obiekt docelowy operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-159">Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="33a31-160"><see langword="true" /> Jeśli ten element może być używany jako obiekt docelowy operacji przeciągania i upuszczania. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-160"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-161">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-161">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-162">Operacje przeciągania i upuszczania nie są domyślnie włączone i musi być włączona celowo <xref:System.Windows.ContentElement.AllowDrop%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-162">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.ContentElement.AllowDrop%2A> to  `true`.</span></span> <span data-ttu-id="33a31-163">Po przekroczeniu tego ustawienia podstawowe, przeciągnij i upuść działanie zależy wyłącznie od implementacji i nie jest zdefiniowany przez <xref:System.Windows.ContentElement> lub dowolnej klasy elementu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="33a31-163">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.ContentElement> or any other base element class.</span></span> <span data-ttu-id="33a31-164">Niektóre kontrolki, na przykład <xref:System.Windows.Controls.RichTextBox>, mają domyślne zachowanie, ale nie <xref:System.Windows.ContentElement> klasy pochodnej mają takie zachowanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-164">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior, but no <xref:System.Windows.ContentElement> derived classes have such a behavior.</span></span> <span data-ttu-id="33a31-165">Aby uzyskać więcej informacji na temat przeciągania i upuszczania, zobacz [przeciągania i upuszczania Przegląd](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-165">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="33a31-166"><xref:System.Windows.FrameworkContentElement> zastępuje metadanych dla tej właściwości zależności w swojej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-166"><xref:System.Windows.FrameworkContentElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="33a31-167">W szczególności <xref:System.Windows.FrameworkContentElement> wskazuje, że ta właściwość umożliwia dziedziczenie wartości właściwości (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> jest `true` w metadanych).</span><span class="sxs-lookup"><span data-stu-id="33a31-167">Specifically, <xref:System.Windows.FrameworkContentElement> designates that this property allows property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="33a31-168">Dziedziczenie wartości właściwości w tym kontekście oznacza, że jeśli są elementami podrzędnymi bez innych wartości dla <xref:System.Windows.ContentElement.AllowDrop%2A> przypisane przy użyciu wartości lokalnych lub style, wartość przypisaną wartość (ponownie, albo w stylach domyślnie najbliższym elemencie nadrzędnym wartości lub wartości lokalnej), a następnie wartość z elementu nadrzędnego jest przypisany do wszystkich elementów podrzędnych nieprzypisane przez system właściwości.</span><span class="sxs-lookup"><span data-stu-id="33a31-168">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.ContentElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from that parent element is assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="33a31-169">Oznacza to, że można określić, czy do Zezwalaj na operacje listy w elemencie głównym, a następnie propaguje wartość do wszystkich <xref:System.Windows.FrameworkContentElement> elementy podrzędne, które nie specjalnie przypisano jej wartości `false`.</span><span class="sxs-lookup"><span data-stu-id="33a31-169">This means that you can specify whether to allow drop operations at the root element and then propagate the value to all <xref:System.Windows.FrameworkContentElement> child elements that have not specifically assigned it a value of `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-170">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-170">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-171">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-171">Identifier field</span></span>|<xref:System.Windows.ContentElement.AllowDropProperty>|  
|<span data-ttu-id="33a31-172">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-172">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-173">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-173">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33a31-174">Poniższy przykład ustawia <xref:System.Windows.ContentElement.AllowDrop%2A> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="33a31-174">The following example sets <xref:System.Windows.ContentElement.AllowDrop%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#AllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#allowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-175">Identyfikuje <see cref="P:System.Windows.ContentElement.AllowDrop" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-175">Identifies the <see cref="P:System.Windows.ContentElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33a31-176">Stosuje animacji z właściwością określona zależność, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-176">Applies an animation to a specified dependency property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="33a31-177">Identyfikator właściwości animować.</span><span class="sxs-lookup"><span data-stu-id="33a31-177">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="33a31-178">Zegar animacji, formantów, która deklaruje animacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-178">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="33a31-179">Stosuje animacji z właściwością określona zależność, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-179">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="33a31-180">Istniejących animacjach zostaną zatrzymane i zastąpione nowej animacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-180">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-181">Aby usunąć animacji z właściwością, należy określić identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="33a31-181">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="33a31-182">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawowa.</span><span class="sxs-lookup"><span data-stu-id="33a31-182">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="33a31-183">Zegar pierwotnie skojarzone animacji nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="33a31-183">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="33a31-184">Inne animacji przypisane do tego zegara będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="33a31-184">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="33a31-185">Właściwość animować.</span><span class="sxs-lookup"><span data-stu-id="33a31-185">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="33a31-186">Zegar animacji, formantów, która deklaruje animacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-186">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="33a31-187">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-187">A value of the enumeration.</span></span> <span data-ttu-id="33a31-188">Wartość domyślna to <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, co spowoduje zatrzymanie wszelkich istniejących animacji i Zastąp nowym plikiem.</span><span class="sxs-lookup"><span data-stu-id="33a31-188">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="33a31-189">Dotyczy animacji właściwości określonej zależności w tym elemencie, umożliwiającym określenie, co się stanie, jeśli właściwość jest już uruchomiona Animacja.</span><span class="sxs-lookup"><span data-stu-id="33a31-189">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-190">Aby usunąć animacji z właściwością, należy określić identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="33a31-190">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="33a31-191">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawowa.</span><span class="sxs-lookup"><span data-stu-id="33a31-191">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="33a31-192">Zegar pierwotnie skojarzone animacji nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="33a31-192">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="33a31-193">Inne animacji przypisane do tego zegara będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="33a31-193">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-194">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-194">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="33a31-195"><see langword="true" /> Jeśli co najmniej jeden touch, które są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-195"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-196">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-196">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-197">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="33a31-197">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="33a31-198"><see langword="true" /> Jeśli co najmniej jeden touch, które są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-198"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-199">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-199">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-200">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia wciśnięto się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-200">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="33a31-201"><see langword="true" /> Jeśli co najmniej jednego dotknięcia jest wciśnięty nad tym elementem; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-201"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-202">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-202">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-203">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia naciśnięciu za pośrednictwem tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="33a31-203">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="33a31-204"><see langword="true" /> Jeśli co najmniej jednego dotknięcia jest wciśnięty za pośrednictwem tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-204"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-205">Identyfikuje <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-205">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33a31-206">W tym elemencie, rozpoczyna się animacji dla określonej właściwości animowany.</span><span class="sxs-lookup"><span data-stu-id="33a31-206">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="33a31-207">Właściwość, animować, określany jako identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-207">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="33a31-208">Oś czasu animacji, aby rozpocząć.</span><span class="sxs-lookup"><span data-stu-id="33a31-208">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="33a31-209">W tym elemencie, rozpoczyna się animacji dla określonej właściwości animowany.</span><span class="sxs-lookup"><span data-stu-id="33a31-209">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-210">Podczas sprawdzania, czy właściwość jest animowany, pamiętaj, że animacja rozpocznie się i uznaje się animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="33a31-210">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="33a31-211">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, a następnie zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="33a31-211">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="33a31-212">Jeśli cały `animation` wartość `null`wszystkich animacji są usuwane z właściwości i wartości właściwości wraca do swojej wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="33a31-212">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="33a31-213">Oś czasu animacji pierwotnie skojarzone nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="33a31-213">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="33a31-214">Inne animacji, przypisany do tej osi czasu będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="33a31-214">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="33a31-215">Właściwość, animować, określany jako identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-215">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="33a31-216">Oś czasu animacji, które mają być stosowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-216">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="33a31-217">Wartość wyliczenia, która określa, jak nowej animacji współdziała z dowolnego animacji bieżącego (uruchomione), które już mają wpływ na wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="33a31-217">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="33a31-218">Rozpoczyna się, które określonych animacji dla określonej właściwości animowany, w tym elemencie, przy użyciu opcji określania, co się stanie, jeśli właściwość jest już uruchomiona Animacja.</span><span class="sxs-lookup"><span data-stu-id="33a31-218">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-219">Podczas sprawdzania, czy właściwość jest animowany, pamiętaj, że animacja rozpocznie się i uznaje się animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="33a31-219">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="33a31-220">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, a następnie zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="33a31-220">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="33a31-221">Jeśli cały `animation` wartość `null`wszystkich animacji są usuwane z właściwości i wartości właściwości wraca do swojej wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="33a31-221">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="33a31-222">Oś czasu animacji pierwotnie skojarzone nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="33a31-222">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="33a31-223">Inne animacji, przypisany do tej osi czasu będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="33a31-223">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="contentElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-224">Próbuje wymusić przechwytywanie myszy do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-224">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="33a31-225"><see langword="true" /> Jeśli przycisk myszy jest pomyślnie przechwycono; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-225"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-226">Mają być przechwycone, element musi być włączona.</span><span class="sxs-lookup"><span data-stu-id="33a31-226">To be captured, an element must be enabled.</span></span> <span data-ttu-id="33a31-227">Sprawdź, czy <xref:System.Windows.ContentElement.IsEnabled%2A> jest `true` przed wywołaniem <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-227">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="33a31-228">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureMouse%2A> zwraca `true`, następnie <xref:System.Windows.ContentElement.IsMouseCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-228">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.ContentElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="33a31-229">Wywołanie <xref:System.Windows.ContentElement.CaptureMouse%2A> zwraca `true`, a następnie <xref:System.Windows.ContentElement.GotMouseCapture> i <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenia są wywoływane, za pomocą <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> w zdarzeniu dane raportowane jako element gdzie <xref:System.Windows.ContentElement.CaptureMouse%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="33a31-229">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotMouseCapture> and <xref:System.Windows.ContentElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.ContentElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="33a31-230">Jeśli wymusisz przechwytywania, może zakłócać istniejącego przechwycenia — szczególnie w przypadku przechwytywania, które odnoszą się do przeciągania i upuszczania za pomocą myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-230">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="33a31-231">Aby wyczyścić przechwytywanie myszy ze wszystkich elementów, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> z `element` podana jako parametr `null`.</span><span class="sxs-lookup"><span data-stu-id="33a31-231">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33a31-232">Poniższy przykład przechwytuje mysz lub zwalnia przechwytywanie, podstawą tego, czy przycisk myszy jest już przechwytywany przez element.</span><span class="sxs-lookup"><span data-stu-id="33a31-232">The following example captures the mouse or releases capture, based on whether the mouse is already captured by the element.</span></span> <span data-ttu-id="33a31-233">Należy pamiętać, że w tym przykładzie rzutuje elementu docelowego potencjalnych przechwytywania <xref:System.Windows.IInputElement> interfejsu, a w związku z tym początkowo jest wywoływany <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="33a31-233">Note that this example casts the prospective capture target element to the <xref:System.Windows.IInputElement> interface, and is thus initially calling the <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="33a31-234">Rzutowanie na <xref:System.Windows.IInputElement> to technika, która jest przydatne w przypadku braku pewności, czy element ma być przechwytywanie myszy jest <xref:System.Windows.UIElement> lub <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-234">Casting to <xref:System.Windows.IInputElement> is a technique that is useful if you are unsure whether the element you want to have capture the mouse is a <xref:System.Windows.UIElement> or a <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="33a31-235">Rzutowanie interfejsu, jak i metody interfejsu wywołać następnie wywołania odpowiedniej implementacji CaptureMouse specyficznych dla typu wewnętrznie bez konieczności korzystania z wersji próbnej rzutować albo <xref:System.Windows.UIElement> lub <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-235">The interface cast and the interface method call then calls the appropriate type-specific CaptureMouse implementation internally without requiring a trial cast to either <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="33a31-236">Ta sama technika rzutowania działa dla innych członków, <xref:System.Windows.IInputElement> definiuje, na przykład wiele zdarzeń związanych z danych wejściowych i innych metod dotyczących danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="33a31-236">This same casting technique works for other members that <xref:System.Windows.IInputElement> defines, for instance many of the input-related events, and other input-related methods.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="contentElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-237">Próbuje wymusić Przechwytywanie pióra do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-237">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="33a31-238"><see langword="true" /> Jeśli pióro pomyślnie są przechwytywane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-238"><see langword="true" /> if the stylus is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-239">Domyślna implementacja oparte na podstawowej domyślnego urządzenia pióro zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-239">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="33a31-240">Jednak jeśli rozszerzania wejściowych urządzeń, które zapewniają implementację urządzenia wejściowego systemu jest możliwe utworzenie systemu z implementacją urządzenia alternatywnych pióra, która może zwracać różne wyniki.</span><span class="sxs-lookup"><span data-stu-id="33a31-240">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="33a31-241">Po przechwyceniu pióra przez element, odbierze wejście pióra, nawet wtedy, gdy pióro znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="33a31-241">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="33a31-242">Pióro są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-242">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="33a31-243">Wywołanie tej metody wywołuje odpowiednią statyczne <xref:System.Windows.Input.Stylus> metoda <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-243">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="33a31-244">Zachowanie rzeczywistego przechwytywania jest implementowany przez wdrożenia urządzeniami active pióra.</span><span class="sxs-lookup"><span data-stu-id="33a31-244">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="33a31-245">Mają być przechwycone, element musi być włączona.</span><span class="sxs-lookup"><span data-stu-id="33a31-245">To be captured, an element must be enabled.</span></span> <span data-ttu-id="33a31-246">Sprawdź, czy <xref:System.Windows.ContentElement.IsEnabled%2A> jest `true` zwrócić przed wywołaniem <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-246">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="33a31-247">Jeśli wywołanie <xref:System.Windows.ContentElement.CaptureStylus%2A> zwraca `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-247">If calling <xref:System.Windows.ContentElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="33a31-248">Urządzenie do przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="33a31-248">The device to capture.</span></span></param>
        <summary><span data-ttu-id="33a31-249">Próbuje wymusić przechwytywania touch do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-249">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="33a31-250"><see langword="true" /> Jeśli określony touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-250"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-251"><xref:System.Windows.ContentElement.CaptureTouch%2A> zwróci `false` Jeśli <xref:System.Windows.Input.TouchDevice> aktualnie są przechwytywane do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-251"><xref:System.Windows.ContentElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="33a31-252">Jeśli <xref:System.Windows.ContentElement.CaptureTouch%2A> zwraca `true`, a następnie <xref:System.Windows.ContentElement.GotTouchCapture> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-252">If <xref:System.Windows.ContentElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="33a31-253">Aby zwolnić przechwytywania jednym naciśnięciem przycisku z tego elementu, należy użyć <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> metodę i określić urządzeń dotykowych do wydania.</span><span class="sxs-lookup"><span data-stu-id="33a31-253">To release capture of a single touch from this element, use the <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="33a31-254">Aby zwolnić wszystkie ma z tego elementu, należy użyć <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="33a31-254">To release all touches from this element, use the <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a31-255"><paramref name="touchDevice" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-255"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.ContentElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-256">Pobiera kolekcję <see cref="T:System.Windows.Input.CommandBinding" /> obiekty, które są skojarzone z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-256">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="33a31-257">Kolekcja wszystkich <see cref="T:System.Windows.Input.CommandBinding" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="33a31-257">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-258">A <xref:System.Windows.Input.CommandBinding> włącza obsługę określonego polecenia dla tego elementu oraz deklaruje powiązanie między poleceniem, jego zdarzeń i obsługi, które są dołączone przez ten element.</span><span class="sxs-lookup"><span data-stu-id="33a31-258">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element and declares the linkage between a command, its events, and the handlers that are attached by this element.</span></span>  
  
 <span data-ttu-id="33a31-259">Inny typowy sposób, aby wypełnić <xref:System.Windows.ContentElement.CommandBindings%2A> kolekcji jest użycie <xref:System.Windows.Input.CommandManager> metody programowo.</span><span class="sxs-lookup"><span data-stu-id="33a31-259">Another typical way to populate the <xref:System.Windows.ContentElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="33a31-260">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="33a31-260">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="33a31-261">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="33a31-261">XAML Values</span></span>  
 <span data-ttu-id="33a31-262">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="33a31-262">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="33a31-263">Co najmniej jeden <xref:System.Windows.Input.CommandBinding> elementów.</span><span class="sxs-lookup"><span data-stu-id="33a31-263">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="33a31-264">Każdy z nich powinien mieć <xref:System.Windows.Input.CommandBinding.Command%2A> znane polecenie ustawioną wartość atrybutu i atrybuty ustawione dla <xref:System.Windows.Input.CommandBinding.CanExecute> i <xref:System.Windows.Input.CommandBinding.Executed> implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-264">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="33a31-265">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="33a31-265">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-266">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element docelowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="33a31-266">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-267">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-267">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-268">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-268">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-269">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-269">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-270">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-270">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragEnterEvent>|  
|<span data-ttu-id="33a31-271">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-271">Routing strategy</span></span>|<span data-ttu-id="33a31-272">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-272">Bubbling</span></span>|  
|<span data-ttu-id="33a31-273">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-273">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="33a31-274">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="33a31-274">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="33a31-275">Zastąp <xref:System.Windows.ContentElement.OnDragEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-275">Override <xref:System.Windows.ContentElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-276">Identyfikuje <see cref="E:System.Windows.ContentElement.DragEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-276">Identifies the <see cref="E:System.Windows.ContentElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-277">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-277">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-278">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-278">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-279">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-279">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-280">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-280">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-281">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-281">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-282">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element źródłowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="33a31-282">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-283">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-283">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-284">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-284">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-285">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-285">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-286">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-286">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragLeaveEvent>|  
|<span data-ttu-id="33a31-287">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-287">Routing strategy</span></span>|<span data-ttu-id="33a31-288">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-288">Bubbling</span></span>|  
|<span data-ttu-id="33a31-289">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-289">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="33a31-290">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="33a31-290">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="33a31-291">Zastąp <xref:System.Windows.ContentElement.OnDragLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-291">Override <xref:System.Windows.ContentElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-292">Identyfikuje <see cref="E:System.Windows.ContentElement.DragLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-292">Identifies the <see cref="E:System.Windows.ContentElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-293">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-293">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-294">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-294">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-295">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-295">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-296">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-296">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-297">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-297">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-298">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-298">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-299">To zdarzenie występuje nawet wtedy, gdy przeciągania pochodzi z granicami elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-299">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="33a31-300">Jeśli przeciąganie rozpoczyna się poza granicami i przenosi wewnątrz, to zdarzenie jest również inicjowane, jak również <xref:System.Windows.ContentElement.DragEnter> i powiązane zdarzenia (wersja zapoznawcza).</span><span class="sxs-lookup"><span data-stu-id="33a31-300">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.ContentElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="33a31-301">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-301">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-302">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.DragOver> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-302">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-303">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-303">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-304">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-304">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragOverEvent>|  
|<span data-ttu-id="33a31-305">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-305">Routing strategy</span></span>|<span data-ttu-id="33a31-306">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-306">Bubbling</span></span>|  
|<span data-ttu-id="33a31-307">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-307">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="33a31-308">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="33a31-308">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="33a31-309">Zastąp <xref:System.Windows.ContentElement.OnDragOver%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-309">Override <xref:System.Windows.ContentElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-310">Identyfikuje <see cref="E:System.Windows.ContentElement.DragOver" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-310">Identifies the <see cref="E:System.Windows.ContentElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-311">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-311">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-312">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-312">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-313">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-313">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-314">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-314">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-315">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-315">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-316">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania za pomocą tego elementu jako element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-316">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-317">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-317">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-318">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.Drop> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-318">Event handlers that are attached to the <xref:System.Windows.ContentElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-319">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-319">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-320">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-320">Identifier field</span></span>|<xref:System.Windows.ContentElement.DropEvent>|  
|<span data-ttu-id="33a31-321">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-321">Routing strategy</span></span>|<span data-ttu-id="33a31-322">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-322">Bubbling</span></span>|  
|<span data-ttu-id="33a31-323">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-323">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="33a31-324">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="33a31-324">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="33a31-325">Zastąp <xref:System.Windows.ContentElement.OnDrop%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-325">Override <xref:System.Windows.ContentElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-326">Identyfikuje <see cref="E:System.Windows.ContentElement.Drop" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-326">Identifies the <see cref="E:System.Windows.ContentElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-327">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-327">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-328">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-328">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-329">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-329">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-330">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-330">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-331">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-331">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="contentElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-332">Próbuje ustawić fokus na ten element.</span><span class="sxs-lookup"><span data-stu-id="33a31-332">Attempts to set focus to this element.</span></span></summary>
        <returns><span data-ttu-id="33a31-333"><see langword="true" /> Jeśli mógł zostać ustawiony fokus klawiatury do tego elementu; <see langword="false" /> wywołanie tej metody nie wymuszenia fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-333"><see langword="true" /> if keyboard focus could be set to this element; <see langword="false" /> if this method call did not force focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-334">Jako focusable, <xref:System.Windows.ContentElement.Focusable%2A> i <xref:System.Windows.ContentElement.IsEnabled%2A> muszą być `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-334">To be focusable, <xref:System.Windows.ContentElement.Focusable%2A> and <xref:System.Windows.ContentElement.IsEnabled%2A> must both be `true`.</span></span> <span data-ttu-id="33a31-335">Należy pamiętać, że niemal we wszystkich <xref:System.Windows.ContentElement> klas pochodnych nie są <xref:System.Windows.ContentElement.Focusable%2A> domyślnie.</span><span class="sxs-lookup"><span data-stu-id="33a31-335">Note that nearly all <xref:System.Windows.ContentElement> derived classes are not <xref:System.Windows.ContentElement.Focusable%2A> by default.</span></span>  
  
 <span data-ttu-id="33a31-336">Nawet, jeśli element jest obsługa zdarzeń focusable i włączony, w obrębie określonego drzewa, (takie jak w przypadku kontrolek złożonych) może odpowiadać na zdarzenia fokusu w wersji zapoznawczej, nie zezwalając fokus, więc ta metoda zwróci `false`.</span><span class="sxs-lookup"><span data-stu-id="33a31-336">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="33a31-337">Fokus na ogół jest regulowane przez dwie oddzielne koncepcje: za pomocą klawiatury fokus i fokus logiczny, które nie zawsze są identyczne.</span><span class="sxs-lookup"><span data-stu-id="33a31-337">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="33a31-338">Ta metoda ustawia fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="33a31-338">This method sets the logical focus.</span></span> <span data-ttu-id="33a31-339">Brak programowy sposób specjalnie; Ustaw fokus klawiatury fokus klawiatury jest określany przez dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="33a31-339">There is no programmatic means to set keyboard focus specifically; keyboard focus is determined by user input.</span></span> <span data-ttu-id="33a31-340">Aby uzyskać więcej informacji, zobacz [Przegląd fokus](~/docs/framework/wpf/advanced/focus-overview.md) i [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-340">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="33a31-341">Jeśli wywołanie <xref:System.Windows.ContentElement.Focus%2A> zwraca `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> i <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> są również `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-341">If calling <xref:System.Windows.ContentElement.Focus%2A> returns `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> and <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="33a31-342">Jeśli powiązane właściwości nie są już `true`, gdy wywołujesz <xref:System.Windows.ContentElement.Focus%2A>, co najmniej jeden z następujących zdarzeń, które są wywoływane w następującej kolejności: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (źródło jest nowy obiekt docelowy fokus), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (źródło jest nowy obiekt docelowy koncentracji uwagi).</span><span class="sxs-lookup"><span data-stu-id="33a31-342">If the related properties are not already `true`, when you call <xref:System.Windows.ContentElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33a31-343">Poniższy przykład jest obsługi zdarzeń załadować strony, który umożliwia znalezienie określonej nazwie akapit w dokumencie i ustawia fokus do niego.</span><span class="sxs-lookup"><span data-stu-id="33a31-343">The following example is a page-loaded event handler that finds a specified named paragraph in the document and sets focus to it.</span></span> <span data-ttu-id="33a31-344">Nie są focusable domyślnie; akapitów tego konkretnego akapitu miał zastosowanego stylu (niewyświetlany) które używane stylu <xref:System.Windows.Setter> się focusable.</span><span class="sxs-lookup"><span data-stu-id="33a31-344">Paragraphs are not focusable by default; this particular paragraph had a style applied (not shown) that used a style <xref:System.Windows.Setter> to make it focusable.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#Focus](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#focus)]
 [!code-vb[ContentElementsSmorgasbord#Focus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#focus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.ContentElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-345">Pobiera lub ustawia wartość wskazującą, czy element może odebrać fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-345">Gets or sets a value that indicates whether the element can receive focus.</span></span></summary>
        <value><span data-ttu-id="33a31-346"><see langword="true" /> Jeśli element jest focusable; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-346"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="33a31-347">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-347">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-348">Tylko wąsko zdefiniowany element otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="33a31-348">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="33a31-349">Niektóre klasy pochodne mogą zastąpić metadane dla tej właściwości zależności w taki sposób, że klasa pochodna jest focusable domyślnie.</span><span class="sxs-lookup"><span data-stu-id="33a31-349">Certain derived classes might override metadata for this dependency property such that the derived class is focusable by default.</span></span>  
  
 <span data-ttu-id="33a31-350">W przypadku dziedziczonych przez <xref:System.Windows.Documents.Hyperlink> lub jej klasy pochodne <xref:System.Windows.Documents.Hyperlink> zastępuje metadanych dla tej właściwości zależności i zmienia wartość domyślna tej właściwości to `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-350">When inherited by <xref:System.Windows.Documents.Hyperlink> or its derived classes, <xref:System.Windows.Documents.Hyperlink> overrides the metadata for this dependency property and redefines the default value of this property to be `true`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-351">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-351">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-352">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-352">Identifier field</span></span>|<xref:System.Windows.ContentElement.FocusableProperty>|  
|<span data-ttu-id="33a31-353">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-353">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-354">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-354">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33a31-355">Poniższy przykład tworzy styl, który sprawia, że <xref:System.Windows.Documents.Paragraph> focusable domyślnie i nadaje jej zachowanie visual po odebraniu fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-355">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33a31-356">Po utworzeniu klasy pochodnej z <see cref="T:System.Windows.ContentElement" />, należy wziąć pod uwagę, czy chcesz, aby Twoje element ma być focusable, ponieważ domyślnie nie będzie focusable.</span><span class="sxs-lookup"><span data-stu-id="33a31-356">When you derive from <see cref="T:System.Windows.ContentElement" />, consider whether you want your element to be focusable, because by default it will not be focusable.</span></span> <span data-ttu-id="33a31-357">Jeśli chcesz, aby Twoje element ma być focusable, zastąpić metadane dla tej właściwości w swojej klasie pochodnej, statyczny Konstruktor w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="33a31-357">If you want your element to be focusable, override the metadata for this property in your derived class static constructor as follows:</span></span> 
<span data-ttu-id="33a31-358">[! code-csharp[CorePseudocode #UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [! kodu vb[CorePseudocode #UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span><span class="sxs-lookup"><span data-stu-id="33a31-358">[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span></span> 
<span data-ttu-id="33a31-359">gdzie <paramref name="myElement" /> jest nazwą klasy typu, który jest zastąpienie wartości metadanych na.</span><span class="sxs-lookup"><span data-stu-id="33a31-359">where <paramref name="myElement" /> is the class name of the type that you are overriding the metadata value on.</span></span></para></block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-360">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.Focusable" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="33a31-360">Occurs when the value of the <see cref="P:System.Windows.ContentElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-361">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-361">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-362">Identyfikuje <see cref="P:System.Windows.ContentElement.Focusable" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-362">Identifies the <see cref="P:System.Windows.ContentElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="contentElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="33a31-363">Właściwość the.Dependency do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-363">The.dependency property to check.</span></span></param>
        <summary><span data-ttu-id="33a31-364">Zwraca wartość właściwości podstawowej dla określonej właściwości dla tego elementu, bez uwzględnienia wszelkie animowane wartość z bieżącą lub zatrzymać animację.</span><span class="sxs-lookup"><span data-stu-id="33a31-364">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="33a31-365">Właściwość wartości tak, jakby nie animacji są dołączone do właściwości określonej zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-365">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-366">Jeśli nie animacje są dołączone do właściwości, a następnie <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> wartość zwracana jest zawsze taka sama jak <xref:System.Windows.DependencyObject.GetValue%2A> zwracają wartość.</span><span class="sxs-lookup"><span data-stu-id="33a31-366">If no animations are attached to the property, then the <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="33a31-367">W przypadku dołączonych animacji, następnie wszystkie możliwe animacje uzyskane wartości w tym początek wartości są ignorowane i wartość właściwości jest ustalana na wszystkich innych możliwych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="33a31-367">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="33a31-368">Aby uzyskać więcej informacji, zobacz [następstwo wartości właściwości](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-368">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="contentElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-369">Po przesłonięciu w klasie pochodnej zwraca alternatywę [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] nadrzędny dla tego elementu, jeśli istnieje visual elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="33a31-369">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="33a31-370">Obiekt, który, jeśli implementacja klasy pochodnej z połączeniem alternatywny nadrzędny do raportu.</span><span class="sxs-lookup"><span data-stu-id="33a31-370">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-371">Domyślna implementacja wirtualnych tej metody zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="33a31-371">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="33a31-372"><xref:System.Windows.FrameworkContentElement> udostępnia implementację praktyczne.</span><span class="sxs-lookup"><span data-stu-id="33a31-372"><xref:System.Windows.FrameworkContentElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="33a31-373">Alternatywne nadrzędnych są używane do routingu zdarzeń, w przypadkach, gdy element tworzy alternatywnych nadrzędnej struktury tak, aby jego zdarzeń są kierowane w taki sposób, że diverges ze standardowego wzorca routingu w górę drzewa wizualnego do standardowego elementu nadrzędnego, lub w dół w Wyświetl podgląd strategii routingu.</span><span class="sxs-lookup"><span data-stu-id="33a31-373">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-374">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania i upuszczania, które obejmuje ten element.</span><span class="sxs-lookup"><span data-stu-id="33a31-374">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-375"><xref:System.Windows.ContentElement.GiveFeedback> Zdarzeń umożliwia źródło zdarzenia przeciągania, aby modyfikować wygląd wskaźnika myszy, aby dać wizualną opinię użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-375">The <xref:System.Windows.ContentElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="33a31-376">Wizualną opinię wzmacnia to, że trwa operacja przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-376">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="33a31-377">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.GiveFeedback> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-377">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-378">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GiveFeedback> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-378">Event handlers that are attached to the <xref:System.Windows.ContentElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-379">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-379">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-380">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-380">Identifier field</span></span>|<xref:System.Windows.ContentElement.GiveFeedbackEvent>|  
|<span data-ttu-id="33a31-381">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-381">Routing strategy</span></span>|<span data-ttu-id="33a31-382">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-382">Bubbling</span></span>|  
|<span data-ttu-id="33a31-383">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-383">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="33a31-384">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="33a31-384">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="33a31-385">Zastąp <xref:System.Windows.ContentElement.OnGiveFeedback%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-385">Override <xref:System.Windows.ContentElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-386">Identyfikuje <see cref="E:System.Windows.ContentElement.GiveFeedback" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-386">Identifies the <see cref="E:System.Windows.ContentElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-387">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-387">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-388">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-388">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-389">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-389">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-390">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-390">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-391">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-391">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-392">Występuje, gdy ten element pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="33a31-392">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-393">Fokus logiczny różni się od fokus klawiatury, gdy fokus jest celowo wymuszone za pomocą wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="33a31-393">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="33a31-394">W tym scenariuszu fokus klawiatury pozostaje, gdzie jest i element gdzie <xref:System.Windows.ContentElement.Focus%2A> wywoływana jest metoda nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="33a31-394">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="33a31-395">Bardziej precyzyjne interpretacji to zdarzenie jest jej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsFocused%2A> zmiany właściwości elementu w trasie z `false` do `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-395">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="33a31-396">Ponieważ to zdarzenie używa routingu propagacji, element, który otrzymuje fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-396">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="33a31-397">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który zdobyte fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-397">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-398">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-398">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-399">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-399">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotFocusEvent>|  
|<span data-ttu-id="33a31-400">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-400">Routing strategy</span></span>|<span data-ttu-id="33a31-401">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-401">Bubbling</span></span>|  
|<span data-ttu-id="33a31-402">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-402">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="33a31-403">Nie ma żadnego odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="33a31-403">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="33a31-404">Zastąp <xref:System.Windows.ContentElement.OnGotFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-404">Override <xref:System.Windows.ContentElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-405">Identyfikuje <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-405">Identifies the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-406">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-406">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-407">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-407">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-408">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-408">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-409">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-409">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-410">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-410">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-411">Występuje, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-411">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-412"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> jest podobne zdarzenie, który śledzi zmiany stanu we właściwości, która przechowuje stan aktywny elementu; <xref:System.Windows.ContentElement.GotKeyboardFocus> zdarzenie jest zgłaszane w wielu z tych samych warunkach.</span><span class="sxs-lookup"><span data-stu-id="33a31-412"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.ContentElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="33a31-413">Ponieważ to zdarzenie używa routingu propagacji, element, który ma fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-413">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="33a31-414">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który jest ustawiony fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-414">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="33a31-415">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.GotKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-415">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-416">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-416">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-417">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-417">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-418">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-418">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="33a31-419">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-419">Routing strategy</span></span>|<span data-ttu-id="33a31-420">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-420">Bubbling</span></span>|  
|<span data-ttu-id="33a31-421">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-421">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="33a31-422">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="33a31-422">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="33a31-423">Zastąp <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-423">Override <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-424">Identyfikuje <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-424">Identifies the <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-425">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-425">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-426">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-426">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-427">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-427">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-428">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-428">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-429">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-429">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-430">Występuje, gdy ten element przechwytuje mysz.</span><span class="sxs-lookup"><span data-stu-id="33a31-430">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-431">Gdy element przechwytuje mysz, otrzymuje wejście myszy nawet wtedy, gdy wskaźnik myszy znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="33a31-431">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="33a31-432">Mysz są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania i pozostaje przechwycone, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-432">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="33a31-433">Ponieważ to zdarzenie używa routingu propagacji, element, który ma przechwytywania może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-433">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="33a31-434">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w zdarzeniu przechwytywania danych, aby określić rzeczywisty element, który ma myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-434">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="33a31-435">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.GotMouseCapture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-435">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.ContentElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-436">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotMouseCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-436">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-437">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-437">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-438">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-438">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="33a31-439">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-439">Routing strategy</span></span>|<span data-ttu-id="33a31-440">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-440">Bubbling</span></span>|  
|<span data-ttu-id="33a31-441">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-441">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="33a31-442">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="33a31-442">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="33a31-443">Zastąp <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-443">Override <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-444">Identyfikuje <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-444">Identifies the <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-445">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-445">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-446">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-446">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-447">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-447">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-448">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-448">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-449">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-449">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-450">Występuje, gdy ten element przechwytuje pióro.</span><span class="sxs-lookup"><span data-stu-id="33a31-450">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-451">Po przechwyceniu pióra przez element, odbierze wejście pióra, nawet jeśli kursor znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="33a31-451">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="33a31-452">Pióro są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania i zachowuje przechwytywania, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-452">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="33a31-453">Ponieważ to zdarzenie używa routingu propagacji, element, który ma przechwytywania może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-453">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="33a31-454">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który ma przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="33a31-454">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="33a31-455">To zdarzenie tworzy alias dla dołączone zdarzenie dla tej klasy, aby <xref:System.Windows.ContentElement.GotStylusCapture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-455">This event creates an alias for the  attached event for this class so that <xref:System.Windows.ContentElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-456">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.GotStylusCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-456">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-457">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-457">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-458">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-458">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="33a31-459">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-459">Routing strategy</span></span>|<span data-ttu-id="33a31-460">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-460">Bubbling</span></span>|  
|<span data-ttu-id="33a31-461">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-461">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-462">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="33a31-462">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="33a31-463">Zastąp <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-463">Override <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-464">Identyfikuje <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-464">Identifies the <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-465">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-465">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-466">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-466">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-467">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-467">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-468">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-468">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-469">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-469">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-470">Występuje, gdy touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-470">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-471">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-471">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-472">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-472">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="33a31-473">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-473">Routing strategy</span></span>|<span data-ttu-id="33a31-474">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-474">Bubbling</span></span>|  
|<span data-ttu-id="33a31-475">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-475">Delegate</span></span>|<span data-ttu-id="33a31-476"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="33a31-476"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="33a31-477">Zastąp <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-477">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-478">Identyfikuje <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-478">Identifies the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-479">Pobiera wartość wskazującą, czy ten element ma wszystkie właściwości animowany.</span><span class="sxs-lookup"><span data-stu-id="33a31-479">Gets a value that indicates whether this element has any animated properties.</span></span></summary>
        <value><span data-ttu-id="33a31-480"><see langword="true" /> Jeśli ten element ma animacji dołączone do żadnej z jej właściwości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-480"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-481">Ta właściwość zwraca `true` zarówno dla trwałego animacji (unclocked, zawsze uruchomiona) i animacji, które mają szczególne osi czasu.</span><span class="sxs-lookup"><span data-stu-id="33a31-481">This property returns `true` either for persistent (unclocked, always-running) animations or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.ContentElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-482">Pobiera kolekcję powiązania danych wejściowych, które są skojarzone z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-482">Gets the collection of input bindings that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="33a31-483">Kolekcja powiązania danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="33a31-483">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-484">Powiązania danych wejściowych obsługuje powiązanie polecenia, aby urządzenia wejściowe.</span><span class="sxs-lookup"><span data-stu-id="33a31-484">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="33a31-485">Na przykład <xref:System.Windows.Input.MouseBinding> implementuje wejściowych powiązania, które zawierają właściwości, które są specyficzne dla urządzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-485">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are specific to mouse devices.</span></span>  
  
 <span data-ttu-id="33a31-486">Kolekcja powiązania danych wejściowych zawiera powiązania danych wejściowych, które odnoszą się do typu i powiązania danych wejściowych, które są zadeklarowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="33a31-486">The collection of input bindings includes both input bindings that pertain to the type and also input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="33a31-487">Powiązaną właściwość <xref:System.Windows.ContentElement.CommandBindings%2A>, przechowuje kolekcję powiązań polecenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-487">A related property, <xref:System.Windows.ContentElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="33a31-488">Te powiązania różnią się od powiązania danych wejściowych reprezentują wyższy poziom szczegółów przetwarzania polecenia - akcje, które są powiązane z polecenia znane i obsługi swoiste dla klas dla nich.</span><span class="sxs-lookup"><span data-stu-id="33a31-488">These bindings differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands and class-specific handlers for them.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="33a31-489">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="33a31-489">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="33a31-490">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="33a31-490">XAML Values</span></span>  
 <span data-ttu-id="33a31-491">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="33a31-491">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="33a31-492">Co najmniej jeden <xref:System.Windows.Input.InputBinding> elementów (zazwyczaj <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding> klas pochodnych).</span><span class="sxs-lookup"><span data-stu-id="33a31-492">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="33a31-493">Każdy z nich powinny mieć <xref:System.Windows.Input.InputBinding.Command%2A> i <xref:System.Windows.Input.InputBinding.Gesture%2A> atrybut.</span><span class="sxs-lookup"><span data-stu-id="33a31-493">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.ContentElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-494">Pobiera lub ustawia wartość wskazującą, czy ten element jest włączony w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="33a31-494">Gets or sets a value that indicates whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="33a31-495"><see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-495"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-496">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-496">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-497">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-497">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-498">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-498">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsEnabledProperty>|  
|<span data-ttu-id="33a31-499">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-499">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-500">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-500">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33a31-501">Poniższy przykład tworzy styl, który zawiera metoda ustawiająca właściwości, który zapewnia alternatywny zachowanie programu visual podczas <xref:System.Windows.Documents.Hyperlink> ustawiono <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span><span class="sxs-lookup"><span data-stu-id="33a31-501">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> is set to <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-502">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwość zmiany tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-502">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-503">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-503">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.ContentElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-504">Pobiera wartość, która staje się wartość zwracaną przez <see cref="P:System.Windows.ContentElement.IsEnabled" /> w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-504">Gets a value that becomes the return value of <see cref="P:System.Windows.ContentElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="33a31-505"><see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-505"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33a31-506">Domyślna implementacja tej właściwości przechowuje wartość i oblicza również, czy element nadrzędny tego elementu jest włączony.</span><span class="sxs-lookup"><span data-stu-id="33a31-506">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="33a31-507">(Jeśli element nadrzędny nie jest włączona, element podrzędny nie może skutecznie włączone w praktyczne [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Jeśli chcesz przesłonić tę implementację, należy upewnić się, że wywoływać implementację podstawową, aby zachować to zachowanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-507">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-508">Identyfikuje <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-508">Identifies the <see cref="P:System.Windows.ContentElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.ContentElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-509">Pobiera wartość określającą, czy ten element ma fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="33a31-509">Gets a value that determines whether this element has logical focus.</span></span></summary>
        <value><span data-ttu-id="33a31-510"><see langword="true" /> Jeśli ten element ma fokus logiczny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-510"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-511">Fokus logiczny może różnić się od fokus klawiatury, jeśli aplikacja ma wiele działów fokus, takich jak między zawartość menu i pozostałą częścią aplikacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-511">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="33a31-512">W tym scenariuszu fokus klawiatury może być tylko na jednym z elementów interfejsu użytkownika aplikacji, jednak niektóre elementy w innych działów fokus może nadal przechowywać fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="33a31-512">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="33a31-513">Aby uzyskać więcej informacji na temat logiczny fokus, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Przegląd fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-513">For more information on logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-514">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-514">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-515">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-515">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsFocusedProperty>|  
|<span data-ttu-id="33a31-516">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-516">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-517">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-517">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33a31-518">Poniższy przykład tworzy styl, który sprawia, że <xref:System.Windows.Documents.Paragraph> focusable domyślnie i nadaje jej zachowanie visual po odebraniu fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-518">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-519">Identyfikuje <see cref="P:System.Windows.ContentElement.IsFocused" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-519">Identifies the <see cref="P:System.Windows.ContentElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-520">Pobiera wartość wskazującą, czy system metodę wprowadzania, takich jak [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], jest włączone do przetwarzania danych wejściowych do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-520">Gets a value that indicates whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="33a31-521"><see langword="true" /> Jeśli metoda wprowadzania danych jest aktywna; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-521"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-522">Wartość domyślna właściwości dołączone to <see langword="true" />; Jednakże, ta wartość ma wpływ stan metody wprowadzania danych w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="33a31-522">The default value of the underlying attached property is <see langword="true" />; however, this value is influenced by the state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-523">Ta właściwość zwraca wartość, która jest zwracana przez właściwość dołączonych <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> dla aktualnie włączonego metody wprowadzania (klawiatury, mowy i inne urządzenia wejściowego).</span><span class="sxs-lookup"><span data-stu-id="33a31-523">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-524">Pobiera wartość wskazującą, czy ten element ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="33a31-524">Gets a value that indicates whether this element has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="33a31-525"><see langword="true" /> Jeśli ten element ma fokus klawiatury; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-525"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-526">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-526">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-527">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-527">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-528">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-528">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="33a31-529">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-529">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-530">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-530">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-531">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-531">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-532">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-532">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-533">Identyfikuje <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-533">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-534">Pobiera wartość wskazującą, czy fokus klawiatury mieści się w dowolnym miejscu elementu lub elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-534">Gets a value that indicates whether keyboard focus is anywhere within the element or child elements.</span></span></summary>
        <value><span data-ttu-id="33a31-535"><see langword="true" /> Jeśli fokus klawiatury jest ustawiony na element lub jego elementy podrzędne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-535"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-536">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-536">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-537">Zmiana wartości tej właściwości zwykle podnieść <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzeń, chyba że klasa pochodna przesłoniła <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> do pomijania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-537">Changes to the value of this property typically raise the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="33a31-538">Ta właściwość nie zostanie ustawiony bezpośrednio, ale można ustawić fokus na element przez wywołanie metody <xref:System.Windows.ContentElement.Focus%2A>, lub przez dokonywanie <xref:System.Windows.ContentElement.MoveFocus%2A> żądania.</span><span class="sxs-lookup"><span data-stu-id="33a31-538">You do not set this property directly, but you can set the focus to the element by calling <xref:System.Windows.ContentElement.Focus%2A>, or by making a <xref:System.Windows.ContentElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="33a31-539">Jedną z tych wywołań metody wywołuje może zmienić wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="33a31-539">Either of these method calls might change this property value.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-540">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-540">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-541">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-541">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="33a31-542">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-542">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-543">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-543">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-544">Występuje, gdy wartość <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-544">Occurs when the value of the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-545">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-545">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-546">Identyfikuje <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-546">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.ContentElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-547">Pobiera wartość wskazującą, czy przycisk myszy jest przechwytywany przez ten element.</span><span class="sxs-lookup"><span data-stu-id="33a31-547">Gets a value that indicates whether the mouse is captured by this element.</span></span></summary>
        <value><span data-ttu-id="33a31-548"><see langword="true" /> Jeśli element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-548"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-549">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-549">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-550">Stanu przechwytywanie myszy powiązany jest w trakcie operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-550">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-551">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-551">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-552">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-552">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="33a31-553">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-553">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-554">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-554">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33a31-555">Poniższy przykład włącza stanu przechwytywanie myszy lub wyłącza zależnie od tego, czy przycisk myszy jest już przechwytywany przez element.</span><span class="sxs-lookup"><span data-stu-id="33a31-555">The following example turns the mouse capture state on or off based on whether the mouse is already captured by the element.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-556">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-556">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-557">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-557">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-558">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-558">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-559">Pobiera wartość określającą, czy przechwytywanie myszy są przechowywane przez ten element lub elementy podrzędne w jego drzewo elementów.</span><span class="sxs-lookup"><span data-stu-id="33a31-559">Gets a value that determines whether mouse capture is held by this element or by child elements in its element tree.</span></span></summary>
        <value><span data-ttu-id="33a31-560"><see langword="true" /> Jeśli ten element lub element zawarty ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-560"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-561">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-561">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-562">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-562">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-563">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-563">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="33a31-564">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-564">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-565">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-565">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-566">Występuje, gdy wartość <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> zmiany w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-566">Occurs when the value of the <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-567">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-567">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-568">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-568">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-569">Pobiera wartość wskazującą, czy pozycji wskaźnika myszy odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="33a31-569">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="33a31-570"><see langword="true" /> Jeśli wskaźnik myszy znajduje się nad ten sam wynik elementu jako hit test; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-570"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-571">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-571">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-572">W odróżnieniu od <xref:System.Windows.ContentElement.IsMouseOver%2A>, ta właściwość jest tylko `true` gdy wskaźnik myszy znajduje się nad elementem literału — podobnie jak w przypadku hit test.</span><span class="sxs-lookup"><span data-stu-id="33a31-572">Unlike <xref:System.Windows.ContentElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="33a31-573">Jeśli zamiast tego wskaźnik myszy znajduje się za pośrednictwem elementu podrzędnego, w szczególności za pośrednictwem elementy, które są częścią szablonu bardziej elementu i składania, ta właściwość będzie miał `false`.</span><span class="sxs-lookup"><span data-stu-id="33a31-573">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="33a31-574">Jeśli nie masz pewności, jak kontrolka jest złożone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który zdefiniujesz), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="33a31-574">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="33a31-575">W przypadku większości scenariuszy, w którym nie tworzenia formantów, należy użyć <xref:System.Windows.ContentElement.IsMouseOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="33a31-575">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="33a31-576">Jeśli przycisk myszy jest przechwytywany przez ten element, a ta właściwość jest `true` w czasie przechwytywania, ta właściwość będzie zwracać `true` dopóki przechwytywanie myszy zostanie utracone i wskaźnik nie znajduje się nad jej zakresem.</span><span class="sxs-lookup"><span data-stu-id="33a31-576">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-577">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-577">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-578">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-578">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="33a31-579">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-579">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-580">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-580">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-581">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-581">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-582">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-582">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-583">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-583">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.ContentElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-584">Pobiera wartość wskazującą, czy wskaźnik myszy znajduje się nad tym elementem (w tym elementy wizualne podrzędne lub jego składania kontroli).</span><span class="sxs-lookup"><span data-stu-id="33a31-584">Gets a value that indicates whether the mouse pointer is located over this element (including visual child elements, or its control compositing).</span></span></summary>
        <value><span data-ttu-id="33a31-585"><see langword="true" /> Jeśli wskaźnik myszy znajduje się za pośrednictwem elementu lub jego elementy podrzędne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-585"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-586">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-586">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-587">Chociaż analogiczne zdarzenie "IsMouseOverChanged" nie istnieje, są w kilku podobne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-587">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="33a31-588">Na przykład, można użyć <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, i <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="33a31-588">For example, you can use <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, and <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="33a31-589">Jeśli ten element przechwytuje mysz, ta właściwość pozostaje `true` dopóki przechwytywanie myszy zostanie utracona i opuszczeniu granic elementu przez wskaźnik myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-589">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-590">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-590">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-591">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-591">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseOverProperty>|  
|<span data-ttu-id="33a31-592">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-592">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-593">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-593">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33a31-594">Poniższy przykład tworzy styl, który zawiera metoda ustawiająca właściwości, który zapewnia alternatywny zachowanie programu visual podczas <xref:System.Windows.Documents.Hyperlink> raporty <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-594">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> reports <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-595">Identyfikuje <see cref="P:System.Windows.ContentElement.IsMouseOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-595">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.ContentElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-596">Pobiera wartość wskazującą, czy pióro są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-596">Gets a value that indicates whether the stylus is captured to this element.</span></span></summary>
        <value><span data-ttu-id="33a31-597"><see langword="true" /> Jeśli element ma Przechwytywanie pióra; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-597"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-598">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-598">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-599">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-599">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-600">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-600">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-601">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-601">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-602">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-602">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="33a31-603">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-603">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-604">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-604">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureStylus" />
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-605">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-605">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-606">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-606">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-607">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-607">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-608">Pobiera wartość określającą, czy przechowywane przechwycenia pióra przez ten element, w tym elementy podrzędne i składania kontroli.</span><span class="sxs-lookup"><span data-stu-id="33a31-608">Gets a value that determines whether stylus capture is held by this element, including child elements and control compositing.</span></span></summary>
        <value><span data-ttu-id="33a31-609"><see langword="true" /> Jeśli przechwytywanie pióra są przechowywane w ramach tego elementu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-609"><see langword="true" /> if stylus capture is held within this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-610">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-610">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-611">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-611">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-612">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-612">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-613">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-613">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="33a31-614">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-614">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-615">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-615">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-616">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-616">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-617">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-617">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-618">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-618">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-619">Pobiera wartość wskazującą, czy pozycja Pióro odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="33a31-619">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="33a31-620"><see langword="true" /> gdy pióro znajduje się nad tym samym elemencie jako hit test; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-620"><see langword="true" /> if the stylus is over the same element as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-621">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-621">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-622">W odróżnieniu od <xref:System.Windows.ContentElement.IsStylusOver%2A>, ta właściwość jest tylko `true` , gdy pióro znajduje się nad elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-622">Unlike <xref:System.Windows.ContentElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="33a31-623">W przypadku pióro zamiast za pośrednictwem elementu podrzędnego lub elementy, które są częścią elementu bardziej składania, ta właściwość będzie miał `false`.</span><span class="sxs-lookup"><span data-stu-id="33a31-623">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing, this property will be `false`.</span></span>  
  
 <span data-ttu-id="33a31-624">Jeśli nie masz pewności, jak kontrolka jest złożone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który zdefiniujesz), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="33a31-624">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="33a31-625">W przypadku większości scenariuszy, w którym nie tworzenia formantów, należy użyć <xref:System.Windows.ContentElement.IsStylusOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="33a31-625">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="33a31-626">Jeśli ten element ma Przechwytywanie pióra, ta właściwość jest `true` w czasie przechwytywania, ta właściwość pozostaje `true` aż do przechwycenia pióra zostaną utracone i pióro nie znajduje się nad jej zakresem.</span><span class="sxs-lookup"><span data-stu-id="33a31-626">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="33a31-627">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-627">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-628">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-628">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-629">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-629">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-630">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-630">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="33a31-631">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-631">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-632">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-632">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-633">Występuje, gdy wartość <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-633">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-634">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-634">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-635">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-635">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.ContentElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-636">Pobiera wartość wskazującą, czy Pióro znajduje się nad tym elementem (w tym elementy podrzędne visual).</span><span class="sxs-lookup"><span data-stu-id="33a31-636">Gets a value that indicates whether the stylus is located over this element (including visual child elements).</span></span></summary>
        <value><span data-ttu-id="33a31-637"><see langword="true" /> gdy pióro znajduje się nad elementem i jego elementy podrzędne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-637"><see langword="true" /> if the stylus is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="33a31-638">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-638">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-639">Jeśli ten element ma Przechwytywanie pióra, ta właściwość pozostaje `true` aż do przechwycenia pióra zostaną utracone i wskaźnik znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="33a31-639">If this element has stylus capture, this property remains `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="33a31-640">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-640">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-641">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-641">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="33a31-642">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="33a31-642">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-643">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-643">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusOverProperty>|  
|<span data-ttu-id="33a31-644">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="33a31-644">Metadata properties set to `true`</span></span>|<span data-ttu-id="33a31-645">Brak</span><span class="sxs-lookup"><span data-stu-id="33a31-645">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-646">Identyfikuje <see cref="P:System.Windows.ContentElement.IsStylusOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-646">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-647">Występuje po naciśnięciu klawisza, gdy fokus znajduje się w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-647">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-648">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak polecenia i tekst.</span><span class="sxs-lookup"><span data-stu-id="33a31-648">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="33a31-649"><xref:System.Windows.ContentElement.KeyDown> Zdarzeń jest tekst niższego poziomu zdarzenie danych wejściowych, które mogą nie zachowywać się, zgodnie z oczekiwaniami na niektórych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="33a31-649">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="33a31-650">Jest to, ponieważ niektóre kontrolki zostały składania do sterowania lub obsługa klasy, zapewniająca wyższego poziomu wersję tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="33a31-650">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="33a31-651">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.KeyDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-651">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.KeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-652">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.KeyDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-652">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-653">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-653">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-654">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-654">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyDownEvent>|  
|<span data-ttu-id="33a31-655">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-655">Routing strategy</span></span>|<span data-ttu-id="33a31-656">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-656">Bubbling</span></span>|  
|<span data-ttu-id="33a31-657">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-657">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="33a31-658">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-658">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="33a31-659">Zastąp <xref:System.Windows.ContentElement.OnKeyDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-659">Override <xref:System.Windows.ContentElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-660">Identyfikuje <see cref="E:System.Windows.ContentElement.KeyDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-660">Identifies the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-661">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-661">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-662">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-662">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-663">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-663">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-664">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-664">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-665">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-665">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-666">Występuje po zwolnieniu klawisza gdy fokus znajduje się w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-666">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-667">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.KeyUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-667">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.ContentElement.KeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-668">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.KeyUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-668">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-669">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-669">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-670">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-670">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyUpEvent>|  
|<span data-ttu-id="33a31-671">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-671">Routing strategy</span></span>|<span data-ttu-id="33a31-672">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-672">Bubbling</span></span>|  
|<span data-ttu-id="33a31-673">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-673">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="33a31-674">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-674">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="33a31-675">Zastąp <xref:System.Windows.ContentElement.OnKeyUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-675">Override <xref:System.Windows.ContentElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-676">Identyfikuje <see cref="E:System.Windows.ContentElement.KeyUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-676">Identifies the <see cref="E:System.Windows.ContentElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-677">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-677">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-678">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-678">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-679">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-679">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-680">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-680">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-681">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-681">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-682">Występuje po utracie fokusu logicznego przez ten element.</span><span class="sxs-lookup"><span data-stu-id="33a31-682">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-683">Fokus logiczny różni się od fokus klawiatury, gdy fokus jest celowo wymuszone natychmiast za pomocą wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="33a31-683">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="33a31-684">W tym scenariuszu, pozostaje fokus klawiatury, gdzie jest i element gdzie <xref:System.Windows.ContentElement.Focus%2A> wywoływana jest metoda nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="33a31-684">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="33a31-685">Bardziej precyzyjne interpretacji to zdarzenie jest jej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsFocused%2A> właściwość elementu w trasie zmieni się z `true` do `false`.</span><span class="sxs-lookup"><span data-stu-id="33a31-685">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="33a31-686">Ponieważ to zdarzenie używa routingu propagacji, element, który traci fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-686">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="33a31-687">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który zdobyte fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-687">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-688">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-688">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-689">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-689">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostFocusEvent>|  
|<span data-ttu-id="33a31-690">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-690">Routing strategy</span></span>|<span data-ttu-id="33a31-691">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-691">Bubbling</span></span>|  
|<span data-ttu-id="33a31-692">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-692">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="33a31-693">Nie ma żadnego odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="33a31-693">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="33a31-694">Zastąp <xref:System.Windows.ContentElement.OnLostFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-694">Override <xref:System.Windows.ContentElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-695">Identyfikuje <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-695">Identifies the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-696">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-696">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-697">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-697">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-698">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-698">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-699">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-699">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-700">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-700">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-701">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-701">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-702">Ponieważ to zdarzenie używa routingu propagacji, element, który utraty fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-702">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="33a31-703">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-703">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="33a31-704">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.LostKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-704">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-705">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-705">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-706">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-706">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-707">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-707">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="33a31-708">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-708">Routing strategy</span></span>|<span data-ttu-id="33a31-709">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-709">Bubbling</span></span>|  
|<span data-ttu-id="33a31-710">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-710">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="33a31-711">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="33a31-711">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="33a31-712">Zastąp <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-712">Override <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-713">Identyfikuje <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-713">Identifies the <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-714">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-714">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-715">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-715">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-716">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-716">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-717">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-717">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-718">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-718">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-719">Występuje, gdy ten element utraci przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-719">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-720">Gdy element przechwytuje mysz, otrzymuje wejście myszy nawet wtedy, gdy wskaźnik myszy znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="33a31-720">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="33a31-721">Mysz są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-721">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="33a31-722">Ponieważ to zdarzenie używa routingu propagacji, element utraci Przechwytywanie może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-722">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="33a31-723">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="33a31-723">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="33a31-724">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.LostMouseCapture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-724">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-725">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostMouseCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-725">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-726">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-726">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-727">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-727">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="33a31-728">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-728">Routing strategy</span></span>|<span data-ttu-id="33a31-729">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-729">Bubbling</span></span>|  
|<span data-ttu-id="33a31-730">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-730">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="33a31-731">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="33a31-731">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="33a31-732">Zastąp <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-732">Override <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-733">Identyfikuje <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-733">Identifies the <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-734">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-734">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-735">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-735">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-736">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-736">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-737">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-737">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-738">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-738">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-739">Występuje, gdy ten element utraci Przechwytywanie pióra.</span><span class="sxs-lookup"><span data-stu-id="33a31-739">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-740">Po przechwyceniu pióra przez element, odbierze wejście pióra, nawet jeśli kursor znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="33a31-740">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="33a31-741">Pióro są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-741">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="33a31-742">Ponieważ to zdarzenie używa routingu propagacji, element, który traci fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-742">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="33a31-743">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-743">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="33a31-744">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.LostStylusCapture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-744">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-745">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.LostStylusCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-745">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-746">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-746">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-747">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-747">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="33a31-748">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-748">Routing strategy</span></span>|<span data-ttu-id="33a31-749">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-749">Bubbling</span></span>|  
|<span data-ttu-id="33a31-750">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-750">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-751">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="33a31-751">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="33a31-752">Zastąp <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-752">Override <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-753">Identyfikuje <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-753">Identifies the <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-754">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-754">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-755">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-755">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-756">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-756">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-757">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-757">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-758">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-758">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-759">Występuje, gdy ten element utraci Przechwytywanie touch.</span><span class="sxs-lookup"><span data-stu-id="33a31-759">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-760">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-760">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-761">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-761">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="33a31-762">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-762">Routing strategy</span></span>|<span data-ttu-id="33a31-763">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-763">Bubbling</span></span>|  
|<span data-ttu-id="33a31-764">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-764">Delegate</span></span>|<span data-ttu-id="33a31-765"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="33a31-765"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="33a31-766">Zastąp <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-766">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-767">Identyfikuje <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-767">Identifies the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-768">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-768">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-769">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-769">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-770">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-770">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-771"><xref:System.Windows.ContentElement.MouseDown> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.ContentElement.MouseLeftButtonDown> lub <xref:System.Windows.ContentElement.MouseRightButtonDown>, które odpowiadają naciśnij jednego z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="33a31-771">The <xref:System.Windows.ContentElement.MouseDown> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="33a31-772"><xref:System.Windows.ContentElement.MouseLeftButtonDown> i <xref:System.Windows.ContentElement.MouseRightButtonDown> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-772"><xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="33a31-773">Zobacz uwagi, na <xref:System.Windows.ContentElement.MouseLeftButtonDown> lub <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-773">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33a31-774">Kilka <xref:System.Windows.ContentElement> pochodnych klas, które mają podobne do kontroli zachowania, na przykład <xref:System.Windows.Documents.Hyperlink>, może być zarezerwowanymi obsługę klasy dla zdarzenia przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-774">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="33a31-775">Lewy przycisk myszy wciśnięty zdarzeń jest najbardziej prawdopodobne zdarzenie, aby mieć klasę, obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="33a31-775">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="33a31-776">Klasy obsługi często oznacza bazowego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-776">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="33a31-777">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="33a31-777">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="33a31-778">Wszystkie inne klasy lub wystąpienia programów obsługi, które są dołączone do elementów w propagacji kierunku ku główny w drzewie interfejsu użytkownika również nie zazwyczaj są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-778">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="33a31-779">Możesz rozwiązać ten problem, który jest opisany w poprzednim ważne i nadal otrzymywać <xref:System.Windows.ContentElement.MouseDown> zdarzeń związanych z lewego przycisku myszy w dół do zdarzenia w klasie pochodnej, która ma klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="33a31-779">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="33a31-780">Dołącz programy obsługi dla <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="33a31-780">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="33a31-781">Zwróć uwagę, że ponieważ jest to zdarzenie (wersja zapoznawcza), trasy rozpoczyna się w katalogu głównym i tunele do formantu.</span><span class="sxs-lookup"><span data-stu-id="33a31-781">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="33a31-782">Rejestrowanie programu obsługi w kontrolce proceduralnie przez wywołanie metody <xref:System.Windows.ContentElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-782">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-783">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-783">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-784">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-784">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseDownEvent>|  
|<span data-ttu-id="33a31-785">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-785">Routing strategy</span></span>|<span data-ttu-id="33a31-786">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-786">Bubbling</span></span>|  
|<span data-ttu-id="33a31-787">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-787">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-788">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-788">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="33a31-789">Zastąp <xref:System.Windows.ContentElement.OnMouseDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-789">Override <xref:System.Windows.ContentElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-790">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-790">Identifies the <see cref="E:System.Windows.ContentElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-791">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-791">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-792">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-792">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-793">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-793">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-794">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-794">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-795">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-795">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-796">Występuje po umieszczeniu wskaźnika myszy granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-796">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-797"><xref:System.Windows.ContentElement.MouseEnter> jest [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="33a31-797"><xref:System.Windows.ContentElement.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="33a31-798">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-798">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="33a31-799">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="33a31-799">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="33a31-800">Mimo że <xref:System.Windows.ContentElement.MouseEnter> ścieżki po wejściu wskaźnika myszy w granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsMouseOver%2A> wartość właściwości została zmieniona z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-800">Although <xref:System.Windows.ContentElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="33a31-801">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseEnter> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-801">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-802">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-802">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-803">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-803">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-804">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-804">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseEnterEvent>|  
|<span data-ttu-id="33a31-805">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-805">Routing strategy</span></span>|<span data-ttu-id="33a31-806">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-806">Direct</span></span>|  
|<span data-ttu-id="33a31-807">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-807">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="33a31-808">Zastąp <xref:System.Windows.ContentElement.OnMouseEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-808">Override <xref:System.Windows.ContentElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-809">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-809">Identifies the <see cref="E:System.Windows.ContentElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-810">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-810">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-811">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-811">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-812">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-812">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-813">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-813">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-814">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-814">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-815">Występuje po opuszczeniu przez wskaźnik myszy granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-815">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-816"><xref:System.Windows.ContentElement.MouseLeave> jest [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="33a31-816"><xref:System.Windows.ContentElement.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="33a31-817">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-817">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="33a31-818">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="33a31-818">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="33a31-819">Mimo że <xref:System.Windows.ContentElement.MouseLeave> ścieżki, gdy wskaźnik myszy opuszcza elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsMouseOver%2A> wartość właściwości została zmieniona z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-819">Although <xref:System.Windows.ContentElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="33a31-820">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseLeave> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-820">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-821">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-821">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-822">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-822">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-823">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-823">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeaveEvent>|  
|<span data-ttu-id="33a31-824">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-824">Routing strategy</span></span>|<span data-ttu-id="33a31-825">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-825">Direct</span></span>|  
|<span data-ttu-id="33a31-826">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-826">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="33a31-827">Zastąp <xref:System.Windows.ContentElement.OnMouseLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-827">Override <xref:System.Windows.ContentElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-828">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-828">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-829">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-829">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-830">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-830">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-831">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-831">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-832">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-832">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-833">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-833">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-834">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-834">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-835">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasy przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-835">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="33a31-836">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-836">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="33a31-837">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-837">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="33a31-838">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-838">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="33a31-839">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="33a31-839">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="33a31-840">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-840">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="33a31-841">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-841">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33a31-842">Kilka <xref:System.Windows.ContentElement> pochodnych klas, które mają podobne do kontroli zachowania, na przykład <xref:System.Windows.Documents.Hyperlink>, może być zarezerwowanymi obsługę klasy dla zdarzenia przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-842">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="33a31-843">Lewy przycisk myszy wciśnięty zdarzeń jest najbardziej prawdopodobne zdarzenie, aby mieć klasę, obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="33a31-843">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="33a31-844">Klasy obsługi często oznacza bazowego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-844">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="33a31-845">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="33a31-845">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="33a31-846">Wszystkie inne klasy lub wystąpienia programów obsługi, które są dołączone do elementów w propagacji kierunku ku główny w drzewie interfejsu użytkownika również nie zazwyczaj są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-846">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="33a31-847">Możesz rozwiązać ten problem, który jest opisany w poprzednim ważne i nadal otrzymywać <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzeń związanych z lewego przycisku myszy w dół do zdarzenia w klasie pochodnej, która ma klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="33a31-847">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="33a31-848">Dołącz programy obsługi dla <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="33a31-848">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="33a31-849">Zwróć uwagę, że ponieważ jest to zdarzenie (wersja zapoznawcza), trasy rozpoczyna się w katalogu głównym i tunele do formantu.</span><span class="sxs-lookup"><span data-stu-id="33a31-849">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="33a31-850">Rejestrowanie programu obsługi w kontrolce proceduralnie przez wywołanie metody <xref:System.Windows.ContentElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-850">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-851">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-851">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-852">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-852">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="33a31-853">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-853">Routing strategy</span></span>|<span data-ttu-id="33a31-854">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-854">Direct</span></span>|  
|<span data-ttu-id="33a31-855">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-855">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-856">Zastąp <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-856">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-857">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-857">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-858">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-858">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-859">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-859">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-860">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-860">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-861">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-861">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-862">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-862">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-863">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-863">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-864">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasy przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-864">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="33a31-865">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-865">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="33a31-866">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-866">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="33a31-867">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-867">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="33a31-868">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="33a31-868">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="33a31-869">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-869">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="33a31-870">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-870">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-871">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-871">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-872">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-872">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="33a31-873">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-873">Routing strategy</span></span>|<span data-ttu-id="33a31-874">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-874">Direct</span></span>|  
|<span data-ttu-id="33a31-875">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-875">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-876">Zastąp <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-876">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-877">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-877">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-878">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-878">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-879">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-879">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-880">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-880">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-881">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-881">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-882">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-882">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-883">Występuje, gdy wskaźnik myszy porusza się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-883">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-884">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-884">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-885">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-885">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-886">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-886">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-887">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-887">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseMoveEvent>|  
|<span data-ttu-id="33a31-888">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-888">Routing strategy</span></span>|<span data-ttu-id="33a31-889">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-889">Bubbling</span></span>|  
|<span data-ttu-id="33a31-890">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-890">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="33a31-891">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="33a31-891">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="33a31-892">Zastąp <xref:System.Windows.ContentElement.OnMouseMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-892">Override <xref:System.Windows.ContentElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-893">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-893">Identifies the <see cref="E:System.Windows.ContentElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-894">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-894">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-895">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-895">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-896">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-896">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-897">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-897">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-898">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-898">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-899">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-899">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-900">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasy przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-900">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="33a31-901">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-901">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="33a31-902">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-902">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="33a31-903">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-903">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="33a31-904">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="33a31-904">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="33a31-905">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-905">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="33a31-906">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-906">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="33a31-907">Zdarzenia myszy w prawy przycisk często mają natywnej obsługi w scenariuszach aplikacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-907">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="33a31-908">Na przykład prawym przyciskiem myszy w dół, może wyświetlić menu kontekstowe.</span><span class="sxs-lookup"><span data-stu-id="33a31-908">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="33a31-909">Zobacz [ContextMenu — Przegląd](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-909">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-910">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-910">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-911">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-911">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="33a31-912">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-912">Routing strategy</span></span>|<span data-ttu-id="33a31-913">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-913">Direct</span></span>|  
|<span data-ttu-id="33a31-914">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-914">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-915">Zastąp <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-915">Override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-916">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-916">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-917">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-917">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-918">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-918">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-919">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-919">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-920">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-920">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-921">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-921">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-922">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-922">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-923">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasy przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-923">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="33a31-924">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-924">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="33a31-925">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-925">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="33a31-926">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-926">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="33a31-927">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="33a31-927">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="33a31-928">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-928">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="33a31-929">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-929">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-930">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-930">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-931">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-931">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="33a31-932">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-932">Routing strategy</span></span>|<span data-ttu-id="33a31-933">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-933">Direct</span></span>|  
|<span data-ttu-id="33a31-934">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-934">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-935">Zastąp <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-935">Override <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-936">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-936">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-937">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-937">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-938">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-938">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-939">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-939">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-940">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-940">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-941">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-941">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-942">Występuje po zwolnieniu dowolnego przycisku myszy nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-942">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-943">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-943">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-944">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-944">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-945"><xref:System.Windows.ContentElement.MouseUp> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.ContentElement.MouseLeftButtonUp> lub <xref:System.Windows.ContentElement.MouseRightButtonUp>, które odpowiadają wersji jednej z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="33a31-945">The <xref:System.Windows.ContentElement.MouseUp> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="33a31-946"><xref:System.Windows.ContentElement.MouseLeftButtonUp> i <xref:System.Windows.ContentElement.MouseRightButtonUp> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-946"><xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="33a31-947">Zobacz uwagi, na <xref:System.Windows.ContentElement.MouseLeftButtonUp> lub <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-947">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-948">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-948">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-949">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-949">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseUpEvent>|  
|<span data-ttu-id="33a31-950">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-950">Routing strategy</span></span>|<span data-ttu-id="33a31-951">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-951">Bubbling</span></span>|  
|<span data-ttu-id="33a31-952">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-952">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-953">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-953">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="33a31-954">Zastąp <xref:System.Windows.ContentElement.OnMouseUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-954">Override <xref:System.Windows.ContentElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-955">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-955">Identifies the <see cref="E:System.Windows.ContentElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-956">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-956">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-957">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-957">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-958">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-958">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-959">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-959">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-960">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-960">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-961">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-961">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-962">Zespół lub myszy przechwytywania pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony <xref:System.Windows.ContentElement.MouseWheel> zdarzeń z elementu wąsko zdefiniowany lub przechwycone, wskaźnik myszy może mieć w rzeczywistości za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-962">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.ContentElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="33a31-963">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.MouseWheel> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-963">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseWheel> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-964">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.MouseWheel> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-964">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-965">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-965">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-966">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-966">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseWheelEvent>|  
|<span data-ttu-id="33a31-967">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-967">Routing strategy</span></span>|<span data-ttu-id="33a31-968">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-968">Bubbling</span></span>|  
|<span data-ttu-id="33a31-969">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-969">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="33a31-970">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="33a31-970">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="33a31-971">Zastąp <xref:System.Windows.ContentElement.OnMouseWheel%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-971">Override <xref:System.Windows.ContentElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-972">Identyfikuje <see cref="E:System.Windows.ContentElement.MouseWheel" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-972">Identifies the <see cref="E:System.Windows.ContentElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-973">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-973">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-974">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-974">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-975">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-975">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-976">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-976">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-977">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-977">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="contentElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="33a31-978">Żądanie przechodzenia, który zawiera właściwość, która wskazuje trybie przechodzenia w istniejących kolejność tabulacji, lub kierunku, aby przenieść wizualnie.</span><span class="sxs-lookup"><span data-stu-id="33a31-978">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="33a31-979">Próbuje przenieść fokus z tego elementu do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-979">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="33a31-980">Kierunek, aby przenieść fokus jest określona przez kierunku orientacji, jest interpretowany w ramach organizacji visual element nadrzędny tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-980">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="33a31-981"><see langword="true" /> Jeśli żądana przechodzenie została wykonana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-981"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-982">Upewnij się, że wartość zwracana przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="33a31-982">Make sure you check the return value of this method.</span></span> <span data-ttu-id="33a31-983">Zwracana wartość wynosząca `false` może zostać zwrócona, jeśli podczas przechodzenia działa w tabulatora, który jest definiowany przez kompozycji formantu, a żądania przechodzenia nie zażądał opakowywania.</span><span class="sxs-lookup"><span data-stu-id="33a31-983">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contentElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-984">Zwraca swoiste dla klas <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> niedotyczące [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastruktury.</span><span class="sxs-lookup"><span data-stu-id="33a31-984">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="33a31-985">Konkretny typ <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-985">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33a31-986">Implementacja tej metody jest zwykle wywołanie konstruktora określonego <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji i zwracanie go jako wartość zwracaną.</span><span class="sxs-lookup"><span data-stu-id="33a31-986">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span></span>  
  
<span data-ttu-id="33a31-987">Wszystkie <see cref="T:System.Windows.ContentElement" /> klas pochodnych należy zaimplementować tę metodę w celu zapewnienia ich własnych określonych <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji w celu [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastruktury.</span><span class="sxs-lookup"><span data-stu-id="33a31-987">All <see cref="T:System.Windows.ContentElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span> <span data-ttu-id="33a31-988">Szczegółowe informacje na temat implementowania tego wzorca, <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-988">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-989"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-989">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-990">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-990">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-991">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-991">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-992">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-992">This method has no default implementation.</span></span> <span data-ttu-id="33a31-993">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-993">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-994">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-994">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-995">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-995">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-996">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-996">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-997">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-997">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-998">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-998">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-999">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-999">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1000">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1000">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1001"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1001">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1002">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragLeave" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1002">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1003">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1003">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1004">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1004">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1005">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1005">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1006">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1006">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1007">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1007">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1008">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1008">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1009">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1009">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1010">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1010">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1011">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1011">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1012">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1012">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1013"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1013">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1014">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragOver" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1014">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1015">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1015">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1016">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1016">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1017">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1017">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1018">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1018">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1019">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1019">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1020">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1020">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1021">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1021">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1022">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1022">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1023">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1023">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1024">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1024">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1025"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1025">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1026">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1026">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1027">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1027">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1028">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1028">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1029">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1029">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1030">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1030">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1031">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1031">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1032">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1032">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1033">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1033">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1034">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1034">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1035">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1035">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1036">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1036">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1037"><see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1037">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1038">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.GiveFeedback" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1038">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1039">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1039">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1040">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1040">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1041">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1041">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1042">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1042">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1043">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1043">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1044">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1044">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1045">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1045">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1046">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1046">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1047">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1047">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1048">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1048">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1049">Element <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1049">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="33a31-1050">Te dane zdarzeń musi zawierać identyfikator <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1050">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="33a31-1051">Wywołuje <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzenia trasowanego przy użyciu podanych danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1051">Raises the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1052">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, która wywołuje zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1052">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="33a31-1053">To na \* implementacja metody jest przeznaczona do podniesienia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby wygenerować zdarzenie po <xref:System.Windows.ContentElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="33a31-1053">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="33a31-1054"><xref:System.Windows.ContentElement.OnGotFocus%2A> Implementacji różni się od innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na \* implementacji, które tylko zapewniają wygodny sposób, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1054">The <xref:System.Windows.ContentElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33a31-1055">Jeśli nie masz zamierzone i nietypowe potrzeby nie zgłaszać zdarzenia fokusu, upewnij się, że Twoja implementacja wywołuje implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="33a31-1055">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="33a31-1056">W przeciwnym razie <see cref="E:System.Windows.ContentElement.GotFocus" /> zdarzenie nie jest wywoływane podczas operacji typowy użytkownik, które zwykle ustawić fokus na ten element.</span><span class="sxs-lookup"><span data-stu-id="33a31-1056">Otherwise, the <see cref="E:System.Windows.ContentElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="33a31-1057">Jeśli nie zamierzasz swoje element ma być focusable, użytkownik może uniemożliwić elementu focusable, ustawiając <see cref="P:System.Windows.ContentElement.Focusable" /> do <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-1057">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span></span> <span data-ttu-id="33a31-1058">Należy pamiętać, że domyślnie <see cref="P:System.Windows.ContentElement.Focusable" /> nie jest focusable, w związku z tym ustawienie <see cref="P:System.Windows.ContentElement.Focusable" /> celowo może nie być konieczne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1058">Note that by default a <see cref="P:System.Windows.ContentElement.Focusable" /> is not focusable, therefore setting <see cref="P:System.Windows.ContentElement.Focusable" /> deliberately might not be necessary.</span></span></para></block>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1059"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1059">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1060">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1060">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1061">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1061">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1062">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1062">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1063">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1063">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1064">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1064">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1065">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1065">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1066">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1066">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1067">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1067">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1068">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1068">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1069">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1069">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1070">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1070">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1071"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1071">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1072">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1072">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1073">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1073">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1074">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1074">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1075">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1075">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1076">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1076">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1077">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1077">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1078">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1078">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1079">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1079">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1080">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1080">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1081">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1081">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1082">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1082">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1083"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1083">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1084">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1084">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1085">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1085">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1086">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1086">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1087">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1087">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1088">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1088">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1089">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1089">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1090">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1090">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1091">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1091">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1092">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1092">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1093">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1093">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1094">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1094">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1095">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1095">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1096">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> zdarzenia trasowane, które występuje, gdy touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-1096">Provides class handling for the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1097"><xref:System.Windows.ContentElement.OnGotTouchCapture%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1097">The <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="33a31-1098">Zastąp <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.GotTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1098">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.GotTouchCapture> event.</span></span> <span data-ttu-id="33a31-1099">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1099">Be sure to call the base class' <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1100"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1100">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1101">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1101">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="33a31-1102">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1102">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1103">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> zmiany właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="33a31-1103">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="33a31-1104">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="33a31-1104">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="33a31-1105">A następnie <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1105">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="33a31-1106">Należy zauważyć, że <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1106">Notice that the  <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="33a31-1107">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1107">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="33a31-1108">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1108">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1109">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1109">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1110">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1110">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1111">Element <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1111">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1112">Wywoływane tuż przed <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zdarzenie jest wywoływane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="33a31-1112">Invoked just before the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="33a31-1113">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1113">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1114">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="33a31-1114">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="33a31-1115">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="33a31-1115">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="33a31-1116">A następnie <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1116">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="33a31-1117">Należy zauważyć, że <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1117">Notice that the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="33a31-1118">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1118">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="33a31-1119">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1119">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1120">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1120">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1121">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1121">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1122"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1122">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1123">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1123">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="33a31-1124">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1124">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1125">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsMouseCaptured%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="33a31-1125">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="33a31-1126">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="33a31-1126">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="33a31-1127">A następnie <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1127">Then the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="33a31-1128">Należy zauważyć, że <xref:System.Windows.ContentElement.IsMouseCapturedChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1128">Notice that the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="33a31-1129">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1129">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="33a31-1130">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1130">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1131">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1131">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1132">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1132">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1133">Element <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1133">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1134">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1134">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="33a31-1135">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1135">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33a31-1136">Tej metody wirtualnej jest wywoływane, gdy wartość <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="33a31-1136">This virtual method is raised when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="33a31-1137">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="33a31-1137">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="33a31-1138">A następnie <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1138">Then the <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="33a31-1139">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane; W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1139">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="33a31-1140">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1140">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1141">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1141">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1142">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1142">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1143"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1143">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1144">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1144">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="33a31-1145">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1145">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1146">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="33a31-1146">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="33a31-1147">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="33a31-1147">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="33a31-1148">A następnie <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1148">Then the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="33a31-1149">Należy zauważyć, że <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1149">Notice that the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="33a31-1150">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1150">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="33a31-1151">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1151">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1152">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1152">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1153">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1153">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1154">Element <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1154">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1155">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1155">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="33a31-1156">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1156">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1157">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusCaptured%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="33a31-1157">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="33a31-1158">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="33a31-1158">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="33a31-1159">A następnie <xref:System.Windows.ContentElement.IsStylusCapturedChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1159">Then the <xref:System.Windows.ContentElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="33a31-1160">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1160">Notice that the event is not a routed event.</span></span> <span data-ttu-id="33a31-1161">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1161">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="33a31-1162">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1162">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1163">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1163">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1164">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1164">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1165"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1165">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1166">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1166">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="33a31-1167">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1167">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1168">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="33a31-1168">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="33a31-1169">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="33a31-1169">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="33a31-1170">A następnie <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1170">Then the <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="33a31-1171">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1171">Notice that the event is not a routed event.</span></span> <span data-ttu-id="33a31-1172">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1172">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="33a31-1173">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1173">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1174">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1174">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1175">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1175">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1176"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1176">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1177">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1177">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="33a31-1178">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1178">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1179">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="33a31-1179">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="33a31-1180">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="33a31-1180">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="33a31-1181">A następnie <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1181">Then the <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="33a31-1182">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1182">Notice that the event is not a routed event.</span></span> <span data-ttu-id="33a31-1183">W związku z tym nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1183">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="33a31-1184">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1184">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1185">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1185">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1186">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1186">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1187"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1187">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1188">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1188">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1189">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1189">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1190">Naciśnięć klawiszy są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="33a31-1190">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="33a31-1191">Inne funkcje programowania, które zależą od naciśnięć klawiszy, na przykład powiązania danych wejściowych i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest ona uwidoczniona jako ogólne naciśnięcia klawisza.</span><span class="sxs-lookup"><span data-stu-id="33a31-1191">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="33a31-1192">Te dane wejściowe funkcji systemu oznaczyć zdarzenia jako obsłużony, następnie <xref:System.Windows.ContentElement.OnKeyDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="33a31-1192">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="33a31-1193">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1193">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1194">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1194">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1195">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1195">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1196">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1196">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1197">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1197">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1198">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1198">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1199">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1199">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1200">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1200">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1201">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1201">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1202"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1202">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1203">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1203">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1204">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1204">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1205">Naciśnięć klawiszy są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="33a31-1205">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="33a31-1206">Inne funkcje programowania, które zależą od naciśnięć klawiszy, na przykład powiązania danych wejściowych i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest ona uwidoczniona jako ogólne naciśnięcia klawisza.</span><span class="sxs-lookup"><span data-stu-id="33a31-1206">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="33a31-1207">Te dane wejściowe funkcji systemu oznaczyć zdarzenia jako obsłużony, następnie <xref:System.Windows.ContentElement.OnKeyUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="33a31-1207">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="33a31-1208">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1208">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1209">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1209">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1210">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1210">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1211">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1211">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1212">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1212">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1213">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1213">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1214">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1214">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1215">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1215">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1216">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1216">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1217">Element <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1217">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="33a31-1218">Te dane zdarzeń musi zawierać identyfikator <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1218">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="33a31-1219">Wywołuje <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzenia trasowanego przy użyciu dane zdarzenia, które są dostarczane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1219">Raises the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1220">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, która wywołuje zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1220">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="33a31-1221">To na \* implementacja metody jest przeznaczona do podniesienia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby wygenerować zdarzenie po <xref:System.Windows.ContentElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="33a31-1221">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="33a31-1222">Ta implementacja różni się od innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na \* implementacji, które tylko zapewniają wygodny sposób, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1222">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="33a31-1223">Jeśli nie masz zamierzone i nietypowe potrzeby nie zgłaszać zdarzenia fokusu, upewnij się, że Twoja implementacja wywołuje implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="33a31-1223">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="33a31-1224">W przeciwnym razie <see cref="E:System.Windows.ContentElement.LostFocus" /> zdarzenie nie jest wywoływane podczas operacji typowy użytkownik, które zwykle ustawić fokus na ten element.</span><span class="sxs-lookup"><span data-stu-id="33a31-1224">Otherwise, the <see cref="E:System.Windows.ContentElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="33a31-1225">Jeśli nie zamierzasz swoje element ma być focusable, użytkownik może uniemożliwić elementu focusable, ustawiając <see cref="P:System.Windows.ContentElement.Focusable" /> do <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-1225">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1226"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1226">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1227">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1227">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1228">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1228">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1229">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1229">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1230">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1230">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1231">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1231">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1232">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1232">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1233">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1233">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1234">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1234">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1235">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1235">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1236">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1236">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1237">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1237">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1238"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1238">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1239">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1239">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1240">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1240">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1241">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1241">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1242">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1242">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1243">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1243">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1244">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1244">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1245">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1245">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1246">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1246">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1247">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1247">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1248">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1248">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1249">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1249">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1250"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1250">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1251">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1251">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1252">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1252">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1253">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1253">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1254">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1254">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1255">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1255">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1256">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1256">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1257">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1257">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1258">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1258">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1259">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1259">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1260">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1260">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1261">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1261">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1262">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1262">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1263">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> zdarzenie trasowane, który występuje, gdy ten element utraci Przechwytywanie touch.</span><span class="sxs-lookup"><span data-stu-id="33a31-1263">Provides class handling for the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1264"><xref:System.Windows.ContentElement.OnLostTouchCapture%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1264">The <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="33a31-1265">Zastąp <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.LostTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1265">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.LostTouchCapture> event.</span></span> <span data-ttu-id="33a31-1266">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1266">Be sure to call the base class' <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1267"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1267">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1268">Te dane zdarzeń raporty szczegółowe informacje o przycisku myszy, który został naciśnięty i obsługiwanego stanu.</span><span class="sxs-lookup"><span data-stu-id="33a31-1268">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="33a31-1269">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1269">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1270">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1270">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1271">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="33a31-1271">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="33a31-1272">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1272">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="33a31-1273">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.ContentElement.OnMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="33a31-1273">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="33a31-1274">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.ContentElement.MouseLeftButtonDown> i <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1274">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="33a31-1275">Jedną z tych zdarzeń mogą być wywoływane na elemencie odbieranie po <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="33a31-1275">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="33a31-1276">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1276">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="33a31-1277">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1277">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="33a31-1278">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-1278">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="33a31-1279">Obsługa <xref:System.Windows.ContentElement.OnMouseDown%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy szczegółów akcji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1279">By handling <xref:System.Windows.ContentElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="33a31-1280">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1280">This behavior might be unwanted; therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="33a31-1281">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na \* metody. należy rozważyć, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1281">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="33a31-1282">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1282">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1283">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1283">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1284">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1284">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1285">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1285">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1286">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1286">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1287">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1287">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1288">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1288">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1289">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1289">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1290">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1290">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1291"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1291">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1292">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1292">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="33a31-1293">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1293">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1294">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1294">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1295">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1295">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1296">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1296">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="33a31-1297">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1297">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1298">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego, za pomocą strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1298">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="33a31-1299">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1299">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1300"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1300">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1301">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1301">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="33a31-1302">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1302">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1303">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1303">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1304">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1304">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1305">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1305">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="33a31-1306">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1306">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1307">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego, za pomocą strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1307">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="33a31-1308">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1308">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1309"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1309">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1310">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1310">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="33a31-1311">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> trasowane zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1311">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="33a31-1312">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1312">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1313"><xref:System.Windows.ContentElement.MouseLeftButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="33a31-1313">The <xref:System.Windows.ContentElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="33a31-1314"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1314"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="33a31-1315">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseLeftButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1315">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="33a31-1316">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1316">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="33a31-1317">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1317">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="33a31-1318">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="33a31-1318">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="33a31-1319">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1319">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="33a31-1320">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1320">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="33a31-1321">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1321">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="33a31-1322">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="33a31-1322">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="33a31-1323">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1323">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="33a31-1324">Na przykład może pochodzić z <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania implementację podstawową; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1324">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1325"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1325">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1326">Dane zdarzenia raportów zwolnienie lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1326">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="33a31-1327">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1327">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1328">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1328">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1329"><xref:System.Windows.ContentElement.MouseLeftButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="33a31-1329">The <xref:System.Windows.ContentElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="33a31-1330"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1330"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="33a31-1331">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseLeftButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1331">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="33a31-1332">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1332">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="33a31-1333">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1333">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="33a31-1334">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="33a31-1334">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="33a31-1335">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1335">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="33a31-1336">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1336">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1337"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1337">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1338">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1338">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1339">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1339">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1340">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1340">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1341">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1341">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1342">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1342">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1343">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1343">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1344">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1344">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1345">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1345">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1346">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1346">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1347">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1347">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1348">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1348">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1349"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1349">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1350">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1350">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="33a31-1351">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1351">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1352">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1352">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1353"><xref:System.Windows.ContentElement.MouseRightButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="33a31-1353">The <xref:System.Windows.ContentElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="33a31-1354"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1354"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="33a31-1355">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseRightButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1355">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="33a31-1356">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1356">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="33a31-1357">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1357">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="33a31-1358">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="33a31-1358">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="33a31-1359">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1359">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="33a31-1360">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1360">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="33a31-1361">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1361">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="33a31-1362">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="33a31-1362">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="33a31-1363">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1363">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="33a31-1364">Na przykład może pochodzić z <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> w klasie pochodnej bez wywoływania bazy; jednak to zastąpienie powoduje wyłączenie kontekstu menu usługi na kontrolki, które są dostępne w ramach programu <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1364">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1365"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1365">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1366">Dane zdarzenia raportów zwolnienie prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1366">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="33a31-1367">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1367">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1368">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1368">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1369"><xref:System.Windows.ContentElement.MouseRightButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="33a31-1369">The <xref:System.Windows.ContentElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="33a31-1370"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1370"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="33a31-1371">Mimo że można oznaczyć <xref:System.Windows.ContentElement.MouseRightButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1371">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="33a31-1372">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1372">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="33a31-1373">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1373">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="33a31-1374">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="33a31-1374">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="33a31-1375">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1375">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="33a31-1376">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1376">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1377"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1377">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1378">Dane zdarzenia raportów, czy przycisk myszy został wydany.</span><span class="sxs-lookup"><span data-stu-id="33a31-1378">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="33a31-1379">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1379">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1380">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1380">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1381">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="33a31-1381">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="33a31-1382">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1382">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="33a31-1383">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.ContentElement.OnMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="33a31-1383">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="33a31-1384">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.ContentElement.MouseLeftButtonUp> i <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1384">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="33a31-1385">Jedną z tych zdarzeń może zostać wywołane na odbieranie elementu po <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="33a31-1385">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="33a31-1386">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1386">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="33a31-1387">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1387">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="33a31-1388">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-1388">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="33a31-1389">Obsługa <xref:System.Windows.ContentElement.OnMouseUp%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy się akcje.</span><span class="sxs-lookup"><span data-stu-id="33a31-1389">By handling <xref:System.Windows.ContentElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="33a31-1390">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1390">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="33a31-1391">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na \* metody. należy rozważyć, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1391">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="33a31-1392">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1392">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1393">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1393">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1394">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1394">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1395">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1395">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1396">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1396">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1397">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1397">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1398">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1398">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1399">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1399">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1400">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1400">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1401"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1401">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1402">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1402">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1403">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1403">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1404">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1404">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1405">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1405">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1406">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1406">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1407">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1407">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1408">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1408">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1409">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1409">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1410">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1410">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1411">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1411">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1412">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1412">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1413"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1413">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1414">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1414">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1415">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1415">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1416">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1416">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1417">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1417">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1418">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1418">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1419">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1419">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1420">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1420">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1421">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1421">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1422">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1422">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1423">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1423">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1424">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1424">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1425">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1425">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1426"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1426">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1427">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1427">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1428">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1428">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1429">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1429">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1430">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1430">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1431">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1431">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1432">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1432">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1433">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1433">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1434">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1434">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1435">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1435">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1436">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1436">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1437">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1437">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1438">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1438">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1439"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1439">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1440">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1440">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1441">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1441">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1442">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1442">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1443">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1443">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1444">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1444">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1445">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1445">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1446">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1446">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1447">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1447">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1448">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1448">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1449">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1449">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1450">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1450">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1451">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1451">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1452"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1452">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1453">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDrop" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1453">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1454">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1454">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1455">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1455">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1456">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1456">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1457">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1457">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1458">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1458">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1459">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1459">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1460">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1460">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1461">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1461">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1462">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1462">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1463">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1463">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1464">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1464">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1465"><see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1465">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1466">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1466">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1467">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1467">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1468">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1468">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1469">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1469">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1470">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1470">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1471">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1471">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1472">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1472">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1473">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1473">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1474">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1474">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1475">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1475">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1476">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1476">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1477">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1477">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1478"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1478">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1479">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1479">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1480">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1480">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1481">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1481">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1482">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1482">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1483">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1483">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1484">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1484">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1485">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1485">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1486">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1486">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1487">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1487">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1488">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1488">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1489">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1489">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1490">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1490">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1491"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1491">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1492">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1492">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1493">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1493">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1494">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1494">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1495">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1495">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1496">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1496">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1497">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1497">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1498">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1498">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1499">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1499">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1500">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1500">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1501">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1501">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1502">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1502">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1503">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1503">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1504"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1504">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1505">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1505">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1506">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1506">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1507">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1507">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1508">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1508">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1509">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1509">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1510">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1510">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1511">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1511">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1512">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1512">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1513">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1513">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1514">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1514">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1515">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1515">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1516">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1516">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1517"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1517">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1518">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1518">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1519">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1519">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1520">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1520">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1521">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1521">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1522">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1522">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1523">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1523">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1524">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1524">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1525">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1525">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1526">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1526">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1527">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1527">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1528">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1528">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1529">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1529">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1530"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1530">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1531">Dane zdarzenia zgłasza, że zostały naciśnięte przyciski myszy jeden lub więcej.</span><span class="sxs-lookup"><span data-stu-id="33a31-1531">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="33a31-1532">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone zdarzenie trasowane osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1532">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1533">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1533">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1534">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="33a31-1534">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="33a31-1535">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1535">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="33a31-1536">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="33a31-1536">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="33a31-1537">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1537">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="33a31-1538">Jedną z tych zdarzeń mogą być wywoływane na elemencie odbieranie po <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="33a31-1538">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="33a31-1539">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1539">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="33a31-1540">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1540">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="33a31-1541">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-1541">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="33a31-1542">Obsługa <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy szczegółów akcji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1542">By handling <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="33a31-1543">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1543">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="33a31-1544">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na \* metody. należy rozważyć, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1544">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="33a31-1545">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1545">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1546">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1546">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1547">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1547">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1548">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1548">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1549">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1549">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1550">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1550">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1551">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1551">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1552">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1552">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1553">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1553">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1554">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1554">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1555"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1555">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1556">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1556">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="33a31-1557">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1557">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1558">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1558">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1559"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="33a31-1559">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="33a31-1560"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1560"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="33a31-1561">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1561">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="33a31-1562">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1562">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="33a31-1563">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1563">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="33a31-1564">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="33a31-1564">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="33a31-1565">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1565">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="33a31-1566">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1566">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="33a31-1567">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1567">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="33a31-1568">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="33a31-1568">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="33a31-1569">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1569">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="33a31-1570">Na przykład może pochodzić z <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania implementację podstawową; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1570">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1571"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1571">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1572">Dane zdarzenia raportów zwolnienie lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1572">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="33a31-1573">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1573">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1574">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1574">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1575"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="33a31-1575">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="33a31-1576"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1576"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="33a31-1577">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1577">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="33a31-1578">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1578">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="33a31-1579">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1579">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="33a31-1580">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="33a31-1580">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="33a31-1581">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1581">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="33a31-1582">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1582">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1583"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1583">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1584">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1584">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1585">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1585">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1586">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1586">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1587">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1587">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1588">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1588">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1589">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1589">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1590">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1590">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1591">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1591">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1592">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1592">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1593">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1593">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1594">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1594">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1595">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1595">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1596"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1596">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1597">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1597">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="33a31-1598">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1598">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1599">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1599">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1600"><xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="33a31-1600">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="33a31-1601"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1601"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="33a31-1602">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1602">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="33a31-1603">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1603">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="33a31-1604">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1604">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="33a31-1605">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="33a31-1605">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="33a31-1606">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1606">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="33a31-1607">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1607">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="33a31-1608">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1608">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="33a31-1609">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="33a31-1609">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="33a31-1610">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1610">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="33a31-1611">Na przykład może pochodzić z <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> w klasie pochodnej bez wywoływania bazy; jednak to zastąpienie powoduje wyłączenie kontekstu menu usługi na kontrolki, które są dostępne w ramach programu <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1611">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1612"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1612">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1613">Dane zdarzenia raportów zwolnienie prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1613">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="33a31-1614">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1614">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1615">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1615">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1616"><xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="33a31-1616">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="33a31-1617"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.ContentElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1617"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="33a31-1618">Mimo że można oznaczyć <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1618">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="33a31-1619">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1619">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="33a31-1620">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.ContentElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1620">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="33a31-1621">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="33a31-1621">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="33a31-1622">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1622">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="33a31-1623">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.ContentElement> przez zastąpienie <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1623">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1624"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1624">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="33a31-1625">Dane zdarzenia raportów, że jeden lub więcej przycisków myszy zostały wydane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1625">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="33a31-1626">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1626">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1627">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1627">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1628">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="33a31-1628">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="33a31-1629">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="33a31-1629">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="33a31-1630">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="33a31-1630">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="33a31-1631">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-1631">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="33a31-1632">Jedną z tych zdarzeń może zostać wywołane na odbieranie elementu po <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="33a31-1632">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="33a31-1633">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1633">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="33a31-1634">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1634">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="33a31-1635">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="33a31-1635">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="33a31-1636">Obsługa <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy się akcje.</span><span class="sxs-lookup"><span data-stu-id="33a31-1636">By handling <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="33a31-1637">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1637">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="33a31-1638">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na \* metody. należy rozważyć, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1638">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="33a31-1639">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1639">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1640">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1640">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1641">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1641">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1642">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1642">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1643">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1643">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1644">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1644">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1645">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1645">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1646">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1646">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1647">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1647">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1648"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1648">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1649">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1649">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1650">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1650">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1651">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1651">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1652">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1652">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1653">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1653">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1654">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1654">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1655">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1655">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1656">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1656">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1657">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1657">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1658">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1658">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1659">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1659">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1660">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1660">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1661"><see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1661">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1662">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1662">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1663">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1663">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1664">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1664">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1665">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1665">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1666">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1666">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1667">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1667">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1668">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1668">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1669">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1669">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1670">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1670">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1671">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1671">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1672">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1672">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1673">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1673">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1674"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1674">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1675">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1675">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1676">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1676">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1677">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1677">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1678">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1678">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1679">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1679">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1680">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1680">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1681">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1681">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1682">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1682">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1683">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1683">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1684">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1684">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1685">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1685">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1686">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1686">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1687"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1687">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1688">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1688">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1689">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1689">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1690">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1690">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1691">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1691">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1692">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1692">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1693">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1693">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1694">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1694">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1695">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1695">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1696">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1696">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1697">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1697">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1698">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1698">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1699">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1699">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1700"><see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1700">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1701">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1701">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1702">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1702">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1703">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1703">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1704">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1704">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1705">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1705">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1706">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1706">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1707">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1707">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1708">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1708">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1709">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1709">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1710">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1710">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1711">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1711">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1712">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1712">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1713"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1713">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1714">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1714">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1715">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1715">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1716">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1716">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1717">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1717">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1718">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1718">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1719">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1719">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1720">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1720">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1721">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1721">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1722">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1722">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1723">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1723">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1724">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1724">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1725">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1725">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1726"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1726">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1727">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1727">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1728">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1728">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1729">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1729">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1730">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1730">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1731">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1731">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1732">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1732">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1733">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1733">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1734">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1734">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1735">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1735">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1736">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1736">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1737">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1737">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1738">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1738">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1739"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1739">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1740">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1740">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1741">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1741">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1742">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1742">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1743">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1743">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1744">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1744">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1745">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1745">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1746">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1746">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1747">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1747">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1748">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1748">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1749">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1749">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1750">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1750">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1751">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1751">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1752"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1752">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1753">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1753">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1754">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1754">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1755">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1755">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1756">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1756">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1757">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1757">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1758">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1758">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1759">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1759">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1760">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1760">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1761">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1761">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1762">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1762">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1763">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1763">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1764">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1764">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1765"><see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1765">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1766">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1766">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1767">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1767">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1768">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1768">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1769">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1769">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1770">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1770">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1771">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1771">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1772">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1772">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1773">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1773">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1774">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1774">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1775">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1775">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1776">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1776">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1777">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1777">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1778"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1778">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1779">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1779">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1780">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1780">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1781">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1781">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1782">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1782">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1783">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1783">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1784">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1784">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1785">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1785">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1786">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1786">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1787">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1787">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1788">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1788">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1789">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1789">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1790">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1790">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1791"><see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1791">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1792">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1792">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1793">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1793">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1794">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1794">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1795">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1795">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1796">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1796">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1797">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1797">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1798">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1798">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1799">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1799">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1800">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1800">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1801">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1801">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1802">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1802">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="33a31-1803">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1803">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.ContentElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1804">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1804">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1805">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> zdarzenia trasowane, które występuje, gdy touch naciśnięcie tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-1805">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1806"><xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1806">The <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="33a31-1807">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.PreviewTouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1807">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="33a31-1808">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1808">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1809">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1809">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1810">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> zdarzenie trasowane, która występuje po przemieszczeniu touch, gdy są połączeni z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-1810">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1811"><xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1811">The <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="33a31-1812">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.PreviewTouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1812">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="33a31-1813">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1813">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1814">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1814">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1815">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> zdarzenie trasowane, która występuje po zwolnieniu touch wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-1815">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1816"><xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1816">The <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="33a31-1817">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.PreviewTouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1817">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="33a31-1818">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1818">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1819"><see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1819">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1820">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1820">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1821">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1821">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1822">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1822">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1823">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1823">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1824">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1824">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1825">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1825">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1826">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1826">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1827">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1827">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1828">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1828">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1829">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1829">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1830">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1830">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="contentElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1831"><see cref="T:System.Windows.Input.QueryCursorEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1831">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1832">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1832">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1833">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1833">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1834">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1834">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1835">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1835">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1836">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1836">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1837">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1837">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1838">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1838">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1839">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1839">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1840">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1840">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1841">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1841">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1842">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1842">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1843"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1843">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1844">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1844">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1845">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1845">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1846">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1846">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1847">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1847">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1848">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1848">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1849">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1849">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1850">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1850">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1851">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1851">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1852">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1852">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1853">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1853">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1854">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1854">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1855"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1855">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1856">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1856">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1857">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1857">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1858">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1858">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1859">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1859">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1860">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1860">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1861">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1861">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1862">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1862">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1863">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1863">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1864">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1864">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1865">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1865">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1866">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1866">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1867"><see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1867">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1868">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1868">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1869">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1869">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1870">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1870">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1871">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1871">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1872">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1872">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1873">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1873">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1874">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1874">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1875">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1875">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1876">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1876">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1877">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1877">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1878">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1878">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1879"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1879">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1880">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie jest wywoływane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="33a31-1880">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="33a31-1881">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1881">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1882">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1882">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1883">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1883">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1884">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1884">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="33a31-1885">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1885">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1886">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1886">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1887">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1887">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1888"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1888">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1889">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1889">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1890">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1890">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1891">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1891">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1892">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1892">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1893">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1893">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1894">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1894">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1895">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1895">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1896">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1896">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1897">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1897">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1898">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1898">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1899">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1899">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1900"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1900">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1901">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1901">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1902">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1902">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1903">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1903">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1904">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1904">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1905">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1905">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1906">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1906">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1907">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1907">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1908">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1908">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1909">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1909">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1910">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1910">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1911">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1911">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1912"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1912">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1913">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie jest wywoływane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="33a31-1913">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="33a31-1914">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1914">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1915">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1915">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1916">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1916">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="33a31-1917">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="33a31-1917">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="33a31-1918">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1918">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1919">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1919">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1920">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1920">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1921"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1921">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1922">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1922">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1923">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1923">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1924">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1924">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1925">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1925">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1926">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1926">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1927">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1927">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1928">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1928">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1929">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1929">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1930">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1930">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1931">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1931">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1932">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1932">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1933"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1933">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1934">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1934">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1935">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1935">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1936">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1936">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1937">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1937">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1938">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1938">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1939">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1939">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1940">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1940">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1941">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1941">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1942">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1942">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1943">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1943">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1944">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1944">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1945"><see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1945">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1946">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1946">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1947">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1947">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1948">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1948">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1949">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1949">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1950">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1950">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1951">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1951">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1952">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1952">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1953">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1953">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1954">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1954">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1955">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1955">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1956">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1956">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1957"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1957">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1958">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1958">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1959">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1959">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1960">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1960">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1961">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1961">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1962">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1962">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1963">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1963">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1964">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1964">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1965">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1965">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1966">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1966">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1967">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1967">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1968">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1968">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1969"><see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1969">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1970">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-1970">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="33a31-1971">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1971">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1972">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1972">This method has no default implementation.</span></span> <span data-ttu-id="33a31-1973">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1973">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="33a31-1974">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1974">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="33a31-1975">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-1975">In this case the matching event is a routed event.</span></span> <span data-ttu-id="33a31-1976">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-1976">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="33a31-1977">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1977">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="33a31-1978">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="33a31-1978">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="33a31-1979">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.ContentElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1979">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="33a31-1980">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-1980">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1981">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1981">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1982">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchDown" /> zdarzenia trasowane, które występuje, gdy touch naciśnie wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-1982">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1983"><xref:System.Windows.ContentElement.OnTouchDown%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1983">The <xref:System.Windows.ContentElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="33a31-1984">Zastąp <xref:System.Windows.ContentElement.OnTouchDown%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.TouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1984">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchDown> event.</span></span> <span data-ttu-id="33a31-1985">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnTouchDown%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1985">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1986">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1986">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1987">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchEnter" /> zdarzenie trasowane, który występuje, gdy touch z zewnątrz do wewnątrz granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-1987">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1988"><xref:System.Windows.ContentElement.OnTouchEnter%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1988">The <xref:System.Windows.ContentElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="33a31-1989">Zastąp <xref:System.Windows.ContentElement.OnTouchEnter%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.TouchEnter> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1989">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchEnter> event.</span></span> <span data-ttu-id="33a31-1990">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnTouchEnter%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1990">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1991">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1991">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1992">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchLeave" /> zdarzenie trasowane, który występuje, gdy touch z wnętrza poza granicami tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-1992">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1993"><xref:System.Windows.ContentElement.OnTouchLeave%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1993">The <xref:System.Windows.ContentElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="33a31-1994">Zastąp <xref:System.Windows.ContentElement.OnTouchLeave%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.TouchLeave> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1994">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchLeave> event.</span></span> <span data-ttu-id="33a31-1995">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnTouchLeave%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-1995">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-1996">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-1996">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-1997">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchMove" /> zdarzenie trasowane, która występuje po przemieszczeniu touch, gdy są połączeni z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-1997">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-1998"><xref:System.Windows.ContentElement.OnTouchMove%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-1998">The <xref:System.Windows.ContentElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="33a31-1999">Zastąp <xref:System.Windows.ContentElement.OnTouchMove%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.TouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-1999">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchMove> event.</span></span> <span data-ttu-id="33a31-2000">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnTouchMove%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-2000">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-2001">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2001">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="33a31-2002">Zapewnia obsługę klasy dla <see cref="E:System.Windows.ContentElement.TouchUp" /> zdarzenie trasowane, która występuje po zwolnieniu touch wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2002">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2003"><xref:System.Windows.ContentElement.OnTouchUp%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2003">The <xref:System.Windows.ContentElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="33a31-2004">Zastąp <xref:System.Windows.ContentElement.OnTouchUp%2A> w klasie pochodnej do obsługi <xref:System.Windows.ContentElement.TouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2004">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchUp> event.</span></span> <span data-ttu-id="33a31-2005">Pamiętaj wywołać klasy bazowej <xref:System.Windows.ContentElement.OnTouchUp%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-2005">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="contentElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="33a31-2006">Kierunek przechodzenia przez żądany fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-2006">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="33a31-2007">Po przesłonięciu w klasie pochodnej zwraca element, który będzie fokus na kierunek przechodzenia przez określony fokus bez faktycznego przenosząc fokus do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2007">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="33a31-2008">Element, który otrzymałby fokus <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> faktycznie została wywołana.</span><span class="sxs-lookup"><span data-stu-id="33a31-2008">The element that would have received focus if <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2009">Domyślna implementacja tej metody tej klasy jest niekompletne i zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="33a31-2009">The default implementation of this method in this class is incomplete and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2010">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element docelowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2010">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2011">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragEnter> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2011">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2012">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2012">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2013">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2013">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2014">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2014">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="33a31-2015">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2015">Routing strategy</span></span>|<span data-ttu-id="33a31-2016">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2016">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2017">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2017">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="33a31-2018">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2018">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="33a31-2019">Zastąp <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2019">Override <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2020">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2020">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2021">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2021">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2022">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2022">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2023">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2023">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2024">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2024">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2025">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2025">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2026">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element źródłowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2026">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2027">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragLeave> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2027">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2028">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2028">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2029">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2029">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2030">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2030">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="33a31-2031">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2031">Routing strategy</span></span>|<span data-ttu-id="33a31-2032">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2032">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2033">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2033">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="33a31-2034">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2034">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="33a31-2035">Zastąp <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2035">Override <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2036">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2036">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2037">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2037">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2038">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2038">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2039">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2039">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2040">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2040">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2041">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2041">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2042">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2042">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2043">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDragOver> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2043">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2044">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDragOver> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2044">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2045">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2045">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2046">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2046">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragOverEvent>|  
|<span data-ttu-id="33a31-2047">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2047">Routing strategy</span></span>|<span data-ttu-id="33a31-2048">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2048">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2049">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2049">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="33a31-2050">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2050">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="33a31-2051">Zastąp <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2051">Override <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2052">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2052">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2053">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2053">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2054">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2054">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2055">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2055">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2056">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2056">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2057">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2057">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2058">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania za pomocą tego elementu jako element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2058">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2059">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewDrop> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2059">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDrop> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2060">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewDrop> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2060">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2061">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2061">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2062">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2062">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDropEvent>|  
|<span data-ttu-id="33a31-2063">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2063">Routing strategy</span></span>|<span data-ttu-id="33a31-2064">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2064">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2065">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2065">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="33a31-2066">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2066">The corresponding bubbling event is <xref:System.Windows.ContentElement.Drop>.</span></span>  
  
-   <span data-ttu-id="33a31-2067">Zastąp <xref:System.Windows.ContentElement.OnPreviewDrop%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2067">Override <xref:System.Windows.ContentElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2068">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewDrop" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2068">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2069">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2069">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2070">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2070">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2071">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2071">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2072">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2072">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2073">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2073">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2074">Występuje po rozpoczęciu operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2074">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2075"><xref:System.Windows.ContentElement.PreviewGiveFeedback> Zdarzeń umożliwia źródło zdarzenia przeciągania, aby modyfikować wygląd wskaźnika myszy, aby dać wizualną opinię użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2075">The <xref:System.Windows.ContentElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="33a31-2076">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewGiveFeedback> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2076">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2077">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewGiveFeedback> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2077">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2078">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2078">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2079">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2079">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="33a31-2080">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2080">Routing strategy</span></span>|<span data-ttu-id="33a31-2081">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2081">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2082">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2082">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="33a31-2083">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2083">The corresponding bubbling event is <xref:System.Windows.ContentElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="33a31-2084">Zastąp <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2084">Override <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2085">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2085">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2086">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2086">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2087">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2087">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2088">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2088">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2089">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2089">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2090">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2090">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2091">Występuje, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-2091">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2092">Ponieważ to zdarzenie używa tunelowania, routingu, element, który ma fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2092">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="33a31-2093">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który jest ustawiony fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-2093">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="33a31-2094">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2094">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2095">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2095">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2096">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2096">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2097">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2097">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="33a31-2098">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2098">Routing strategy</span></span>|<span data-ttu-id="33a31-2099">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2099">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2100">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2100">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="33a31-2101">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2101">The corresponding bubbling event is <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="33a31-2102">Zastąp <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2102">Override <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2103">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2103">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2104">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2104">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2105">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2105">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2106">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2106">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2107">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2107">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2108">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2108">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2109">Występuje po naciśnięciu klawisza, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-2109">Occurs when a key is pressed while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2110">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak polecenia i tekst.</span><span class="sxs-lookup"><span data-stu-id="33a31-2110">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="33a31-2111"><xref:System.Windows.ContentElement.KeyDown> Zdarzeń jest tekst niższego poziomu zdarzenie danych wejściowych, które mogą nie zachowywać się, zgodnie z oczekiwaniami na niektórych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="33a31-2111">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="33a31-2112">Jest to, ponieważ niektóre kontrolki zostały składania do sterowania lub obsługa klasy, zapewniająca wyższego poziomu wersję tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="33a31-2112">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="33a31-2113">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewKeyDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2113">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2114">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewKeyDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2114">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2115">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2115">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2116">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2116">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="33a31-2117">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2117">Routing strategy</span></span>|<span data-ttu-id="33a31-2118">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2118">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2119">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2119">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="33a31-2120">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2120">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="33a31-2121">Zastąp <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2121">Override <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2122">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2122">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2123">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2123">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2124">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2124">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2125">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2125">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2126">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2126">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2127">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2127">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2128">Występuje po zwolnieniu klawisza, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-2128">Occurs when a key is released while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2129">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak polecenia i tekst.</span><span class="sxs-lookup"><span data-stu-id="33a31-2129">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="33a31-2130"><xref:System.Windows.ContentElement.KeyUp> Zdarzeń jest tekst niższego poziomu zdarzenie danych wejściowych, które mogą nie zachowywać się, zgodnie z oczekiwaniami na niektórych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="33a31-2130">The <xref:System.Windows.ContentElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="33a31-2131">Jest to, ponieważ niektóre kontrolki zostały składania do sterowania lub obsługa klasy, zapewniająca wyższego poziomu wersję tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="33a31-2131">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="33a31-2132">Aby uzyskać szczegółowe informacje Sprawdź w dokumentacji dotyczącej poszczególnych formantów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2132">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="33a31-2133">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewKeyUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2133">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2134">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewKeyUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2134">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2135">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2135">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2136">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2136">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="33a31-2137">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2137">Routing strategy</span></span>|<span data-ttu-id="33a31-2138">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2138">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2139">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2139">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="33a31-2140">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2140">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="33a31-2141">Zastąp <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2141">Override <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2142">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2142">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2143">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2143">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2144">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2144">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2145">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2145">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2146">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2146">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2147">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2147">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2148">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-2148">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2149">Ponieważ to zdarzenie używa tunelowania, routingu, element, który utraty fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2149">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="33a31-2150">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty fokus.</span><span class="sxs-lookup"><span data-stu-id="33a31-2150">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="33a31-2151">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2151">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2152">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2152">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2153">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2153">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2154">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2154">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="33a31-2155">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2155">Routing strategy</span></span>|<span data-ttu-id="33a31-2156">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2156">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2157">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2157">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="33a31-2158">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2158">The corresponding bubbling event is <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="33a31-2159">Zastąp <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2159">Override <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2160">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2160">Identifies the <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2161">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2161">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2162">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2162">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2163">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2163">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2164">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2164">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2165">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2165">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2166">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2166">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2167">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2167">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2168">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2168">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2169"><xref:System.Windows.ContentElement.PreviewMouseDown> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, które odpowiadają naciśnij jednego z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="33a31-2169">The <xref:System.Windows.ContentElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="33a31-2170"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2170"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="33a31-2171">Zobacz uwagi, na <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2171">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2172">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2172">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2173">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2173">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="33a31-2174">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2174">Routing strategy</span></span>|<span data-ttu-id="33a31-2175">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2175">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2176">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2176">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-2177">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2177">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="33a31-2178">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2178">Override <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2179">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2179">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2180">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2180">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2181">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2181">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2182">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2182">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2183">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2183">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2184">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2184">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2185">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2185">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2186">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj trasy tunelowania przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2186">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="33a31-2187">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2187">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="33a31-2188">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2188">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="33a31-2189">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2189">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="33a31-2190">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="33a31-2190">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="33a31-2191">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2191">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="33a31-2192">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2192">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2193">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2193">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2194">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2194">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="33a31-2195">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2195">Routing strategy</span></span>|<span data-ttu-id="33a31-2196">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-2196">Direct</span></span>|  
|<span data-ttu-id="33a31-2197">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2197">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-2198">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2198">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2199">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2199">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2200">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2200">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2201">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2201">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2202">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2202">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2203">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2203">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2204">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2204">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2205">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2205">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2206">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj trasy tunelowania przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2206">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="33a31-2207">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2207">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="33a31-2208">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2208">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="33a31-2209">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2209">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="33a31-2210">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="33a31-2210">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="33a31-2211">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2211">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="33a31-2212">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2212">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2213">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2213">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2214">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2214">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="33a31-2215">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2215">Routing strategy</span></span>|<span data-ttu-id="33a31-2216">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-2216">Direct</span></span>|  
|<span data-ttu-id="33a31-2217">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2217">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-2218">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2218">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2219">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2219">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2220">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2220">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2221">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2221">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2222">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2222">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2223">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2223">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2224">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2224">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2225">Występuje po przemieszczeniu wskaźnika myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2225">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2226">To zdarzenie występuje zarówno, gdy wskaźnik myszy po raz pierwszy najedzie na granice elementu, a także gdy wskaźnik myszy porusza się pozostając nadal w granicach elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2226">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="33a31-2227">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2227">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2228">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2228">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2229">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2229">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2230">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2230">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="33a31-2231">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2231">Routing strategy</span></span>|<span data-ttu-id="33a31-2232">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2232">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2233">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2233">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="33a31-2234">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2234">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="33a31-2235">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2235">Override <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2236">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2236">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2237">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2237">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2238">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2238">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2239">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2239">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2240">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2240">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2241">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2241">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2242">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2242">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2243">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj trasy tunelowania przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2243">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="33a31-2244">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2244">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="33a31-2245">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2245">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="33a31-2246">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2246">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="33a31-2247">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="33a31-2247">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="33a31-2248">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2248">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="33a31-2249">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2249">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2250">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2250">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2251">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2251">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="33a31-2252">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2252">Routing strategy</span></span>|<span data-ttu-id="33a31-2253">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-2253">Direct</span></span>|  
|<span data-ttu-id="33a31-2254">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2254">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-2255">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2255">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2256">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2256">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2257">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2257">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2258">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2258">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2259">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2259">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2260">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2260">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2261">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2261">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2262">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2262">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2263">Mimo że to [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj trasy tunelowania przez drzewo elementów faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdą <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2263">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="33a31-2264">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2264">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="33a31-2265">Argumenty to zdarzenie udostępnić argumentów podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2265">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="33a31-2266">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.ContentElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2266">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="33a31-2267">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.ContentElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="33a31-2267">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="33a31-2268">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2268">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="33a31-2269">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2269">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2270">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2270">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2271">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2271">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="33a31-2272">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2272">Routing strategy</span></span>|<span data-ttu-id="33a31-2273">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-2273">Direct</span></span>|  
|<span data-ttu-id="33a31-2274">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2274">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-2275">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2275">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2276">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2276">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2277">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2277">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2278">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2278">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2279">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2279">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2280">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2280">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2281">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2281">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2282">Występuje po zwolnieniu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2282">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2283">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2283">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2284">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2284">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2285"><xref:System.Windows.ContentElement.PreviewMouseUp> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, które odpowiadają naciśnij jednego z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="33a31-2285">The <xref:System.Windows.ContentElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="33a31-2286"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2286"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="33a31-2287">Zobacz uwagi, na <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2287">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2288">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2288">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2289">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2289">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="33a31-2290">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2290">Routing strategy</span></span>|<span data-ttu-id="33a31-2291">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2291">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2292">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2292">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-2293">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2293">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="33a31-2294">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2294">Override <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2295">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2295">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2296">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2296">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2297">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2297">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2298">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2298">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2299">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2299">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2300">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2300">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2301">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2301">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2302">Zespół lub myszy przechwytywania pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony to zdarzenie od elementu wąsko zdefiniowany lub przechwycone, wskaźnik myszy może mieć w rzeczywistości za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2302">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="33a31-2303">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewMouseMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2303">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2304">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewMouseMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2304">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2305">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2305">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2306">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2306">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="33a31-2307">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2307">Routing strategy</span></span>|<span data-ttu-id="33a31-2308">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2308">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2309">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2309">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="33a31-2310">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2310">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="33a31-2311">Zastąp <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2311">Override <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2312">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2312">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2313">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2313">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2314">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2314">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2315">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2315">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2316">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2316">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2317">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2317">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2318">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2318">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2319"><xref:System.Windows.ContentElement.PreviewQueryContinueDrag> Zdarzeń umożliwia źródłom przeciągania zadeklarować, czy operacja przeciągania i upuszczania powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="33a31-2319">The <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="33a31-2320">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2320">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2321">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2321">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2322">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2322">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2323">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2323">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="33a31-2324">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2324">Routing strategy</span></span>|<span data-ttu-id="33a31-2325">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2325">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2326">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2326">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="33a31-2327">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2327">The corresponding bubbling event is <xref:System.Windows.ContentElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="33a31-2328">Zastąp <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2328">Override <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2329">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2329">Identifies the <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2330">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2330">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2331">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2331">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2332">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2332">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2333">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2333">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2334">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2334">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2335">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2335">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2336">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusButtonDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2336">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2337">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusButtonDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2337">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2338">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2338">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2339">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2339">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2340">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2340">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2341">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2341">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="33a31-2342">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2342">Routing strategy</span></span>|<span data-ttu-id="33a31-2343">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2343">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2344">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2344">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-2345">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2345">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="33a31-2346">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2346">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2347">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2347">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2348">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2348">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2349">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2349">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2350">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2350">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2351">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2351">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2352">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2352">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2353">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2353">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2354">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusButtonUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2354">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2355">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusButtonUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2355">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2356">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2356">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2357">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2357">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2358">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2358">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2359">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2359">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="33a31-2360">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2360">Routing strategy</span></span>|<span data-ttu-id="33a31-2361">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2361">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2362">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2362">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-2363">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2363">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="33a31-2364">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2364">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2365">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2365">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2366">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2366">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2367">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2367">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2368">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2368">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2369">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2369">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2370">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2370">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2371">Występuje po dotknięciu dyskretyzatora jest przemieszczany nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2371">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2372">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2372">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2373">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2373">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2374">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2374">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2375">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2375">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2376">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2376">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2377">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2377">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="33a31-2378">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2378">Routing strategy</span></span>|<span data-ttu-id="33a31-2379">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2379">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2380">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2380">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="33a31-2381">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2381">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="33a31-2382">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2382">Override <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2383">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2383">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2384">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2384">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2385">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2385">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2386">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2386">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2387">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2387">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2388">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2388">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2389">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="33a31-2389">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2390">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusInAirMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2390">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2391">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusInAirMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2391">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2392">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2392">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2393">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2393">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2394">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2394">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2395">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2395">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="33a31-2396">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2396">Routing strategy</span></span>|<span data-ttu-id="33a31-2397">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2397">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2398">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2398">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2399">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2399">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="33a31-2400">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2400">Override <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2401">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2401">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2402">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2402">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2403">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2403">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2404">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2404">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2405">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2405">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2406">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2406">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2407">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby wykryć, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2407">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2408">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusInRange> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2408">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2409">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusInRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2409">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2410">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2410">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2411">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2411">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2412">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2412">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2413">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2413">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="33a31-2414">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2414">Routing strategy</span></span>|<span data-ttu-id="33a31-2415">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2415">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2416">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2416">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2417">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2417">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="33a31-2418">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2418">Override <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2419">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2419">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2420">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2420">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2421">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2421">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2422">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2422">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2423">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2423">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2424">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2424">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2425">Występuje, gdy pióro jest przemieszczane nad elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2425">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="33a31-2426">Pióro musi być przemieszczane podczas wykrywania przez Dyskretyzator Aby zgłosić to zdarzenie, w przeciwnym razie <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> jest zgłaszane w zamian.</span><span class="sxs-lookup"><span data-stu-id="33a31-2426">The stylus must move while being detected by the  digitizer  to raise this event, otherwise, <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2427">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2427">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2428">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2428">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2429">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2429">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2430">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2430">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2431">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2431">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2432">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2432">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="33a31-2433">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2433">Routing strategy</span></span>|<span data-ttu-id="33a31-2434">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2434">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2435">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2435">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2436">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2436">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="33a31-2437">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2437">Override <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2438">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2438">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2439">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2439">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2440">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2440">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2441">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2441">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2442">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2442">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2443">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2443">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2444">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte.</span><span class="sxs-lookup"><span data-stu-id="33a31-2444">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2445">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2445">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2446">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2446">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2447">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2447">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2448">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2448">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2449">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2449">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2450">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2450">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="33a31-2451">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2451">Routing strategy</span></span>|<span data-ttu-id="33a31-2452">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2452">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2453">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2453">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2454">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2454">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="33a31-2455">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2455">Override <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2456">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2456">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2457">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2457">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2458">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2458">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2459">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2459">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2460">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2460">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2461">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2461">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2462">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span><span class="sxs-lookup"><span data-stu-id="33a31-2462">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2463">Aby uzyskać informacji na temat gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2463">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="33a31-2464">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2464">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2465">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2465">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2466">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2466">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2467">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2467">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2468">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2468">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2469">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2469">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="33a31-2470">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2470">Routing strategy</span></span>|<span data-ttu-id="33a31-2471">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2471">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2472">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2472">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="33a31-2473">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2473">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="33a31-2474">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2474">Override <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2475">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2475">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2476">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2476">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2477">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2477">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2478">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2478">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2479">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2479">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2480">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2480">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2481">Występuje, gdy użytkownik zgłasza pióra od dyskretyzatora, gdy pióro znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2481">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2482">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewStylusDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2482">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2483">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewStylusDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2483">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2484">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2484">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2485">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2485">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2486">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2486">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2487">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2487">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="33a31-2488">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2488">Routing strategy</span></span>|<span data-ttu-id="33a31-2489">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2489">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2490">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2490">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2491">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2491">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="33a31-2492">Zastąp <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2492">Override <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2493">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2493">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2494">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2494">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2495">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2495">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2496">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2496">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2497">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2497">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2498">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2498">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2499">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2499">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2500"><xref:System.Windows.ContentElement.PreviewTextInput> Zdarzeń umożliwia składnik lub aplikację do nasłuchiwania pod kątem wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2500">The <xref:System.Windows.ContentElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="33a31-2501">Klawiatura jest podstawowym sposobem <xref:System.Windows.ContentElement.PreviewTextInput>; ale można również wygenerować mowy, pisma ręcznego i inne urządzenia wejściowego <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2501">The keyboard is the primary means of <xref:System.Windows.ContentElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="33a31-2502">Ze względu na kombinacje klawiszy - klawiatury domyślne albo za pośrednictwem edytory input method - wiele kluczowych zdarzeń mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2502">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="33a31-2503">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.PreviewTextInput> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2503">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2504">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.PreviewTextInput> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2504">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2505">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2505">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2506">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2506">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTextInputEvent>|  
|<span data-ttu-id="33a31-2507">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2507">Routing strategy</span></span>|<span data-ttu-id="33a31-2508">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2508">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2509">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2509">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="33a31-2510">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2510">The corresponding bubbling event is <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="33a31-2511">Zastąp <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2511">Override <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2512">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2512">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2513">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2513">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2514">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2514">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2515">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2515">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2516">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2516">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2517">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2517">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2518">Występuje, gdy palcem dotyka ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2518">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2519">Domyślnie <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia nie występują aż palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="33a31-2519">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="33a31-2520">Naciśnięcie klawisza palcem na ekranie i przytrzymanie bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2520">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="33a31-2521">Naciśnij i przytrzymaj klawisz zachowanie jest odpowiednikiem myszy kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-2521">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="33a31-2522">Aby spowodować <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia tak szybko, jak palcem dotyka ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączonych właściwości `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2522">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2523">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2523">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2524">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2524">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="33a31-2525">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2525">Routing strategy</span></span>|<span data-ttu-id="33a31-2526">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2526">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2527">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2527">Delegate</span></span>|<span data-ttu-id="33a31-2528"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2528"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="33a31-2529">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2529">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="33a31-2530">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2530">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2531">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2531">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2532">Występuje po przemieszczeniu palcem na ekranie, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2532">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2533">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2533">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2534">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2534">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="33a31-2535">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2535">Routing strategy</span></span>|<span data-ttu-id="33a31-2536">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2536">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2537">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2537">Delegate</span></span>|<span data-ttu-id="33a31-2538"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2538"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="33a31-2539">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2539">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="33a31-2540">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2540">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2541">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2541">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2542">Występuje, gdy zostanie wywołane palcem zniżki w stosunku do ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2542">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2543">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2543">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2544">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2544">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="33a31-2545">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2545">Routing strategy</span></span>|<span data-ttu-id="33a31-2546">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="33a31-2546">Tunneling</span></span>|  
|<span data-ttu-id="33a31-2547">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2547">Delegate</span></span>|<span data-ttu-id="33a31-2548"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2548"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="33a31-2549">To odpowiednie zdarzenie propagacji <xref:System.Windows.ContentElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2549">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="33a31-2550">Zastąp <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2550">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2551">Identyfikuje <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2551">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2552">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2552">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2553"><xref:System.Windows.ContentElement.QueryContinueDrag> Zdarzeń umożliwia źródłom przeciągania określenie, czy operacja przeciągania i upuszczania powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="33a31-2553">The <xref:System.Windows.ContentElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="33a31-2554">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.QueryContinueDrag> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2554">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2555">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.QueryContinueDrag> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2555">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2556">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2556">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2557">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2557">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryContinueDragEvent>|  
|<span data-ttu-id="33a31-2558">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2558">Routing strategy</span></span>|<span data-ttu-id="33a31-2559">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2559">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2560">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2560">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="33a31-2561">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2561">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="33a31-2562">Zastąp <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2562">Override <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2563">Identyfikuje <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2563">Identifies the <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2564">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2564">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2565">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2565">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2566">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2566">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2567">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2567">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2568">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2568">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2569">Występuje, gdy Zażądano wyświetlenia kursora.</span><span class="sxs-lookup"><span data-stu-id="33a31-2569">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="33a31-2570">To zdarzenie jest zgłaszane w elemencie za każdym razem, wskaźnik myszy przesuwa się do nowej lokalizacji, która oznacza, że obiekt kursora może wymagać zmiany na podstawie jego nowego położenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2570">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2571">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.QueryCursor> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2571">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryCursor> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2572">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.QueryCursor> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2572">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2573">Kursor jest określone przy użyciu tej nazwy zdarzeń nie jest kursor tekstu (czasami znana jako funkcja punktu wstawiania).</span><span class="sxs-lookup"><span data-stu-id="33a31-2573">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="33a31-2574">Zamiast tego kursor znajduje się w tym kontekście jest obiekt, który deklaruje na ekranie graficzną związane z kilku możliwych urządzeń powiązane dane wejściowe lub pojęcia związane z programowaniem Windows.</span><span class="sxs-lookup"><span data-stu-id="33a31-2574">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="33a31-2575">Ten obiekt jest reprezentowany przez <xref:System.Windows.Input.Cursor> klasy na platformie WPF.</span><span class="sxs-lookup"><span data-stu-id="33a31-2575">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="33a31-2576">System wejściowy WPF umożliwia zmianę tego kursora, gdy reprezentuje on na ekranie pozycji wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-2576">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="33a31-2577">Możesz użyć wstępnie zdefiniowanych wartości z <xref:System.Windows.Input.Cursors> wyliczenia lub możesz zadeklarować niestandardowe kursora w formie pliku obrazu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2577">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="33a31-2578">Nasłuchiwanie <xref:System.Windows.ContentElement.QueryCursor> zdarzenie nie jest technikę efektywne zarządzanie kursora.</span><span class="sxs-lookup"><span data-stu-id="33a31-2578">Listening for the <xref:System.Windows.ContentElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="33a31-2579">Zamiast tego każdy element należy zdefiniować własne zachowanie kursora z <xref:System.Windows.FrameworkContentElement.Cursor%2A> i <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2579">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="33a31-2580">Należy polegać wyłącznie na <xref:System.Windows.ContentElement.QueryCursor> nie używasz WPF poziomie struktury podstawowych elementów, czy w dodatkowej okoliczności gdzie definiująca zachowanie kursor na zasadzie na element nie spełnia Twoich potrzeb.</span><span class="sxs-lookup"><span data-stu-id="33a31-2580">You should only rely on <xref:System.Windows.ContentElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="33a31-2581">Więcej informacji na temat implementowania zachowanie kursora w odpowiedzi na <xref:System.Windows.ContentElement.QueryCursor>, zobacz <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2581">For more information on implementing cursor behavior in response to <xref:System.Windows.ContentElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2582">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2582">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2583">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2583">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryCursorEvent>|  
|<span data-ttu-id="33a31-2584">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2584">Routing strategy</span></span>|<span data-ttu-id="33a31-2585">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2585">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2586">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2586">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="33a31-2587">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2587">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="33a31-2588">Zastąp <xref:System.Windows.ContentElement.OnQueryCursor%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2588">Override <xref:System.Windows.ContentElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2589">Identyfikuje <see cref="E:System.Windows.ContentElement.QueryCursor" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2589">Identifies the <see cref="E:System.Windows.ContentElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2590">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2590">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2591">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2591">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2592">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2592">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2593">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2593">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2594">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2594">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33a31-2595">A <see cref="T:System.Windows.RoutedEventArgs" /> , zawierający dane zdarzenia, a także identyfikuje zdarzenia w celu podniesienia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2595">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="33a31-2596">Wywołuje określone zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2596">Raises a specific routed event.</span></span> <span data-ttu-id="33a31-2597"><see cref="T:System.Windows.RoutedEvent" /> Zgłoszenie jest identyfikowana w ramach <see cref="T:System.Windows.RoutedEventArgs" /> wystąpienia, który znajduje się (jako <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości danych zdarzenia).</span><span class="sxs-lookup"><span data-stu-id="33a31-2597">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2598">`e` Wpisaniu parametru jako typu podstawowego wspólne dla wszystkich danych zdarzenia trasowanego; jednak dane zdarzeń należy nadać jako typ danych bardziej konkretny od pozostałych zdarzeń, który jest dostępny dla wywoływanego, zdarzenia, ponieważ <xref:System.Windows.RoutedEventArgs> zawierają klasy pochodne właściwości rzeczywiste określone dane, które są przeznaczone dla określonych zdarzeń, gdy pojawia się ono.</span><span class="sxs-lookup"><span data-stu-id="33a31-2598">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="33a31-2599"><xref:System.Windows.RoutedEventArgs> nie jest po prostu właściwości stanu zdarzeń; identyfikuje zdarzenia trasowane do pozyskania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2599"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="33a31-2600">Ten wzorzec wywoływanie zdarzeń i danych zdarzenia trasowanego zarówno różnią się od [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] klasy zdarzenia i dane, które zwykle tylko zawierają właściwości, które są związane ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2600">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33a31-2601">Poniższy przykład tworzy dane zdarzenia, dołącza identyfikator zdarzenia do danych, a następnie używa wystąpienie danych zdarzeń, aby wywołać niestandardowe zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2601">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#raiseevent)]
 [!code-vb[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="contentElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-2602">Zwalnia wszystkie urządzeń dotykowych przechwycone z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2602">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="contentElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-2603">Jeśli ten element przechowywane przechwytywania, zwalnia przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-2603">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2604">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2604">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="33a31-2605">Należy wziąć pod uwagę wartości <xref:System.Windows.ContentElement.IsMouseCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="33a31-2605">Consider checking the value of <xref:System.Windows.ContentElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33a31-2606">Poniższe procedury obsługi przechwytuje lub zwalnia przechwytywanie myszy zgodnie z Stany przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-2606">The following handler captures or releases mouse capture according to mouse button states.</span></span> <span data-ttu-id="33a31-2607">W przykładzie pokazano sposób użycia ruchów myszy przechwycone, dla alternatywnej do celów innych niż przesunąć wskaźnik myszy w [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="33a31-2607">The example shows how to use captured mouse movement for alternative purposes other than moving the mouse pointer in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="contentElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-2608">Zwalnia Przechwytywanie urządzenia pióra, jeśli ten element przechowywane przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2608">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2609">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2609">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="33a31-2610">Należy wziąć pod uwagę wartości <xref:System.Windows.ContentElement.IsStylusCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="33a31-2610">Consider checking the value of <xref:System.Windows.ContentElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="33a31-2611">Urządzenie do wydania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2611">The device to release.</span></span></param>
        <summary><span data-ttu-id="33a31-2612">Próbuje zwolnić urządzeń dotykowych określony z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2612">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="33a31-2613"><see langword="true" /> w przypadku urządzeń dotykowych zwolnieniu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-2613"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a31-2614"><paramref name="touchDevice" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-2614"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="33a31-2615">Identyfikator zdarzenia the.routed, dla którego dołączono program obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-2615">The identifier of the.routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="33a31-2616">Implementacja określoną funkcję obsługi do usunięcia z kolekcji programu obsługi zdarzeń w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-2616">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="33a31-2617">Usuwa obsługi określonego zdarzenia trasowane z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2617">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2618">Najbardziej typowym scenariuszem dla za pomocą tego [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] jest podczas implementowania [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzeń "opakowanie", który jest skojarzony z niestandardowe zdarzenie trasowane, szczególnie w przypadku, gdy implementują logikę "Usuń" programów obsługi na [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] poziom.</span><span class="sxs-lookup"><span data-stu-id="33a31-2618">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="33a31-2619">Przykład znajdujący się to uwagi sekcji ilustruje ten scenariusz.</span><span class="sxs-lookup"><span data-stu-id="33a31-2619">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="33a31-2620">Wywołanie tej metody nie ma wpływu, jeśli nie było żadnych procedury obsługi zarejestrowane przy użyciu kryteriów zgodnych parametrów wejściowych dla wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="33a31-2620">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="33a31-2621">Jeśli więcej niż jeden program obsługi jest dołączony, które pasują do kryteriów, tylko pierwszego programu obsługi, w przypadku magazynu program obsługi jest usuwany.</span><span class="sxs-lookup"><span data-stu-id="33a31-2621">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="33a31-2622">To zachowanie jest zgodne z [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zachowanie `-=` operatora.</span><span class="sxs-lookup"><span data-stu-id="33a31-2622">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="33a31-2623">Ani `routedEvent` ani `handler` może być `null`.</span><span class="sxs-lookup"><span data-stu-id="33a31-2623">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="33a31-2624">Próbują dostarczyć albo wartość jako `null` zgłosi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="33a31-2624">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="33a31-2625">Ta metoda ignoruje `handledEventsToo` informacje o parametrach, która jest dostępna, jeśli program obsługi po raz pierwszy zostały dodane za pomocą <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu, który umożliwia obsługę zdarzeń już obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2625">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="33a31-2626">Dowolnego typu obsługi jest usuwany.</span><span class="sxs-lookup"><span data-stu-id="33a31-2626">Either type of handler is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-2627">Zwraca, czy procesy serializacji należy serializować zawartość <see cref="P:System.Windows.ContentElement.CommandBindings" /> właściwości wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-2627">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="33a31-2628"><see langword="true" /> Jeśli <see cref="P:System.Windows.ContentElement.CommandBindings" /> wartość właściwości powinna być Zserializowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-2628"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2629">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.ContentElement.CommandBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="33a31-2629">This will return `true` if <xref:System.Windows.ContentElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="33a31-2630">To `ShouldSerialize` podana metoda, ponieważ <xref:System.Windows.UIElement.CommandBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="33a31-2630">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="33a31-2631">Ta metoda wskazuje, czy właściwość zmieniła się z jego wartość domyślną.</span><span class="sxs-lookup"><span data-stu-id="33a31-2631">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="33a31-2632">Zazwyczaj wywołuje tę metodę albo tworzenie projektanta lub tworzenia własnych dołączanie kontrolki <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2632">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="33a31-2633">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych za pomocą resetowania metod ShouldSerialize i](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2633">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a31-2634">Zwraca, czy procesy serializacji należy serializować zawartość <see cref="P:System.Windows.ContentElement.InputBindings" /> właściwości wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="33a31-2634">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="33a31-2635"><see langword="true" /> Jeśli <see cref="P:System.Windows.ContentElement.InputBindings" /> wartość właściwości powinna być Zserializowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33a31-2635"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2636">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.ContentElement.InputBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="33a31-2636">This will return `true` if <xref:System.Windows.ContentElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="33a31-2637">To `ShouldSerialize` podana metoda, ponieważ <xref:System.Windows.UIElement.InputBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="33a31-2637">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="33a31-2638">Ta metoda wskazuje, czy właściwość zmieniła się z jego wartość domyślną.</span><span class="sxs-lookup"><span data-stu-id="33a31-2638">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="33a31-2639">Zazwyczaj wywołuje tę metodę albo tworzenie projektanta lub tworzenia własnych dołączanie kontrolki <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2639">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="33a31-2640">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych za pomocą resetowania metod ShouldSerialize i](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2640">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2641">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2641">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2642">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusButtonDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2642">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2643">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusButtonDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2643">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2644">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2644">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2645">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2645">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2646">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2646">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2647">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2647">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonDownEvent>|  
|<span data-ttu-id="33a31-2648">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2648">Routing strategy</span></span>|<span data-ttu-id="33a31-2649">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2649">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2650">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2650">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-2651">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2651">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="33a31-2652">Zastąp <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2652">Override <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2653">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2653">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2654">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2654">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2655">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2655">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2656">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2656">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2657">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2657">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2658">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2658">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2659">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2659">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2660">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusButtonUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2660">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2661">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusButtonUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2661">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2662">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2662">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2663">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2663">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2664">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2664">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2665">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2665">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonUpEvent>|  
|<span data-ttu-id="33a31-2666">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2666">Routing strategy</span></span>|<span data-ttu-id="33a31-2667">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2667">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2668">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2668">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="33a31-2669">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2669">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="33a31-2670">Zastąp <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2670">Override <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2671">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2671">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2672">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2672">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2673">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2673">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2674">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2674">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2675">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2675">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2676">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2676">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2677">Występuje po dotknięciu dyskretyzatora, gdy pióro znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2677">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2678">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusDown> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2678">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2679">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2679">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2680">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2680">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2681">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2681">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2682">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2682">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2683">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2683">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusDownEvent>|  
|<span data-ttu-id="33a31-2684">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2684">Routing strategy</span></span>|<span data-ttu-id="33a31-2685">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2685">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2686">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2686">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="33a31-2687">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2687">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="33a31-2688">Zastąp <xref:System.Windows.ContentElement.OnStylusDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2688">Override <xref:System.Windows.ContentElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2689">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2689">Identifies the <see cref="E:System.Windows.ContentElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2690">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2690">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2691">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2691">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2692">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2692">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2693">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2693">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2694">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2694">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2695">Występuje po pokonaniu przez pióro granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2695">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2696"><xref:System.Windows.ContentElement.StylusEnter> jest [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="33a31-2696"><xref:System.Windows.ContentElement.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="33a31-2697">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2697">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="33a31-2698">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="33a31-2698">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="33a31-2699">Mimo że <xref:System.Windows.ContentElement.StylusEnter> ścieżki po pokonaniu przez granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsStylusOver%2A> wartość właściwości została zmieniona z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-2699">Although <xref:System.Windows.ContentElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="33a31-2700">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusEnter> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2700">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2701">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2701">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2702">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2702">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2703">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2703">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2704">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2704">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2705">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2705">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusEnterEvent>|  
|<span data-ttu-id="33a31-2706">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2706">Routing strategy</span></span>|<span data-ttu-id="33a31-2707">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-2707">Direct</span></span>|  
|<span data-ttu-id="33a31-2708">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2708">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2709">Zastąp <xref:System.Windows.ContentElement.OnStylusEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2709">Override <xref:System.Windows.ContentElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2710">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2710">Identifies the <see cref="E:System.Windows.ContentElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2711">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2711">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2712">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2712">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2713">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2713">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2714">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2714">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2715">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2715">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2716">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="33a31-2716">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2717">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusInAirMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2717">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2718">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusInAirMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2718">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2719">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2719">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2720">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2720">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2721">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2721">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2722">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2722">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="33a31-2723">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2723">Routing strategy</span></span>|<span data-ttu-id="33a31-2724">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2724">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2725">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2725">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2726">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2726">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="33a31-2727">Zastąp <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2727">Override <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2728">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2728">Identifies the <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2729">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2729">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2730">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2730">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2731">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2731">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2732">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2732">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2733">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2733">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2734">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby wykryć, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2734">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2735">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusInRange> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2735">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2736">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusInRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2736">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2737">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2737">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2738">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2738">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2739">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2739">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2740">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2740">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInRangeEvent>|  
|<span data-ttu-id="33a31-2741">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2741">Routing strategy</span></span>|<span data-ttu-id="33a31-2742">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2742">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2743">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2743">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2744">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2744">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="33a31-2745">Zastąp <xref:System.Windows.ContentElement.OnStylusInRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2745">Override <xref:System.Windows.ContentElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2746">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusInRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2746">Identifies the <see cref="E:System.Windows.ContentElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2747">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2747">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2748">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2748">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2749">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2749">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2750">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2750">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2751">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2751">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2752">Występuje po opuszczeniu przez pióro granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2752">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2753"><xref:System.Windows.ContentElement.StylusLeave> jest [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md) bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="33a31-2753"><xref:System.Windows.ContentElement.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="33a31-2754">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2754">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="33a31-2755">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="33a31-2755">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="33a31-2756">Mimo że <xref:System.Windows.ContentElement.StylusLeave> ścieżki po opuszczeniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.ContentElement.IsStylusOver%2A> wartość właściwości została zmieniona z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="33a31-2756">Although <xref:System.Windows.ContentElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="33a31-2757">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusLeave> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2757">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2758">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2758">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2759">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2759">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2760">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2760">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2761">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2761">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2762">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2762">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusLeaveEvent>|  
|<span data-ttu-id="33a31-2763">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2763">Routing strategy</span></span>|<span data-ttu-id="33a31-2764">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-2764">Direct</span></span>|  
|<span data-ttu-id="33a31-2765">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2765">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2766">Zastąp <xref:System.Windows.ContentElement.OnStylusLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2766">Override <xref:System.Windows.ContentElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2767">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2767">Identifies the <see cref="E:System.Windows.ContentElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2768">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2768">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2769">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2769">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2770">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2770">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2771">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2771">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2772">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2772">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2773">Występuje, gdy pióro jest przemieszczane nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2773">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="33a31-2774">Pióro musi dotykać dyskretyzatora, aby zgłosić to zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="33a31-2774">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="33a31-2775">W przeciwnym razie <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> jest zgłaszane w zamian.</span><span class="sxs-lookup"><span data-stu-id="33a31-2775">Otherwise, <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2776">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusMove> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2776">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2777">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2777">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2778">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2778">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2779">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2779">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2780">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2780">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2781">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2781">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusMoveEvent>|  
|<span data-ttu-id="33a31-2782">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2782">Routing strategy</span></span>|<span data-ttu-id="33a31-2783">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2783">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2784">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2784">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2785">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2785">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="33a31-2786">Zastąp <xref:System.Windows.ContentElement.OnStylusMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2786">Override <xref:System.Windows.ContentElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2787">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2787">Identifies the <see cref="E:System.Windows.ContentElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2788">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2788">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2789">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2789">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2790">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2790">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2791">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2791">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2792">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2792">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2793">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2793">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2794">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusOutOfRange> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2794">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2795">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusOutOfRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2795">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2796">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2796">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2797">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2797">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2798">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2798">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2799">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2799">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="33a31-2800">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2800">Routing strategy</span></span>|<span data-ttu-id="33a31-2801">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2801">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2802">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2802">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2803">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2803">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="33a31-2804">Zastąp <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2804">Override <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2805">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2805">Identifies the <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2806">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2806">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2807">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2807">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2808">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2808">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2809">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2809">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2810">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2810">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2811">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span><span class="sxs-lookup"><span data-stu-id="33a31-2811">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2812">Aby uzyskać więcej informacji na temat gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2812">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="33a31-2813">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusSystemGesture> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2813">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2814">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusSystemGesture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2814">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2815">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2815">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2816">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2816">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2817">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2817">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2818">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2818">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="33a31-2819">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2819">Routing strategy</span></span>|<span data-ttu-id="33a31-2820">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2820">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2821">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2821">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="33a31-2822">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2822">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="33a31-2823">Zastąp <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2823">Override <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2824">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2824">Identifies the <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2825">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2825">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2826">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2826">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2827">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2827">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2828">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2828">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2829">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2829">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2830">Występuje, gdy użytkownik zgłasza pióra od dyskretyzatora, gdy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2830">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2831">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.StylusUp> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2831">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2832">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.StylusUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2832">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="33a31-2833">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="33a31-2833">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="33a31-2834">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="33a31-2834">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2835">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2835">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2836">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2836">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusUpEvent>|  
|<span data-ttu-id="33a31-2837">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2837">Routing strategy</span></span>|<span data-ttu-id="33a31-2838">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2838">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2839">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2839">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="33a31-2840">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2840">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="33a31-2841">Zastąp <xref:System.Windows.ContentElement.OnStylusUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2841">Override <xref:System.Windows.ContentElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2842">Identyfikuje <see cref="E:System.Windows.ContentElement.StylusUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2842">Identifies the <see cref="E:System.Windows.ContentElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2843">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2843">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2844">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2844">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2845">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2845">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2846">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2846">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2847">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2847">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2848">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2848">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="33a31-2849">To zdarzenie jest już może być oznaczony jako obsługiwane przez wewnętrzne implementacje formanty złożone.</span><span class="sxs-lookup"><span data-stu-id="33a31-2849">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="33a31-2850">Zobacz uwagi poniżej.</span><span class="sxs-lookup"><span data-stu-id="33a31-2850">See Remark below.</span></span>  
  
 <span data-ttu-id="33a31-2851"><xref:System.Windows.ContentElement.TextInput> Zdarzeń może już być oznaczony jako obsługiwane przez wewnętrzne implementacje formanty złożone.</span><span class="sxs-lookup"><span data-stu-id="33a31-2851">The <xref:System.Windows.ContentElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="33a31-2852">Na przykład <xref:System.Windows.Controls.TextBox> jest formantem złożone gdzie <xref:System.Windows.ContentElement.TextInput> zdarzeń już jest oznaczony jako obsługiwany; w jego składania.</span><span class="sxs-lookup"><span data-stu-id="33a31-2852">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.ContentElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="33a31-2853">Formanty to zrobić, ponieważ kontrolka wymaga do interpretacji niektóre typy danych wejściowych, np. klawiszy strzałek, jako mające specjalne znaczenie dla tej kontrolki.</span><span class="sxs-lookup"><span data-stu-id="33a31-2853">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="33a31-2854">Jeśli używasz <xref:System.Windows.ContentElement.PreviewTextInput> jako zdarzenie, gdzie możesz dołączyć obsługi wprowadzania tekstu, może zostać wyświetlony w poszukiwaniu lepszych wyników.</span><span class="sxs-lookup"><span data-stu-id="33a31-2854">If you use <xref:System.Windows.ContentElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="33a31-2855">Ta technika zmierzone w większości przypadków gdzie kompozycji formantu ma już oznaczone na to zdarzenie, jako obsłużony i uniemożliwia odbieranie zdarzeń wzdłuż trasy zdarzenia programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="33a31-2855">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="33a31-2856"><xref:System.Windows.ContentElement.TextInput> Zdarzeń umożliwia składnik lub aplikację do nasłuchiwania pod kątem wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2856">The <xref:System.Windows.ContentElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="33a31-2857">Klawiatura jest podstawowym sposobem <xref:System.Windows.ContentElement.TextInput>, ale mowy, pisma ręcznego i inne urządzenia wejściowego może też wiązać <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2857">The keyboard is the primary means of <xref:System.Windows.ContentElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
 <span data-ttu-id="33a31-2858">Ze względu na kombinacje klawiszy - klawiatury domyślne albo za pośrednictwem edytory input method - wiele kluczowych zdarzeń mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2858">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="33a31-2859">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.ContentElement.TextInput> jest częścią klasy członków listy podczas <xref:System.Windows.ContentElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="33a31-2859">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.TextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="33a31-2860">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.ContentElement.TextInput> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="33a31-2860">Event handlers that are attached to the <xref:System.Windows.ContentElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2861">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2861">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2862">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2862">Identifier field</span></span>|<xref:System.Windows.ContentElement.TextInputEvent>|  
|<span data-ttu-id="33a31-2863">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2863">Routing strategy</span></span>|<span data-ttu-id="33a31-2864">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2864">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2865">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2865">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="33a31-2866">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2866">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="33a31-2867">Zastąp <xref:System.Windows.ContentElement.OnTextInput%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2867">Override <xref:System.Windows.ContentElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2868">Identyfikuje <see cref="E:System.Windows.ContentElement.TextInput" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2868">Identifies the <see cref="E:System.Windows.ContentElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2869">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="33a31-2869">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="33a31-2870">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="33a31-2870">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="33a31-2871">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="33a31-2871">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="33a31-2872">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2872">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="33a31-2873">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2873">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2874">Występuje, gdy palcem dotyka ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2874">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2875">Domyślnie <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia nie występują aż palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="33a31-2875">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="33a31-2876">Naciśnięcie klawisza palcem na ekranie i przytrzymanie bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2876">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="33a31-2877">Naciśnij i przytrzymaj klawisz zachowanie jest odpowiednikiem myszy kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="33a31-2877">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="33a31-2878">Aby spowodować <xref:System.Windows.ContentElement.PreviewTouchDown> i <xref:System.Windows.ContentElement.TouchDown> zdarzenia tak szybko, jak palcem dotyka ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączonych właściwości `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2878">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2879">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2879">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2880">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2880">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchDownEvent>|  
|<span data-ttu-id="33a31-2881">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2881">Routing strategy</span></span>|<span data-ttu-id="33a31-2882">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2882">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2883">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2883">Delegate</span></span>|<span data-ttu-id="33a31-2884"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2884"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="33a31-2885">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2885">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="33a31-2886">Zastąp <xref:System.Windows.ContentElement.OnTouchDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2886">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2887">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2887">Identifies the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2888">Występuje, gdy touch z zewnątrz do wewnątrz granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2888">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a31-2889">To zdarzenie jest zawsze inicjowane, czy urządzenia dotykowe są przechwytywane do tego elementu interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="33a31-2889">This event is always raised, whether or not the touch device is captured to this UI element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2890">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2890">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2891">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2891">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchEnterEvent>|  
|<span data-ttu-id="33a31-2892">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2892">Routing strategy</span></span>|<span data-ttu-id="33a31-2893">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-2893">Direct</span></span>|  
|<span data-ttu-id="33a31-2894">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2894">Delegate</span></span>|<span data-ttu-id="33a31-2895"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2895"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="33a31-2896">Zastąp <xref:System.Windows.ContentElement.OnTouchEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2896">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2897">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2897">Identifies the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2898">Pobiera wszystkie urządzenia dotykowe, które są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2898">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="33a31-2899">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2899">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2900">Pobiera wszystkie urządzenia dotykowe, które są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2900">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="33a31-2901">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2901">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2902">Pobiera wszystkie urządzenia dotykowe, znajdujących się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2902">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="33a31-2903">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiekty znajdujące się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2903">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2904">Pobiera wszystkie urządzenia dotykowe, znajdujących się nad tym elementem lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2904">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="33a31-2905">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przez ten element lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2905">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2906">Występuje, gdy touch z wnętrza poza granicami tego elementu.</span><span class="sxs-lookup"><span data-stu-id="33a31-2906">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2907">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2907">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2908">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2908">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchLeaveEvent>|  
|<span data-ttu-id="33a31-2909">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2909">Routing strategy</span></span>|<span data-ttu-id="33a31-2910">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="33a31-2910">Direct</span></span>|  
|<span data-ttu-id="33a31-2911">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2911">Delegate</span></span>|<span data-ttu-id="33a31-2912"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2912"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="33a31-2913">Zastąp <xref:System.Windows.ContentElement.OnTouchLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2913">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2914">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2914">Identifies the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2915">Występuje po przemieszczeniu palcem na ekranie, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2915">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2916">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2916">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2917">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2917">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchMoveEvent>|  
|<span data-ttu-id="33a31-2918">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2918">Routing strategy</span></span>|<span data-ttu-id="33a31-2919">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2919">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2920">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2920">Delegate</span></span>|<span data-ttu-id="33a31-2921"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2921"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="33a31-2922">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2922">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="33a31-2923">Zastąp <xref:System.Windows.ContentElement.OnTouchMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2923">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2924">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2924">Identifies the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2925">Występuje, gdy zostanie wywołane palcem zniżki w stosunku do ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="33a31-2925">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="33a31-2926">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="33a31-2926">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="33a31-2927">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="33a31-2927">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchUpEvent>|  
|<span data-ttu-id="33a31-2928">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="33a31-2928">Routing strategy</span></span>|<span data-ttu-id="33a31-2929">Propagacja</span><span class="sxs-lookup"><span data-stu-id="33a31-2929">Bubbling</span></span>|  
|<span data-ttu-id="33a31-2930">Delegate</span><span class="sxs-lookup"><span data-stu-id="33a31-2930">Delegate</span></span>|<span data-ttu-id="33a31-2931"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2931"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="33a31-2932">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.ContentElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="33a31-2932">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="33a31-2933">Zastąp <xref:System.Windows.ContentElement.OnTouchUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="33a31-2933">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a31-2934">Identyfikuje <see cref="E:System.Windows.ContentElement.TouchUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="33a31-2934">Identifies the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>