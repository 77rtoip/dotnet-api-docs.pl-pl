<Type Name="TextWrapping" FullName="System.Windows.TextWrapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25b92c6d2f30c09baf3138463264052cdcaf262e" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39994386" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum TextWrapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TextWrapping extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TextWrapping" />
  <TypeSignature Language="VB.NET" Value="Public Enum TextWrapping" />
  <TypeSignature Language="C++ CLI" Value="public enum class TextWrapping" />
  <TypeSignature Language="F#" Value="type TextWrapping = " />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, czy tekst jest zawijany po osiągnięciu krawędzią zawierającego pola</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić wartość <xref:System.Windows.TextWrapping> właściwość <xref:System.Windows.Controls.TextBox>.  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase12)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase12)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="NoWrap" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.TextWrapping NoWrap = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextWrapping.NoWrap" />
      <MemberSignature Language="VB.NET" Value="NoWrap" />
      <MemberSignature Language="C++ CLI" Value="NoWrap" />
      <MemberSignature Language="F#" Value="NoWrap = 1" Usage="System.Windows.TextWrapping.NoWrap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Odbywa się nie zawijania.</summary>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="Wrap" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.TextWrapping Wrap = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextWrapping.Wrap" />
      <MemberSignature Language="VB.NET" Value="Wrap" />
      <MemberSignature Language="C++ CLI" Value="Wrap" />
      <MemberSignature Language="F#" Value="Wrap = 2" Usage="System.Windows.TextWrapping.Wrap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Dzielenie wierszy występuje, jeśli wiersz przepełnienia poza szerokość bloku dostępne nawet wtedy, gdy algorytmu dzielenia standardowy wiersz nie może określić żadnych możliwość podziału wiersza, tak jak w przypadku bardzo długie słowo ograniczone w kontenerze stałej szerokości przy użyciu nie przewijania mogą .</summary>
      </Docs>
    </Member>
    <Member MemberName="WrapWithOverflow">
      <MemberSignature Language="C#" Value="WrapWithOverflow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.TextWrapping WrapWithOverflow = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.TextWrapping.WrapWithOverflow" />
      <MemberSignature Language="VB.NET" Value="WrapWithOverflow" />
      <MemberSignature Language="C++ CLI" Value="WrapWithOverflow" />
      <MemberSignature Language="F#" Value="WrapWithOverflow = 0" Usage="System.Windows.TextWrapping.WrapWithOverflow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Dzielenie wierszy występuje, gdy wiersz przepełnienia poza szerokość dostępne bloku. Jednak poza szerokość bloku możliwe przepełnienie wiersza, jeśli algorytmu dzielenia linii nie może określić możliwość podziału wiersza, tak jak w przypadku bardzo długie słowo ograniczone w kontenerze stałej szerokości przy użyciu nie przewijania mogą.</summary>
      </Docs>
    </Member>
  </Members>
</Type>