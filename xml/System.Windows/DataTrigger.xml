<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="467761a27a702ddf648fe785b4231edb79a206de" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69445071" /></Metadata><TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type DataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje wyzwalacz, który stosuje wartości właściwości lub wykonuje akcje, gdy powiązane dane spełniają określony warunek.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate> i<xref:System.Windows.DataTemplate> wszystkie mają kolekcję wyzwalacze. A <xref:System.Windows.DataTrigger> umożliwia ustawienie wartości właściwości, gdy wartość właściwości obiektu danych pasuje do określonego <xref:System.Windows.Condition.Value%2A>. Na przykład, Jeśli wyświetlasz listę `Employee` obiektów, kolor pierwszego planu może być różny `Employee's` w zależności od bieżącego uczestnictwa. (Na przykład, `Employees` kto aktualnie jest w urlopie, jest wyświetlany z purpurowym planem). W niektórych scenariuszach może być bardziej odpowiednie do utworzenia konwertera lub użycia <xref:System.Windows.Controls.DataTemplateSelector>. Aby uzyskać więcej informacji, zobacz [Omówienie tworzenia szablonów danych](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 Należy pamiętać, że należy określić <xref:System.Windows.DataTrigger.Binding%2A> właściwości <xref:System.Windows.DataTrigger> i <xref:System.Windows.DataTrigger.Value%2A> dla wyzwalacza danych, aby mieć znaczenie. Jeśli co najmniej jedna z właściwości nie zostanie określona, zostanie zgłoszony wyjątek.  
  
 Właściwość obiektu może składać się tylko z <xref:System.Windows.Setter> obiektów. <xref:System.Windows.DataTrigger> <xref:System.Windows.DataTrigger.Setters%2A> Dodanie elementu podrzędnego <xref:System.Windows.DataTrigger> do obiektu <xref:System.Windows.SetterBaseCollection> niejawnie dodaje <xref:System.Windows.DataTrigger> go do obiektu. <xref:System.Windows.Setter> <xref:System.Windows.EventSetter>obiekty nie są obsługiwane; <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> obsługuje<xref:System.Windows.EventSetter> tylko obiekty.  
  
   
  
## Examples  
 W <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> poniższym przykładzie, <xref:System.Windows.Controls.ListBox> z jest <xref:System.Collections.ObjectModel.ObservableCollection%601> powiązany z *miejscami*, obiektów *miejsc* . *Umieść* obiekty mające *nazwę* i *stan*właściwości.  
  
 Każdy <xref:System.Windows.Controls.ListBoxItem> ** z elementów wyświetlaobiekt<xref:System.Windows.Controls.ListBox> Umieść. W przykładzie zastosowano do każdego z nich <xref:System.Windows.Controls.ListBoxItem>. <xref:System.Windows.Style>  
  
 Określono, że jeśli *stan* elementu danych *miejsca* jest "WA", <xref:System.Windows.Controls.ListBoxItem> a pierwszy z nich jest ustawiony na czerwony. <xref:System.Windows.DataTrigger>  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 Poniższy przykład pokazuje <xref:System.Windows.DataTrigger> <xref:System.Windows.Media.Animation.BeginStoryboard> , jak używać akcji, i <xref:System.Windows.Media.Animation.Storyboard> do animowania właściwości, gdy powiązane dane spełniają określony warunek. Przykład wyświetla informacje spisu w <xref:System.Windows.Controls.ListBox> kontrolce. Używa <xref:System.Windows.DataTrigger> ona do <xref:System.Windows.UIElement.Opacity%2A> animowania każdego, co <xref:System.Windows.Controls.ListBoxItem> zawiera książkę zapasową.  
  
 [!code-xaml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/AnimatePropertyStoryboards/XAML/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Wprowadzenie do przykładu danych tworzenia szablonów</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.DataTrigger" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.DataTrigger.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia powiązanie tworzące wartość właściwości obiektu danych.</summary>
        <value>Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości wygenerowanej przez to powiązanie jest porównywana z wartością określoną przez <xref:System.Windows.DataTrigger.Value%2A> właściwość. Ta wartość jest najpierw konwertowana na typ wartości powiązania (jeśli to możliwe), a następnie dwie wartości są porównywane przy użyciu `Object.Equals` metody. Jeśli dwie wartości są równe, wówczas skojarzone akcje lub metody ustawiające są stosowane.  
  
 Tworzysz powiązanie i Użyj <xref:System.Windows.Data.Binding.Path%2A> właściwości, aby powiązać z właściwością określonego obiektu (obiekt źródłowy powiązania). Na przykład można powiązać z właściwością *priorytet* *zadania*. Aby uzyskać więcej informacji, zobacz temat [powiązanie danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Należy pamiętać, że należy określić <xref:System.Windows.DataTrigger.Binding%2A> właściwości <xref:System.Windows.DataTrigger> i <xref:System.Windows.DataTrigger.Value%2A> dla wyzwalacza danych, aby mieć znaczenie. Jeśli nie ustawiono jednej lub obu właściwości, zostanie zgłoszony wyjątek.  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *oświadczeń*  
 Zero lub więcej klauzule przypisania atrybutu oddzielone przecinkami (,). Aby uzyskać więcej informacji, zobacz [rozszerzenie znaczników powiązań](~/docs/framework/wpf/advanced/binding-markup-extension.md) .  
  
   
  
## Examples  
 <xref:System.Windows.DataTrigger> W poniższym przykładzie <xref:System.Windows.Controls.Border.BorderBrush%2A> ustawia `border` elemento`Yellow` nazwie na, jeśli `TaskType.Home`właściwość jest. `TaskType`  
  
 [!code-xaml[DataTemplatingIntro#DT](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#dt)]  
[!code-xaml[DataTemplatingIntro#DataTrigger](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#datatrigger)]  
[!code-xaml[DataTemplatingIntro#AddingMore2](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#addingmore2)]  
  
 Aby zapoznać się z szczegółowym omówieniem tego przykładu, zobacz [tworzenia szablonów danych — omówienie](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DataTrigger.Value" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Wprowadzenie do przykładu danych tworzenia szablonów</related>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.DataTrigger.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetObject">Obiekt, w którym rozszerzenie znaczników ustawia wartość.</param>
        <param name="eventArgs">Dane istotne dla przetwarzania rozszerzenia znaczników.</param>
        <summary>Obsługuje przypadki, w których rozszerzenie znaczników udostępnia wartość właściwości <see cref="T:System.Windows.DataTrigger" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to metoda, do której odwołuje <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> się stosowany atrybut na poziomie klasy, co oznacza, że ta metoda przetwarza wszystkie próby ustawienia <xref:System.Windows.DataTrigger> wartości z rozszerzeniem znacznika. Ta metoda nie jest zazwyczaj wywoływana bezpośrednio.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.DataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Setter" /> obiektów opisującą wartości właściwości, które mają być stosowane, gdy element danych spełnia określony warunek.</summary>
        <value>Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *ZeroOrMoreSetters*  
 Zero lub więcej <xref:System.Windows.Setter> obiektów.  
  
 A <xref:System.Windows.DataTrigger> umożliwia uruchomienie akcji lub użycie <xref:System.Windows.Setter>parametru s do zastosowania wartości właściwości, gdy element danych spełnia określony warunek.  
  
 Jeśli istnieje więcej niż jedna Metoda ustawiająca tę samą właściwość w tej samej kolekcji setter, używana jest Metoda ustawiająca, która jest zadeklarowana jako Last.  
  
 Właściwość obiektu może składać się tylko z <xref:System.Windows.Setter> obiektów. <xref:System.Windows.DataTrigger> <xref:System.Windows.DataTrigger.Setters%2A> Dodanie elementu podrzędnego <xref:System.Windows.DataTrigger> do obiektu <xref:System.Windows.SetterBaseCollection> niejawnie dodaje <xref:System.Windows.DataTrigger> go do obiektu. <xref:System.Windows.Setter> <xref:System.Windows.EventSetter>obiekty nie są obsługiwane; <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> obsługuje<xref:System.Windows.EventSetter> tylko obiekty.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono dwa <xref:System.Windows.DataTrigger> obiekty, które są zdefiniowane <xref:System.Windows.DataTemplate>w. Jest stosowany do obiektów danych *AuctionItem* (nie pokazano w tym przykładzie), które mają właściwość SpecialFeatures. ** <xref:System.Windows.DataTemplate>  
  
 Pierwszy <xref:System.Windows.DataTrigger> jest określony w taki sposób, że jeśli obiekt danych ma *SpecialFeatures* wartość *Color*, element jest wyświetlany z `DodgerBlue` tłem z tytułami granatu. Jeśli obiekt danych ma *SpecialFeatures* wartość wyróżnienia **, drugi <xref:System.Windows.DataTrigger> będzie aktywny, co spowoduje wyświetlenie elementu z pomarańczowym obramowaniem z gwiazdką.  
  
 Aby zapoznać się z kompletnym przykładem, zobacz [Demonstracja powiązania danych](https://go.microsoft.com/fwlink/?LinkID=163703).  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Wprowadzenie do przykładu danych tworzenia szablonów</related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt podrzędny do dodania.</param>
        <summary>Dodaje obiekt podrzędny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.DataTrigger> gdy wystąpienie jest rzutowane <xref:System.Windows.Markup.IAddChild> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma zostać dodany do obiektu.</param>
        <summary>Dodaje zawartość tekstową węzła do obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.DataTrigger> gdy wystąpienie jest rzutowane <xref:System.Windows.Markup.IAddChild> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.DataTrigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość do porównania z wartością właściwości obiektu danych.</summary>
        <value>Wartość domyślna to <see langword="null" />. Zobacz również sekcję wyjątki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 Ta wartość jest porównywana z wartością właściwości wygenerowaną przez <xref:System.Windows.DataTrigger.Binding%2A> właściwość. <xref:System.Windows.DataTrigger> Porównanie jest sprawdzaniem równości odwołań. Jeśli dwie wartości są równe, wówczas skojarzone akcje lub metody ustawiające są stosowane.  
  
 Należy pamiętać, że należy określić <xref:System.Windows.DataTrigger.Binding%2A> właściwości <xref:System.Windows.DataTrigger> i <xref:System.Windows.DataTrigger.Value%2A> dla wyzwalacza danych, aby mieć znaczenie. Jeśli nie ustawiono jednej lub obu właściwości, zostanie zgłoszony wyjątek.  
  
   
  
## Examples  
 W <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> poniższym przykładzie, <xref:System.Windows.Controls.ListBox> z jest <xref:System.Collections.ObjectModel.ObservableCollection%601> powiązany z *miejscami*, obiektów *miejsc* . *Umieść* obiekty mające *nazwę* i *stan*właściwości.  
  
 Każdy <xref:System.Windows.Controls.ListBoxItem> ** z elementów wyświetlaobiekt<xref:System.Windows.Controls.ListBox> Umieść. W przykładzie zastosowano do każdego z nich <xref:System.Windows.Controls.ListBoxItem>. <xref:System.Windows.Style>  
  
 Określono, że jeśli *stan* elementu danych *miejsca* jest "WA", <xref:System.Windows.Controls.ListBoxItem> a pierwszy z nich jest ustawiony na czerwony. <xref:System.Windows.DataTrigger>  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 Poniższy przykład przedstawia dwa <xref:System.Windows.DataTrigger>s, które są zdefiniowane <xref:System.Windows.DataTemplate>w. Jest stosowany do obiektów danych *AuctionItem* (nie pokazano w tym przykładzie), które mają właściwość SpecialFeatures. ** <xref:System.Windows.DataTemplate> Aby zapoznać się z pełnym przykładem, zobacz [Demonstracja powiązania danych](https://go.microsoft.com/fwlink/?LinkID=163703) .  
  
 Pierwszy <xref:System.Windows.DataTrigger> jest określony w taki sposób, że jeśli obiekt danych ma *SpecialFeatures* wartość *Color*, element jest wyświetlany z tłem DodgerBlue z tytułami granatu. Jeśli obiekt danych ma *SpecialFeatures* wartość wyróżnienia **, drugi <xref:System.Windows.DataTrigger> będzie aktywny, co spowoduje wyświetlenie elementu z pomarańczowym obramowaniem z gwiazdką.  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wyrażenia nie są obsługiwane. Powiązania nie są obsługiwane.</exception>
        <altmember cref="P:System.Windows.DataTrigger.Binding" />
        <altmember cref="P:System.Windows.DataTrigger.Setters" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Wprowadzenie do przykładu danych tworzenia szablonów</related>
      </Docs>
    </Member>
  </Members>
</Type>
