<Type Name="MultiDataTrigger" FullName="System.Windows.MultiDataTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d26961b4ef4f91746cfd22358a71ca09057f654" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39745355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MultiDataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MultiDataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.MultiDataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MultiDataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiDataTrigger sealed : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type MultiDataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje wyzwalacz, który ma zastosowanie wartości właściwości lub wykonuje akcje w przypadku, gdy powiązane dane spełniają określone warunki.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.MultiDataTrigger> obiektu jest podobny do <xref:System.Windows.MultiTrigger>, z tą różnicą, że warunki <xref:System.Windows.MultiDataTrigger> opierają się na wartości właściwości powiązanych danych, zamiast udostępnianych przez <xref:System.Windows.UIElement>. W <xref:System.Windows.MultiDataTrigger>, warunek jest spełniony, gdy wartość właściwości elementu danych jest zgodny z określonym <xref:System.Windows.Condition.Value%2A>. Następnie można użyć metod ustawiających lub <xref:System.Windows.TriggerBase.EnterActions%2A> i <xref:System.Windows.TriggerBase.ExitActions%2A> właściwości w celu zastosowania zmian lub uruchomienia akcji, gdy są spełnione wszystkie warunki.  
  
 <xref:System.Windows.MultiDataTrigger.Setters%2A> Właściwość <xref:System.Windows.MultiDataTrigger> obiektu może zawierać tylko <xref:System.Windows.Setter> obiektów. Dodawanie <xref:System.Windows.Setter> podrzędny <xref:System.Windows.MultiDataTrigger> obiektu niejawnie dodaje go do <xref:System.Windows.SetterBaseCollection> dla <xref:System.Windows.MultiDataTrigger> obiektu. <xref:System.Windows.EventSetter> obiekty nie są obsługiwane; tylko <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> obsługuje <xref:System.Windows.EventSetter> obiektów.  
  
 Dla informacji o użycie wyzwalaczy i kiedy należy użyć innej metody, zobacz [Przegląd Szablonowanie danych](~/docs/framework/wpf/data/data-templating-overview.md).  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> właściwość <xref:System.Windows.Controls.ListBox> jest powiązany z `Places`, <xref:System.Collections.ObjectModel.ObservableCollection%601> z `Place` obiektów. `Place` obiekty mają właściwości `Name` i `State`. Definicja `Place` i `Places` nie są wyświetlane.  
  
 Każdy <xref:System.Windows.Controls.ListBoxItem> z <xref:System.Windows.Controls.ListBox> Wyświetla `Place` obiektu. <xref:System.Windows.Style> w przykładzie jest stosowana do każdego <xref:System.Windows.Controls.ListBoxItem>. <xref:System.Windows.Condition> Elementy <xref:System.Windows.MultiDataTrigger> określić, że jeśli `Name` i `State` z `Place` elementu są dane `Portland` i `OR` odpowiednio, następnie tła odpowiadającego <xref:System.Windows.Controls.ListBoxItem> ustawiono Aby `Cyan`.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TriggerBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiDataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiDataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.MultiDataTrigger" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Windows.ConditionCollection Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ConditionCollection Conditions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As ConditionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ConditionCollection ^ Conditions { System::Windows::ConditionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Windows.ConditionCollection" Usage="System.Windows.MultiDataTrigger.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ConditionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Condition" /> obiektów. Zmiany wartości właściwości są stosowane, gdy są spełnione wszystkie warunki w kolekcji.</summary>
        <value>Kolekcja <see cref="T:System.Windows.Condition" /> obiektów. Wartością domyślną jest pusta kolekcja.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.MultiDataTrigger> obiektu jest podobny do <xref:System.Windows.MultiTrigger>, z tą różnicą, że warunki <xref:System.Windows.MultiDataTrigger> opierają się na wartości właściwości powiązanych danych, zamiast udostępnianych przez <xref:System.Windows.UIElement>. W <xref:System.Windows.MultiDataTrigger>, warunek jest spełniony, gdy wartość właściwości elementu danych jest zgodny z określonym <xref:System.Windows.Condition.Value%2A>. Czy wartość jest pierwszym jest konwertowanym na typ wartości wiązanie, jeśli to możliwe, a następnie dwie wartości są porównywane za pomocą `Object.Equals` metody. <xref:System.Windows.MultiTrigger> Dotyczy skojarzone metod ustawiających lub akcje, gdy spełnione są wszystkie warunki (binarne `AND` operacji).  
  
 Aby uzyskać <xref:System.Windows.MultiDataTrigger>, każdy warunek w kolekcji musi być ustawiona zarówno <xref:System.Windows.Condition.Binding%2A> i <xref:System.Windows.Condition.Value%2A> właściwości. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Condition.Binding%2A>.  
  
<a name="xamlPropertyElementUsage_Conditions"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.Conditions>  
    zeroOrMoreConditions  
  </object.Conditions>  
</object>  
```  
  
<a name="xamlValues_Conditions"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *zeroOrMoreConditions*  
 Zero lub więcej <xref:System.Windows.Condition> obiektów.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> właściwość <xref:System.Windows.Controls.ListBox> jest powiązany z `Places`, <xref:System.Collections.ObjectModel.ObservableCollection%601> z `Place` obiektów. `Place` obiekty mają właściwości `Name` i `State`. Definicja `Place` i `Places` nie są wyświetlane.  
  
 Każdy <xref:System.Windows.Controls.ListBoxItem> z <xref:System.Windows.Controls.ListBox> Wyświetla `Place` obiektu. <xref:System.Windows.Style> w przykładzie jest stosowana do każdego <xref:System.Windows.Controls.ListBoxItem>. <xref:System.Windows.Condition> Elementy <xref:System.Windows.MultiDataTrigger> określić, że jeśli `Name` i `State` z `Place` elementu są dane `Portland` i `OR` odpowiednio, następnie tła odpowiadającego <xref:System.Windows.Controls.ListBoxItem> ustawiono Aby `Cyan`.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.MultiDataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Setter" /> obiekty, które opisują wartości właściwości do zastosowania, jeśli wszystkie warunki <see cref="T:System.Windows.MultiDataTrigger" /> są spełnione.</summary>
        <value>Kolekcja <see cref="T:System.Windows.Setter" /> obiektów. Wartość domyślna to pustą kolekcję.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiDataTrigger> Umożliwia uruchamianie akcji przy użyciu <xref:System.Windows.TriggerBase.EnterActions%2A> lub <xref:System.Windows.TriggerBase.ExitActions%2A> właściwości, lub ustawić wartości właściwości przy użyciu <xref:System.Windows.Setter> obiekty podczas powiązane dane spełniają określone warunki.  
  
 Jeśli istnieją dwa <xref:System.Windows.Setter> obiektów w kolekcji tej samej lub innej metody ustawiającej ustawienie dla tej samej właściwości <xref:System.Windows.Setter> czyli zadeklarowanej ostatnio jest używany.  
  
 Dodawanie <xref:System.Windows.Setter> podrzędny <xref:System.Windows.MultiDataTrigger> obiektu niejawnie dodaje go do <xref:System.Windows.SetterBaseCollection> dla <xref:System.Windows.MultiDataTrigger> obiektu. <xref:System.Windows.EventSetter> obiekty nie są obsługiwane; tylko <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> obsługuje <xref:System.Windows.EventSetter> obiektów.  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
    zeroOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *zeroOrMoreSetters*  
 Zero lub więcej <xref:System.Windows.Setter> obiektów.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> właściwość <xref:System.Windows.Controls.ListBox> jest powiązany z `Places`, <xref:System.Collections.ObjectModel.ObservableCollection%601> z `Place` obiektów. `Place` obiekty mają właściwości `Name` i `State`. Definicja `Place` i `Places` nie są wyświetlane.  
  
 Każdy <xref:System.Windows.Controls.ListBoxItem> z <xref:System.Windows.Controls.ListBox> Wyświetla `Place` obiektu. <xref:System.Windows.Style> w przykładzie jest stosowana do każdego <xref:System.Windows.Controls.ListBoxItem>. <xref:System.Windows.Condition> Elementy <xref:System.Windows.MultiDataTrigger> określić, że jeśli `Name` i `State` z `Place` elementu są dane `Portland` i `OR` odpowiednio, następnie tła odpowiadającego <xref:System.Windows.Controls.ListBoxItem> ustawiono Aby `Cyan`.  
  
 Należy pamiętać, że `<MultiDataTrigger.Setters>` jest niejawne.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt podrzędny do dodania.</param>
        <summary>Dodaje obiekt podrzędny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.MultiDataTrigger> wystąpienia jest rzutowany na <xref:System.Windows.Markup.IAddChild> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który można dodać do obiektu.</param>
        <summary>Dodaje zawartość tekstu dla węzła do obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.MultiDataTrigger> wystąpienia jest rzutowany na <xref:System.Windows.Markup.IAddChild> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>