<Type Name="MultiDataTrigger" FullName="System.Windows.MultiDataTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba6cebb6e7bdb133af0994098d100a833fdef91d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444348" /></Metadata><TypeSignature Language="C#" Value="public sealed class MultiDataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MultiDataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.MultiDataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MultiDataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiDataTrigger sealed : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type MultiDataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje wyzwalacz, który stosuje wartości właściwości lub wykonuje akcje, gdy powiązane dane spełniają zestaw warunków.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt jest podobny <xref:System.Windows.MultiTrigger>do, z tą różnicą, że warunki a <xref:System.Windows.MultiDataTrigger> są oparte na wartościach właściwości powiązanych danych zamiast z <xref:System.Windows.UIElement>. <xref:System.Windows.MultiDataTrigger> W, warunek jest spełniony, gdy wartość właściwości elementu danych pasuje do określonego <xref:System.Windows.Condition.Value%2A>. <xref:System.Windows.MultiDataTrigger> Następnie można użyć metod ustawiających lub <xref:System.Windows.TriggerBase.EnterActions%2A> właściwości i <xref:System.Windows.TriggerBase.ExitActions%2A> , aby zastosować zmiany lub rozpocząć akcje po spełnieniu wszystkich warunków.  
  
 Właściwość obiektu może składać się tylko z <xref:System.Windows.Setter> obiektów. <xref:System.Windows.MultiDataTrigger> <xref:System.Windows.MultiDataTrigger.Setters%2A> Dodanie elementu podrzędnego <xref:System.Windows.MultiDataTrigger> do obiektu <xref:System.Windows.SetterBaseCollection> niejawnie dodaje <xref:System.Windows.MultiDataTrigger> go do obiektu. <xref:System.Windows.Setter> <xref:System.Windows.EventSetter>obiekty nie są obsługiwane; <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> obsługuje<xref:System.Windows.EventSetter> tylko obiekty.  
  
 Aby uzyskać informacje o tym, kiedy używać wyzwalaczy i kiedy używać innych technik, zobacz [tworzenia szablonów danych — omówienie](~/docs/framework/wpf/data/data-templating-overview.md).  
  
   
  
## Examples  
 W <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> poniższym przykładzie właściwość `Places`jest powiązana z obiektem.`Place` <xref:System.Collections.ObjectModel.ObservableCollection%601> <xref:System.Windows.Controls.ListBox> `Place`obiekty mają właściwości `Name` i `State`. Definicja `Place` i`Places` nie są wyświetlane.  
  
 Każdy <xref:System.Windows.Controls.ListBoxItem> z<xref:System.Windows.Controls.ListBox> wyświetlanych`Place` obiektów. W przykładzie zastosowano do każdego z nich <xref:System.Windows.Controls.ListBoxItem>. <xref:System.Windows.Style> `Name` Elementy,które`State` <xref:System.Windows.Controls.ListBoxItem> określają, że`OR` Jeśli element`Portland` danych jest i odpowiednio, to tło odpowiadające jest ustawione `Place` <xref:System.Windows.MultiDataTrigger> <xref:System.Windows.Condition> do `Cyan`programu.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TriggerBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiDataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiDataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.MultiDataTrigger" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Windows.ConditionCollection Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ConditionCollection Conditions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As ConditionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ConditionCollection ^ Conditions { System::Windows::ConditionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Windows.ConditionCollection" Usage="System.Windows.MultiDataTrigger.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ConditionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Condition" /> obiektów. Zmiany wartości właściwości są stosowane po spełnieniu wszystkich warunków w kolekcji.</summary>
        <value>Kolekcja <see cref="T:System.Windows.Condition" /> obiektów. Wartością domyślną jest pusta kolekcja.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt jest podobny <xref:System.Windows.MultiTrigger>do, z tą różnicą, że warunki a <xref:System.Windows.MultiDataTrigger> są oparte na wartościach właściwości powiązanych danych zamiast z <xref:System.Windows.UIElement>. <xref:System.Windows.MultiDataTrigger> W, warunek jest spełniony, gdy wartość właściwości elementu danych pasuje do określonego <xref:System.Windows.Condition.Value%2A>. <xref:System.Windows.MultiDataTrigger> Ta wartość jest najpierw konwertowana na typ wartości powiązania, jeśli jest to możliwe, a następnie dwie wartości są porównywane przy użyciu `Object.Equals` metody. Stosuje skojarzone metody ustawiające lub akcje, gdy wszystkie warunki są spełnione (operacja binarna `AND` ). <xref:System.Windows.MultiTrigger>  
  
 Dla programu <xref:System.Windows.MultiDataTrigger>, każdy warunek w kolekcji musi mieć ustawione <xref:System.Windows.Condition.Binding%2A> właściwości i <xref:System.Windows.Condition.Value%2A> . Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Condition.Binding%2A>.  
  
<a name="xamlPropertyElementUsage_Conditions"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.Conditions>  
    zeroOrMoreConditions  
  </object.Conditions>  
</object>  
```  
  
<a name="xamlValues_Conditions"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *zeroOrMoreConditions*  
 Zero lub więcej <xref:System.Windows.Condition> obiektów.  
  
   
  
## Examples  
 W <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> poniższym przykładzie właściwość `Places`jest powiązana z obiektem.`Place` <xref:System.Collections.ObjectModel.ObservableCollection%601> <xref:System.Windows.Controls.ListBox> `Place`obiekty mają właściwości `Name` i `State`. Definicja `Place` i`Places` nie są wyświetlane.  
  
 Każdy <xref:System.Windows.Controls.ListBoxItem> z<xref:System.Windows.Controls.ListBox> wyświetlanych`Place` obiektów. W przykładzie zastosowano do każdego z nich <xref:System.Windows.Controls.ListBoxItem>. <xref:System.Windows.Style> `Name` Elementy,które`State` <xref:System.Windows.Controls.ListBoxItem> określają, że`OR` Jeśli element`Portland` danych jest i odpowiednio, to tło odpowiadające jest ustawione `Place` <xref:System.Windows.MultiDataTrigger> <xref:System.Windows.Condition> do `Cyan`programu.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.MultiDataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Setter" /> obiektów, które opisują wartości właściwości do zastosowania, gdy spełnione <see cref="T:System.Windows.MultiDataTrigger" /> są wszystkie warunki.</summary>
        <value>Kolekcja <see cref="T:System.Windows.Setter" /> obiektów. Wartość domyślna jest pustą kolekcją.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiDataTrigger>umożliwia uruchamianie akcji przy użyciu <xref:System.Windows.TriggerBase.EnterActions%2A> właściwości lub <xref:System.Windows.TriggerBase.ExitActions%2A> lub do ustawiania wartości właściwości przy użyciu <xref:System.Windows.Setter> obiektów, gdy powiązane dane spełniają zestaw warunków.  
  
 Jeśli istnieją dwa <xref:System.Windows.Setter> obiekty w tej samej lub różnych kolekcjach setter ustawiające tę samą Właściwość <xref:System.Windows.Setter> , używana jest Ostatnia wartość.  
  
 Dodanie elementu podrzędnego <xref:System.Windows.MultiDataTrigger> do obiektu <xref:System.Windows.SetterBaseCollection> niejawnie dodaje <xref:System.Windows.MultiDataTrigger> go do obiektu. <xref:System.Windows.Setter> <xref:System.Windows.EventSetter>obiekty nie są obsługiwane; <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> obsługuje<xref:System.Windows.EventSetter> tylko obiekty.  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
    zeroOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *zeroOrMoreSetters*  
 Zero lub więcej <xref:System.Windows.Setter> obiektów.  
  
   
  
## Examples  
 W <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> poniższym przykładzie właściwość `Places`jest powiązana z obiektem.`Place` <xref:System.Collections.ObjectModel.ObservableCollection%601> <xref:System.Windows.Controls.ListBox> `Place`obiekty mają właściwości `Name` i `State`. Definicja `Place` i`Places` nie są wyświetlane.  
  
 Każdy <xref:System.Windows.Controls.ListBoxItem> z<xref:System.Windows.Controls.ListBox> wyświetlanych`Place` obiektów. W przykładzie zastosowano do każdego z nich <xref:System.Windows.Controls.ListBoxItem>. <xref:System.Windows.Style> `Name` Elementy,które`State` <xref:System.Windows.Controls.ListBoxItem> określają, że`OR` Jeśli element`Portland` danych jest i odpowiednio, to tło odpowiadające jest ustawione `Place` <xref:System.Windows.MultiDataTrigger> <xref:System.Windows.Condition> do `Cyan`programu.  
  
 Należy zauważyć `<MultiDataTrigger.Setters>` , że jest to niejawne.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt podrzędny do dodania.</param>
        <summary>Dodaje obiekt podrzędny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.MultiDataTrigger> gdy wystąpienie jest rzutowane <xref:System.Windows.Markup.IAddChild> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma zostać dodany do obiektu.</param>
        <summary>Dodaje zawartość tekstową węzła do obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.MultiDataTrigger> gdy wystąpienie jest rzutowane <xref:System.Windows.Markup.IAddChild> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
