<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5bdd308f1f4c1b97892601d050dd8c3a54440fef" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48612725" /></Metadata><TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualTransition = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje visual zachowanie, które występuje, gdy kontrolka przechodzi z jednego stanu do drugiego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić visual zachowanie kontrolki, podczas przechodzenia między stanami, dodając <xref:System.Windows.VisualTransition> obiektów. Po utworzeniu <xref:System.Windows.VisualTransition>, należy określić co najmniej jeden z następujących czynności:  
  
-   Czas przejścia między Stanami wystąpienia, ustawiając <xref:System.Windows.VisualTransition.GeneratedDuration%2A> właściwości.  
  
-   Dodatkowe zmiany wyglądu formantu, występujących w momencie przejścia przez ustawienie <xref:System.Windows.VisualTransition.Storyboard%2A> właściwości.  
  
-   Gdy <xref:System.Windows.VisualTransition> jest stosowany przez ustawienie <xref:System.Windows.VisualTransition.To%2A> i <xref:System.Windows.VisualTransition.From%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.VisualTransition> określający, że gdy użytkownik przesuwa wskaźnik myszy poza formant, obramowania kontrolki zmienia się na niebieski, następnie na żółty, a następnie na czarny w wersji 1.5 w ciągu kilku sekund. Na przykład cały, zobacz [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.VisualTransition" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Windows.VisualTransition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Windows.VisualState" /> przejście z.</summary>
        <value>Nazwa <see cref="T:System.Windows.VisualState" /> przejście z.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.From%2A> Właściwość jest opcjonalna. Element <xref:System.Windows.VisualTransition> można ograniczyć do dotyczą tylko w określonych stanach lub mogą być stosowane dowolny czas przejścia sterowania między stanami. Gdy ograniczanie <xref:System.Windows.VisualTransition> jest stosowany przez ustawienie <xref:System.Windows.VisualTransition.To%2A> i <xref:System.Windows.VisualTransition.From%2A> właściwości. W poniższej tabeli opisano poziomy ograniczenie najbardziej restrykcyjne do najmniej restrykcyjna.  
  
|Typ ograniczenia|Wartość atrybutu z|Wartość atrybutu do|  
|-------------------------|-------------------|-----------------|  
|Z określonego stanu do innego określonego stanu|Nazwa <xref:System.Windows.VisualState>|Nazwa <xref:System.Windows.VisualState>|  
|Z dowolny stan do określonego stanu|Nie ustawiono|Nazwa <xref:System.Windows.VisualState>|  
|Z określonego stanu na dowolny stan|Nazwa <xref:System.Windows.VisualState>|Nie ustawiono|  
|Z dowolny stan do dowolnego innego stanu|Nie ustawiono|Nie ustawiono|  
  
 Masz wiele <xref:System.Windows.VisualTransition> obiekty w <xref:System.Windows.VisualStateGroup> odwołujące się do takiego samego stanu, ale będą używane w kolejności, który określa poprzedniej tabeli.  
  
 Można zmienić to zachowanie, tworząc nową klasę, która dziedziczy <xref:System.Windows.VisualStateManager> i zastępowanie <xref:System.Windows.VisualStateManager.GoToStateCore%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład tworzy dwie <xref:System.Windows.VisualTransition> obiektów. Gdy kontrolka przechodzi z `Pressed` do stanu `MouseOver` stanu, <xref:System.Windows.VisualTransition> ma obydwa <xref:System.Windows.VisualTransition.From%2A> i <xref:System.Windows.VisualTransition.To%2A> zestaw jest używany. Gdy kontrolka przechodzi ze stanu, który nie jest `Pressed` do `MouseOver` stanu jest używany inny stan.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedDuration : System.Windows.Duration with get, set" Usage="System.Windows.VisualTransition.GeneratedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas potrzebny na przeniesienie z jednego stanu do drugiego.</summary>
        <value>Czas potrzebny na przeniesienie z jednego stanu do drugiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić, jak długo trwa przejście przez ustawienie <xref:System.Windows.VisualTransition.GeneratedDuration%2A> właściwości. Po ustawieniu <xref:System.Windows.VisualTransition.GeneratedDuration%2A> właściwości, określasz czas potrzebny na przejście do wystąpienia.  
  
   
  
## Examples  
 W poniższym przykładzie określono, że kontrolka uzyskuje pół sekundy, aby przejść do `MouseOver` stanu. Na przykład cały, zobacz [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedEasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Formuła niestandardowa matematycznych, który jest używany do przejścia między stanami.</summary>
        <value>Niestandardowe formuły matematyczne służy do przejścia między stanami.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz ustawić <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> właściwości, aby określić sposób następuje przejście. Na przykład można określić funkcji sterowania tempem zmian, aby przyspieszyć lub zwolnić przejścia. Aby uzyskać więcej informacji, zobacz [funkcji Easingu](~/docs/framework/wpf/graphics-multimedia/easing-functions.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.VisualTransition> , dzięki któremu <xref:System.Windows.Shapes.Rectangle> Aby przesunąć w pionie, gdy użytkownik naciśnie przycisk myszy nad <xref:System.Windows.Controls.Canvas>. Przykład ustawia <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> właściwości <xref:System.Windows.Media.Animation.BounceEase> obiekt, aby spowodować, że <xref:System.Windows.Shapes.Rectangle> wydaje się Odbijanie po osiągnięciu miejsca docelowego. <xref:System.Windows.VisualTransition> Używanego, gdy użytkownik zwolni przycisk ma inny <xref:System.Windows.Media.Animation.BounceEase> obiekt, aby spowodować, że <xref:System.Windows.Shapes.Rectangle> Odbijanie przed zwróceniem do swojego pierwotnego położenia.  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Windows.UIElement3D.MouseDown> i <xref:System.Windows.UIElement.MouseUp> zdarzenia. Przykład wywołuje <xref:System.Windows.VisualStateManager.GoToElementState%2A> metodę, aby zmienić <xref:System.Windows.VisualState> obszaru roboczego.  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualTransition.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Media.Animation.Storyboard" /> występuje, gdy następuje przejście.</summary>
        <value><see cref="T:System.Windows.Media.Animation.Storyboard" /> Występuje, gdy następuje przejście.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Windows.VisualTransition> zawiera <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.Storyboard> zawsze uruchamiany <xref:System.Windows.VisualTransition> jest stosowany. Na przykład, jeśli chcesz, aby obramowania <xref:System.Windows.Controls.Button> Aby zmienić kolory, gdy użytkownik przesuwa wskaźnik myszy poza go, można utworzyć <xref:System.Windows.VisualTransition> zawierający <xref:System.Windows.Media.Animation.Storyboard> zmienia się tło przycisku.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.VisualTransition> określający, że gdy użytkownik przesuwa wskaźnik myszy poza formant, obramowania kontrolki zmienia się na niebieski, następnie na żółty, a następnie na czarny w wersji 1.5 w ciągu kilku sekund. Na przykład cały, zobacz [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="System.Windows.VisualTransition.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Windows.VisualState" /> do którego nastąpi przejście.</summary>
        <value>Nazwa <see cref="T:System.Windows.VisualState" /> do którego nastąpi przejście.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.To%2A> Właściwość jest opcjonalna. Element <xref:System.Windows.VisualTransition> można ograniczyć do dotyczą tylko w określonych stanach lub mogą być stosowane dowolny czas przejścia sterowania między stanami. Gdy ograniczanie <xref:System.Windows.VisualTransition> jest stosowany przez ustawienie <xref:System.Windows.VisualTransition.To%2A> i <xref:System.Windows.VisualTransition.From%2A> właściwości. W poniższej tabeli opisano poziomy ograniczenie najbardziej restrykcyjne do najmniej restrykcyjna.  
  
|Typ ograniczenia|Wartość atrybutu z|Wartość atrybutu do|  
|-------------------------|-------------------|-----------------|  
|Z określonego stanu do innego określonego stanu|Nazwa <xref:System.Windows.VisualState>|Nazwa <xref:System.Windows.VisualState>|  
|Z dowolny stan do określonego stanu|Nie ustawiono|Nazwa <xref:System.Windows.VisualState>|  
|Z określonego stanu na dowolny stan|Nazwa <xref:System.Windows.VisualState>|Nie ustawiono|  
|Z dowolny stan do dowolnego innego stanu|Nie ustawiono|Nie ustawiono|  
  
 Masz wiele <xref:System.Windows.VisualTransition> obiekty w <xref:System.Windows.VisualStateGroup> odwołujące się do takiego samego stanu, ale będą używane w kolejności, który określa poprzedniej tabeli.  
  
 Można zmienić to zachowanie, tworząc nową klasę, która dziedziczy <xref:System.Windows.VisualStateManager> i zastępowanie <xref:System.Windows.VisualStateManager.GoToStateCore%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład tworzy dwie <xref:System.Windows.VisualTransition> obiektów. Gdy kontrolka przechodzi z `Pressed` do stanu `MouseOver` stanu, <xref:System.Windows.VisualTransition> ma obydwa <xref:System.Windows.VisualTransition.From%2A> i <xref:System.Windows.VisualTransition.To%2A> zestaw jest używany. Gdy kontrolka przechodzi ze stanu, który nie jest `Pressed` do `MouseOver` stanu jest używany inny stan.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>