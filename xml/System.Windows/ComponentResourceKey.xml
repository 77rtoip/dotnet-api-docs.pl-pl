<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ab025443f3717a6f64e96df27f296ecc9101058" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30712163" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje lub odwołuje się do kluczy zasobów na podstawie nazw klasy w zestawy zewnętrzne, a także dodatkowe identyfikator.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [ComponentResourceKey — rozszerzenie znaczników](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 Ta klasa implementuje typu obiektu, które są przydatne do tworzenia kluczy, które są oparte na typach w zestawy, a także identyfikatora. Ponieważ zdefiniować lub odwołanie do typu, nie trzeba żądania określonego <xref:System.Windows.ResourceDictionary>, i może istnieć więcej niż jeden zestaw zasobów, w zestawie, każdy zróżnicowanych według typu ich <xref:System.Windows.ComponentResourceKey>.  
  
 Istnieją dwa sposoby definiowania <xref:System.Windows.ComponentResourceKey>.  
  
 Jeśli chcesz, aby klucz łatwo dostępne, można zdefiniować właściwości statycznej swój kod klasy kontrolki, która zwraca <xref:System.Windows.ComponentResourceKey>, skonstruowane z <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> znajdujące się w zestawie zasób zewnętrzny, a <xref:System.Windows.ComponentResourceKey.ResourceId%2A>. Klucz może służyć do definiowania alternatywnych domyślne style formantów w zestawie przez zamianę oryginalnego zestawu zasobów zewnętrznych dla niestandardowego. Można również zdefiniować części nazwanego zasobu w większych stylu formantu lub szablon do udostępnienia punktu wejścia dostosowania. Jest to szczególnie przydatne, jeśli słownik zasobów motywu są definiowane dla formantu.  
  
 Można również użyć [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey — rozszerzenie znaczników](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) w Pełna składnia bezpośrednio w celu utworzenia wystąpienia utracić klucza. Jest to przydatne, jeśli chcesz zadeklarować prywatnej zasoby od innych zestawów, które są mniej wykrywalny, aby dostosować.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ComponentResourceKey" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ComponentResourceKey" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny konstruktor nie jest zwykle używana, ponieważ <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> wartość i <xref:System.Windows.ComponentResourceKey.ResourceId%2A> wartości są wymagane do prawidłowego inicjowania. Domyślny konstruktor istnieje głównie w celu obsługi [ComponentResourceKey — rozszerzenie znaczników](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) użycie języka XAML w formie nazwanego parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly">Typ, który definiuje klucz zasobu.</param>
        <param name="resourceId">Unikatowy identyfikator rozróżnianie to <see cref="T:System.Windows.ComponentResourceKey" /> spośród innych reguł skojarzonych z <c>typeInTargetAssembly</c> typu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ComponentResourceKey" /> , określania <see cref="T:System.Type" /> definiuje klucz, a obiekt ma być używany jako identyfikator dodatkowych zasobów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor istnieje w przypadku dwóch scenariuszy z pierwszego scenariusza są najważniejsze:  
  
-   Obsługuje tworzenie <xref:System.Windows.ComponentResourceKey> który jest następnie udostępniany jako publiczne pola statycznego w klasie kontrolki niestandardowej. Ułatwia kontrolowanie dostępu do swoich własnych zasobów zdefiniowanych w szablonie za pośrednictwem `{x:Static}` użycia dla wartości właściwości szablonu.  
  
-   Obsługuje [ComponentResourceKey — rozszerzenie znaczników](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) użycie języka XAML w formie parametrów pozycyjnych, czyli technikę jeden dostępny dla stron trzecich, które odwołują się do zasobu składnika.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.ComponentResourceKey> które następnie będzie widoczne jako statyczny klucz zapewnia punkt wejścia dostosowania stylu klasy formantu.  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt zestawu, który wskazuje, które zestawu słownika do wyszukania wartość skojarzoną z tym kluczem.</summary>
        <value>Zestaw pobrane jako klasa odbicia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt do porównania z bieżącym <see cref="T:System.Windows.ComponentResourceKey" />.</param>
        <summary>Określa, czy podany obiekt jest taki sam, jak bieżący <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekty są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa klucze są takie same, jeśli mają takie same wartości dla wszystkich ich natychmiastowe można ustawić właściwości (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość skrótu dla tego <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>Wartość całkowita 32-bitowa.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Unikatowy identyfikator do odróżnienia tego klucza z innym skojarzone z tym typem.</summary>
        <value>Unikatowy identyfikator. Zazwyczaj jest to ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [ComponentResourceKey — rozszerzenie znaczników](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 Zazwyczaj ciąg używany do <xref:System.Windows.ComponentResourceKey.ResourceId%2A> wartość odpowiada [xamlname — gramatyka](~/docs/framework/xaml-services/xamlname-grammar.md).  
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Windows.ComponentResourceKey.ResourceId%2A> do odróżnienia tego klucza z innym skojarzone z tym typem.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera reprezentację ciągu <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>Reprezentacja ciągu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Type" /> definiuje klucz zasobu.</summary>
        <value>Typ, który definiuje klucz zasobu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [ComponentResourceKey — rozszerzenie znaczników](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 <xref:System.Windows.ComponentResourceKey> Element jest używany w niestandardowych składników do definiowania kluczy dla zasobów, które są dostępne z zewnętrznych zestawów, w oparciu o przeznaczonych dla zestawu zawierającego typ. Niestandardowe składniki często Definiowanie nowych typów, które muszą być w zestawie, w którym znajduje się zasób. Zazwyczaj te typy nie mają żadnych innych implementacji, w celu spełnienia wymagań wyszukiwania istnieć tylko typy <xref:System.Windows.ComponentResourceKey>.  
  
## Examples  
 Poniższy przykład przedstawia sposób definiowania <xref:System.Windows.ComponentResourceKey> tym <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> i <xref:System.Windows.ComponentResourceKey.ResourceId%2A> przy użyciu [ComponentResourceKey — rozszerzenie znaczników](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md). Ten zasób można następnie umieszczone w zestawie zewnętrznych i dostęp do użycia klucza, żąda zasobu, za pomocą analogiczne <xref:System.Windows.ComponentResourceKey> w żądaniu.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>