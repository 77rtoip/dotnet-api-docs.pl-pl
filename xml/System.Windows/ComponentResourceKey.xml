<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3783bb0e2dc534697af28eec0fd87600fc78be00" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69445222" /></Metadata><TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <TypeSignature Language="F#" Value="type ComponentResourceKey = class&#xA;    inherit ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje lub odwołuje się do kluczy zasobów na podstawie nazw klas w zewnętrznych zestawach, a także do dodatkowego identyfikatora.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] uzyskać więcej informacji, zobacz [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 Ta klasa implementuje typ obiektu, który jest przydatny do tworzenia kluczy opartych na typach w zestawach i identyfikatorze. Ponieważ definiujesz lub odwołujesz się do typu, nie musisz żądać określonego <xref:System.Windows.ResourceDictionary>i więcej niż jednego zestawu zasobów może istnieć w zestawie, każdy jest zróżnicowany przez typ ich. <xref:System.Windows.ComponentResourceKey>  
  
 Istnieją dwa sposoby zdefiniowania <xref:System.Windows.ComponentResourceKey>.  
  
 Jeśli chcesz uzyskać łatwy dostęp do klucza, możesz zdefiniować Właściwość statyczną w kodzie klasy kontrolki, która zwraca obiekt <xref:System.Windows.ComponentResourceKey>, skonstruowany <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> przy użyciu, który istnieje w zewnętrznym zestawie <xref:System.Windows.ComponentResourceKey.ResourceId%2A>zasobów, i. Klucz może służyć do definiowania alternatywnych stylów domyślnych dla kontrolek w zestawie, zamieniając oryginalny zewnętrzny zestaw zasobów na niestandardowy. Możesz również zdefiniować nazwaną część zasobu w większym stylu lub szablonie kontrolki, aby uwidocznić punkt wejścia dostosowywania. Jest to szczególnie przydatne w przypadku definiowania słownika zasobów motywu dla kontrolki.  
  
 Możesz również użyć [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [rozszerzenia ComponentResourceKey Markup](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) w pełnej składni bezpośrednio, aby utworzyć luźne wystąpienie klucza. Jest to przydatne, jeśli chcesz zadeklarować prywatne zasoby z innych zestawów, które są mniej wykrywalne do dostosowania.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ComponentResourceKey" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ComponentResourceKey" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor bez parametrów nie jest zazwyczaj używany, ponieważ <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> wartość i <xref:System.Windows.ComponentResourceKey.ResourceId%2A> wartość są wymagane do prawidłowego inicjacji. Konstruktor bez parametrów istnieje głównie do obsługi użycia kodu XAML [rozszerzenia ComponentResourceKey znaczników](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) w formularzu nazwanego parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.ComponentResourceKey : Type * obj -&gt; System.Windows.ComponentResourceKey" Usage="new System.Windows.ComponentResourceKey (typeInTargetAssembly, resourceId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly">Typ, który definiuje klucz zasobu.</param>
        <param name="resourceId">Unikatowy identyfikator odróżnienia <see cref="T:System.Windows.ComponentResourceKey" /> od innych skojarzonych <paramref name="typeInTargetAssembly" /> z typem.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.ComponentResourceKey" /> , <see cref="T:System.Type" /> określając, że definiuje klucz i obiekt, który ma być używany jako dodatkowy identyfikator zasobu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor istnieje dla dwóch scenariuszy, a pierwszy scenariusz jest najważniejszy:  
  
-   Obsługuje tworzenie <xref:System.Windows.ComponentResourceKey> , które jest następnie udostępniane jako publiczne pole statyczne na niestandardowej klasie kontrolek. Upraszcza to dostęp kontrolki do własnych zdefiniowanych zasobów w szablonie za pomocą `{x:Static}` wartości właściwości szablonu.  
  
-   Obsługuje użycie języka XAML [rozszerzenia ComponentResourceKey Markup](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) w formularzu parametrów pozycyjnych, który jest jedną techniką dostępną dla podmiotów trzecich odwołujących się do zasobu składnika.  
  
   
  
## Examples  
 Poniższy przykład tworzy obiekt <xref:System.Windows.ComponentResourceKey> , który jest następnie ujawniany jako klucz statyczny klasy kontrolki, aby zapewnić punkt wejścia dostosowywania stylu.  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Windows.ComponentResourceKey.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt zestawu wskazujący, który słownik zestawu ma być używany dla wartości skojarzonej z tym kluczem.</summary>
        <value>Pobrany zestaw jako Klasa odbicia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="componentResourceKey.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Obiekt do porównania z bieżącym <see cref="T:System.Windows.ComponentResourceKey" />.</param>
        <summary>Określa, czy podany obiekt jest równy bieżącemu <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns><see langword="true" />Jeśli obiekty są równe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa klucze są równe, jeśli oba mają te same wartości dla wszystkich ich natychmiastowych właściwości settable<xref:System.Windows.ComponentResourceKey.ResourceId%2A>( <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>,).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="componentResourceKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego <see cref="T:System.Windows.ComponentResourceKey" />elementu.</summary>
        <returns>Podpisana 32-bitowa liczba całkowita.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceId : obj with get, set" Usage="System.Windows.ComponentResourceKey.ResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia unikatowy identyfikator w celu odróżnienia tego klucza od innych skojarzonych z tym typem.</summary>
        <value>Unikatowy identyfikator. Zwykle jest to ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] uzyskać więcej informacji, zobacz [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 Zazwyczaj ciąg używany do <xref:System.Windows.ComponentResourceKey.ResourceId%2A> wartości jest zgodny z gramatyką [XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).  
  
## Examples  
 Poniższy przykład pokazuje, jak użyć, <xref:System.Windows.ComponentResourceKey.ResourceId%2A> aby odróżnić ten klucz od innych skojarzonych z tym typem.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="componentResourceKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg reprezentujący <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>Reprezentacja ciągu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInTargetAssembly : Type with get, set" Usage="System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Type" /> określającą klucz zasobu.</summary>
        <value>Typ, który definiuje klucz zasobu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] uzyskać więcej informacji, zobacz [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 <xref:System.Windows.ComponentResourceKey> Element jest używany przez składniki niestandardowe do definiowania kluczy dla zasobów, do których uzyskuje się dostęp z zestawów zewnętrznych, na podstawie określania wartości docelowej zestawu, który zawiera typ. Składniki niestandardowe często definiują nowe typy, które muszą znajdować się w zestawie, w którym znajduje się zasób. Zwykle te typy nie mają żadnej innej implementacji, typy istnieją tylko w celu spełnienia wymagań <xref:System.Windows.ComponentResourceKey>wyszukiwania.  
  
## Examples  
 Poniższy przykład <xref:System.Windows.ComponentResourceKey> pokazuje, jak zdefiniować, w tym <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> i <xref:System.Windows.ComponentResourceKey.ResourceId%2A> przy użyciu [rozszerzenia znacznika ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md). Ten zasób można następnie umieścić w zestawie zewnętrznym i uzyskać do niego dostęp za pomocą klucza, który żąda zasobu przy użyciu <xref:System.Windows.ComponentResourceKey> analogicznego w żądaniu.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
