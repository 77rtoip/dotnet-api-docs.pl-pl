<Type Name="SplashScreen" FullName="System.Windows.SplashScreen">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02041ceb79a43c7a2f19967ba6388d5e82374e41" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69433356" /></Metadata><TypeSignature Language="C#" Value="public class SplashScreen" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SplashScreen extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.SplashScreen" />
  <TypeSignature Language="VB.NET" Value="Public Class SplashScreen" />
  <TypeSignature Language="C++ CLI" Value="public ref class SplashScreen" />
  <TypeSignature Language="F#" Value="type SplashScreen = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia ekran startowy aplikacji Windows Presentation Foundation (WPF).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj klasy, aby wyświetlić obraz w oknie uruchamiania lub na ekranie powitalnym, gdy uruchamiana jest aplikacja WPF. ** <xref:System.Windows.SplashScreen> Wywołaj <xref:System.Windows.SplashScreen.Show%2A> metodę, aby wyświetlić ekran powitalny. Wywołaj <xref:System.Windows.SplashScreen.Close%2A> metodę, aby zamknąć ekran powitalny. Określ obraz do użycia w <xref:System.Windows.SplashScreen> konstruktorze.  
  
 <xref:System.Windows.SplashScreen> Klasa może wyświetlać dowolny format obrazu, który jest obsługiwany przez składnik Windows Imaging Component (WIC). Można na przykład użyć formatu BMP, GIF, JPEG, PNG lub TIFF. Jeśli obraz jest plikiem PNG i zawiera kanał alfa, obraz jest renderowany przy użyciu przezroczystości zdefiniowanej w kanale alfa.  
  
 Na ekranie powitalnym nie można uwzględnić tekstu zastępczego, który został później dodany przez kod. Aby dołączyć tekst na ekranie powitalnym, należy dodać go do pliku obrazu.  
  
> [!NOTE]
>  Nie trzeba pisać żadnego kodu, aby wyświetlić ekran powitalny. Począwszy od [!INCLUDE[vs_orcas_long](~/includes/vs-orcas-long-md.md)] programu z dodatkiem SP1, można szybko skonfigurować ekran powitalny z ustawieniami domyślnymi. Aby uzyskać więcej informacji, zobacz [jak: Dodaj ekran powitalny do aplikacji](~/docs/framework/wpf/app-development/how-to-add-a-splash-screen-to-a-wpf-application.md)WPF.  
  
 <xref:System.Windows.SplashScreen> Klasa wyświetla ekran powitalny najszybciej, jak to możliwe po uruchomieniu aplikacji. Ekran powitalny jest wyświetlany przy użyciu kodu natywnego przed utworzeniem wystąpienia aplikacji WPF. Ekran powitalny jest wyświetlany na środku ekranu. Po załadowaniu aplikacji ekran powitalny zanika.  
  
 Po skompilowaniu aplikacji obraz jest osadzony jako zasób zarządzany w zestawie. Jeśli aplikacja jest zlokalizowana, obraz jest osadzony w zlokalizowanej satelickiej bibliotece DLL.  
  
> [!NOTE]
>  <xref:System.Windows.SplashScreen> Klasa nie jest dostępna w częściowej relacji zaufania.  
  
> [!NOTE]
>  <xref:System.Windows.SplashScreen> Klasy nie można używać w aplikacjach przeglądarki XAML (XBAP), ponieważ używają one innej architektury startowej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć i wyświetlić okno uruchamiania przy użyciu <xref:System.Windows.SplashScreen> klasy.  
  
 [!code-csharp[System.Windows.SplashScreen#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.SplashScreen/CS/App.xaml.cs#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">w celu uzyskania dostępu do zasobów niezarządzanych. Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <altmember cref="M:System.Windows.SplashScreen.Show(System.Boolean)" />
    <altmember cref="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.SplashScreen" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplashScreen (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SplashScreen(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="new System.Windows.SplashScreen : string -&gt; System.Windows.SplashScreen" Usage="new System.Windows.SplashScreen resourceName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">Nazwa osadzonego zasobu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.SplashScreen" /> klasy z określonym zasobem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten `resourceName` parametr stosuje się do zwykłych reguł dla zasobów osadzonych. Aby uzyskać więcej informacji, zobacz <xref:System.Resources.ResourceManager> Klasa. `resourceName` Parametr określa nazwę pliku zasobów, a nie identyfikator URI.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">w celu uzyskania dostępu do zasobów niezarządzanych. Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <altmember cref="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)" />
        <altmember cref="T:System.Resources.ResourceManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplashScreen (System.Reflection.Assembly resourceAssembly, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly resourceAssembly, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceAssembly As Assembly, resourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SplashScreen(System::Reflection::Assembly ^ resourceAssembly, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="new System.Windows.SplashScreen : System.Reflection.Assembly * string -&gt; System.Windows.SplashScreen" Usage="new System.Windows.SplashScreen (resourceAssembly, resourceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceAssembly">Zestaw, który zawiera osadzony zasób.</param>
        <param name="resourceName">Nazwa osadzonego zasobu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.SplashScreen" /> klasy z określonym zestawem zasobów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametry `resourceAssembly` i`resourceName` są zgodne z normalnymi regułami zasobów osadzonych. Aby uzyskać więcej informacji, zobacz <xref:System.Resources.ResourceManager> Klasa. `resourceName` Parametr określa nazwę pliku zasobów, a nie identyfikator URI.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.SplashScreen.#ctor(System.String)" />
        <altmember cref="T:System.Resources.ResourceManager" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan fadeoutDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(valuetype System.TimeSpan fadeoutDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (fadeoutDuration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan fadeoutDuration);" />
      <MemberSignature Language="F#" Value="member this.Close : TimeSpan -&gt; unit" Usage="splashScreen.Close fadeoutDuration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fadeoutDuration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="fadeoutDuration">A <see cref="T:System.TimeSpan" /> , która określa, jak długo będzie trwać ekran powitalny po zainicjowaniu operacji zamknięcia.</param>
        <summary>Zamyka ekran powitalny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołaniu <xref:System.Windows.SplashScreen.Show%2A> metody `autoClose` z parametrem ustawionym na `true` <xref:System.Windows.SplashScreen.Close%2A> , nie trzeba wywoływać metody. Ekran powitalny zostanie zamknięty automatycznie po załadowaniu aplikacji. Gdy ekran powitalny zostanie zamknięty, czas trwania zanikania jest określany przez wartość `fadeoutDuration` domyślną parametru, czyli 300 milisekund.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.SplashScreen.Show(System.Boolean)" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyświetla ekran powitalny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (bool autoClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(bool autoClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Show(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (autoClose As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(bool autoClose);" />
      <MemberSignature Language="F#" Value="member this.Show : bool -&gt; unit" Usage="splashScreen.Show autoClose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoClose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoClose"><see langword="true" />Aby automatycznie zamknąć ekran powitalny; <see langword="false" /> aby ręcznie zamknąć ekran powitalny.</param>
        <summary>Wyświetla ekran powitalny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołasz <xref:System.Windows.SplashScreen.Show%2A> metodę z `autoClose` ustawionym na `true` <xref:System.Windows.SplashScreen.Close%2A> , nie musisz wywoływać metody. Ekran powitalny zostanie zamknięty automatycznie po załadowaniu aplikacji. Gdy ekran powitalny zostanie zamknięty, czas trwania zanikania jest określany przez wartość `fadeoutDuration` domyślną parametru, czyli 300 milisekund.  
  
 Wywołaj `autoClose`metodęz ustawionym `false` na, jeśli chcesz podać wartość niedomyślną dla czasu trwania zanikania. <xref:System.Windows.SplashScreen.Show%2A> Musisz wywołać metodę, <xref:System.Windows.SplashScreen.Close%2A> aby zamknąć ekran powitalny.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Nie można znaleźć zasobu określonego w konstruktorze.</exception>
        <altmember cref="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (bool autoClose, bool topMost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(bool autoClose, bool topMost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (autoClose As Boolean, topMost As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(bool autoClose, bool topMost);" />
      <MemberSignature Language="F#" Value="member this.Show : bool * bool -&gt; unit" Usage="splashScreen.Show (autoClose, topMost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoClose" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="topMost" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="autoClose"><see langword="true" />Aby automatycznie zamknąć ekran powitalny; <see langword="false" /> aby ręcznie zamknąć ekran powitalny.</param>
        <param name="topMost"><see langword="true" />Jeśli okno powitalne powinno używać stylu WS_EX_TOPMOST; w <see langword="false" />przeciwnym razie.</param>
        <summary>Wyświetla ekran powitalny.</summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=145016">CreateWindowEx</related>
      </Docs>
    </Member>
  </Members>
</Type>
