<Type Name="SplashScreen" FullName="System.Windows.SplashScreen">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="468d0aa5651c2db4c20809a5bc37452df7f7d3f8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30715127" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SplashScreen" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SplashScreen extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.SplashScreen" />
  <TypeSignature Language="VB.NET" Value="Public Class SplashScreen" />
  <TypeSignature Language="C++ CLI" Value="public ref class SplashScreen" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera ekranu startowego dla aplikacji Windows Presentation Foundation (WPF).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Windows.SplashScreen> klasy, aby wyświetlić obraz w oknie uruchamiania lub *ekranu powitalnego*, po uruchomieniu aplikacji WPF. Wywołanie <xref:System.Windows.SplashScreen.Show%2A> metodę w celu wyświetlenia ekranu powitalnego. Wywołanie <xref:System.Windows.SplashScreen.Close%2A> metody, aby zamknąć ekran powitalny. Określ obraz do użycia w <xref:System.Windows.SplashScreen> konstruktora.  
  
 <xref:System.Windows.SplashScreen> Klasy można wyświetlić wszelkie format obrazu, który jest obsługiwany przez Windows Imaging Component (WIC). Na przykład można użyć formatu BMP, GIF, JPEG, PNG lub TIFF. Jeśli obraz jest plik PNG i zawiera kanał alfa, obraz jest renderowany przy użyciu zdefiniowanych w kanału alfa przezroczystości.  
  
 Na ekranie powitalnym dodanego później w kodzie, nie mogą zawierać tekst zastępczy. Jeśli chcesz uwzględnić tekstu na ekranie powitalnym, należy dodać go do pliku obrazu.  
  
> [!NOTE]
>  Nie jest konieczne do pisania kodu do wyświetlania ekranu powitalnego. Począwszy od [!INCLUDE[vs_orcas_long](~/includes/vs-orcas-long-md.md)] z dodatkiem SP1, można szybko skonfigurować ekranu powitalnego z ustawieniami domyślnymi. Aby uzyskać więcej informacji, zobacz [porady: Dodawanie ekranu powitalnego aplikacji WPF](~/docs/framework/wpf/app-development/how-to-add-a-splash-screen-to-a-wpf-application.md).  
  
 <xref:System.Windows.SplashScreen> Klasa Wyświetla jak najszybciej ekran powitalny, po uruchomieniu aplikacji. Ekran powitalny jest wyświetlany przy użyciu kodu natywnego, przed utworzeniem wystąpienia aplikacji WPF. Ekran powitalny jest wyświetlany w Centrum ekranu. Podczas ładowania aplikacji stopniowo ekranu powitalnego.  
  
 Podczas kompilowania aplikacji obrazu jest osadzony jako zasób zarządzany w zestawie. Jeśli aplikacja jest zlokalizowana, obraz jest osadzony w zlokalizowanych satelitarnej biblioteki DLL.  
  
> [!NOTE]
>  <xref:System.Windows.SplashScreen> Klasa nie jest dostępna w częściowej relacji zaufania.  
  
> [!NOTE]
>  <xref:System.Windows.SplashScreen> Klasy nie można użyć w aplikacji przeglądarki XAML (XBAP), ponieważ używają one architektura uruchomienia różnych.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia i wyświetlania okna uruchamiania przy użyciu <xref:System.Windows.SplashScreen> klasy.  
  
 [!code-csharp[System.Windows.SplashScreen#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.SplashScreen/CS/App.xaml.cs#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do zasobów niezarządzanych. Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <altmember cref="M:System.Windows.SplashScreen.Show(System.Boolean)" />
    <altmember cref="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.SplashScreen" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplashScreen (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SplashScreen(System::String ^ resourceName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">Nazwa osadzonego zasobu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.SplashScreen" /> klasy z określonego zasobu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `resourceName` Parametr regułom zwykle dla zasobów osadzonych. Aby uzyskać więcej informacji, zobacz <xref:System.Resources.ResourceManager> klasy. `resourceName` Parametr określa nazwę pliku zasobu, a nie identyfikatora URI.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać dostęp do zasobów niezarządzanych. Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <altmember cref="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)" />
        <altmember cref="T:System.Resources.ResourceManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplashScreen (System.Reflection.Assembly resourceAssembly, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly resourceAssembly, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceAssembly As Assembly, resourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SplashScreen(System::Reflection::Assembly ^ resourceAssembly, System::String ^ resourceName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceAssembly">Zestaw, który zawiera osadzony zasób.</param>
        <param name="resourceName">Nazwa osadzonego zasobu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.SplashScreen" /> klasy z zestawu określonego zasobu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `resourceAssembly` i `resourceName` parametrów należy zwykle reguł dotyczących zasobów osadzonych. Aby uzyskać więcej informacji, zobacz <xref:System.Resources.ResourceManager> klasy. `resourceName` Parametr określa nazwę pliku zasobu, a nie identyfikatora URI.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.SplashScreen.#ctor(System.String)" />
        <altmember cref="T:System.Resources.ResourceManager" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan fadeoutDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(valuetype System.TimeSpan fadeoutDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (fadeoutDuration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan fadeoutDuration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fadeoutDuration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="fadeoutDuration">A <see cref="T:System.TimeSpan" /> Określa, jak długo trwa dla ekranu powitalnego do zanikania po zainicjowaniu przez operację zamknięcia.</param>
        <summary>Zamyka ekranu powitalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołujesz <xref:System.Windows.SplashScreen.Show%2A> metody z `autoClose` ustawiona `true`, nie trzeba wywołać <xref:System.Windows.SplashScreen.Close%2A> metody. Ekran powitalny zostanie zamknięte automatycznie po załadowaniu aplikacji. Po zamknięciu ekranu powitalnego, czas spowoduje przejście na jej zanikania jest określany przez wartość domyślną `fadeoutDuration` parametru, który jest 300 MS.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.SplashScreen.Show(System.Boolean)" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyświetla ekran powitalny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (bool autoClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(bool autoClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Show(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (autoClose As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(bool autoClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoClose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoClose">
          <see langword="true" /> Aby automatycznie zamknąć ekran powitalny; <see langword="false" /> aby zamknąć ekran powitalny ręcznie.</param>
        <summary>Wyświetla ekran powitalny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Windows.SplashScreen.Show%2A> metody z `autoClose` ustawioną `true`, nie trzeba wywołać <xref:System.Windows.SplashScreen.Close%2A> metody. Ekran powitalny zostanie zamknięte automatycznie po załadowaniu aplikacji. Po zamknięciu ekranu powitalnego, czas spowoduje przejście na jej zanikania jest określany przez wartość domyślną `fadeoutDuration` parametru, który jest 300 MS.  
  
 Wywołanie <xref:System.Windows.SplashScreen.Show%2A> metody z `autoClose` ustawioną `false` Jeśli chcesz podać wartości innych niż domyślne na czas trwania zanikania. Należy wywołać <xref:System.Windows.SplashScreen.Close%2A> metody, aby zamknąć ekran powitalny.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Nie można odnaleźć zasobu określonego w konstruktorze.</exception>
        <altmember cref="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (bool autoClose, bool topMost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(bool autoClose, bool topMost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (autoClose As Boolean, topMost As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(bool autoClose, bool topMost);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoClose" Type="System.Boolean" />
        <Parameter Name="topMost" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoClose">
          <see langword="true" /> Aby automatycznie zamknąć ekran powitalny; <see langword="false" /> aby zamknąć ekran powitalny ręcznie.</param>
        <param name="topMost">
          <see langword="true" /> Jeśli okno ekranu powitalnego powinien używać ws_ex_topmost — styl; w przeciwnym razie <see langword="false" />.</param>
        <summary>Wyświetla ekran powitalny.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>