<Type Name="CornerRadius" FullName="System.Windows.CornerRadius">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f8fe821f99b271b67d3da779bc94bda7098965a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69445168" /></Metadata><TypeSignature Language="C#" Value="public struct CornerRadius : IEquatable&lt;System.Windows.CornerRadius&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CornerRadius extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.CornerRadius&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CornerRadius" />
  <TypeSignature Language="VB.NET" Value="Public Structure CornerRadius&#xA;Implements IEquatable(Of CornerRadius)" />
  <TypeSignature Language="C++ CLI" Value="public value class CornerRadius : IEquatable&lt;System::Windows::CornerRadius&gt;" />
  <TypeSignature Language="F#" Value="type CornerRadius = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.CornerRadius&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CornerRadiusConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje promienie rogów prostokąta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa ma cztery właściwości, <xref:System.Windows.CornerRadius.TopLeft%2A> <xref:System.Windows.CornerRadius.BottomLeft%2A>, <xref:System.Windows.CornerRadius.TopRight%2A>, i <xref:System.Windows.CornerRadius.BottomRight%2A>, odpowiadające pojedynczym rogiem prostokąta.  Każda z nich <xref:System.Double> jest strukturą, którą można ustawić niezależnie od innych.  
  
 Promienie nie mogą być ujemne.  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  

```xaml
<object property="TopLeft,TopRight,BottomRight,BottomLeft "/>  
```

—lub—

```xaml
<object property="AllCorners"/>  
```  

<a name="xamlValues_Thickness"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *TopLeft*  
 <xref:System.Double>wartość określająca promień lewego górnego rogu.  
  
 *TopRight*  
 <xref:System.Double>wartość określająca prawy górny róg.  
  
 *BottomRight*  
 <xref:System.Double>wartość określająca prawy dolny róg.  
  
 *BottomLeft*  
 <xref:System.Double>wartość, która określa Dolny lewy róg.  
  
 *AllCorners*  
 Jeśli określona jest tylko <xref:System.Double> jedna wartość, miara jest stosowana do wszystkich rogów *TopLeft*, *topright*, <xref:System.Windows.CornerRadius> *bottomright*i *bottomleft* .  
  
> [!NOTE]
>  Wartości nie muszą zawierać przecinka dziesiętnego jawnie, gdy jest określony jako ciąg. Ciąg "1" podany w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obliczaniu do wartości 1,0 w przypadku odwołania w kodzie.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić wartość <xref:System.Windows.Controls.Border.CornerRadius%2A> właściwości przy użyciu [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] kodu i.  
  
 [!code-csharp[ThicknessStruct#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#1)]
 [!code-vb[ThicknessStruct#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#1)]
 [!code-xaml[ThicknessStruct#1](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Border" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.CornerRadius" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CornerRadius (double uniformRadius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 uniformRadius) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CornerRadius.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uniformRadius As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CornerRadius(double uniformRadius);" />
      <MemberSignature Language="F#" Value="new System.Windows.CornerRadius : double -&gt; System.Windows.CornerRadius" Usage="new System.Windows.CornerRadius uniformRadius" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uniformRadius" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="uniformRadius">Wartość promienia zastosowana do każdego rogu prostokąta.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.CornerRadius" /> klasy z określoną jednolitą wartością RADIUS dla każdego rogu lub prostokąta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CornerRadius (double topLeft, double topRight, double bottomRight, double bottomLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 topLeft, float64 topRight, float64 bottomRight, float64 bottomLeft) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topLeft As Double, topRight As Double, bottomRight As Double, bottomLeft As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CornerRadius(double topLeft, double topRight, double bottomRight, double bottomLeft);" />
      <MemberSignature Language="F#" Value="new System.Windows.CornerRadius : double * double * double * double -&gt; System.Windows.CornerRadius" Usage="new System.Windows.CornerRadius (topLeft, topRight, bottomRight, bottomLeft)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="topLeft" Type="System.Double" />
        <Parameter Name="topRight" Type="System.Double" />
        <Parameter Name="bottomRight" Type="System.Double" />
        <Parameter Name="bottomLeft" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="topLeft">Promień lewego górnego rogu.</param>
        <param name="topRight">Promień prawego górnego rogu.</param>
        <param name="bottomRight">Promień prawego dolnego rogu.</param>
        <param name="bottomLeft">Promień lewego dolnego rogu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.CornerRadius" /> klasy z określonymi wartościami RADIUS dla każdego rogu prostokąta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomLeft">
      <MemberSignature Language="C#" Value="public double BottomLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BottomLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.CornerRadius.BottomLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property BottomLeft As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double BottomLeft { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.BottomLeft : double with get, set" Usage="System.Windows.CornerRadius.BottomLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia promień lewego dolnego rogu.</summary>
        <value>Promień lewego dolnego rogu. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Promień lewego dolnego rogu można ustawić niezależnie od innych rogów prostokąta.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.CornerRadius.TopRight" />
        <altmember cref="P:System.Windows.CornerRadius.BottomRight" />
        <altmember cref="P:System.Windows.CornerRadius.TopLeft" />
      </Docs>
    </Member>
    <Member MemberName="BottomRight">
      <MemberSignature Language="C#" Value="public double BottomRight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BottomRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.CornerRadius.BottomRight" />
      <MemberSignature Language="VB.NET" Value="Public Property BottomRight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double BottomRight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.BottomRight : double with get, set" Usage="System.Windows.CornerRadius.BottomRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia promień prawego dolnego rogu.</summary>
        <value>Promień prawego dolnego rogu. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Promień prawego dolnego rogu można ustawić niezależnie od innych rogów prostokąta.  
  
   
  
## Examples  
 <xref:System.Windows.CornerRadius.TopRight%2A>  
  
 <xref:System.Windows.CornerRadius.BottomLeft%2A>  
  
 <xref:System.Windows.CornerRadius.TopLeft%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Porównuje <see cref="T:System.Windows.CornerRadius" /> dwie struktury pod kątem równości.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CornerRadius.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cornerRadius.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><see cref="T:System.Object" /> Do porównania.</param>
        <summary>Określa, czy określony <see cref="T:System.Object" /> <see cref="T:System.Windows.CornerRadius" /> jest i czy zawiera te same wartości promienia <see cref="T:System.Windows.CornerRadius" />narożnika.</summary>
        <returns><see langword="true" />Jeśli <paramref name="obj" /> <see cref="T:System.Windows.CornerRadius" />jest i zawiera te same wartości promienia narożnika; w przeciwnym razie <see langword="false" />. <see cref="T:System.Windows.CornerRadius" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.CornerRadius cornerRadius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.CornerRadius cornerRadius) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::CornerRadius cornerRadius);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.CornerRadius -&gt; bool" Usage="cornerRadius.Equals cornerRadius" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cornerRadius" Type="System.Windows.CornerRadius" />
      </Parameters>
      <Docs>
        <param name="cornerRadius">Do porównania z tym <see cref="T:System.Windows.CornerRadius" />. <see cref="T:System.Windows.CornerRadius" /></param>
        <summary>Porównuje <see cref="T:System.Windows.CornerRadius" /> dwie struktury pod kątem równości.</summary>
        <returns><see langword="true" />Jeśli <paramref name="cornerRadius" /> zawiera te same wartości <see cref="T:System.Windows.CornerRadius" />promienia narożnika; w przeciwnym <see langword="false" />razie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CornerRadius.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cornerRadius.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego <see cref="T:System.Windows.CornerRadius" />elementu.</summary>
        <returns>Kod skrótu dla tej <see cref="T:System.Windows.CornerRadius" /> struktury.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.CornerRadius cr1, System.Windows.CornerRadius cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.CornerRadius cr1, valuetype System.Windows.CornerRadius cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (cr1 As CornerRadius, cr2 As CornerRadius) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::CornerRadius cr1, System::Windows::CornerRadius cr2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.CornerRadius * System.Windows.CornerRadius -&gt; bool" Usage="cr1 = cr2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Windows.CornerRadius" />
        <Parameter Name="cr2" Type="System.Windows.CornerRadius" />
      </Parameters>
      <Docs>
        <param name="cr1">Pierwszy <see cref="T:System.Windows.CornerRadius" /> do porównania.</param>
        <param name="cr2">Sekunda <see cref="T:System.Windows.CornerRadius" /> do porównania.</param>
        <summary>Porównuje <see cref="T:System.Windows.CornerRadius" /> dwie struktury pod kątem równości.</summary>
        <returns><see langword="true" />Jeśli <paramref name="cr1" /> i <see cref="P:System.Windows.CornerRadius.TopRight" /> <see cref="P:System.Windows.CornerRadius.TopLeft" /> <see cref="P:System.Windows.CornerRadius.BottomLeft" /> <see cref="P:System.Windows.CornerRadius.BottomRight" />mają równe wartości dla wszystkich rogów (te same wartości dla,,,); <paramref name="cr2" /> <see langword="false" /> Jeśli<paramref name="cr1" /> istnieją różnewartościdlajednegolubkilkurogów.<paramref name="cr2" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.CornerRadius cr1, System.Windows.CornerRadius cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.CornerRadius cr1, valuetype System.Windows.CornerRadius cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (cr1 As CornerRadius, cr2 As CornerRadius) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::CornerRadius cr1, System::Windows::CornerRadius cr2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.CornerRadius * System.Windows.CornerRadius -&gt; bool" Usage="System.Windows.CornerRadius.op_Inequality (cr1, cr2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Windows.CornerRadius" />
        <Parameter Name="cr2" Type="System.Windows.CornerRadius" />
      </Parameters>
      <Docs>
        <param name="cr1">Pierwszy <see cref="T:System.Windows.CornerRadius" /> do porównania.</param>
        <param name="cr2">Sekunda <see cref="T:System.Windows.CornerRadius" /> do porównania.</param>
        <summary>Porównuje <see cref="T:System.Windows.CornerRadius" /> dwie struktury pod kątem nierówności.</summary>
        <returns><see langword="true" />Jeśli <paramref name="cr1" /> i <see cref="P:System.Windows.CornerRadius.TopRight" /> <see cref="P:System.Windows.CornerRadius.TopLeft" /> <see cref="P:System.Windows.CornerRadius.BottomLeft" /> <see cref="P:System.Windows.CornerRadius.BottomRight" />mają różne wartości dla jednego lub kilku rogów (różne wartości dla,,,); <paramref name="cr2" /> <see langword="false" /> Jeśli i<paramref name="cr1" /> mająidentycznerogi<paramref name="cr2" /> .</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLeft">
      <MemberSignature Language="C#" Value="public double TopLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TopLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.CornerRadius.TopLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLeft As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TopLeft { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.TopLeft : double with get, set" Usage="System.Windows.CornerRadius.TopLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia promień lewego górnego rogu.</summary>
        <value>Promień lewego górnego rogu. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Promień lewego górnego rogu można ustawić niezależnie od innych rogów prostokąta.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.CornerRadius.TopRight" />
        <altmember cref="P:System.Windows.CornerRadius.BottomLeft" />
        <altmember cref="P:System.Windows.CornerRadius.BottomRight" />
      </Docs>
    </Member>
    <Member MemberName="TopRight">
      <MemberSignature Language="C#" Value="public double TopRight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TopRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.CornerRadius.TopRight" />
      <MemberSignature Language="VB.NET" Value="Public Property TopRight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TopRight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.TopRight : double with get, set" Usage="System.Windows.CornerRadius.TopRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia promień prawego górnego rogu.</summary>
        <value>Promień prawego górnego rogu. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Promień prawego górnego rogu można ustawić niezależnie od innych rogów prostokąta.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.CornerRadius.TopLeft" />
        <altmember cref="P:System.Windows.CornerRadius.BottomLeft" />
        <altmember cref="P:System.Windows.CornerRadius.BottomRight" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.CornerRadius.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cornerRadius.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg reprezentujący <see cref="T:System.Windows.CornerRadius" />.</summary>
        <returns>Reprezentacja <see cref="T:System.Windows.CornerRadius" />ciągu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
