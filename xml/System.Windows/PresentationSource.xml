<Type Name="PresentationSource" FullName="System.Windows.PresentationSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d67ea1e465aa4e0b5a78b34ceb8f9bf32ea9bd1b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PresentationSource : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PresentationSource extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PresentationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSource&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSource abstract : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2773f-101">Udostępnia abstrakcyjnego podstawowej dla klas, które są dostępne w ramach scenariusza współdziałanie zawartości z innej technologii.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2773f-101">Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</span>
      </span>
      <span data-ttu-id="2773f-102">Ponadto ta klasa udostępnia metody statyczne do pracy z tych źródeł, a także architektury podstawowego visual warstwy prezentacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2773f-102">In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="2773f-103">Aby dziedziczyć po tej klasie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2773f-103">to derive from this class.</span>
      </span>
      <span data-ttu-id="2773f-104">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2773f-104">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
      </span>
    </permission>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2773f-105">Umożliwia inicjowanie dla klasy podstawowej wartości wywołanego przez konstruktora klasy pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-105">Provides initialization for base class values when called by the constructor of a derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSource">
      <MemberSignature Language="C#" Value="protected void AddSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2773f-106">Dodaje <see cref="T:System.Windows.PresentationSource" /> pochodnych wystąpienie klasy do listy znanych prezentacji źródeł.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-106">Adds a <see cref="T:System.Windows.PresentationSource" /> derived class instance to the list of known presentation sources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2773f-107">Tę metodę należy wywoływać klasy pochodne, aby wskazać, że muszą być śledzone.</span><span class="sxs-lookup"><span data-stu-id="2773f-107">This method should be called by derived classes to indicate that they need to be tracked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceChangedHandler(class System.Windows.IInputElement element, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceChangedHandler (element As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceChangedHandler(System::Windows::IInputElement ^ element, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="2773f-108">Element, aby dodać program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-108">The element to add the handler to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="2773f-109">Implementacja programu obsługi, aby dodać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-109">The hander implementation to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2773f-110">Dodaje obsługę <see langword="SourceChanged" /> zdarzeń do udostępnionego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-110">Adds a handler for the <see langword="SourceChanged" /> event to the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2773f-111">Pomimo co stany bloku składni dla tego zdarzenia, jest uzasadnione nie [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] dołączona właściwość użycia.</span><span class="sxs-lookup"><span data-stu-id="2773f-111">Despite what the syntax block for this event states, there is no legitimate [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] attached property usage.</span></span> <span data-ttu-id="2773f-112">Nie należy próbować Dodaj programy obsługi zdarzeń w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], i obsługi w kodzie można umieścić tylko w obiektach, które stanowią hosty dla prezentacji (<xref:System.Windows.PresentationSource> ) zawartości.</span><span class="sxs-lookup"><span data-stu-id="2773f-112">You should not attempt to add handlers in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], and handlers in code should only be placed on objects that serve as hosts for presentation (<xref:System.Windows.PresentationSource> ) content.</span></span> <span data-ttu-id="2773f-113">Takie programy obsługi powinna zostać dołączona tyko podczas inicjowania obiektu i powinna zostać usunięta jawnie metody Dispose lub czyszczenia odpowiadającego mu obiektu.</span><span class="sxs-lookup"><span data-stu-id="2773f-113">Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</span></span>  
  
 <span data-ttu-id="2773f-114">Mimo że to kierowanego zdarzenia są specjalne ograniczeniami dotyczącymi tego zdarzenia, które różnią się od zachowanie normalne kierowanego zdarzenia z powodu stosunkowo małej liczby elementów w scenariuszu Typowa aplikacja, która będzie zajmować się to obsługa zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2773f-114">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="2773f-115">Nie można użyć <xref:System.Windows.UIElement> lub <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> metody dodawania obsługi.</span><span class="sxs-lookup"><span data-stu-id="2773f-115">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> methods to add handlers.</span></span> <span data-ttu-id="2773f-116">Należy użyć <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="2773f-116">You must use <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="2773f-117">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` i `-=` składni programu obsługi zdarzeń i składni określony program obsługi language powiązane, nie są obsługiwane, ponieważ samym zdarzeniu nie jest ujawniona jako publiczne.</span><span class="sxs-lookup"><span data-stu-id="2773f-117">The [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` and `-=` event handler syntaxes, and related language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="2773f-118">Tylko <xref:System.Windows.PresentationSource> metody narzędziowe do dodawania i usuwania programów obsługi bezpośrednio są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2773f-118">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
-   <span data-ttu-id="2773f-119">Obsługę klas są niedozwolone.</span><span class="sxs-lookup"><span data-stu-id="2773f-119">Class handlers are not allowed.</span></span> <span data-ttu-id="2773f-120">W szczególności nie można wywołać <xref:System.Windows.EventManager.RegisterClassHandler%2A> względem tego zdarzenia w konstruktorze klasy ponieważ mimo że pola Identyfikator istnieje SourceChanged, identyfikator nie jest publiczna.</span><span class="sxs-lookup"><span data-stu-id="2773f-120">Specifically, you cannot call <xref:System.Windows.EventManager.RegisterClassHandler%2A> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</span></span>  
  
-   <span data-ttu-id="2773f-121">Wszystkie zarejestrowane programy obsługi otrzyma zdarzeń SourceChanged nawet wtedy, gdy jeden z programów obsługi próbuje argumenty zostać oznaczone jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2773f-121">All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2773f-122">Aby wywołać lub zaimplementuj tę metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-122">to call or implement this method.</span>
          </span>
          <span data-ttu-id="2773f-123">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-123">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ClearContentRenderedListeners">
      <MemberSignature Language="C#" Value="protected void ClearContentRenderedListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearContentRenderedListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearContentRenderedListeners ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearContentRenderedListeners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2773f-124">Ustawia listę odbiorników dla <see cref="E:System.Windows.PresentationSource.ContentRendered" /> zdarzenia <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-124">Sets the list of listeners for the <see cref="E:System.Windows.PresentationSource.ContentRendered" /> event to <see langword="null" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.PresentationSource.ContentRendered" />
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CompositionTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CompositionTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CompositionTarget ^ CompositionTarget { System::Windows::Media::CompositionTarget ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2773f-125">Pobiera element docelowy visual dla elementów wizualnych, są prezentowane w źródle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-125">Gets the visual target for the visuals being presented in the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2773f-126">Element docelowy visual (wystąpienie <see cref="T:System.Windows.Media.CompositionTarget" /> klasy).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-126">A visual target (instance of a <see cref="T:System.Windows.Media.CompositionTarget" /> derived class).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2773f-127">Zwracany tej właściwości zależy od implementacji <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="2773f-127">The return of this property relies on an implementation of <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2773f-128">Klasy pochodne mogą być w tle właściwość ta oferowanie wartość określonego typu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2773f-128">Derived classes can choose to shadow this property to offer a type-specific value.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.PresentationSource.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContentRendered;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2773f-129">Występuje, gdy zawartość jest Wyrenderowana i gotowa do interakcji z użytkownikiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-129">Occurs when content is rendered and ready for user interaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSources">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable CurrentSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerable CurrentSources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CurrentSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentSources As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerable ^ CurrentSources { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2773f-130">Zwraca listę źródeł.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-130">Returns a list of sources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2773f-131">Lista słabe odwołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-131">A list of weak references.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2773f-132">Zwracana lista obsługuje moduł wyliczający przez kopię listy źródeł tylko do odczytu, bezpieczne wątkowo dodawania z <xref:System.Windows.PresentationSource.AddSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="2773f-132">The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <xref:System.Windows.PresentationSource.AddSource%2A>.</span></span>  
  
 <span data-ttu-id="2773f-133">Moduł wyliczający pomija martwych uszkodzonymi odwołaniami, na liście.</span><span class="sxs-lookup"><span data-stu-id="2773f-133">The enumerator skips any dead weak references in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2773f-134">Aby uzyskać źródeł.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-134">to get sources.</span>
          </span>
          <span data-ttu-id="2773f-135">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromDependencyObject">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromDependencyObject(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromDependencyObject(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <span data-ttu-id="2773f-136">
            <see cref="T:System.Windows.DependencyObject" /> Można znaleźć źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-136">The <see cref="T:System.Windows.DependencyObject" /> to find the source for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2773f-137">Zwraca źródła, w którym podana <see cref="T:System.Windows.DependencyObject" /> jest przedstawiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-137">Returns the source in which a provided <see cref="T:System.Windows.DependencyObject" /> is presented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2773f-138">
            <see cref="T:System.Windows.PresentationSource" /> , W którym obiekt zależności jest zgłoszenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-138">The <see cref="T:System.Windows.PresentationSource" /> in which the dependency object is being presented.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2773f-139">Aby wywołać lub zaimplementuj tę metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-139">to call or implement this method.</span>
          </span>
          <span data-ttu-id="2773f-140">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-140">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromVisual">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="2773f-141">
            <see cref="T:System.Windows.Media.Visual" /> Można znaleźć źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-141">The <see cref="T:System.Windows.Media.Visual" /> to find the source for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2773f-142">Zwraca źródła, w którym podana <see cref="T:System.Windows.Media.Visual" /> jest przedstawiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-142">Returns the source in which a provided <see cref="T:System.Windows.Media.Visual" /> is presented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2773f-143">
            <see cref="T:System.Windows.PresentationSource" /> , W którym element wizualny jest zgłoszenia, lub <see langword="null" /> Jeśli <paramref name="visual" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-143">The <see cref="T:System.Windows.PresentationSource" /> in which the visual is being presented, or <see langword="null" /> if <paramref name="visual" /> is disposed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2773f-144">
            <paramref name="visual" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-144">
              <paramref name="visual" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2773f-145">Aby wywołać lub zaimplementuj tę metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-145">to call or implement this method.</span>
          </span>
          <span data-ttu-id="2773f-146">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-146">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2773f-147">W przypadku przesłonięcia w klasie pochodnej zwraca visual docelowy dla danego źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-147">When overridden in a derived class, returns a visual target for the given source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2773f-148">Zwraca <see cref="T:System.Windows.Media.CompositionTarget" /> czyli docelowego renderowania elementu wizualnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-148">Returns a <see cref="T:System.Windows.Media.CompositionTarget" /> that is target for rendering the visual.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2773f-149">Przesłonić tę metodę, aby zadeklarować wartość która <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> zwróci właściwości tylko do odczytu.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2773f-149">Override this method to declare the value that the <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> read-only property will return.</span>
            </span>
            <span data-ttu-id="2773f-150">Zastąpienia powinien zwrócić wystąpienia określonego typu <see cref="T:System.Windows.Media.CompositionTarget" /> pochodnych typu klasy, który jest używany dla danego scenariusza współdziałanie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2773f-150">Your override should return type-specific instances of the <see cref="T:System.Windows.Media.CompositionTarget" /> derived class type that is used for your interoperation scenario.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public abstract bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2773f-151">W przypadku przesłonięcia w klasie pochodnej pobiera wartość, która deklaruje, czy obiekt jest usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-151">When overridden in a derived class, gets a value that declares whether the object is disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2773f-152">
            <see langword="true" /> Jeśli obiekt jest usunięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-152">
              <see langword="true" /> if the object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2773f-153">Klasy pochodne powinny implementować <see cref="T:System.IDisposable" /> lub podaj równoważne zachowanie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2773f-153">Derived classes are expected to implement <see cref="T:System.IDisposable" /> or provide equivalent behavior.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSource">
      <MemberSignature Language="C#" Value="protected void RemoveSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2773f-154">Usuwa <see cref="T:System.Windows.PresentationSource" /> pochodzące wystąpienia klasy z listy źródeł znane prezentacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-154">Removes a <see cref="T:System.Windows.PresentationSource" /> derived class instance from the list of known presentation sources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceChangedHandler(class System.Windows.IInputElement e, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceChangedHandler (e As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceChangedHandler(System::Windows::IInputElement ^ e, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="2773f-155">Element do usunięcia programu obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-155">The element to remove the handler from.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="2773f-156">Implementacja programu obsługi do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-156">The handler implementation to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2773f-157">Usuwa obsługi dla <see langword="SourceChanged" /> zdarzeń z podanego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-157">Removes a handler for the <see langword="SourceChanged" /> event from the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2773f-158">Mimo że to kierowanego zdarzenia są specjalne ograniczeniami dotyczącymi tego zdarzenia, które różnią się od zachowanie normalne kierowanego zdarzenia z powodu stosunkowo małej liczby elementów w scenariuszu Typowa aplikacja, która będzie zajmować się to obsługa zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2773f-158">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="2773f-159">Nie można użyć <xref:System.Windows.UIElement> lub <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> metod, aby usunąć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="2773f-159">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> methods to remove handlers.</span></span> <span data-ttu-id="2773f-160">Należy użyć <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="2773f-160">You must use <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="2773f-161">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` i `-=` składni programu obsługi zdarzeń i innych składni Obsługa określonego języka nie są obsługiwane, ponieważ samym zdarzeniu nie jest ujawniona jako publiczne.</span><span class="sxs-lookup"><span data-stu-id="2773f-161">The [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` and `-=` event handler syntaxes, and other language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="2773f-162">Tylko <xref:System.Windows.PresentationSource> metody narzędziowe do dodawania i usuwania programów obsługi bezpośrednio są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2773f-162">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RootChanged">
      <MemberSignature Language="C#" Value="protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RootChanged(class System.Windows.Media.Visual oldRoot, class System.Windows.Media.Visual newRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RootChanged (oldRoot As Visual, newRoot As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RootChanged(System::Windows::Media::Visual ^ oldRoot, System::Windows::Media::Visual ^ newRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldRoot" Type="System.Windows.Media.Visual" />
        <Parameter Name="newRoot" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="oldRoot">
          <span data-ttu-id="2773f-163">Stary główny <see cref="T:System.Windows.Media.Visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-163">The old root <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <param name="newRoot">
          <span data-ttu-id="2773f-164">Nowy katalog główny <see cref="T:System.Windows.Media.Visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-164">The new root <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2773f-165">Zapewnia powiadomienie który głównego <see cref="T:System.Windows.Media.Visual" /> została zmieniona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-165">Provides notification that the root <see cref="T:System.Windows.Media.Visual" /> has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2773f-166">Klasy pochodne powinny wywoływać tej metody, aby wskazać, że ich głównego <xref:System.Windows.Media.Visual> została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="2773f-166">Derived classes should call this method to indicate that their root <xref:System.Windows.Media.Visual> has changed.</span></span>  
  
 <span data-ttu-id="2773f-167">Wywołanie tej metody powoduje, że dwa zdarzenia okresu istnienia obiektu do wywołania w określonym katalogu głównym elementy wizualne, tylko wtedy, gdy te elementy wizualne głównego są <xref:System.Windows.FrameworkElement> klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="2773f-167">Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <xref:System.Windows.FrameworkElement> derived classes.</span></span>  
  
-   <span data-ttu-id="2773f-168">Zgłosi starego głównego visual <xref:System.Windows.FrameworkElement.Unloaded> zdarzenia i przetworzy jej drzewo elementów w dół, emituje to zdarzenie do każdego elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="2773f-168">The old root visual will raise the <xref:System.Windows.FrameworkElement.Unloaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
-   <span data-ttu-id="2773f-169">Nowy element główny visual zostanie podniesiony <xref:System.Windows.FrameworkElement.Loaded> zdarzenia i przetworzy jej drzewo elementów w dół, emituje to zdarzenie do każdego elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="2773f-169">The new root visual will raise the <xref:System.Windows.FrameworkElement.Loaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2773f-170">W przypadku przesłonięcia w klasie pochodnej pobiera lub ustawia katalog główny visual jest prezentowana w źródle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-170">When overridden in a derived class, gets or sets the root visual being presented in the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2773f-171">Element główny visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-171">The root visual.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2773f-172">Aby zastąpić właściwość (<see langword="InheritanceDemand" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-172">to override the property (<see langword="InheritanceDemand" />).</span>
          </span>
          <span data-ttu-id="2773f-173">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2773f-173">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>