<Type Name="EventSetter" FullName="System.Windows.EventSetter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ca0f6f05aeef76ac7f1b6be3c0213acf12a8623" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30714554" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSetter : System.Windows.SetterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSetter extends System.Windows.SetterBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventSetter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSetter&#xA;Inherits SetterBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSetter : System::Windows::SetterBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.SetterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje metody ustawiającej zdarzeń w stylu. Metody ustawiające zdarzenia wywołania obsługi określonego zdarzenia w odpowiedzi na zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody ustawiające zdarzenia wywołania obsługi określonego zdarzenia w odpowiedzi na kierowane zdarzenia, które mają zastosowanie do wszystkich elementów, które odwołują się <xref:System.Windows.Style> zamiast konieczności dołączyć obsługi wystąpienie do każdego pojedynczego elementu. Tylko <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> obsługuje <xref:System.Windows.EventSetter> obiektów.  
  
 Można zadeklarować tylko metody ustawiające zdarzeń dla zdarzenia, które są kierowane zdarzenia. Metody ustawiające zdarzeń dla kierowane zdarzenia z strategii routingu bezpośredniego można zadeklarować propagacji zdarzenia lub tunelowanie zdarzenia.  
  
 Wystąpienia <xref:System.Windows.EventSetter> klasy są zazwyczaj tworzone przez [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], zgodnie z definicją w stylu elementu obiektu za pomocą [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. <xref:System.Windows.EventSetter> Może być również utworzone z kodu.  
  
 Metody ustawiające zdarzeń nie można używać w stylu, który znajduje się w słowniku zasobów motywu. Jest to spowodowane motywu słownik zasobów w czasie wykonywania jest często utracić [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] pliki, a nie ma żadnych zakres określony, gdzie może istnieć towarzyszące kodem, który definiuje obsługi.  
  
 Programy obsługi dołączonym za pośrednictwem metody ustawiające zdarzeń są wywoływane po wszystkie klasy programy obsługi zdarzeń, a także po dowolnym uchwyty wystąpienia. W związku z tym jeśli obsługi klasy lub wystąpienia obsługi oznacza zdarzenia obsługiwane argumenty, następnie obsługi deklarowana przez metody ustawiającej zdarzeń nie jest wywoływany, chyba że setter zdarzeń w szczególności ustawia <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`.  
  
 Metody ustawiające zdarzeń może również pochodzić od <xref:System.Windows.Style.BasedOn%2A> style. Metoda ustawiająca obsługi zdarzeń z styl określony jako <xref:System.Windows.Style.BasedOn%2A> zostanie wywołany po programów obsługi na natychmiastowe stylu.  
  
 Uwaga tylko <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> obsługuje <xref:System.Windows.EventSetter> obiektów. Wyzwalacze (<xref:System.Windows.TriggerBase> i klasy pochodne) nie obsługują <xref:System.Windows.EventSetter>.  
  
   
  
## Examples  
 Poniższy przykład ustanawia pojedynczy <xref:System.Windows.EventSetter> w stylu na poziomie strony.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 Poniżej przedstawiono przykład procedury obsługi zdarzeń:  
  
 [!code-csharp[EventOvwSupport#EventSetterRef](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#eventsetterref)]
 [!code-vb[EventOvwSupport#EventSetterRef](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#eventsetterref)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
    <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.EventSetter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.EventSetter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Określonego kierowanego zdarzenia który <see cref="T:System.Windows.EventSetter" /> odpowiada.</param>
        <param name="handler">Program obsługi do przypisania w tej metody ustawiającej.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.EventSetter" /> przy użyciu podanych parametrów zdarzeń i obsługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta sygnatura jest zazwyczaj używana w przypadku tworzenia <xref:System.Windows.EventSetter> kodu lub kodem, aby utworzyć <xref:System.Windows.EventSetter> który wspomaga istniejących styl przed ich użyciem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent Event { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent Event" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Event" />
      <MemberSignature Language="VB.NET" Value="Public Property Event As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ Event { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia określonego kierowanego zdarzenia, które to <see cref="T:System.Windows.EventSetter" /> odpowiada.</summary>
        <value>Pole identyfikatora kierowanego zdarzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można ustawić tej właściwości po stylu zawierający <xref:System.Windows.EventSetter> jest używana i w związku z tym jest zapieczętowany. Jeśli ta właściwość jest ustawiona w kodzie, istnieje możliwość, że jest używany styl Sprawdź wartość <xref:System.Windows.SetterBase.IsSealed%2A> właściwość <xref:System.Windows.EventSetter> wystąpienia przed przystąpieniem do ustawienia <xref:System.Windows.EventSetter.Event%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.EventSetter.Event%2A> właściwość jako część <xref:System.Windows.EventSetter> styl znaczników.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano ustawić tę właściwość w zapieczętowanym <see cref="T:System.Windows.EventSetter" /> .</exception>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="HandledEventsToo">
      <MemberSignature Language="C#" Value="public bool HandledEventsToo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandledEventsToo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.HandledEventsToo" />
      <MemberSignature Language="VB.NET" Value="Public Property HandledEventsToo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HandledEventsToo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy obsługa skojarzona metoda ustawiająca nadal powinna być wywoływana, nawet wtedy, gdy zdarzenie jest oznaczony jako obsługiwany w jego danych zdarzenia.</summary>
        <value>
          <see langword="true" /> Jeśli program obsługi nadal powinna być wywoływana; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Ustawienie <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> właściwości sposób obsługi zdarzeń zostanie wywołany, zawsze należy wykonać w kodzie, zgodnie z ogólną zasadą, że nie istnieje sposób określić <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> podczas przypisywania zdefiniowane programy obsługi zdarzeń dla wystąpienia bezpośrednio do o nazwie zdarzenia w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] atrybutu składni. Mimo że ustawienie tej wartości [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] nie generuje błędy kompilacji, powstałe w ten sposób [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] utworzy wyjątek czasu wykonywania, gdy jest używany styl.  
  
<a name="xamlTextUsage_HandledEventsToo"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Ta właściwość nie należy używać w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. Zobacz uwagi.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public Delegate Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate Handler" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Property Handler As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Delegate ^ Handler { Delegate ^ get(); void set(Delegate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.EventSetterHandlerConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odwołanie do obsługi kierowanego zdarzenia w metody ustawiającej.</summary>
        <value>Odwołanie do programu obsługi, który jest dołączony przez to <see cref="T:System.Windows.EventSetter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.EventSetter.Handler%2A> właściwość jako część <xref:System.Windows.EventSetter> styl znaczników.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEvent.HandlerType" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>