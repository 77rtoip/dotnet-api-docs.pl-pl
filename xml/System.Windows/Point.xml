<Type Name="Point" FullName="System.Windows.Point">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf5e2022b53f9ad718dfa2c96237e410db7a5d09" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37491664" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Point : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Point extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Point" />
  <TypeSignature Language="VB.NET" Value="Public Structure Point&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Point : IFormattable" />
  <TypeSignature Language="F#" Value="type Point = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PointConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.PointValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a8a04-101">Reprezentuje parę współrzędną x i y w przestrzeni dwuwymiarowej.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8a04-101">Represents an x- and y-coordinate pair in two-dimensional space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a04-102">W XAML, separator <xref:System.Windows.Point.X%2A> i <xref:System.Windows.Point.Y%2A> wartości <xref:System.Windows.Point> może być przecinek lub spacji.</span><span class="sxs-lookup"><span data-stu-id="a8a04-102">In XAML, the delimiter between the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> can be either a comma or a space.</span></span>  
  
 <span data-ttu-id="a8a04-103">Niektórych kultur może użyć przecinka jako dziesiętna ogranicznik zamiast znak kropki.</span><span class="sxs-lookup"><span data-stu-id="a8a04-103">Some cultures might use the comma character as the decimal delimiter instead of the period character.</span></span> <span data-ttu-id="a8a04-104">XAML przetwarzania dla niezmiennej kultury domyślnie en US, w większości implementacji procesora XAML i oczekuje, że okres jako separator dziesiętny.</span><span class="sxs-lookup"><span data-stu-id="a8a04-104">XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.</span></span> <span data-ttu-id="a8a04-105">Należy unikać używania przecinka jako separator dziesiętny w przypadku określania <xref:System.Windows.Point> w XAML, ponieważ będzie które kolidują z konwersji typu ciąg <xref:System.Windows.Point> wartość do atrybutu <xref:System.Windows.Point.X%2A> i <xref:System.Windows.Point.Y%2A> składników.</span><span class="sxs-lookup"><span data-stu-id="a8a04-105">You should avoid using the comma character as the decimal delimiter if specifying a <xref:System.Windows.Point> in XAML, because that will clash with the string type conversion of a <xref:System.Windows.Point> attribute value into the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> components.</span></span>  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a8a04-106">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="a8a04-106">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y"/>  
-or-  
<object property="x y"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a8a04-107">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="a8a04-107">XAML Values</span></span>  
 <span data-ttu-id="a8a04-108">*x*</span><span class="sxs-lookup"><span data-stu-id="a8a04-108">*x*</span></span>  
 <span data-ttu-id="a8a04-109">Współrzędna x to <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="a8a04-109">The x-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
 <span data-ttu-id="a8a04-110">*y*</span><span class="sxs-lookup"><span data-stu-id="a8a04-110">*y*</span></span>  
 <span data-ttu-id="a8a04-111">Współrzędna y tego <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="a8a04-111">The y-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8a04-112">Poniższy przykład przedstawia sprawdzić, czy dwa <xref:System.Windows.Point> struktury nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="a8a04-112">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="a8a04-113">Ilustruje także sposób przypisywania wartości do <xref:System.Windows.Point> struktury, gdy zadeklarowana jest struktura i po deklaracji struktury.</span><span class="sxs-lookup"><span data-stu-id="a8a04-113">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point(double x, double y);" />
      <MemberSignature Language="F#" Value="new System.Windows.Point : double * double -&gt; System.Windows.Point" Usage="new System.Windows.Point (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="a8a04-114">Współrzędna x nowej <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-114">The x-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="a8a04-115">Współrzędna y nowej <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-115">The y-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-116">Tworzy nową <see cref="T:System.Windows.Point" /> strukturę, która zawiera określonych współrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-116">Creates a new <see cref="T:System.Windows.Point" /> structure that contains the specified coordinates.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Add (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Add(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Add(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Add : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Add (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a8a04-117">
            <see cref="T:System.Windows.Point" /> Struktury do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-117">The <see cref="T:System.Windows.Point" /> structure to add.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="a8a04-118">
            <see cref="T:System.Windows.Vector" /> Struktury do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-118">The <see cref="T:System.Windows.Vector" /> structure to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-119">Dodaje <see cref="T:System.Windows.Vector" /> do <see cref="T:System.Windows.Point" /> i zwraca wynik w postaci <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-119">Adds a <see cref="T:System.Windows.Vector" /> to a <see cref="T:System.Windows.Point" /> and returns the result as a <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-120">Zwraca sumę <paramref name="point" /> i <paramref name="vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-120">Returns the sum of <paramref name="point" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a04-121">Dodawanie <xref:System.Windows.Point> struktury do <xref:System.Windows.Point> struktury jest zabronione.</span><span class="sxs-lookup"><span data-stu-id="a8a04-121">Adding a <xref:System.Windows.Point> structure to a <xref:System.Windows.Point> structure is prohibited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8a04-122">Ten przykład dodaje <xref:System.Windows.Point> do <xref:System.Windows.Vector> i zwraca wynik w postaci <xref:System.Windows.Vector> struktury.</span><span class="sxs-lookup"><span data-stu-id="a8a04-122">This example adds a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> and returns the result as a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#AddPointAndVectorExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#addpointandvectorexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8a04-123">Porównuje dwa <see cref="T:System.Windows.Point" /> struktury pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-123">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="point.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="a8a04-124">
            <see cref="T:System.Object" /> Do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-124">The <see cref="T:System.Object" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-125">Określa, czy określony <see cref="T:System.Object" /> jest <see cref="T:System.Windows.Point" /> i czy zawiera on takich samych współrzędnych, ponieważ <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-125">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Point" /> and whether it contains the same coordinates as this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-126">
            <see langword="true" /> Jeśli <paramref name="o" /> jest <see cref="T:System.Windows.Point" /> i zawiera takie same <see cref="P:System.Windows.Point.X" /> i <see cref="P:System.Windows.Point.Y" /> wartości zgodnie z tym <see cref="T:System.Windows.Point" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-126">
              <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Point" /> and contains the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values as this <see cref="T:System.Windows.Point" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a04-127"><xref:System.Windows.Point> współrzędne są opisane za pomocą <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="a8a04-127"><xref:System.Windows.Point> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="a8a04-128">Ponieważ wartość <xref:System.Double> mogą tracić dokładność, gdy wykonywane są operacje porównania między dwoma <xref:System.Windows.Point> wartości, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="a8a04-128">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8a04-129">Poniższy przykład przedstawia sprawdzić, czy dwa <xref:System.Windows.Point> struktury są równe, za pomocą niestatycznych <xref:System.Windows.Point.Equals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a8a04-129">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the non-static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#NonStaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#nonstaticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Point value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Point value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Point value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Point -&gt; bool" Usage="point.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a8a04-130">Wskaż porównania z tym wystąpieniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-130">The point to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-131">Porównuje dwa <see cref="T:System.Windows.Point" /> struktury pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-131">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-132">
            <see langword="true" /> Jeśli oba <see cref="T:System.Windows.Point" /> struktury zawierają takie same <see cref="P:System.Windows.Point.X" /> i <see cref="P:System.Windows.Point.Y" /> wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-132">
              <see langword="true" /> if both <see cref="T:System.Windows.Point" /> structures contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a04-133"><xref:System.Windows.Point> współrzędne są wyrażone za pomocą <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="a8a04-133"><xref:System.Windows.Point> coordinates are expressed using <xref:System.Double> values.</span></span> <span data-ttu-id="a8a04-134">Ponieważ wartość <xref:System.Double> mogą tracić dokładność, gdy na porównania między dwoma <xref:System.Windows.Point> wartości, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="a8a04-134">Because the value of a <xref:System.Double> can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.Equals (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="a8a04-135">Pierwszy punkt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-135">The first point to compare.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="a8a04-136">Drugi punkt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-136">The second point to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-137">Porównuje dwa <see cref="T:System.Windows.Point" /> struktury pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-137">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-138">
            <see langword="true" /> Jeśli <paramref name="point1" /> i <paramref name="point2" /> zawierać takie same <see cref="P:System.Windows.Point.X" /> i <see cref="P:System.Windows.Point.Y" /> wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-138">
              <see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a04-139">Współrzędne punktu są opisane za pomocą <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="a8a04-139">Point coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="a8a04-140">Ponieważ wartość <xref:System.Double> mogą tracić dokładność, gdy wykonywane są operacje porównania między dwoma <xref:System.Windows.Point> wartości, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="a8a04-140">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8a04-141">Poniższy przykład przedstawia sprawdzić, czy dwa <xref:System.Windows.Point> struktury są równe, przy użyciu statycznych <xref:System.Windows.Point.Equals%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a8a04-141">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#StaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#staticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="point.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8a04-142">Zwraca wartość skrótu dla tego <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-142">Returns the hash code for this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-143">Wartość skrótu dla tego <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-143">The hash code for this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-144">Poniższy przykład pokazuje, jak uzyskać skrótu <xref:System.Windows.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="a8a04-144">The following example shows how to get the hash code of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Multiply(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="System.Windows.Point.Multiply (point, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a8a04-145">Punkt do przekształcenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-145">The point to transform.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="a8a04-146">Macierzy transformacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-146">The transformation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-147">Przekształca określony <see cref="T:System.Windows.Point" /> struktury przez określony <see cref="T:System.Windows.Media.Matrix" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-147">Transforms the specified <see cref="T:System.Windows.Point" /> structure by the specified <see cref="T:System.Windows.Media.Matrix" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-148">Po przekształceniu punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-148">The transformed point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-149">Poniższy przykład pokazuje, jak należy pomnożyć <xref:System.Windows.Point> struktury przez <xref:System.Windows.Media.Matrix> struktury za pomocą <xref:System.Windows.Point.Multiply%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a8a04-149">The following example shows how to multiply a <xref:System.Windows.Point> structure by a <xref:System.Windows.Media.Matrix> structure using the <xref:System.Windows.Point.Multiply%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#MultiplyPointByMatrixExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#multiplypointbymatrixexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="point.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="a8a04-150">Wielkość, o które zostanie przesunięte w punkcie <see cref="P:System.Windows.Point.X" /> koordynacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-150">The amount to offset the point's  <see cref="P:System.Windows.Point.X" /> coordinate.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="a8a04-151">Wielkość, o które zostanie przesunięte w punkcie <see cref="P:System.Windows.Point.Y" /> koordynacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-151">The amount to offset the  point's <see cref="P:System.Windows.Point.Y" /> coordinate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-152">Przenosi punkt <see cref="P:System.Windows.Point.X" /> i <see cref="P:System.Windows.Point.Y" /> współrzędne według określonej ilości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-152">Offsets a point's <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates by the specified amounts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a04-153">Ta operacja jest odpowiednikiem dodawania <xref:System.Windows.Point> do <xref:System.Windows.Vector>.</span><span class="sxs-lookup"><span data-stu-id="a8a04-153">This operation is equivalent to adding a <xref:System.Windows.Point> to a <xref:System.Windows.Vector>.</span></span>  
  
 <span data-ttu-id="a8a04-154">Należy pamiętać, że wywołanie <xref:System.Windows.Point.Offset%2A> metoda będzie miał wpływ tylko, jeśli jest możliwa zmiana <xref:System.Windows.Point.X%2A> i <xref:System.Windows.Point.Y%2A> właściwości bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="a8a04-154">Note that calling the <xref:System.Windows.Point.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties directly.</span></span> <span data-ttu-id="a8a04-155">Ponieważ <xref:System.Windows.Point> jest typem wartości, jeśli odwołujesz się <xref:System.Windows.Point> obiektu za pomocą właściwości lub indeksatora, Pobierz kopię obiektu nie odwołanie do obiektu.</span><span class="sxs-lookup"><span data-stu-id="a8a04-155">Because <xref:System.Windows.Point> is a value type, if you reference a <xref:System.Windows.Point> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="a8a04-156">Jeśli spróbujesz zmienić <xref:System.Windows.Point.X%2A> lub <xref:System.Windows.Point.Y%2A> odwołanie właściwość lub indeksator, występuje błąd kompilatora.</span><span class="sxs-lookup"><span data-stu-id="a8a04-156">If you attempt to change <xref:System.Windows.Point.X%2A> or <xref:System.Windows.Point.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="a8a04-157">Podobnie wywołanie <xref:System.Windows.Point.Offset%2A> na właściwość lub indeksator nie spowoduje zmiany obiektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="a8a04-157">Similarly, calling <xref:System.Windows.Point.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="a8a04-158">Jeśli chcesz zmienić wartość <xref:System.Windows.Point> , jest określany jako właściwość lub indeksator, Utwórz nową <xref:System.Windows.Point>, zmodyfikuj jej pola, a następnie przypisz <xref:System.Windows.Point> do właściwości lub indeksatora.</span><span class="sxs-lookup"><span data-stu-id="a8a04-158">If you want to change the value of a <xref:System.Windows.Point> that is referenced as a property or indexer, create a new <xref:System.Windows.Point>, modify its fields, and then assign the <xref:System.Windows.Point> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8a04-159">Poniższy przykład pokazuje, jak przesunięcie <xref:System.Windows.Point.X%2A> i <xref:System.Windows.Point.Y%2A> wartości <xref:System.Windows.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="a8a04-159">The following example shows how to offset the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#OffsetExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#offsetexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator + (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Addition(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator +(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point + vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a8a04-160">Wskaż tłumaczenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-160">The point to translate.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="a8a04-161">Wartość, o którą do translacji <c>punktu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-161">The amount by which to translate <c>point</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-162">Przekształca określony <see cref="T:System.Windows.Point" /> przez określony <see cref="T:System.Windows.Vector" /> i zwraca wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-162">Translates the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Vector" /> and returns the result.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-163">Wynik tłumaczenia w określonym punkcie określony wektor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-163">The result of translating the specified point by the specified vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-164">Poniższy przykład pokazuje, jak dodać <xref:System.Windows.Point> do <xref:System.Windows.Vector> przy użyciu przeciążonych (+) — operator.</span><span class="sxs-lookup"><span data-stu-id="a8a04-164">The following example shows how to add a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> using the overloaded (+) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedadditionoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedadditionoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="point1 = point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="a8a04-165">Pierwszy <see cref="T:System.Windows.Point" /> struktury do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-165">The first <see cref="T:System.Windows.Point" /> structure to compare.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="a8a04-166">Drugi <see cref="T:System.Windows.Point" /> struktury do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-166">The second <see cref="T:System.Windows.Point" /> structure to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-167">Porównuje dwa <see cref="T:System.Windows.Point" /> struktury pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-167">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-168">
            <see langword="true" /> Jeśli oba <see cref="P:System.Windows.Point.X" /> i <see cref="P:System.Windows.Point.Y" /> współrzędne <paramref name="point1" /> i <paramref name="point2" /> są równe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-168">
              <see langword="true" /> if both the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates of <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a04-169">Współrzędne punktu są opisane za pomocą <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="a8a04-169">A point's coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="a8a04-170">Ponieważ wartość <xref:System.Double> mogą tracić dokładność, gdy wykonywane są operacje arytmetyczne na nich porównanie między dwoma <xref:System.Windows.Point> wartości, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="a8a04-170">Because the value of <xref:System.Double> can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8a04-171">Poniższy przykład przedstawia sprawdzić, czy dwa <xref:System.Windows.Point> struktury są równe, za pomocą operatora przeciążona (==).</span><span class="sxs-lookup"><span data-stu-id="a8a04-171">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the overloaded (==) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8a04-172">Konwertuje <see cref="T:System.Windows.Point" /> do <see cref="T:System.Windows.Size" /> lub <see cref="T:System.Windows.Vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-172">Converts a <see cref="T:System.Windows.Point" /> into a <see cref="T:System.Windows.Size" /> or a <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Size (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Size op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Size(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Size" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a8a04-173">Punkt do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-173">The point to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-174">Tworzy <see cref="T:System.Windows.Size" /> struktura <see cref="P:System.Windows.Size.Width" /> równa tego punktu <see cref="P:System.Windows.Point.X" /> wartość i <see cref="P:System.Windows.Size.Height" /> równa tego punktu <see cref="P:System.Windows.Point.Y" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-174">Creates a <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-175">A <see cref="T:System.Windows.Size" /> struktura <see cref="P:System.Windows.Size.Width" /> równa tego punktu <see cref="P:System.Windows.Point.X" /> wartość i <see cref="P:System.Windows.Size.Height" /> równa tego punktu <see cref="P:System.Windows.Point.Y" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-175">A <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a04-176">Ponieważ <xref:System.Windows.Size> struktury nie może być ujemna, wartości bezwzględne punktu <xref:System.Windows.Point.X%2A> i <xref:System.Windows.Point.Y%2A> właściwości są używane.</span><span class="sxs-lookup"><span data-stu-id="a8a04-176">Because a <xref:System.Windows.Size> structure cannot be negative, the absolute values of the point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8a04-177">Poniższy przykład pokazuje, jak można jawnie przekonwertować <xref:System.Windows.Point> do <xref:System.Windows.Size>.</span><span class="sxs-lookup"><span data-stu-id="a8a04-177">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Size>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorsizeexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorsizeexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Vector (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Vector(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a8a04-178">Punkt do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-178">The point to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-179">Tworzy <see cref="T:System.Windows.Vector" /> struktura <see cref="P:System.Windows.Vector.X" /> wartości równej w punkcie <see cref="P:System.Windows.Point.X" /> wartość i <see cref="P:System.Windows.Vector.Y" /> wartości równej w punkcie <see cref="P:System.Windows.Point.Y" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-179">Creates a <see cref="T:System.Windows.Vector" /> structure with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-180">Wektor z <see cref="P:System.Windows.Vector.X" /> wartości równej w punkcie <see cref="P:System.Windows.Point.X" /> wartość i <see cref="P:System.Windows.Vector.Y" /> wartości równej w punkcie <see cref="P:System.Windows.Point.Y" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-180">A vector with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-181">Poniższy przykład pokazuje, jak można jawnie przekonwertować <xref:System.Windows.Point> do <xref:System.Windows.Vector>.</span><span class="sxs-lookup"><span data-stu-id="a8a04-181">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorvectorexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorvectorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.op_Inequality (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="a8a04-182">Pierwszy punkt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-182">The first point to compare.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="a8a04-183">Drugi punkt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-183">The second point to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-184">Porównuje dwa <see cref="T:System.Windows.Point" /> struktury pod kątem nierówności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-184">Compares two <see cref="T:System.Windows.Point" /> structures for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-185">
            <see langword="true" /> Jeśli <paramref name="point1" /> i <paramref name="point2" /> mają różne <see cref="P:System.Windows.Point.X" /> lub <see cref="P:System.Windows.Point.Y" /> służy do koordynowania; <see langword="false" /> Jeśli <paramref name="point1" /> i <paramref name="point2" /> mają taką samą <see cref="P:System.Windows.Point.X" /> i <see cref="P:System.Windows.Point.Y" /> współrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-185">
              <see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> have different <see cref="P:System.Windows.Point.X" /> or <see cref="P:System.Windows.Point.Y" /> coordinates; <see langword="false" /> if <paramref name="point1" /> and <paramref name="point2" /> have the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8a04-186">Punkt <xref:System.Windows.Point.X%2A> i <xref:System.Windows.Point.Y%2A> współrzędnych są opisane za pomocą <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="a8a04-186">A point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="a8a04-187">Ponieważ <xref:System.Double> wartości może spowodować utratę dokładności, gdy na porównania między dwoma <xref:System.Windows.Point> wartości, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="a8a04-187">Because <xref:System.Double> values can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8a04-188">Poniższy przykład pokazuje, jak sprawdzić, czy dwa <xref:System.Windows.Point> struktury nie są takie same, za pomocą przeciążonych (! =) — operator.</span><span class="sxs-lookup"><span data-stu-id="a8a04-188">The following example shows how to check whether two <xref:System.Windows.Point> structures are not equal, using the overloaded (!=) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator * (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator *(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="point * matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a8a04-189">Punkt do przekształcenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-189">The point to transform.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="a8a04-190">Macierzy transformacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-190">The transformation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-191">Przekształca określony <see cref="T:System.Windows.Point" /> przez określony <see cref="T:System.Windows.Media.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-191">Transforms the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Media.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-192">Wynik określony punkt przy użyciu określonej macierzy transformacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-192">The result of transforming the specified point using the specified matrix.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-193">Poniższy przykład pokazuje, jak należy pomnożyć <xref:System.Windows.Point> przez <xref:System.Windows.Media.Matrix> za pomocą operatora przeciążona (\*).</span><span class="sxs-lookup"><span data-stu-id="a8a04-193">The following example shows how to multiply a <xref:System.Windows.Point> by a <xref:System.Windows.Media.Matrix> using the overloaded (\*) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedmultiplypointbymatrixoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedmultiplypointbymatrixoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8a04-194">Odejmuje określoną <see cref="T:System.Windows.Vector" /> lub <see cref="T:System.Windows.Point" /> z określonego <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-194">Subtracts the specified <see cref="T:System.Windows.Vector" /> or <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator - (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Subtraction(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator -(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="point1 - point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="a8a04-195">Punkt, z którego <c>punkt2</c> jest odejmowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-195">The point from which <c>point2</c> is subtracted.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="a8a04-196">Punkt, którą chcesz odjąć od <c>punkt1</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-196">The point to subtract from <c>point1</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-197">Odejmuje określoną <see cref="T:System.Windows.Point" /> z innego określony <see cref="T:System.Windows.Point" /> i zwraca różnicę jako <see cref="T:System.Windows.Vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-197">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-198">Różnica między <paramref name="point1" /> i <paramref name="point2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-198">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-199">Poniższy przykład pokazuje, jak należy odjąć <xref:System.Windows.Point> z innego <xref:System.Windows.Point> i zwracają <xref:System.Windows.Vector> za pomocą operatora przeciążona (-).</span><span class="sxs-lookup"><span data-stu-id="a8a04-199">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> and return a <xref:System.Windows.Vector> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample2)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator - (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Subtraction(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator -(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point - vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a8a04-200">Punkt, z którego <c>wektor</c> jest odejmowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-200">The point from which <c>vector</c> is subtracted.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="a8a04-201">Vector, którą chcesz odjąć od <c>punkt1</c></span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-201">The vector to subtract from <c>point1</c></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-202">Odejmuje określoną <see cref="T:System.Windows.Vector" /> z określonego <see cref="T:System.Windows.Point" /> i zwraca wynikowy <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-202">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-203">Różnica między <paramref name="point" /> i <paramref name="vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-203">The difference between <paramref name="point" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-204">Poniższy przykład pokazuje, jak należy odjąć <xref:System.Windows.Vector> z <xref:System.Windows.Point> za pomocą operatora przeciążona (-).</span><span class="sxs-lookup"><span data-stu-id="a8a04-204">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample1)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Point" Usage="System.Windows.Point.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="a8a04-205">Ciąg reprezentujący punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-205">A string representation of a point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-206">Konstruuje <see cref="T:System.Windows.Point" /> z określonego <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-206">Constructs a <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-207">Odpowiednik <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-207">The equivalent <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-208">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Point.Parse%2A> metodę, aby przekonwertować <xref:System.String> reprezentujący punkt do <xref:System.Windows.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="a8a04-208">The following example shows how to use the <xref:System.Windows.Point.Parse%2A> method to convert a <xref:System.String> representation of a point into a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#parseexample)]
 [!code-vb[PointExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="a8a04-209">
            <paramref name="source" /> nie składa się z dwóch wartości double przecinkami lub spacjami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-209">
              <paramref name="source" /> is not composed of two comma- or space-delimited double values.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a8a04-210">
            <paramref name="source" /> nie zawiera dwie liczby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-210">
              <paramref name="source" /> does not contain two numbers.</span>
          </span>
          <span data-ttu-id="a8a04-211">- lub - <paramref name="source" /> zawiera zbyt wiele ograniczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-211">-or-  <paramref name="source" /> contains too many delimiters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8a04-212">Odejmuje określoną <see cref="T:System.Windows.Point" /> lub <see cref="T:System.Windows.Vector" /> z określonego <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-212">Subtracts the specified <see cref="T:System.Windows.Point" /> or <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Subtract (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Subtract(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Subtract(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.Subtract (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="a8a04-213">Punkt, z którego <c>punkt2</c> jest odejmowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-213">The point from which <c>point2</c> is subtracted.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="a8a04-214">Punkt, którą chcesz odjąć od <c>punkt1</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-214">The point to subtract from <c>point1</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-215">Odejmuje określoną <see cref="T:System.Windows.Point" /> z innego określony <see cref="T:System.Windows.Point" /> i zwraca różnicę jako <see cref="T:System.Windows.Vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-215">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-216">Różnica między <paramref name="point1" /> i <paramref name="point2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-216">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-217">Poniższy przykład pokazuje, jak należy odjąć <xref:System.Windows.Point> z innego <xref:System.Windows.Point> przy użyciu statycznych <xref:System.Windows.Point.Subtract%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a8a04-217">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample2)]
 [!code-vb[PointExamples_snip#SubtractExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Subtract (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Subtract(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Subtract(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Subtract (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a8a04-218">Punkt, z którego <c>wektor</c> jest odejmowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-218">The point from which <c>vector</c> is subtracted.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="a8a04-219">
            <c>Wektor</c> do odjęcia od <c>punktu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-219">The <c>vector</c> to subtract from <c>point</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-220">Odejmuje określoną <see cref="T:System.Windows.Vector" /> z określonego <see cref="T:System.Windows.Point" /> i zwraca wynikowy <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-220">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-221">Różnica między <paramref name="point" /> i <paramref name="vector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-221">The difference between <paramref name="point" /> and <paramref name="vector" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-222">Poniższy przykład pokazuje, jak należy odjąć <xref:System.Windows.Vector> z <xref:System.Windows.Point> przy użyciu statycznych <xref:System.Windows.Point.Subtract%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a8a04-222">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample1)]
 [!code-vb[PointExamples_snip#SubtractExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Subtract" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="a8a04-223">Ciąg określający formatu do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-223">The string specifying the format to use.</span>
          </span>
          <span data-ttu-id="a8a04-224">- lub - <see langword="null" /> używać domyślnego formatu zdefiniowany dla typu <see cref="T:System.IFormattable" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-224">-or-  <see langword="null" /> to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="a8a04-225">
            <see langword="IFormatProvider" /> Służące do formatowania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-225">The <see langword="IFormatProvider" /> to use to format the value.</span>
          </span>
          <span data-ttu-id="a8a04-226">- lub - <see langword="null" /> uzyskanie informacji formatujące z bieżących ustawień regionalnych systemu operacyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-226">-or-  <see langword="null" /> to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-227">Ten element członkowski obsługuje [! Infrastruktura include[TLA#tla_winclient](~/includes/tlasharptla-winclient-MD.MD)] i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-227">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="a8a04-228">Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-228">For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-229">Ciąg zawierający wartość bieżącego wystąpienia w określonym formacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-229">A string containing the value of the current instance in the specified format.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8a04-230">Tworzy <see cref="T:System.String" /> to reprezentacja <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-230">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="point.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8a04-231">Tworzy <see cref="T:System.String" /> to reprezentacja <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-231">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-232">A <see cref="T:System.String" /> zawierający <see cref="P:System.Windows.Point.X" /> i <see cref="P:System.Windows.Point.Y" /> wartości to <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-232">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-233">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Point.ToString%2A> metodę, aby uzyskać <xref:System.String> reprezentacja <xref:System.Windows.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="a8a04-233">The following example shows how to use the <xref:System.Windows.Point.ToString%2A> method to get a <xref:System.String> representation of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ToStringExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#tostringexample)]
 [!code-vb[PointExamples_snip#ToStringExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#tostringexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="point.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a8a04-234">Informacje o formatowaniu specyficzne dla kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-234">Culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8a04-235">Tworzy <see cref="T:System.String" /> to reprezentacja <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-235">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8a04-236">A <see cref="T:System.String" /> zawierający <see cref="P:System.Windows.Point.X" /> i <see cref="P:System.Windows.Point.Y" /> wartości to <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-236">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Point.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8a04-237">Pobiera lub ustawia <see cref="P:System.Windows.Point.X" />-koordynować wartość <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-237">Gets or sets the <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8a04-238">
            <see cref="P:System.Windows.Point.X" />-Koordynować wartość <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-238">The <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
          <span data-ttu-id="a8a04-239">Wartość domyślna to <c>0</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-239">The default value is <c>0</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-240">Poniższy przykład przedstawia sprawdzić, czy dwa <xref:System.Windows.Point> struktury nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="a8a04-240">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="a8a04-241">Ilustruje także sposób przypisywania wartości do <xref:System.Windows.Point> struktury, gdy zadeklarowana jest struktura i po deklaracji struktury.</span><span class="sxs-lookup"><span data-stu-id="a8a04-241">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Point.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8a04-242">Pobiera lub ustawia <see cref="P:System.Windows.Point.Y" />-koordynować wartość <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-242">Gets or sets the <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8a04-243">
            <see cref="P:System.Windows.Point.Y" />-Koordynować wartość <see cref="T:System.Windows.Point" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-243">The <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span>
          </span>
          <span data-ttu-id="a8a04-244">Wartość domyślna to <c>0</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8a04-244">The default value is <c>0</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8a04-245">Poniższy przykład przedstawia sprawdzić, czy dwa <xref:System.Windows.Point> struktury nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="a8a04-245">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="a8a04-246">Ilustruje także sposób przypisywania wartości do <xref:System.Windows.Point> struktury, gdy zadeklarowana jest struktura i po deklaracji struktury.</span><span class="sxs-lookup"><span data-stu-id="a8a04-246">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.X" />
      </Docs>
    </Member>
  </Members>
</Type>