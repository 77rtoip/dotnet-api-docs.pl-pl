<Type Name="EventManager" FullName="System.Windows.EventManager">
  <TypeSignature Language="C#" Value="public static class EventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class EventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="18a57-101">Udostępnia metody narzędziowe związane ze zdarzeniami, które Zarejestruj kierowane zdarzenia dla klasy właścicieli i dodać obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="18a57-101">Provides event-related utility methods that register routed events for class owners and add class handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18a57-102">Ta klasa jest najczęściej używane do rejestrowania nowych kierowanego zdarzenia z <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="18a57-102">This class is most commonly used to register a new routed event, with <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span>  
  
 <span data-ttu-id="18a57-103">Drugi najczęściej [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] jest użycie <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="18a57-103">The second most common [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] usage is <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span> <span data-ttu-id="18a57-104">Ta metoda umożliwia obsługę klasy kierowanego zdarzenia w klasie lub dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="18a57-104">You use this method to enable class handling of a routed event on the class, or an attached event.</span></span> <span data-ttu-id="18a57-105">Aby uzyskać więcej informacji, zobacz [oznaczenie kierowane zdarzenia jako Handled i obsługa klasy](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="18a57-105">For details, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18a57-106">W poniższym przykładzie pokazano, jak klasa używana do rejestrowania nowych kierowanego zdarzenia jako element członkowski klasy wraz z techniki "otoki" kierowanego zdarzenia zastępowanie Dodaj i Usuń implementacji dla [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="18a57-106">The following example show how to use this class to register a new routed event as a class member, along with the routed event "wrapper" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event.</span></span>  
  
 [!code-csharp[DPCustom#EventManagerClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#eventmanagerclass)]
 [!code-vb[DPCustom#EventManagerClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#eventmanagerclass)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRoutedEvents">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEvents () As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18a57-107">Zwraca identyfikatory kierowane zdarzenia, które zostały zarejestrowane w systemie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="18a57-107">Returns identifiers for routed events that have been registered to the event system.</span></span></summary>
        <returns><span data-ttu-id="18a57-108">Tablica typu <see cref="T:System.Windows.RoutedEvent" /> zawierający zarejestrowanych obiektów.</span><span class="sxs-lookup"><span data-stu-id="18a57-108">An array of type <see cref="T:System.Windows.RoutedEvent" /> that contains the registered objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18a57-109">Więcej <xref:System.Windows.RoutedEvent> obiektów, które mogą być rejestrowane później.</span><span class="sxs-lookup"><span data-stu-id="18a57-109">More <xref:System.Windows.RoutedEvent> objects can be registered later.</span></span> <span data-ttu-id="18a57-110">Ta metoda pobiera migawkę i kolekcji kierowane zdarzenia jest zapisywalny przez cały okres istnienia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="18a57-110">This method gets a snapshot and the collection of routed events is writeable throughout an application's lifetime.</span></span> <span data-ttu-id="18a57-111">Kolekcja zwracana może być dość duży.</span><span class="sxs-lookup"><span data-stu-id="18a57-111">The collection returned might be quite large.</span></span> <span data-ttu-id="18a57-112">Nawet po prostu zliczania zdarzeń, które są częścią [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], liczba kolekcji jest w setki wysoki.</span><span class="sxs-lookup"><span data-stu-id="18a57-112">Even just counting the events that are part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], the collection count is in the high hundreds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutedEventsForOwner">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEventsForOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEventsForOwner (ownerType As Type) As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEventsForOwner(Type ^ ownerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType"><span data-ttu-id="18a57-113">Typ ma się rozpocząć wyszukiwanie z.</span><span class="sxs-lookup"><span data-stu-id="18a57-113">The type to start the search with.</span></span> <span data-ttu-id="18a57-114">Klasy podstawowe są uwzględnione w wyszukiwaniu.</span><span class="sxs-lookup"><span data-stu-id="18a57-114">Base classes are included in the search.</span></span></param>
        <summary><span data-ttu-id="18a57-115">Znajduje wszystkie identyfikatory kierowanego zdarzenia dla zdarzeń, które są zarejestrowane w usłudze typ podanego właściciela.</span><span class="sxs-lookup"><span data-stu-id="18a57-115">Finds all routed event identifiers for events that are registered with the provided owner type.</span></span></summary>
        <returns><span data-ttu-id="18a57-116">Tablica zgodnych identyfikatorów kierowanego zdarzenia, gdy wszystkie dopasowania zostanie odnaleziony; w przeciwnym razie <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="18a57-116">An array of matching routed event identifiers if any match is found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClassHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18a57-117">Rejestruje obsługi klasy dla konkretnego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-117">Registers a class handler for a particular routed event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="classType"><span data-ttu-id="18a57-118">Typ klasy, która jest deklarowanie klasy obsługi.</span><span class="sxs-lookup"><span data-stu-id="18a57-118">The type of the class that is declaring class handling.</span></span></param>
        <param name="routedEvent"><span data-ttu-id="18a57-119">Identyfikator zdarzenia w celu obsługi kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-119">The routed event identifier of the event to handle.</span></span></param>
        <param name="handler"><span data-ttu-id="18a57-120">Odwołanie do implementacji klasy obsługi.</span><span class="sxs-lookup"><span data-stu-id="18a57-120">A reference to the class handler implementation.</span></span></param>
        <summary><span data-ttu-id="18a57-121">Rejestruje obsługi klasy dla konkretnego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-121">Registers a class handler for a particular routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18a57-122">Obsługa klasy to funkcja, która jest dostępna dla kierowane zdarzenia, w tym dołączone zdarzenia, które są wykonywane z kierowanego zdarzenia kopii.</span><span class="sxs-lookup"><span data-stu-id="18a57-122">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="18a57-123">Klasy obsługi przypomina obsługi statyczne, czy istnieje dla wszystkich wystąpień klasy.</span><span class="sxs-lookup"><span data-stu-id="18a57-123">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="18a57-124">Ponieważ program obsługi jest statyczna, nie można zmienić właściwości wystąpienia bezpośrednio z programu obsługi klasy, ale można uzyskać dostępu do wystąpienia za pomocą `sender` parametru i/lub dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-124">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="18a57-125">Klasy obsługi są wywoływane przed wystąpieniem obsługi.</span><span class="sxs-lookup"><span data-stu-id="18a57-125">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="18a57-126">Można zaimplementować obsługi klasy, która ma oznaczenie zdarzenie, ponieważ obsługiwane zachowanie.</span><span class="sxs-lookup"><span data-stu-id="18a57-126">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="18a57-127">W związku z tym wystąpienie obsługi dla zdarzenia obsługiwane klasy nie są wywoływane, chyba że obsługi wystąpienia zarejestrować specjalnie z myślą o obsłużone zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-127">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="18a57-128">Duża liczba [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] zdarzenia base element udostępniają klasy obsługi metodach wirtualnych.</span><span class="sxs-lookup"><span data-stu-id="18a57-128">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="18a57-129">Zastępowanie tych metod w klasach, które dziedziczą z klasy podstawowej, można zaimplementować klasy obsługi bez wywoływania elementu <xref:System.Windows.EventManager.RegisterClassHandler%2A> w konstruktorach statycznych.</span><span class="sxs-lookup"><span data-stu-id="18a57-129">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="18a57-130">Te metody obsługi klasy zwykle istnieją zdarzenia wejściowe i mają nazwy zaczynające "On" i kończyć się nazwa zdarzenia jest klasa obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="18a57-130">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="18a57-131">Aby uzyskać więcej informacji na temat klasy obsługi zobacz [oznaczenie kierowane zdarzenia jako Handled i obsługa klasy](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="18a57-131">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="18a57-132">Za pomocą tego podpisu, obsługę klas zostanie zarejestrowany można wywołać tylko w odpowiedzi na zdarzenia nieobsługiwany.</span><span class="sxs-lookup"><span data-stu-id="18a57-132">Using this signature, class handlers will be registered to invoke only in response to unhandled events.</span></span> <span data-ttu-id="18a57-133">Można również zarejestrować obsługę klas można wywołać, nawet jeśli argumenty zdarzeń są oznaczone jako obsługiwany, za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu, z `handledEventsToo` ustawioną `true`.</span><span class="sxs-lookup"><span data-stu-id="18a57-133">You can also register class handlers to invoke even if the event arguments are marked handled, by using the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature, with `handledEventsToo` set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18a57-134">Poniższy przykład umożliwia dodanie obsługi dla <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, wywoływania <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="18a57-134">The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 [!code-csharp[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]
 [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#staticandregisterclasshandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classType"><span data-ttu-id="18a57-135">Typ klasy, która jest deklarowanie klasy obsługi.</span><span class="sxs-lookup"><span data-stu-id="18a57-135">The type of the class that is declaring class handling.</span></span></param>
        <param name="routedEvent"><span data-ttu-id="18a57-136">Identyfikator zdarzenia w celu obsługi kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-136">The routed event identifier of the event to handle.</span></span></param>
        <param name="handler"><span data-ttu-id="18a57-137">Odwołanie do implementacji klasy obsługi.</span><span class="sxs-lookup"><span data-stu-id="18a57-137">A reference to the class handler implementation.</span></span></param>
        <param name="handledEventsToo">
          <span data-ttu-id="18a57-138"><see langword="true" /> Wywołaj obsługę tej klasy, nawet jeśli została oznaczona jako argumenty kierowanego zdarzenia przetwarzanych; <see langword="false" /> zachowania domyślnego zachowania nie wywołuje program obsługi na wszystkie zdarzenia oznaczone obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="18a57-138"><see langword="true" /> to invoke this class handler even if arguments of the routed event have been marked as handled; <see langword="false" /> to retain the default behavior of not invoking the handler on any marked-handled event.</span></span></param>
        <summary><span data-ttu-id="18a57-139">Rejestruje obsługi klasy dla określonego zdarzenia routingiem, z możliwością obsługi zdarzeń, w którym dane zdarzeń jest oznaczona jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="18a57-139">Registers a class handler for a particular routed event, with the option to handle events where event data is already marked handled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18a57-140">Obsługa klasy to funkcja, która jest dostępna dla kierowane zdarzenia, w tym dołączone zdarzenia, które są wykonywane z kierowanego zdarzenia kopii.</span><span class="sxs-lookup"><span data-stu-id="18a57-140">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="18a57-141">Klasy obsługi przypomina obsługi statyczne, czy istnieje dla wszystkich wystąpień klasy.</span><span class="sxs-lookup"><span data-stu-id="18a57-141">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="18a57-142">Ponieważ program obsługi jest statyczna, nie można zmienić właściwości wystąpienia bezpośrednio z programu obsługi klasy, ale można uzyskać dostępu do wystąpienia za pomocą `sender` parametru i/lub dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-142">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="18a57-143">Klasy obsługi są wywoływane przed wystąpieniem obsługi.</span><span class="sxs-lookup"><span data-stu-id="18a57-143">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="18a57-144">Można zaimplementować obsługi klasy, która ma oznaczenie zdarzenie, ponieważ obsługiwane zachowanie.</span><span class="sxs-lookup"><span data-stu-id="18a57-144">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="18a57-145">W związku z tym wystąpienie obsługi dla zdarzenia obsługiwane klasy nie są wywoływane, chyba że obsługi wystąpienia zarejestrować specjalnie z myślą o obsłużone zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-145">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="18a57-146">Duża liczba [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] zdarzenia base element udostępniają klasy obsługi metodach wirtualnych.</span><span class="sxs-lookup"><span data-stu-id="18a57-146">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="18a57-147">Zastępowanie tych metod w klasach, które dziedziczą z klasy podstawowej, można zaimplementować klasy obsługi bez wywoływania elementu <xref:System.Windows.EventManager.RegisterClassHandler%2A> w konstruktorach statycznych.</span><span class="sxs-lookup"><span data-stu-id="18a57-147">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="18a57-148">Te metody obsługi klasy zwykle istnieją zdarzenia wejściowe i mają nazwy zaczynające "On" i kończyć się nazwa zdarzenia jest klasa obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="18a57-148">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="18a57-149">Aby uzyskać więcej informacji na temat klasy obsługi zobacz [oznaczenie kierowane zdarzenia jako Handled i obsługa klasy](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="18a57-149">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="18a57-150">Za pomocą tego podpisu, obsługę klas można zarejestrować do wywołania po obsłużone zdarzenia, ustawiając `handledEventsToo` ustawioną `true`.</span><span class="sxs-lookup"><span data-stu-id="18a57-150">Using this signature, class handlers can be registered to invoke upon handled events, by setting `handledEventsToo` set to `true`.</span></span> <span data-ttu-id="18a57-151">Ogólnie rzecz biorąc należy to zrobić tylko, jeśli wystąpi problem znane obsługi, który chcesz obejść, takich jak system wejściowy obsługi zdarzeń za pomocą klawiatury lub myszy.</span><span class="sxs-lookup"><span data-stu-id="18a57-151">Generally, you should do this only if there is a known handling issue you are trying to work around, such as input system handling from mouse or keyboard events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterRoutedEvent">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent RegisterRoutedEvent(string name, valuetype System.Windows.RoutingStrategy routingStrategy, class System.Type handlerType, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::RoutedEvent ^ RegisterRoutedEvent(System::String ^ name, System::Windows::RoutingStrategy routingStrategy, Type ^ handlerType, Type ^ ownerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="routingStrategy" Type="System.Windows.RoutingStrategy" />
        <Parameter Name="handlerType" Type="System.Type" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="18a57-152">Nazwa kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-152">The name of the routed event.</span></span> <span data-ttu-id="18a57-153">Nazwa musi być unikatowa w obrębie typu właściciela i nie może być <see langword="null" /> lub ciąg pusty.</span><span class="sxs-lookup"><span data-stu-id="18a57-153">The name must be unique within the owner type and cannot be <see langword="null" /> or an empty string.</span></span></param>
        <param name="routingStrategy"><span data-ttu-id="18a57-154">Strategii routingu zdarzenia jako wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-154">The routing strategy of the event as a value of the enumeration.</span></span></param>
        <param name="handlerType"><span data-ttu-id="18a57-155">Typem obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="18a57-155">The type of the event handler.</span></span> <span data-ttu-id="18a57-156">To musi być typem obiektu delegowanego i nie może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="18a57-156">This must be a delegate type and cannot be <see langword="null" />.</span></span></param>
        <param name="ownerType"><span data-ttu-id="18a57-157">Typ klasy właściciela kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-157">The owner class type of the routed event.</span></span> <span data-ttu-id="18a57-158">Nie może to być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="18a57-158">This cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="18a57-159">Rejestruje nowy kierowanego zdarzenia z [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] zdarzeń systemu.</span><span class="sxs-lookup"><span data-stu-id="18a57-159">Registers a new routed event with the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event system.</span></span></summary>
        <returns><span data-ttu-id="18a57-160">Identyfikator nowo zarejestrowanych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-160">The identifier for the newly registered routed event.</span></span> <span data-ttu-id="18a57-161">Ten obiekt identyfikator może być teraz przechowywane jako pola statycznego w klasie, a następnie użyć jako parametru dla metod, które załączyć obsługi zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="18a57-161">This identifier object can now be stored as a static field in a class and then used as a parameter for methods that attach handlers to the event.</span></span> <span data-ttu-id="18a57-162">Identyfikator kierowanego zdarzenia służy także do innego systemu zdarzeń [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="18a57-162">The routed event identifier is also used for other event system [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18a57-163">Zwracana wartość ta metoda umożliwia utworzenie deklaracja statycznej unikatowego <xref:System.Windows.RoutedEvent> pole identyfikatora.</span><span class="sxs-lookup"><span data-stu-id="18a57-163">Use the return value of this method to create the static declaration for a unique <xref:System.Windows.RoutedEvent> identifier field.</span></span> <span data-ttu-id="18a57-164">W tym polu powinny być przechowywane w ramach typu właściciela.</span><span class="sxs-lookup"><span data-stu-id="18a57-164">This field should be stored within the owner type.</span></span>  
  
 <span data-ttu-id="18a57-165">Brak znaczną liczbę konwencje, a najlepsze rozwiązania związane z jak kierowane zdarzenia powinna być o nazwie, zarejestrowane oraz widoczne w klasie.</span><span class="sxs-lookup"><span data-stu-id="18a57-165">There are a considerable number of conventions and best practices associated with how routed events should be named, registered, and exposed in a class.</span></span> <span data-ttu-id="18a57-166">Aby uzyskać więcej informacji, zobacz [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18a57-166">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>