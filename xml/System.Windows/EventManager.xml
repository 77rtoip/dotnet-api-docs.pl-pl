<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventManager.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c77ae0f0dbeb2878102af1c07c306ec83ccf92c4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c77ae0f0dbeb2878102af1c07c306ec83ccf92c4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.EventManager">
          <source>Provides event-related utility methods that register routed events for class owners and add class handlers.</source>
          <target state="translated">Udostępnia metody narzędziowe związane ze zdarzeniami, które Zarejestruj kierowane zdarzenia dla klasy właścicieli i dodać obsługę klas.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventManager">
          <source>This class is most commonly used to register a new routed event, with <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</source>
          <target state="translated">Ta klasa jest najczęściej używane do rejestrowania nowych kierowanego zdarzenia z <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventManager">
          <source>The second most common <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)]</ph> usage is <ph id="ph2">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Drugi najczęściej <ph id="ph1">[!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)]</ph> jest użycie <ph id="ph2">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventManager">
          <source>You use this method to enable class handling of a routed event on the class, or an attached event.</source>
          <target state="translated">Ta metoda umożliwia obsługę klasy kierowanego zdarzenia w klasie lub dołączone zdarzenie.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventManager">
          <source>For details, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>oznaczenie kierowane zdarzenia jako Handled i obsługa klasy<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.EventManager">
          <source>The following example show how to use this class to register a new routed event as a class member, along with the routed event "wrapper" technique of overriding the add and remove implementations for a <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> event.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak klasa używana do rejestrowania nowych kierowanego zdarzenia jako element członkowski klasy wraz z techniki "otoki" kierowanego zdarzenia zastępowanie Dodaj i Usuń implementacji dla <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>Returns identifiers for routed events that have been registered to the event system.</source>
          <target state="translated">Zwraca identyfikatory kierowane zdarzenia, które zostały zarejestrowane w systemie zdarzeń.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEvent" /&gt;</ph> that contains the registered objects.</source>
          <target state="translated">Tablica typu <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEvent" /&gt;</ph> zawierający zarejestrowanych obiektów.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>More <ph id="ph1">&lt;xref:System.Windows.RoutedEvent&gt;</ph> objects can be registered later.</source>
          <target state="translated">Więcej <ph id="ph1">&lt;xref:System.Windows.RoutedEvent&gt;</ph> obiektów, które mogą być rejestrowane później.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>This method gets a snapshot and the collection of routed events is writeable throughout an application's lifetime.</source>
          <target state="translated">Ta metoda pobiera migawkę i kolekcji kierowane zdarzenia jest zapisywalny przez cały okres istnienia aplikacji.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>The collection returned might be quite large.</source>
          <target state="translated">Kolekcja zwracana może być dość duży.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.GetRoutedEvents">
          <source>Even just counting the events that are part of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph2">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>, the collection count is in the high hundreds.</source>
          <target state="translated">Nawet po prostu zliczania zdarzeń, które są częścią <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph2">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>, liczba kolekcji jest w setki wysoki.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)">
          <source>The type to start the search with.</source>
          <target state="translated">Typ ma się rozpocząć wyszukiwanie z.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)">
          <source>Base classes are included in the search.</source>
          <target state="translated">Klasy podstawowe są uwzględnione w wyszukiwaniu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)">
          <source>Finds all routed event identifiers for events that are registered with the provided owner type.</source>
          <target state="translated">Znajduje wszystkie identyfikatory kierowanego zdarzenia dla zdarzeń, które są zarejestrowane w usłudze typ podanego właściciela.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)">
          <source>An array of matching routed event identifiers if any match is found; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Tablica zgodnych identyfikatorów kierowanego zdarzenia, gdy wszystkie dopasowania zostanie odnaleziony; w przeciwnym razie <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Windows.EventManager">
          <source>Registers a class handler for a particular routed event.</source>
          <target state="translated">Rejestruje obsługi klasy dla konkretnego kierowanego zdarzenia.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>The type of the class that is declaring class handling.</source>
          <target state="translated">Typ klasy, która jest deklarowanie klasy obsługi.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>The routed event identifier of the event to handle.</source>
          <target state="translated">Identyfikator zdarzenia w celu obsługi kierowanego zdarzenia.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>A reference to the class handler implementation.</source>
          <target state="translated">Odwołanie do implementacji klasy obsługi.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Registers a class handler for a particular routed event.</source>
          <target state="translated">Rejestruje obsługi klasy dla konkretnego kierowanego zdarzenia.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</source>
          <target state="translated">Obsługa klasy to funkcja, która jest dostępna dla kierowane zdarzenia, w tym dołączone zdarzenia, które są wykonywane z kierowanego zdarzenia kopii.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>A class handler is like a static handler that exists for all instances of the class.</source>
          <target state="translated">Klasy obsługi przypomina obsługi statyczne, czy istnieje dla wszystkich wystąpień klasy.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the <ph id="ph1">`sender`</ph> parameter and/or the event data.</source>
          <target state="translated">Ponieważ program obsługi jest statyczna, nie można zmienić właściwości wystąpienia bezpośrednio z programu obsługi klasy, ale można uzyskać dostępu do wystąpienia za pomocą <ph id="ph1">`sender`</ph> parametru i/lub dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Class handlers are invoked before instance handlers.</source>
          <target state="translated">Klasy obsługi są wywoływane przed wystąpieniem obsługi.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>You can implement a class handler that has the behavior of marking the event as handled.</source>
          <target state="translated">Można zaimplementować obsługi klasy, która ma oznaczenie zdarzenie, ponieważ obsługiwane zachowanie.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</source>
          <target state="translated">W związku z tym wystąpienie obsługi dla zdarzenia obsługiwane klasy nie są wywoływane, chyba że obsługi wystąpienia zarejestrować specjalnie z myślą o obsłużone zdarzenia.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Many of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> base element events provide class handling virtual methods.</source>
          <target state="translated">Duża liczba <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> zdarzenia base element udostępniają klasy obsługi metodach wirtualnych.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> in static constructors.</source>
          <target state="translated">Zastępowanie tych metod w klasach, które dziedziczą z klasy podstawowej, można zaimplementować klasy obsługi bez wywoływania elementu <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> w konstruktorach statycznych.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</source>
          <target state="translated">Te metody obsługi klasy zwykle istnieją zdarzenia wejściowe i mają nazwy zaczynające "On" i kończyć się nazwa zdarzenia jest klasa obsługiwane.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>For more information about class handling, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat klasy obsługi zobacz <bpt id="p1">[</bpt>oznaczenie kierowane zdarzenia jako Handled i obsługa klasy<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>Using this signature, class handlers will be registered to invoke only in response to unhandled events.</source>
          <target state="translated">Za pomocą tego podpisu, obsługę klas zostanie zarejestrowany można wywołać tylko w odpowiedzi na zdarzenia nieobsługiwany.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>You can also register class handlers to invoke even if the event arguments are marked handled, by using the <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> signature, with <ph id="ph2">`handledEventsToo`</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Można również zarejestrować obsługę klas można wywołać, nawet jeśli argumenty zdarzeń są oznaczone jako obsługiwany, za pomocą <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> podpisu, z <ph id="ph2">`handledEventsToo`</ph> ustawioną <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
          <source>The following example adds a handler for <ph id="ph1">&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</ph>, calling <ph id="ph2">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Poniższy przykład umożliwia dodanie obsługi dla <ph id="ph1">&lt;xref:System.Windows.UIElement.PreviewMouseLeftButtonDown&gt;</ph>, wywoływania <ph id="ph2">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>The type of the class that is declaring class handling.</source>
          <target state="translated">Typ klasy, która jest deklarowanie klasy obsługi.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>The routed event identifier of the event to handle.</source>
          <target state="translated">Identyfikator zdarzenia w celu obsługi kierowanego zdarzenia.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>A reference to the class handler implementation.</source>
          <target state="translated">Odwołanie do implementacji klasy obsługi.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to invoke this class handler even if arguments of the routed event have been marked as handled; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to retain the default behavior of not invoking the handler on any marked-handled event.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Wywołaj obsługę tej klasy, nawet jeśli została oznaczona jako argumenty kierowanego zdarzenia przetwarzanych; <ph id="ph2">&lt;see langword="false" /&gt;</ph> zachowania domyślnego zachowania nie wywołuje program obsługi na wszystkie zdarzenia oznaczone obsługiwane.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Registers a class handler for a particular routed event, with the option to handle events where event data is already marked handled.</source>
          <target state="translated">Rejestruje obsługi klasy dla określonego zdarzenia routingiem, z możliwością obsługi zdarzeń, w którym dane zdarzeń jest oznaczona jako obsługiwane.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</source>
          <target state="translated">Obsługa klasy to funkcja, która jest dostępna dla kierowane zdarzenia, w tym dołączone zdarzenia, które są wykonywane z kierowanego zdarzenia kopii.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>A class handler is like a static handler that exists for all instances of the class.</source>
          <target state="translated">Klasy obsługi przypomina obsługi statyczne, czy istnieje dla wszystkich wystąpień klasy.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the <ph id="ph1">`sender`</ph> parameter and/or the event data.</source>
          <target state="translated">Ponieważ program obsługi jest statyczna, nie można zmienić właściwości wystąpienia bezpośrednio z programu obsługi klasy, ale można uzyskać dostępu do wystąpienia za pomocą <ph id="ph1">`sender`</ph> parametru i/lub dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Class handlers are invoked before instance handlers.</source>
          <target state="translated">Klasy obsługi są wywoływane przed wystąpieniem obsługi.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>You can implement a class handler that has the behavior of marking the event as handled.</source>
          <target state="translated">Można zaimplementować obsługi klasy, która ma oznaczenie zdarzenie, ponieważ obsługiwane zachowanie.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</source>
          <target state="translated">W związku z tym wystąpienie obsługi dla zdarzenia obsługiwane klasy nie są wywoływane, chyba że obsługi wystąpienia zarejestrować specjalnie z myślą o obsłużone zdarzenia.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Many of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> base element events provide class handling virtual methods.</source>
          <target state="translated">Duża liczba <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> zdarzenia base element udostępniają klasy obsługi metodach wirtualnych.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> in static constructors.</source>
          <target state="translated">Zastępowanie tych metod w klasach, które dziedziczą z klasy podstawowej, można zaimplementować klasy obsługi bez wywoływania elementu <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> w konstruktorach statycznych.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</source>
          <target state="translated">Te metody obsługi klasy zwykle istnieją zdarzenia wejściowe i mają nazwy zaczynające "On" i kończyć się nazwa zdarzenia jest klasa obsługiwane.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>For more information about class handling, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat klasy obsługi zobacz <bpt id="p1">[</bpt>oznaczenie kierowane zdarzenia jako Handled i obsługa klasy<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Using this signature, class handlers can be registered to invoke upon handled events, by setting <ph id="ph1">`handledEventsToo`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Za pomocą tego podpisu, obsługę klas można zarejestrować do wywołania po obsłużone zdarzenia, ustawiając <ph id="ph1">`handledEventsToo`</ph> ustawioną <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <source>Generally, you should do this only if there is a known handling issue you are trying to work around, such as input system handling from mouse or keyboard events.</source>
          <target state="translated">Ogólnie rzecz biorąc należy to zrobić tylko, jeśli wystąpi problem znane obsługi, który chcesz obejść, takich jak system wejściowy obsługi zdarzeń za pomocą klawiatury lub myszy.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The name of the routed event.</source>
          <target state="translated">Nazwa kierowanego zdarzenia.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The name must be unique within the owner type and cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">Nazwa musi być unikatowa w obrębie typu właściciela i nie może być <ph id="ph1">&lt;see langword="null" /&gt;</ph> lub ciąg pusty.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The routing strategy of the event as a value of the enumeration.</source>
          <target state="translated">Strategii routingu zdarzenia jako wartość wyliczenia.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The type of the event handler.</source>
          <target state="translated">Typem obsługi zdarzeń.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>This must be a delegate type and cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">To musi być typem obiektu delegowanego i nie może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The owner class type of the routed event.</source>
          <target state="translated">Typ klasy właściciela kierowanego zdarzenia.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>This cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Nie może to być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>Registers a new routed event with the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> event system.</source>
          <target state="translated">Rejestruje nowy kierowanego zdarzenia z <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> zdarzeń systemu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The identifier for the newly registered routed event.</source>
          <target state="translated">Identyfikator nowo zarejestrowanych kierowanego zdarzenia.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>This identifier object can now be stored as a static field in a class and then used as a parameter for methods that attach handlers to the event.</source>
          <target state="translated">Ten obiekt identyfikator może być teraz przechowywane jako pola statycznego w klasie, a następnie użyć jako parametru dla metod, które załączyć obsługi zdarzenia.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>The routed event identifier is also used for other event system <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>.</source>
          <target state="translated">Identyfikator kierowanego zdarzenia służy także do innego systemu zdarzeń <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>Use the return value of this method to create the static declaration for a unique <ph id="ph1">&lt;xref:System.Windows.RoutedEvent&gt;</ph> identifier field.</source>
          <target state="translated">Zwracana wartość ta metoda umożliwia utworzenie deklaracja statycznej unikatowego <ph id="ph1">&lt;xref:System.Windows.RoutedEvent&gt;</ph> pole identyfikatora.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>This field should be stored within the owner type.</source>
          <target state="translated">W tym polu powinny być przechowywane w ramach typu właściciela.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>There are a considerable number of conventions and best practices associated with how routed events should be named, registered, and exposed in a class.</source>
          <target state="translated">Brak znaczną liczbę konwencje, a najlepsze rozwiązania związane z jak kierowane zdarzenia powinna być o nazwie, zarejestrowane oraz widoczne w klasie.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
          <source>For more information, see <bpt id="p1">[</bpt>Routed Events Overview<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>kierowane Przegląd zdarzeń<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>