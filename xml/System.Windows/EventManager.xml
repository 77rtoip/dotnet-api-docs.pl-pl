<Type Name="EventManager" FullName="System.Windows.EventManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="620ca50d7b7841b0be3d9ebb860f452ea6667928" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444890" /></Metadata><TypeSignature Language="C#" Value="public static class EventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class EventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventManager abstract sealed" />
  <TypeSignature Language="F#" Value="type EventManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a1500-101">Zapewnia metody narzędziowe związane z zdarzeniami, które rejestrują zdarzenia kierowane dla właścicieli klas i dodają obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a1500-101">Provides event-related utility methods that register routed events for class owners and add class handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1500-102">Ta klasa jest najczęściej używana do rejestrowania nowego zdarzenia trasowanego za pomocą <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1500-102">This class is most commonly used to register a new routed event, with <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span>  
  
 <span data-ttu-id="a1500-103">Drugim najbardziej typowym [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] użyciem jest <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1500-103">The second most common [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] usage is <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span> <span data-ttu-id="a1500-104">Ta metoda służy do włączania obsługi klasy dla zdarzenia kierowanego w klasie lub dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a1500-104">You use this method to enable class handling of a routed event on the class, or an attached event.</span></span> <span data-ttu-id="a1500-105">Aby uzyskać szczegółowe informacje, zobacz [oznaczanie zdarzeń kierowanych jako obsłużone i obsługa klas](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="a1500-105">For details, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1500-106">W poniższym przykładzie pokazano, jak za pomocą tej klasy zarejestrować nowe zdarzenie kierowane jako element członkowski klasy, oraz technikę "otoki" z rozesłanym zdarzeniem, która przesłania implementacje dodawania i [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] usuwania dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a1500-106">The following example show how to use this class to register a new routed event as a class member, along with the routed event "wrapper" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event.</span></span>  
  
 [!code-csharp[DPCustom#EventManagerClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#eventmanagerclass)]
 [!code-vb[DPCustom#EventManagerClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#eventmanagerclass)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRoutedEvents">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEvents () As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEvents();" />
      <MemberSignature Language="F#" Value="static member GetRoutedEvents : unit -&gt; System.Windows.RoutedEvent[]" Usage="System.Windows.EventManager.GetRoutedEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1500-107">Zwraca identyfikatory dla zdarzeń kierowanych zarejestrowanych w systemie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a1500-107">Returns identifiers for routed events that have been registered to the event system.</span></span></summary>
        <returns><span data-ttu-id="a1500-108">Tablica typu <see cref="T:System.Windows.RoutedEvent" /> zawierającego zarejestrowane obiekty.</span><span class="sxs-lookup"><span data-stu-id="a1500-108">An array of type <see cref="T:System.Windows.RoutedEvent" /> that contains the registered objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1500-109">Więcej <xref:System.Windows.RoutedEvent> obiektów można zarejestrować w późniejszym czasie.</span><span class="sxs-lookup"><span data-stu-id="a1500-109">More <xref:System.Windows.RoutedEvent> objects can be registered later.</span></span> <span data-ttu-id="a1500-110">Ta metoda pobiera migawkę, a zbieranie zdarzeń kierowanych jest zapisywalne w okresie istnienia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a1500-110">This method gets a snapshot and the collection of routed events is writeable throughout an application's lifetime.</span></span> <span data-ttu-id="a1500-111">Zwracana kolekcja może być dość duża.</span><span class="sxs-lookup"><span data-stu-id="a1500-111">The collection returned might be quite large.</span></span> <span data-ttu-id="a1500-112">Nawet po prostu zliczanie zdarzeń, które są częścią [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], liczba kolekcji jest w dużej liczbie setek.</span><span class="sxs-lookup"><span data-stu-id="a1500-112">Even just counting the events that are part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], the collection count is in the high hundreds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutedEventsForOwner">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEventsForOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEventsForOwner (ownerType As Type) As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEventsForOwner(Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="static member GetRoutedEventsForOwner : Type -&gt; System.Windows.RoutedEvent[]" Usage="System.Windows.EventManager.GetRoutedEventsForOwner ownerType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType"><span data-ttu-id="a1500-113">Typ, za pomocą którego ma zostać rozpoczęte wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="a1500-113">The type to start the search with.</span></span> <span data-ttu-id="a1500-114">Klasy bazowe są uwzględniane w wyszukiwaniu.</span><span class="sxs-lookup"><span data-stu-id="a1500-114">Base classes are included in the search.</span></span></param>
        <summary><span data-ttu-id="a1500-115">Znajduje wszystkie rozesłane identyfikatory zdarzeń dla zdarzeń zarejestrowanych przy użyciu podanego typu właściciela.</span><span class="sxs-lookup"><span data-stu-id="a1500-115">Finds all routed event identifiers for events that are registered with the provided owner type.</span></span></summary>
        <returns><span data-ttu-id="a1500-116">Tablica pasujących identyfikatorów zdarzeń kierowanych w przypadku znalezienia dowolnego dopasowania; w przeciwnym razie. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="a1500-116">An array of matching routed event identifiers if any match is found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClassHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1500-117">Rejestruje procedurę obsługi klasy dla określonego zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a1500-117">Registers a class handler for a particular routed event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="static member RegisterClassHandler : Type * System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="System.Windows.EventManager.RegisterClassHandler (classType, routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="classType"><span data-ttu-id="a1500-118">Typ klasy, która deklaruje obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a1500-118">The type of the class that is declaring class handling.</span></span></param>
        <param name="routedEvent"><span data-ttu-id="a1500-119">Identyfikator rozesłanego zdarzenia do obsłużenia.</span><span class="sxs-lookup"><span data-stu-id="a1500-119">The routed event identifier of the event to handle.</span></span></param>
        <param name="handler"><span data-ttu-id="a1500-120">Odwołanie do implementacji procedury obsługi klas.</span><span class="sxs-lookup"><span data-stu-id="a1500-120">A reference to the class handler implementation.</span></span></param>
        <summary><span data-ttu-id="a1500-121">Rejestruje procedurę obsługi klasy dla określonego zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a1500-121">Registers a class handler for a particular routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1500-122">Obsługa klas to funkcja, która jest dostępna dla zdarzeń kierowanych, łącznie z dołączonymi zdarzeniami, które są implementowane za pomocą przekierowywania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a1500-122">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="a1500-123">Procedura obsługi klas jest taka jak statyczna procedura obsługi, która istnieje dla wszystkich wystąpień klasy.</span><span class="sxs-lookup"><span data-stu-id="a1500-123">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="a1500-124">Ponieważ procedura obsługi jest statyczna, nie można zmienić właściwości wystąpienia bezpośrednio z obsługą klasy, ale można uzyskać dostęp do wystąpień `sender` za pomocą parametru i/lub danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a1500-124">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="a1500-125">Procedury obsługi klas są wywoływane przed obsługą wystąpień.</span><span class="sxs-lookup"><span data-stu-id="a1500-125">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="a1500-126">Można zaimplementować procedurę obsługi klasy, która ma zachowanie podczas oznaczania zdarzenia jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a1500-126">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="a1500-127">W związku z tym programy obsługi wystąpień dla zdarzenia obsługiwanego przez klasę nie są wywoływane, chyba że programy obsługi wystąpień rejestrują się w odniesieniu do obsłużonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a1500-127">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="a1500-128">Wiele zdarzeń elementu podstawowego zapewnia klasy obsługujące metody wirtualne. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a1500-128">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="a1500-129">Zastępując te metody w klasach, które dziedziczą klasy bazowe, można zaimplementować obsługę klas bez wywoływania <xref:System.Windows.EventManager.RegisterClassHandler%2A> w konstruktorach statycznych.</span><span class="sxs-lookup"><span data-stu-id="a1500-129">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="a1500-130">Te metody obsługi klas zazwyczaj istnieją dla zdarzeń wejściowych i mają nazwy rozpoczynające się od "on" i kończą się nazwą zdarzenia, które są obsługiwane przez klasę.</span><span class="sxs-lookup"><span data-stu-id="a1500-130">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="a1500-131">Aby uzyskać więcej informacji na temat obsługi klas, zobacz [oznaczanie zdarzeń kierowanych jako obsłużone i obsługa klas](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="a1500-131">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="a1500-132">Za pomocą tej sygnatury, programy obsługi klas zostaną zarejestrowane do wywołania tylko w odpowiedzi na nieobsłużone zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a1500-132">Using this signature, class handlers will be registered to invoke only in response to unhandled events.</span></span> <span data-ttu-id="a1500-133">Można również zarejestrować procedury obsługi klasy do wywołania nawet wtedy, gdy argumenty zdarzeń są oznaczone jako obsługiwane, przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` ustawioną na `true`.</span><span class="sxs-lookup"><span data-stu-id="a1500-133">You can also register class handlers to invoke even if the event arguments are marked handled, by using the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature, with `handledEventsToo` set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1500-134">Poniższy przykład dodaje procedurę obsługi dla <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, wywołując. <xref:System.Windows.EventManager.RegisterClassHandler%2A></span><span class="sxs-lookup"><span data-stu-id="a1500-134">The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 [!code-csharp[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]
 [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#staticandregisterclasshandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="static member RegisterClassHandler : Type * System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="System.Windows.EventManager.RegisterClassHandler (classType, routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classType"><span data-ttu-id="a1500-135">Typ klasy, która deklaruje obsługę klas.</span><span class="sxs-lookup"><span data-stu-id="a1500-135">The type of the class that is declaring class handling.</span></span></param>
        <param name="routedEvent"><span data-ttu-id="a1500-136">Identyfikator rozesłanego zdarzenia do obsłużenia.</span><span class="sxs-lookup"><span data-stu-id="a1500-136">The routed event identifier of the event to handle.</span></span></param>
        <param name="handler"><span data-ttu-id="a1500-137">Odwołanie do implementacji procedury obsługi klas.</span><span class="sxs-lookup"><span data-stu-id="a1500-137">A reference to the class handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="a1500-138"><see langword="true" />Aby wywołać tę procedurę obsługi klasy, nawet jeśli argumenty zdarzenia kierowanego zostały oznaczone jako obsługiwane; <see langword="false" /> zachowanie domyślnego zachowania niewywoływania programu obsługi dla dowolnego oznaczonego zdarzenia obsługiwanego.</span><span class="sxs-lookup"><span data-stu-id="a1500-138"><see langword="true" /> to invoke this class handler even if arguments of the routed event have been marked as handled; <see langword="false" /> to retain the default behavior of not invoking the handler on any marked-handled event.</span></span></param>
        <summary><span data-ttu-id="a1500-139">Rejestruje procedurę obsługi dla konkretnego zdarzenia kierowanego z opcją obsługi zdarzeń, w przypadku których dane zdarzenia są już oznaczone jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a1500-139">Registers a class handler for a particular routed event, with the option to handle events where event data is already marked handled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1500-140">Obsługa klas to funkcja, która jest dostępna dla zdarzeń kierowanych, łącznie z dołączonymi zdarzeniami, które są implementowane za pomocą przekierowywania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a1500-140">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="a1500-141">Procedura obsługi klas jest taka jak statyczna procedura obsługi, która istnieje dla wszystkich wystąpień klasy.</span><span class="sxs-lookup"><span data-stu-id="a1500-141">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="a1500-142">Ponieważ procedura obsługi jest statyczna, nie można zmienić właściwości wystąpienia bezpośrednio z obsługą klasy, ale można uzyskać dostęp do wystąpień `sender` za pomocą parametru i/lub danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a1500-142">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="a1500-143">Procedury obsługi klas są wywoływane przed obsługą wystąpień.</span><span class="sxs-lookup"><span data-stu-id="a1500-143">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="a1500-144">Można zaimplementować procedurę obsługi klasy, która ma zachowanie podczas oznaczania zdarzenia jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a1500-144">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="a1500-145">W związku z tym programy obsługi wystąpień dla zdarzenia obsługiwanego przez klasę nie są wywoływane, chyba że programy obsługi wystąpień rejestrują się w odniesieniu do obsłużonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a1500-145">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="a1500-146">Wiele zdarzeń elementu podstawowego zapewnia klasy obsługujące metody wirtualne. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a1500-146">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="a1500-147">Zastępując te metody w klasach, które dziedziczą klasy bazowe, można zaimplementować obsługę klas bez wywoływania <xref:System.Windows.EventManager.RegisterClassHandler%2A> w konstruktorach statycznych.</span><span class="sxs-lookup"><span data-stu-id="a1500-147">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="a1500-148">Te metody obsługi klas zazwyczaj istnieją dla zdarzeń wejściowych i mają nazwy rozpoczynające się od "on" i kończą się nazwą zdarzenia, które są obsługiwane przez klasę.</span><span class="sxs-lookup"><span data-stu-id="a1500-148">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="a1500-149">Aby uzyskać więcej informacji na temat obsługi klas, zobacz [oznaczanie zdarzeń kierowanych jako obsłużone i obsługa klas](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="a1500-149">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="a1500-150">Za pomocą tej sygnatury, programy obsługi klasy mogą być zarejestrowane do wywołania w przypadku obsłużonych `handledEventsToo` zdarzeń przez `true`ustawienie ustawione na.</span><span class="sxs-lookup"><span data-stu-id="a1500-150">Using this signature, class handlers can be registered to invoke upon handled events, by setting `handledEventsToo` set to `true`.</span></span> <span data-ttu-id="a1500-151">Ogólnie rzecz biorąc, należy to zrobić tylko wtedy, gdy występuje znany problem z obsługą, który próbujesz obejść, taki jak wejściowy system obsługi zdarzeń myszy lub klawiatury.</span><span class="sxs-lookup"><span data-stu-id="a1500-151">Generally, you should do this only if there is a known handling issue you are trying to work around, such as input system handling from mouse or keyboard events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterRoutedEvent">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent RegisterRoutedEvent(string name, valuetype System.Windows.RoutingStrategy routingStrategy, class System.Type handlerType, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::RoutedEvent ^ RegisterRoutedEvent(System::String ^ name, System::Windows::RoutingStrategy routingStrategy, Type ^ handlerType, Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="static member RegisterRoutedEvent : string * System.Windows.RoutingStrategy * Type * Type -&gt; System.Windows.RoutedEvent" Usage="System.Windows.EventManager.RegisterRoutedEvent (name, routingStrategy, handlerType, ownerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="routingStrategy" Type="System.Windows.RoutingStrategy" />
        <Parameter Name="handlerType" Type="System.Type" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1500-152">Nazwa zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a1500-152">The name of the routed event.</span></span> <span data-ttu-id="a1500-153">Nazwa musi być unikatowa w obrębie typu właściciela i nie może <see langword="null" /> być ciągiem pustym.</span><span class="sxs-lookup"><span data-stu-id="a1500-153">The name must be unique within the owner type and cannot be <see langword="null" /> or an empty string.</span></span></param>
        <param name="routingStrategy"><span data-ttu-id="a1500-154">Strategia routingu zdarzenia jako wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a1500-154">The routing strategy of the event as a value of the enumeration.</span></span></param>
        <param name="handlerType"><span data-ttu-id="a1500-155">Typ procedury obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a1500-155">The type of the event handler.</span></span> <span data-ttu-id="a1500-156">Musi to być typ delegata i nie może <see langword="null" />być.</span><span class="sxs-lookup"><span data-stu-id="a1500-156">This must be a delegate type and cannot be <see langword="null" />.</span></span></param>
        <param name="ownerType"><span data-ttu-id="a1500-157">Typ klasy właściciela zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a1500-157">The owner class type of the routed event.</span></span> <span data-ttu-id="a1500-158">Nie może to <see langword="null" />być.</span><span class="sxs-lookup"><span data-stu-id="a1500-158">This cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a1500-159">Rejestruje nowe zdarzenie kierowane w [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] systemie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a1500-159">Registers a new routed event with the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event system.</span></span></summary>
        <returns><span data-ttu-id="a1500-160">Identyfikator nowo zarejestrowanego zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="a1500-160">The identifier for the newly registered routed event.</span></span> <span data-ttu-id="a1500-161">Ten obiekt identyfikatora może być teraz przechowywany jako pole statyczne w klasie, a następnie używany jako parametr metod, które dołączają procedury obsługi do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a1500-161">This identifier object can now be stored as a static field in a class and then used as a parameter for methods that attach handlers to the event.</span></span> <span data-ttu-id="a1500-162">Identyfikator zdarzenia kierowanego jest również używany dla innego systemu [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a1500-162">The routed event identifier is also used for other event system [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1500-163">Użyj wartości zwracanej przez tę metodę, aby utworzyć deklarację statyczną dla <xref:System.Windows.RoutedEvent> pola unikatowego identyfikatora.</span><span class="sxs-lookup"><span data-stu-id="a1500-163">Use the return value of this method to create the static declaration for a unique <xref:System.Windows.RoutedEvent> identifier field.</span></span> <span data-ttu-id="a1500-164">To pole powinno być przechowywane w obrębie typu właściciela.</span><span class="sxs-lookup"><span data-stu-id="a1500-164">This field should be stored within the owner type.</span></span>  
  
 <span data-ttu-id="a1500-165">Istnieje znaczna liczba konwencji i najlepszych rozwiązań związanych z sposobem, w jaki zdarzenia kierowane powinny być nazwane, zarejestrowane i udostępniane w klasie.</span><span class="sxs-lookup"><span data-stu-id="a1500-165">There are a considerable number of conventions and best practices associated with how routed events should be named, registered, and exposed in a class.</span></span> <span data-ttu-id="a1500-166">Aby uzyskać więcej informacji, zobacz [Omówienie zdarzeń kierowanych](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a1500-166">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
