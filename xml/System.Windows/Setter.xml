<Type Name="Setter" FullName="System.Windows.Setter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7d071ce472fb867cbcaa822290955616215f55c4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30715427" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Setter : System.Windows.SetterBase, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Setter extends System.Windows.SetterBase implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Setter" />
  <TypeSignature Language="VB.NET" Value="Public Class Setter&#xA;Inherits SetterBase&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Setter : System::Windows::SetterBase, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.SetterBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje metodę ustawiającą, które stosuje się wartości właściwości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>s i różne typy wyzwalaczy (klasy, które dziedziczą z <xref:System.Windows.TriggerBase>) użyj <xref:System.Windows.Setter>s, aby zastosować wartości właściwości.  
  
 Zauważ, że należy określić zarówno <xref:System.Windows.Setter.Property%2A> i <xref:System.Windows.Setter.Value%2A> właściwości <xref:System.Windows.Setter> dla metody ustawiającej znaczące. Jeśli nie ustawiono jedną lub obie właściwości, zostanie wygenerowany wyjątek.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano <xref:System.Windows.Style> zastosowanych do każdego <xref:System.Windows.Controls.TextBlock> elementu. To <xref:System.Windows.Style> dotyczy kilka wartości <xref:System.Windows.Controls.TextBlock> właściwości przy użyciu <xref:System.Windows.Setter>s.  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
 W poniższym przykładzie przedstawiono nazwane <xref:System.Windows.Style> dostępne <xref:System.Windows.Controls.Button> kontrolki. <xref:System.Windows.Style> Definiuje <xref:System.Windows.Trigger> element, który zmienia <xref:System.Windows.Controls.Control.Foreground%2A> właściwość przycisku po <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> jest właściwość `true`.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.ArgumentNullException">
      <see cref="P:System.Windows.Setter.Property" /> Właściwość nie może mieć wartości null.</exception>
    <exception cref="T:System.ArgumentException">Jeśli określony <see cref="P:System.Windows.Setter.Value" /> ma ustawioną wartość <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    <altmember cref="T:System.Windows.EventSetter" />
    <altmember cref="T:System.Windows.TriggerBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Setter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Setter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Setter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Setter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Setter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Setter (System.Windows.DependencyProperty property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Setter(System::Windows::DependencyProperty ^ property, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">
          <see cref="T:System.Windows.DependencyProperty" /> Dotyczyć <see cref="P:System.Windows.Setter.Value" /> do.</param>
        <param name="value">Wartość do zastosowania do właściwości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Setter" /> z określonej właściwości i wartości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Setter (System.Windows.DependencyProperty property, object value, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty property, object value, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As DependencyProperty, value As Object, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Setter(System::Windows::DependencyProperty ^ property, System::Object ^ value, System::String ^ targetName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">
          <see cref="T:System.Windows.DependencyProperty" /> Dotyczyć <see cref="P:System.Windows.Setter.Value" /> do.</param>
        <param name="value">Wartość do zastosowania do właściwości.</param>
        <param name="targetName">Nazwa węzła podrzędnego to <see cref="T:System.Windows.Setter" /> jest przeznaczony dla.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Setter" /> klasy z określonej właściwości, wartość oraz nazwa docelowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Setter.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); void set(System::Windows::DependencyProperty ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwość, do którego <see cref="P:System.Windows.Setter.Value" /> zostaną zastosowane.</summary>
        <value>A <see cref="T:System.Windows.DependencyProperty" /> do której <see cref="P:System.Windows.Setter.Value" /> zostaną zastosowane. Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zauważ, że należy określić zarówno <xref:System.Windows.Setter.Property%2A> i <xref:System.Windows.Setter.Value%2A> właściwości <xref:System.Windows.Setter> lub zostanie wygenerowany wyjątek.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano stylu, które zostaną zastosowane do każdego <xref:System.Windows.Controls.TextBlock> elementu.  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
 W poniższym przykładzie przedstawiono deklaracji style, które wpływają na <xref:System.Windows.Controls.Control.Background%2A> właściwość <xref:System.Windows.Controls.Control>. Należy pamiętać, że właściwość nazwy w tym przykładzie jest kwalifikowana nazwą klasy (<xref:System.Windows.Controls.Control>) ponieważ <xref:System.Windows.Style> nie określa <xref:System.Windows.Style.TargetType%2A>.  
  
 [!code-xaml[StyleOvw01#StyleSimple](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimple)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Windows.Setter.Property" /> Właściwość nie może być <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Określony <see cref="P:System.Windows.Setter.Property" /> właściwość nie może być tylko do odczytu.</exception>
        <exception cref="T:System.InvalidOperationException">Jeśli określony <see cref="P:System.Windows.Setter.Value" /> jest nieprawidłowa dla typu określonego <see cref="P:System.Windows.Setter.Property" />.</exception>
        <altmember cref="P:System.Windows.Setter.Value" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Setter.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">Obiekt, gdy rozszerzenie znaczników ustawia wartość.</param>
        <param name="eventArgs">Dane, które ma zastosowanie w przypadku przetwarzania rozszerzenia znaczników.</param>
        <summary>Obsługuje przypadków, gdy rozszerzenie znaczników zawiera wartość właściwości <see cref="T:System.Windows.Setter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to metoda odwołuje się zastosowane <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> atrybutu na poziomie klasy, co oznacza, że ta metoda przetwarza wszystkie próby ustawienia wartości <xref:System.Windows.Setter> z rozszerzeniem znacznika. Nie zwykle ta metoda jest wywoływana bezpośrednio.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTypeConverter">
      <MemberSignature Language="C#" Value="public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveTypeConverter(object targetObject, class System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Setter.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveTypeConverter (targetObject As Object, eventArgs As XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveTypeConverter(System::Object ^ targetObject, System::Windows::Markup::XamlSetTypeConverterEventArgs ^ eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">Obiekt, gdzie konwerter typów ustawia wartość.</param>
        <param name="eventArgs">Dane, które ma zastosowanie w przypadku przetwarzania konwertera typu.</param>
        <summary>Obsługuje przypadków, w którym konwertera typów zawiera wartość właściwości <see cref="T:System.Windows.Setter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to metoda odwołuje się zastosowane <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> atrybutu na poziomie klasy, co oznacza, że ta metoda przetwarza wszystkie próby ustawienia wartości <xref:System.Windows.Setter> za pomocą konwertera typu. Nie zwykle ta metoda jest wywoływana bezpośrednio.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Setter.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obiekt sygnały tego inicjowania jest uruchamiana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Setter> wystąpienia jest rzutowane na <xref:System.ComponentModel.ISupportInitialize> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Setter.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obiekt sygnały tego Inicjowanie zostało zakończone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Setter> wystąpienia jest rzutowane na <xref:System.ComponentModel.ISupportInitialize> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Setter.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę obiektu, to <see cref="T:System.Windows.Setter" /> jest przeznaczony dla.</summary>
        <value>Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę właściwość można ustawić na nazwę dowolny element w zakresie, w których stosowane jest kolekcja metody ustawiającej (kolekcja ta metoda ustawiająca jest częścią). Jest to zazwyczaj nazwanego elementu, który znajduje się w szablonie, który zawiera ta metoda ustawiająca.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Setter.TargetName%2A> jest używany dla wyzwalacza <xref:System.Windows.Setter> Aby określić, że <xref:System.Windows.Setter> jest przeznaczony dla <xref:System.Windows.Shapes.Ellipse> o nazwie `ThumbCover` w <xref:System.Windows.Controls.ControlTemplate>.  
  
 [!code-xaml[ColorPicker_snip#StyleTargetNameRef](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerApp/MyApp.xaml#styletargetnameref)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Setter.Value" />
        <altmember cref="P:System.Windows.Setter.Property" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Setter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.SetterTriggerConditionValueConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Property")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("TargetName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, aby zastosować do właściwości określonym przez to <see cref="T:System.Windows.Setter" />.</summary>
        <value>Wartość domyślna to <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Value"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object Value="value"/>  
```  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.Value>  
    value  
  </object.Value>  
</object>  
```  
  
<a name="xamlValues_Value"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *value*  
 Obiekt lub rozszerzenie znaczników. Zobacz [— rozszerzenie znaczników StaticResource](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).  
  
 Zauważ, że należy określić zarówno <xref:System.Windows.Setter.Property%2A> i <xref:System.Windows.Setter.Value%2A> właściwości <xref:System.Windows.Setter> lub zostanie wygenerowany wyjątek.  
  
 Powiązanie danych i zasobów dynamicznych w obrębie obiektu jest obsługiwany, jeśli określona wartość jest <xref:System.Windows.Freezable> obiektu. Zobacz [powiązanie — rozszerzenie znaczników](~/docs/framework/wpf/advanced/binding-markup-extension.md) i [— rozszerzenie znaczników DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano <xref:System.Windows.Style> zastosowanych do każdego <xref:System.Windows.Controls.TextBlock> elementu. Aby uzyskać pełny przykład, zobacz [wprowadzenie do stylów i tworzenia szablonów przykładowa](http://go.microsoft.com/fwlink/?LinkID=160010).  
  
 [!code-xaml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   
  
 W poniższym przykładzie zdefiniowano <xref:System.Windows.Style> z <xref:System.Windows.Setter>s odwołujący się do zasobów systemowych.  
  
 [!code-xaml[BtnStyles#1](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#1)]  
  
 W poniższym przykładzie zdefiniowano <xref:System.Windows.Style> dla <xref:System.Windows.Controls.Primitives.RepeatButton>.  
  
 [!code-xaml[ColorPicker_snip#StyleTargetNameRef](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerApp/MyApp.xaml#styletargetnameref)]  
  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Setter.Value%2A> właściwość, która używa <xref:System.Windows.Data.Binding> deklaracji. Aby uzyskać pełny przykład, zobacz [powiązania przykładowych weryfikacji](http://go.microsoft.com/fwlink/?LinkID=159972).  
  
 [!code-xaml[bindvalidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Jeśli określony <see cref="P:System.Windows.Setter.Value" /> ma ustawioną wartość <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
        <altmember cref="P:System.Windows.Setter.Property" />
      </Docs>
    </Member>
  </Members>
</Type>