<Type Name="IWeakEventListener" FullName="System.Windows.IWeakEventListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc2e6a04492a7e98297c411356edd79396b478a7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444520" /></Metadata><TypeSignature Language="C#" Value="public interface IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IWeakEventListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWeakEventListener" />
  <TypeSignature Language="F#" Value="type IWeakEventListener = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="41c51-101">Zapewnia obsługę nasłuchiwania zdarzeń dla klas, które oczekują na otrzymywanie zdarzeń za pomocą <see cref="T:System.Windows.WeakEventManager" />wzorca WeakEvent i.</span><span class="sxs-lookup"><span data-stu-id="41c51-101">Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a <see cref="T:System.Windows.WeakEventManager" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41c51-102">(Dyspozytor) przekazuje zdarzenie, <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> wywołując metodę dla klas implementujących ten interfejs i które zostały dodane jako detektory przez wywoływanie <xref:System.Windows.WeakEventManager> metod wcześniej. <xref:System.Windows.WeakEventManager></span><span class="sxs-lookup"><span data-stu-id="41c51-102">The <xref:System.Windows.WeakEventManager> (a dispatcher) forwards an event by calling the <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> method on classes that implement this interface, and that have been added as listeners by calling <xref:System.Windows.WeakEventManager> methods beforehand.</span></span>  
  
 <span data-ttu-id="41c51-103">Główną przyczyną następującego wzorca WeakEvent jest to, że źródło zdarzenia ma okres istnienia obiektu, który jest potencjalnie niezależny od detektorów zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="41c51-103">The principal reason for following the WeakEvent pattern is when the event source has an object lifetime that is potentially independent of the event listeners.</span></span> <span data-ttu-id="41c51-104">Przy użyciu centralnego wysyłania zdarzeń z <xref:System.Windows.WeakEventManager> programu programy obsługi odbiorników mogą być odzyskiwane jako elementy bezużyteczne (lub ręcznie przeczyszczane), nawet jeśli okres istnienia obiektu źródłowego wykracza poza odbiorniki.</span><span class="sxs-lookup"><span data-stu-id="41c51-104">Using the central event dispatching of a <xref:System.Windows.WeakEventManager> enables the handlers for listeners to be garbage collected (or manually purged) even if the source object lifetime extends beyond the listeners.</span></span> <span data-ttu-id="41c51-105">Z drugiej strony, normalne zdarzenie podłączenie przy `+=` użyciu lub równoważnej składni zdarzeń specyficznych dla języka powoduje, że potencjalnie połączone źródło może przechowywać silne odwołanie do programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="41c51-105">By contrast, a normal event hookup using `+=` or equivalent language-specific event syntax causes the potentially still-connected source to hold a strong reference to the handlers.</span></span> <span data-ttu-id="41c51-106">Dzięki temu odbiorniki nie są zbierane w odpowiednim czasie.</span><span class="sxs-lookup"><span data-stu-id="41c51-106">This keeps the listener references from being garbage collected in a timely fashion.</span></span>  
  
 <span data-ttu-id="41c51-107">Jedną z typowych sytuacji, w których relacje między źródłami i detektorami sugerują użycie tego wzorca, jest obsługa zdarzeń aktualizacji pochodzących ze źródeł dla powiązań danych.</span><span class="sxs-lookup"><span data-stu-id="41c51-107">One common situation where the relationships between sources and listeners suggests the use of this pattern is the handling of update events coming from sources for data bindings.</span></span>  
  
 <span data-ttu-id="41c51-108">Wzorca WeakEvent można użyć do nasłuchiwania zdarzeń zewnętrznych dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="41c51-108">You can use the WeakEvent pattern to listen for events that are external to your application.</span></span> <span data-ttu-id="41c51-109">Wystarczy tylko zdefiniować <xref:System.Windows.WeakEventManager> dla niego, zapewnić zachowanie nasłuchiwania w <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>, a następnie użyć <xref:System.Windows.WeakEventManager> do dołączenia odwołań do programu obsługi `+=`zamiast.</span><span class="sxs-lookup"><span data-stu-id="41c51-109">You only need to define a <xref:System.Windows.WeakEventManager> for it, provide listening behavior in <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>, and use the <xref:System.Windows.WeakEventManager> to attach the handler references rather than `+=`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.WeakEventManager" />
  </Docs>
  <Members>
    <Member MemberName="ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="public bool ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveWeakEvent : Type * obj * EventArgs -&gt; bool" Usage="iWeakEventListener.ReceiveWeakEvent (managerType, sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType"><span data-ttu-id="41c51-110">Typ <see cref="T:System.Windows.WeakEventManager" /> wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="41c51-110">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</span></span></param>
        <param name="sender"><span data-ttu-id="41c51-111">Obiekt, który pochodzi ze zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="41c51-111">Object that originated the event.</span></span></param>
        <param name="e"><span data-ttu-id="41c51-112">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="41c51-112">Event data.</span></span></param>
        <summary><span data-ttu-id="41c51-113">Odbiera zdarzenia z Menedżera zdarzeń scentralizowanych.</span><span class="sxs-lookup"><span data-stu-id="41c51-113">Receives events from the centralized event manager.</span></span></summary>
        <returns><span data-ttu-id="41c51-114"><see langword="true" />Jeśli odbiornik obsłużył zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="41c51-114"><see langword="true" /> if the listener handled the event.</span></span> <span data-ttu-id="41c51-115"><see cref="T:System.Windows.WeakEventManager" /> W[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] celu zarejestrowania odbiornika dla zdarzenia, którego odbiornik nie obsługuje, jest uznawany za błąd.</span><span class="sxs-lookup"><span data-stu-id="41c51-115">It is considered an error by the <see cref="T:System.Windows.WeakEventManager" /> handling in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] to register a listener for an event that the listener does not handle.</span></span> <span data-ttu-id="41c51-116">Bez względu na to, Metoda <see langword="false" /> powinna zostać zwrócona, Jeśli odbierze zdarzenie, którego nie rozpoznaje ani nie obsługuje.</span><span class="sxs-lookup"><span data-stu-id="41c51-116">Regardless, the method should return <see langword="false" /> if it receives an event that it does not recognize or handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="41c51-117">Poniższy przykład implementuje <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> , aby zapewnić obsługę wzorca WeakEvent dla dwóch zdarzeń `ClockwiseSpin` hipotetycznych `CounterclockwiseSpin` i że każdy z nich <xref:System.Windows.WeakEventManager> ma dedykowany (niepokazywany).</span><span class="sxs-lookup"><span data-stu-id="41c51-117">The following example implements <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> to provide WeakEvent pattern support for two hypothetical events `ClockwiseSpin` and `CounterclockwiseSpin` that each have a dedicated <xref:System.Windows.WeakEventManager> (not shown).</span></span> <span data-ttu-id="41c51-118">Ta implementacja wywołuje procedury obsługi klas dla każdego obsługiwanego zdarzenia, Rzutowanie danych zdarzenia (w tym przypadku dwa zdarzenia współużytkują typ `SpinEventArgs`danych zdarzenia).</span><span class="sxs-lookup"><span data-stu-id="41c51-118">This implementation calls class handler stubs for each supported event, casting the event data (in this case the two events share an event data type `SpinEventArgs`).</span></span> <span data-ttu-id="41c51-119">Implementacja zwraca wartość `false` , jeśli odebrane zdarzenie nie jest oczekiwane.</span><span class="sxs-lookup"><span data-stu-id="41c51-119">The implementation returns `false` if the event received is not one that is expected.</span></span>  
  
 [!code-csharp[CorePseudocode#IWeakEventListener](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#iweakeventlistener)]
 [!code-vb[CorePseudocode#IWeakEventListener](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#iweakeventlistener)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="41c51-120">Ta metoda jest przeznaczona do odbierania wszystkich możliwych zdarzeń, w których odbiornik znajduje się na liście odbiorników.</span><span class="sxs-lookup"><span data-stu-id="41c51-120">This method is intended to receive all possible events where the receiver is in a listener list.</span></span> <span data-ttu-id="41c51-121">Szczególnie jeśli implementacja dla klasy, która nasłuchuje dla więcej niż jednego zdarzenia, należy sprawdzić typ parametru przychodzącego <paramref name="managerType" /> , aby wiedzieć, które zdarzenie odnosi się do.</span><span class="sxs-lookup"><span data-stu-id="41c51-121">Particularly if implementing for a class that is listening for more than one event, you must check the type of the incoming <paramref name="managerType" /> parameter in order to know which event the call corresponds to.</span></span> <span data-ttu-id="41c51-122">Dlatego każde zdarzenie, które ma być częścią wzorca, musi mieć dedykowany <see cref="T:System.Windows.WeakEventManager" />.</span><span class="sxs-lookup"><span data-stu-id="41c51-122">This is why each event that is to be part of the pattern must have a dedicated <see cref="T:System.Windows.WeakEventManager" />.</span></span> <span data-ttu-id="41c51-123">Ponadto parametr jest typem ogólnym <see cref="T:System.EventArgs" />. <paramref name="e" /></span><span class="sxs-lookup"><span data-stu-id="41c51-123">Also, the <paramref name="e" /> parameter is typed as the general <see cref="T:System.EventArgs" />.</span></span> <span data-ttu-id="41c51-124">W związku z tym, w celu uzyskania określonych właściwości z danych zdarzeń, implementacja będzie musiała zostać rzutowana na konkretny typ danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="41c51-124">Therefore, in order get any specific properties out of the event data, your implementation will need to cast to the specific event data type.</span></span>  
  
<span data-ttu-id="41c51-125">Zwykle po sprawdzeniu tożsamości zdarzenia na podstawie <see cref="T:System.Windows.WeakEventManager" /> typu, implementacja powinna wywołać procedurę obsługi klasy prywatnej.</span><span class="sxs-lookup"><span data-stu-id="41c51-125">Typically, after checking for the identity of the event based on the <see cref="T:System.Windows.WeakEventManager" /> type, your implementation should call a private class handler.</span></span> <span data-ttu-id="41c51-126">Procedura obsługi klas może być w ten sam sposób obsługą klasy, która jest używana do obsługi tego zdarzenia dla odbiorników, które są dodawane przez konwencjonalny wzorzec zdarzeń do <see langword="+=" /> dodawania za pośrednictwem do zdarzenia w nadawcy.</span><span class="sxs-lookup"><span data-stu-id="41c51-126">Your class handler could conceivably be the very same class handler that is used to handle that event for listeners that are added through the conventional event pattern of adding via <see langword="+=" /> to the event on the sender.</span></span> <span data-ttu-id="41c51-127">W poniższej sekcji przedstawiono szablon szablonu o nieprawidłowym wdrożeniu.</span><span class="sxs-lookup"><span data-stu-id="41c51-127">The following example section provides a rough implementation template.</span></span></para></block>
        <altmember cref="T:System.Windows.WeakEventManager" />
      </Docs>
    </Member>
  </Members>
</Type>
