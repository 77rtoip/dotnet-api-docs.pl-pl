<Type Name="RoutedEventHandler" FullName="System.Windows.RoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f1f9099dd40ac32c2809e9c3dde9a8fb3c61fb1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30714410" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RoutedEventHandler(object sender, RoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RoutedEventHandler(sender As Object, e As RoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RoutedEventHandler(System::Object ^ sender, RoutedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Obiekt, w którym jest umocowana Obsługa zdarzeń.</param>
    <param name="e">Dane dotyczące zdarzenia.</param>
    <summary>Reprezentuje metodę, która będzie obsługiwać różne kierowane zdarzenia, które nie mają określonego zdarzenia danych po przekroczeniu dane, które są wspólne dla wszystkich kierowane zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.RoutedEventHandler> Delegata służy do kierowanego zdarzenia, które nie raportuje informacje specyficzne dla zdarzenia w danych zdarzenia. Istnieje wiele takich kierowane zdarzenia; wyraźne przykładów <xref:System.Windows.Controls.Primitives.ButtonBase.Click> i <xref:System.Windows.FrameworkElement.Loaded>.  
  
 Najbardziej warte wymienienia różnica między pisanie programu obsługi dla kierowanego zdarzenia, a nie ogólny [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzeń jest to, że `sender` zdarzenia (element, których program obsługi jest podłączony i wywołać) nie może być uważane za musi być źródłem zdarzenia. Źródło jest zgłaszany jako właściwość w danych zdarzenia (<xref:System.Windows.RoutedEventArgs.Source%2A>). Różnica między `sender` i <xref:System.Windows.RoutedEventArgs.Source%2A> powstaje na podstawie zdarzenia rozsyłane do różnych elementów podczas przechodzenia kierowanego zdarzenia za pośrednictwem drzewa.  
  
 Możesz użyć dowolnej `sender` lub <xref:System.Windows.RoutedEventArgs.Source%2A> dla obiekt odwołania jeśli celowo nie jesteś zainteresowany zachowanie routingu bezpośredniego lub propagacji kierowanego zdarzenia i zamierzasz obsługiwać zdarzenia rozsyłane na elementach, gdzie są najpierw wywoływane. W takim przypadku `sender` i <xref:System.Windows.RoutedEventArgs.Source%2A> są tego samego obiektu.  
  
 Jeśli zamierzasz korzystać z funkcji związanego z używaniem kierowane zdarzenia i odpowiednio zapisu programu obsługi, są dwie najważniejsze właściwości dane zdarzenia, które będą działać z podczas pisania programów obsługi zdarzeń <xref:System.Windows.RoutedEventArgs.Source%2A> i <xref:System.Windows.RoutedEventArgs.Handled%2A>.  
  
 Dla niektórych kombinacji zdarzenia wejściowe i [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] klasy formantów, element, który wywołuje zdarzenie nie jest pierwszym elementem, który ma możliwość jego obsługa. Jeśli zdarzenie wejściowe ma wersję Podgląd zdarzeń, następnie korzeń drzewa element ma pierwsza okazja, można ustawić <xref:System.Windows.RoutedEventArgs.Handled%2A> do `true` danych udostępnionych zdarzeń i może mieć wpływ, sposobie zgłaszania zdarzeń wejściowych pozostałe elementy w jego trasy zdarzenia. Obsługa zachowanie może dawać wrażenie, że nie jest konkretnym kierowanego zdarzenia podglądu uruchamiany zgodnie z oczekiwaniami. Aby uzyskać więcej informacji, zobacz [Podgląd zdarzeń](~/docs/framework/wpf/advanced/preview-events.md) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>