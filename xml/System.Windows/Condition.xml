<Type Name="Condition" FullName="System.Windows.Condition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5dc5fb90f65704a24fd1bdf5cf52b834ca6d894" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48716010" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Condition : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Condition extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Condition" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Condition&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Condition sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type Condition = class&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Przedstawia warunek dla <see cref="T:System.Windows.MultiTrigger" /> i <see cref="T:System.Windows.MultiDataTrigger" />, które mają zastosowanie zmiany do wartości właściwości, na podstawie zestawu warunków.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiTrigger>s i <xref:System.Windows.MultiDataTrigger>s umożliwiają ustawianie wartości właściwości, na podstawie zestawu warunków. Warunek jest spełniony, gdy wartość właściwości elementu danych lub element jest zgodny z określonym <xref:System.Windows.Condition.Value%2A> (odwoływać się do sprawdzania równości). Jeśli wszystkie określone warunki są spełnione, wyzwalacz jest stosowany.  
  
 Oto lista przypadków, które powodują, że wyjątek:  
  
-   Dla każdego <xref:System.Windows.Condition>, można ustawić tylko jedną <xref:System.Windows.Condition.Property%2A> właściwości lub <xref:System.Windows.Condition.Binding%2A> właściwości. Jeśli obie te właściwości są ustawione, jest zgłaszany wyjątek.  
  
-   Jeśli <xref:System.Windows.Condition> dotyczy <xref:System.Windows.MultiTrigger>, <xref:System.Windows.Condition.Property%2A> właściwość nie może mieć wartości null.  
  
-   Jeśli <xref:System.Windows.Condition> dotyczy <xref:System.Windows.MultiDataTrigger>, <xref:System.Windows.Condition.Binding%2A> właściwość nie może mieć wartości null.  
  
-   Wyjątek jest generowany, jeśli określony <xref:System.Windows.Condition.Value%2A> jest nieprawidłowa dla typu określonego <xref:System.Windows.Condition.Property%2A>.  
  
 Należy pamiętać, że jeśli <xref:System.Windows.Condition> dotyczy <xref:System.Windows.MultiTrigger>, <xref:System.Windows.Condition.Property%2A> i <xref:System.Windows.Condition.Value%2A> można ustawić właściwości. Jeśli jest on przeznaczony dla <xref:System.Windows.MultiDataTrigger>, <xref:System.Windows.Condition.Binding%2A> i <xref:System.Windows.Condition.Value%2A> można ustawić właściwości.  
  
   
  
## Examples  
 Poniższy przykład zawiera dwa <xref:System.Windows.MultiTrigger>s. Ustawia pierwszy **wartości elementu MinWidth** wartość właściwości, gdy **HasItems** właściwość ma wartość FAŁSZ i **szerokość** właściwość jest **automatycznie**. Drugim jest podobny, ale jest **MinHeight** właściwości.  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 Zobacz <xref:System.Windows.Condition.Binding%2A> właściwość Przykłady warunków używanych w <xref:System.Windows.MultiDataTrigger>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Condition" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Condition" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.Data.BindingBase binding, object conditionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Data.BindingBase binding, object conditionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.Data.BindingBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (binding As BindingBase, conditionValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition(System::Windows::Data::BindingBase ^ binding, System::Object ^ conditionValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Condition : System.Windows.Data.BindingBase * obj -&gt; System.Windows.Condition" Usage="new System.Windows.Condition (binding, conditionValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
        <Parameter Name="conditionValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="binding">Wiązanie, który określa właściwości warunku.</param>
        <param name="conditionValue">Wartość warunku.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Condition" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.DependencyProperty conditionProperty, object conditionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty conditionProperty, object conditionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionProperty As DependencyProperty, conditionValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition(System::Windows::DependencyProperty ^ conditionProperty, System::Object ^ conditionValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Condition : System.Windows.DependencyProperty * obj -&gt; System.Windows.Condition" Usage="new System.Windows.Condition (conditionProperty, conditionValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="conditionProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="conditionValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="conditionProperty">Właściwość warunku.</param>
        <param name="conditionValue">Wartość warunku.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Condition" /> klasy przy użyciu określonej właściwości i wartości. Ten konstruktor sprawdza poprawność parametrów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.DependencyProperty conditionProperty, object conditionValue, string sourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty conditionProperty, object conditionValue, string sourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionProperty As DependencyProperty, conditionValue As Object, sourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition(System::Windows::DependencyProperty ^ conditionProperty, System::Object ^ conditionValue, System::String ^ sourceName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Condition : System.Windows.DependencyProperty * obj * string -&gt; System.Windows.Condition" Usage="new System.Windows.Condition (conditionProperty, conditionValue, sourceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="conditionValue" Type="System.Object" />
        <Parameter Name="sourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionProperty">Właściwość warunku.</param>
        <param name="conditionValue">Wartość warunku.</param>
        <param name="sourceName">
          <c>x: Name</c> obiektu <c>conditionProperty</c>.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Condition" /> klasy przy użyciu określonej właściwości, wartość i nazwę obiektu źródłowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.Condition.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia powiązanie, który określa właściwości warunku. Dotyczy tylko <see cref="T:System.Windows.MultiDataTrigger" /> obiektów.</summary>
        <value>Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiDataTrigger>s umożliwiają ustawianie wartości właściwości, na podstawie wartości danych, która jest zwracana. Na przykład w przypadku wyświetlania listy elementów zadań możesz wyświetlić zadanie na tle czerwony, jeśli o wysokim priorytecie i nie ma nie wyglądał na więcej niż dwa tygodnie.  
  
 Utwórz powiązanie i użyj <xref:System.Windows.Data.Binding.Path%2A> właściwości powiązania z właściwością niektórych obiektów (obiektu źródłowego powiązania). Na przykład użytkownik może zostać powiązany z *priorytet* właściwość *zadań*. Aby uzyskać więcej informacji, zobacz [Przegląd wiązanie danych](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Należy pamiętać, że jeśli warunek <xref:System.Windows.MultiDataTrigger>, <xref:System.Windows.Condition.Binding%2A> i <xref:System.Windows.Condition.Value%2A> można ustawić właściwości. Ustawienie <xref:System.Windows.Condition.Property%2A> wartość mogłoby spowodować wyjątek w takiej sytuacji.  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *Deklaracja*  
 Deklaracja powiązania. Zobacz [powiązanie deklaracji — omówienie](~/docs/framework/wpf/data/binding-declarations-overview.md) Aby uzyskać więcej informacji.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> z <xref:System.Windows.Controls.ListBox> jest powiązany z *miejsc*, <xref:System.Collections.ObjectModel.ObservableCollection%601> z *miejscu* obiektów. *Miejsce* obiekty mają właściwości *nazwa* i *stanu*.  
  
 Każdy <xref:System.Windows.Controls.ListBoxItem> z <xref:System.Windows.Controls.ListBox> Wyświetla *miejscu* obiektu. <xref:System.Windows.Style> w przykładzie jest stosowana do każdego <xref:System.Windows.Controls.ListBoxItem>. <xref:System.Windows.Condition>s <xref:System.Windows.MultiDataTrigger> są określone taki sposób, że jeśli *nazwa* i *stanu* z *miejsce* element danych jest "Portland" i "OR", a następnie tło odpowiadające <xref:System.Windows.Controls.ListBoxItem> jest ustawiona na błękitny.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Condition.Property" />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); void set(System::Windows::DependencyProperty ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty with get, set" Usage="System.Windows.Condition.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwości warunku. Dotyczy tylko <see cref="T:System.Windows.MultiTrigger" /> obiektów.</summary>
        <value>Element <see cref="T:System.Windows.DependencyProperty" /> , który określa właściwości warunku. Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiTrigger>s umożliwiają ustawianie wartości właściwości, na podstawie zestawu warunków. Warunek jest spełniony, gdy wartość właściwości (określony przez <xref:System.Windows.Condition.Property%2A> właściwości) tego elementu jest zgodny z określonym <xref:System.Windows.Condition.Value%2A> (odwoływać się do sprawdzania równości). Jeśli wszystkie określone warunki są spełnione, wyzwalacz jest stosowany.  
  
 Jeśli `TargetType` nie jest ustawiony na styl szablonu, który zawiera wyzwalacze. Musisz kwalifikują się przy użyciu nazwy właściwości `ClassName.PropertyName` składni.  
  
 Należy pamiętać, że jeśli warunek <xref:System.Windows.MultiTrigger>, <xref:System.Windows.Condition.Property%2A> i <xref:System.Windows.Condition.Value%2A> można ustawić właściwości. Ustawienie <xref:System.Windows.Condition.Binding%2A> wartość mogłoby spowodować wyjątek w takiej sytuacji.  
  
 Aby uzyskać <xref:System.Windows.Condition>s w <xref:System.Windows.MultiDataTrigger>s, <xref:System.Windows.Condition.Binding%2A> właściwość powinna być używana zamiast tej właściwości.  
  
   
  
## Examples  
 Poniższy przykład zawiera dwa <xref:System.Windows.MultiTrigger>s. Ustawia pierwszy **wartości elementu MinWidth** wartość właściwości, gdy **HasItems** właściwość ma wartość FAŁSZ i **szerokość** właściwość jest **automatycznie**. Drugim jest podobny, ale jest **MinHeight** właściwości.  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Condition.Binding" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.Condition.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">Obiekt, w której rozszerzenie znaczników ustawia wartość.</param>
        <param name="eventArgs">Dane, który jest odpowiedni dla przetwarzania rozszerzenia znaczników.</param>
        <summary>Obsługuje przypadków, gdy rozszerzenie znaczników oferuje wartości dla właściwości <see cref="T:System.Windows.Condition" /> obiektu</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to metoda odwołuje się zastosowane <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> atrybut na poziomie klasy, co oznacza, że ta metoda przetwarza wszystkie próby do ustawiania wartości <xref:System.Windows.Condition> z rozszerzeniem znacznika. Użytkownik zwykle tej metody nie wywołuje bezpośrednio.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTypeConverter">
      <MemberSignature Language="C#" Value="public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveTypeConverter(object targetObject, class System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveTypeConverter (targetObject As Object, eventArgs As XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveTypeConverter(System::Object ^ targetObject, System::Windows::Markup::XamlSetTypeConverterEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveTypeConverter : obj * System.Windows.Markup.XamlSetTypeConverterEventArgs -&gt; unit" Usage="System.Windows.Condition.ReceiveTypeConverter (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">Obiekt, w którym konwertera typów ustawia wartość.</param>
        <param name="eventArgs">Dane, które jest odpowiednie dla typu konwertera przetwarzania.</param>
        <summary>Obsługuje przypadki, w którym konwertera typów oferuje wartości dla właściwości włączone <see cref="T:System.Windows.Condition" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to metoda odwołuje się zastosowane <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> atrybut na poziomie klasy, co oznacza, że ta metoda przetwarza wszystkie próby do ustawiania wartości <xref:System.Windows.Condition> za pomocą konwertera typów. Użytkownik zwykle tej metody nie wywołuje bezpośrednio.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceName : string with get, set" Usage="System.Windows.Condition.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę obiektu z właściwością, który powoduje, że skojarzone metody ustawiające mają być stosowane. Dotyczy tylko <see cref="T:System.Windows.MultiTrigger" /> obiektów.</summary>
        <value>Właściwość domyślna jest <see langword="null" />. Jeśli ta właściwość jest <see langword="null" />, a następnie skojarzone metody ustawiające mają być stosowane powoduje, że właściwości obiektu są różne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można ustawić tę właściwość na nazwę dowolnego elementu w zakresie, w której stosowana jest kolekcja wyzwalacza (kolekcja wyzwalacz, który zawiera ten stan jest częścią). Jest to zazwyczaj nazwanego elementu, który znajduje się w szablonie, która zawiera wyzwalacz.  
  
 Nadaj nazwę obiektu przy użyciu [x: Name — dyrektywa](~/docs/framework/xaml-services/x-name-directive.md) składni.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Po <see cref="T:System.Windows.Condition" /> jest używana, nie można modyfikować.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powiadamia obiekt tego inicjowania jest uruchamiana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Condition> wystąpienia jest rzutowany na <xref:System.ComponentModel.ISupportInitialize> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powiadamia obiekt tego Inicjowanie zostało zakończone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Windows.Condition> wystąpienia jest rzutowany na <xref:System.ComponentModel.ISupportInitialize> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Condition.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.SetterTriggerConditionValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość warunku.</summary>
        <value>
          <see cref="P:System.Windows.Condition.Value" /> Właściwość nie może mieć wartości null dla danego <see cref="T:System.Windows.Condition" />.  
  
Zobacz także sekcję wyjątki. Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiTrigger>s i <xref:System.Windows.MultiDataTrigger>s umożliwiają ustawianie wartości właściwości, na podstawie zestawu warunków. Warunek jest spełniony, gdy wartość właściwości elementu danych lub element jest zgodny z określonym <xref:System.Windows.Condition.Value%2A>. Jeśli wszystkie określone warunki są spełnione, wyzwalacz jest stosowany. Jeśli wszystkie określone warunki są spełnione, wyzwalacz jest stosowany.  
  
   
  
## Examples  
 Poniższy przykład zawiera dwa <xref:System.Windows.MultiTrigger>s. Ustawia pierwszy **wartości elementu MinWidth** wartość właściwości, gdy **HasItems** właściwość ma wartość FAŁSZ i **szerokość** właściwość jest **automatycznie**. Drugim jest podobny, ale jest **MinHeight** właściwości.  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 Zobacz <xref:System.Windows.Condition.Binding%2A> właściwość Przykłady warunków używanych w <xref:System.Windows.MultiDataTrigger>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wyrażenia nie są obsługiwane.</exception>
      </Docs>
    </Member>
  </Members>
</Type>