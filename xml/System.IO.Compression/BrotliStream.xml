<Type Name="BrotliStream" FullName="System.IO.Compression.BrotliStream">
  <TypeSignature Language="C#" Value="public sealed class BrotliStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BrotliStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.BrotliStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BrotliStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class BrotliStream sealed : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type BrotliStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="66265-101">Zapewnia metody i właściwości używane do kompresowania i dekompresowania strumieni przy użyciu specyfikacji formatu danych Brotli.</span><span class="sxs-lookup"><span data-stu-id="66265-101">Provides methods and properties used to compress and decompress streams by using the Brotli data format specification.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BrotliStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BrotliStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.BrotliStream : System.IO.Stream * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.BrotliStream" Usage="new System.IO.Compression.BrotliStream (stream, compressionLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="66265-102">Strumień do skompresowania.</span><span class="sxs-lookup"><span data-stu-id="66265-102">The stream to compress.</span></span></param>
        <param name="compressionLevel"><span data-ttu-id="66265-103">Jedna z wartości wyliczenia, która wskazuje, czy naciskać szybkość lub kompresję podczas kompresowania strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-103">One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</span></span></param>
        <summary><span data-ttu-id="66265-104">Inicjuje nowe wystąpienie <see cref="T:System.IO.Compression.BrotliStream" /> klasy przy użyciu określonego strumienia i poziomu kompresji.</span><span class="sxs-lookup"><span data-stu-id="66265-104">Initializes a new instance of the <see cref="T:System.IO.Compression.BrotliStream" /> class by using the specified stream and compression level.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BrotliStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BrotliStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.BrotliStream : System.IO.Stream * System.IO.Compression.CompressionMode -&gt; System.IO.Compression.BrotliStream" Usage="new System.IO.Compression.BrotliStream (stream, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="66265-105">Strumień do skompresowania.</span><span class="sxs-lookup"><span data-stu-id="66265-105">The stream to compress.</span></span></param>
        <param name="mode"><span data-ttu-id="66265-106">Jedna z wartości wyliczenia, która wskazuje, czy skompresować lub zdekompresować strumień.</span><span class="sxs-lookup"><span data-stu-id="66265-106">One of the enumeration values that indicates whether to compress or decompress the stream.</span></span></param>
        <summary><span data-ttu-id="66265-107">Inicjuje nowe wystąpienie <see cref="T:System.IO.Compression.BrotliStream" /> klasy przy użyciu określonego trybu strumienia i kompresji.</span><span class="sxs-lookup"><span data-stu-id="66265-107">Initializes a new instance of the <see cref="T:System.IO.Compression.BrotliStream" /> class by using the specified stream and compression mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BrotliStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BrotliStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionLevel compressionLevel, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.BrotliStream : System.IO.Stream * System.IO.Compression.CompressionLevel * bool -&gt; System.IO.Compression.BrotliStream" Usage="new System.IO.Compression.BrotliStream (stream, compressionLevel, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="66265-108">Strumień do skompresowania.</span><span class="sxs-lookup"><span data-stu-id="66265-108">The stream to compress.</span></span></param>
        <param name="compressionLevel"><span data-ttu-id="66265-109">Jedna z wartości wyliczenia, która wskazuje, czy naciskać szybkość lub kompresję podczas kompresowania strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-109">One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="66265-110"><see langword="true" />Aby pozostawić strumień otwarty po usunięciu <see cref="T:System.IO.Compression.BrotliStream" /> obiektu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="66265-110"><see langword="true" /> to leave the stream open after disposing the <see cref="T:System.IO.Compression.BrotliStream" /> object; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="66265-111">Inicjuje nowe wystąpienie <see cref="T:System.IO.Compression.BrotliStream" /> klasy przy użyciu określonego strumienia i poziomu kompresji, opcjonalnie pozostawiając otwarcie strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-111">Initializes a new instance of the <see cref="T:System.IO.Compression.BrotliStream" /> class by using the specified stream and compression level, and optionally leaves the stream open.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BrotliStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BrotliStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionMode mode, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.BrotliStream : System.IO.Stream * System.IO.Compression.CompressionMode * bool -&gt; System.IO.Compression.BrotliStream" Usage="new System.IO.Compression.BrotliStream (stream, mode, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="66265-112">Strumień do skompresowania.</span><span class="sxs-lookup"><span data-stu-id="66265-112">The stream to compress.</span></span></param>
        <param name="mode"><span data-ttu-id="66265-113">Jedna z wartości wyliczenia, która wskazuje, czy skompresować lub zdekompresować strumień.</span><span class="sxs-lookup"><span data-stu-id="66265-113">One of the enumeration values that indicates whether to compress or decompress the stream.</span></span></param>
        <param name="leaveOpen">To be added.</param>
        <summary><span data-ttu-id="66265-114">Inicjuje nowe wystąpienie <see cref="T:System.IO.Compression.BrotliStream" /> klasy przy użyciu określonego trybu strumienia i kompresji, opcjonalnie pozostawiając otwarcie strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-114">Initializes a new instance of the <see cref="T:System.IO.Compression.BrotliStream" /> class by using the specified stream and compression mode, and optionally leaves the stream open.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.Compression.BrotliStream.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66265-115">Pobiera odwołanie do źródłowego strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-115">Gets a reference to the underlying stream.</span></span></summary>
        <value><span data-ttu-id="66265-116">Obiekt strumienia, który reprezentuje strumień źródłowy.</span><span class="sxs-lookup"><span data-stu-id="66265-116">A stream object that represents the underlying stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="66265-117">Strumień źródłowy jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="66265-117">The underlying stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="brotliStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66265-118">Bufor, z którego będą odczytywane dane.</span><span class="sxs-lookup"><span data-stu-id="66265-118">The buffer from which data will be read.</span></span></param>
        <param name="offset"><span data-ttu-id="66265-119">Przesunięcie bajtu w <paramref name="array" /> czasie, w którym ma zostać rozpoczęte odczytywanie danych ze strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-119">The byte offset in <paramref name="array" /> at which to begin reading data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="66265-120">Do maksymalnej liczby bajtów do odczytu.</span><span class="sxs-lookup"><span data-stu-id="66265-120">To maximum number of bytes to read.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="66265-121">Opcjonalne asynchroniczne wywołanie zwrotne, które ma być wywoływane po zakończeniu operacji odczytu.</span><span class="sxs-lookup"><span data-stu-id="66265-121">An optional asynchronous callback, to be called when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="66265-122">Obiekt udostępniony przez użytkownika, który odróżnia to konkretne asynchroniczne żądanie odczytu z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="66265-122">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="66265-123">Rozpoczęcie asynchronicznej operacji odczytu.</span><span class="sxs-lookup"><span data-stu-id="66265-123">Begins an asynchronous read operation.</span></span> <span data-ttu-id="66265-124">(Rozważ użycie <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> metody).</span><span class="sxs-lookup"><span data-stu-id="66265-124">(Consider using the <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="66265-125">Obiekt, który reprezentuje asynchroniczną operację odczytu, która nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="66265-125">An object that represents the asynchronous read operation, which could still be pending.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="66265-126">Metoda próbowała odczytać asynchronicznie poza końcem strumienia lub wystąpił błąd dysku.</span><span class="sxs-lookup"><span data-stu-id="66265-126">The method tried to read asynchronously past the end of the stream, or a disk error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66265-127">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="66265-127">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="66265-128">Metody zostały wywołane po zamknięciu strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-128">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="66265-129">Bieżąca <see cref="T:System.IO.Compression.BrotliStream" /> implementacja nie obsługuje operacji odczytu.</span><span class="sxs-lookup"><span data-stu-id="66265-129">The current <see cref="T:System.IO.Compression.BrotliStream" /> implementation does not support the read operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66265-130">Nie można ukończyć tego wywołania.</span><span class="sxs-lookup"><span data-stu-id="66265-130">This call cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="brotliStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66265-131">Bufor, z którego będą zapisywane dane.</span><span class="sxs-lookup"><span data-stu-id="66265-131">The buffer from which data will be written.</span></span></param>
        <param name="offset"><span data-ttu-id="66265-132">Przesunięcie bajtu, <paramref name="array" /> w którym rozpocznie się zapisywanie danych ze strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-132">The byte offset in <paramref name="array" /> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="66265-133">Maksymalna liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="66265-133">The maximum number of bytes to write.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="66265-134">Opcjonalne asynchroniczne wywołanie zwrotne, które ma być wywoływane, gdy operacja zapisu zostanie zakończona.</span><span class="sxs-lookup"><span data-stu-id="66265-134">An optional asynchronous callback, to be called when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="66265-135">Obiekt udostępniony przez użytkownika, który odróżnia to konkretne asynchroniczne żądanie zapisu z innych żądań.</span><span class="sxs-lookup"><span data-stu-id="66265-135">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="66265-136">Rozpoczyna asynchroniczne operacje zapisu.</span><span class="sxs-lookup"><span data-stu-id="66265-136">Begins an asynchronous write operation.</span></span> <span data-ttu-id="66265-137">(Rozważ użycie <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> metody).</span><span class="sxs-lookup"><span data-stu-id="66265-137">(Consider using the <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="66265-138">Obiekt, który reprezentuje asynchroniczną operację zapisu, która nadal może być w stanie oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="66265-138">An object that represents the asynchronous write operation, which could still be pending.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="66265-139">Metoda próbowała zapisać asynchronicznie poza końcem strumienia lub wystąpił błąd dysku.</span><span class="sxs-lookup"><span data-stu-id="66265-139">The method tried to write asynchronously past the end of the stream, or a disk error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66265-140">Co najmniej jeden z argumentów jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="66265-140">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="66265-141">Metody zostały wywołane po zamknięciu strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-141">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="66265-142">Bieżąca <see cref="T:System.IO.Compression.BrotliStream" /> implementacja nie obsługuje operacji zapisu.</span><span class="sxs-lookup"><span data-stu-id="66265-142">The current <see cref="T:System.IO.Compression.BrotliStream" /> implementation does not support the write operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66265-143">Nie można wykonać operacji zapisu, ponieważ strumień jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="66265-143">The write operation cannot be performed because the stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.Compression.BrotliStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66265-144">Pobiera wartość wskazującą, czy strumień obsługuje odczytywanie podczas dekompresowania pliku.</span><span class="sxs-lookup"><span data-stu-id="66265-144">Gets a value indicating whether the stream supports reading while decompressing a file.</span></span></summary>
        <value><span data-ttu-id="66265-145"><see langword="true" />Jeśli wartość jest <see langword="Decompress," /> i źródłowy strumień obsługuje odczytywanie i nie jest zamknięty; w przeciwnym razie <see langword="false" />,. <see cref="T:System.IO.Compression.CompressionMode" /></span><span class="sxs-lookup"><span data-stu-id="66265-145"><see langword="true" /> if the <see cref="T:System.IO.Compression.CompressionMode" /> value is <see langword="Decompress," /> and the underlying stream supports reading and is not closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.Compression.BrotliStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66265-146">Pobiera wartość wskazującą, czy strumień obsługuje wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="66265-146">Gets a value indicating whether the stream supports seeking.</span></span></summary>
        <value><span data-ttu-id="66265-147"><see langword="false" />we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="66265-147"><see langword="false" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.Compression.BrotliStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66265-148">Pobiera wartość wskazującą, czy strumień obsługuje zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="66265-148">Gets a value indicating whether the stream supports writing.</span></span></summary>
        <value><span data-ttu-id="66265-149"><see langword="true" />Jeśli wartość jest <see langword="Compress" />, a źródłowy strumień obsługuje funkcję pisania i nie jest zamknięty; w przeciwnym razie <see langword="false" />,. <see cref="T:System.IO.Compression.CompressionMode" /></span><span class="sxs-lookup"><span data-stu-id="66265-149"><see langword="true" /> if the <see cref="T:System.IO.Compression.CompressionMode" /> value is <see langword="Compress" />, and the underlying stream supports writing and is not closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="brotliStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="66265-150"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="66265-150"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="66265-151">Zwalnia niezarządzane zasoby używane przez <see cref="T:System.IO.Compression.BrotliStream" /> program i opcjonalnie zwalnia zarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="66265-151">Releases the unmanaged resources used by the <see cref="T:System.IO.Compression.BrotliStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="brotliStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66265-152">Asynchronicznie zwalnia niezarządzane zasoby używane przez <see cref="T:System.IO.Compression.BrotliStream" />.</span><span class="sxs-lookup"><span data-stu-id="66265-152">Asynchronously releases the unmanaged resources used by the <see cref="T:System.IO.Compression.BrotliStream" />.</span></span></summary>
        <returns><span data-ttu-id="66265-153">Zadanie, które reprezentuje asynchroniczną operację Dispose.</span><span class="sxs-lookup"><span data-stu-id="66265-153">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown">
  <![CDA

## Remarks

<span data-ttu-id="66265-154">`DisposeAsync` Metoda umożliwia wykonywanie operacji Dispose intensywnie korzystających z zasobów bez blokowania wątku głównego.</span><span class="sxs-lookup"><span data-stu-id="66265-154">The `DisposeAsync` method lets you perform a resource-intensive dispose operation without blocking the main thread.</span></span> <span data-ttu-id="66265-155">Ten aspekt dotyczący wydajności jest szczególnie ważny w aplikacji [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] lub aplikacjach [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], gdzie czasochłonne operacje strumieniowe mogą zablokować wątek interfejsu użytkownika i spowodować, że aplikacja będzie wyglądać, jakby przestała działać.</span><span class="sxs-lookup"><span data-stu-id="66265-155">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="66265-156">Metody asynchroniczne są używane w połączeniu z `async` słowami kluczowymi i `await` w Visual Basic C#i.</span><span class="sxs-lookup"><span data-stu-id="66265-156">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span> 

<span data-ttu-id="66265-157">Ta metoda usuwa strumień Brotli przez zapisanie zmian w magazynie zapasowym i zamknięcie strumienia w celu zwolnienia zasobów.</span><span class="sxs-lookup"><span data-stu-id="66265-157">This method disposes the Brotli stream by writing any changes to the backing store and closing the stream to release resources.</span></span>   

<span data-ttu-id="66265-158">Wywołanie `DisposeAsync` zezwala na przydzielenie zasobów używanych <xref:System.IO.Compression.BrotliStream> przez program do innych celów.</span><span class="sxs-lookup"><span data-stu-id="66265-158">Calling `DisposeAsync` allows the resources used by the <xref:System.IO.Compression.BrotliStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="66265-159">Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="66265-159">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="brotliStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="66265-160">Odwołanie do oczekującego żądania asynchronicznego do zakończenia.</span><span class="sxs-lookup"><span data-stu-id="66265-160">The reference to the pending asynchronous request to finish.</span></span></param>
        <summary><span data-ttu-id="66265-161">Czeka na zakończenie oczekujących asynchronicznych operacji odczytu.</span><span class="sxs-lookup"><span data-stu-id="66265-161">Waits for the pending asynchronous read to complete.</span></span> <span data-ttu-id="66265-162">(Rozważ użycie <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> metody).</span><span class="sxs-lookup"><span data-stu-id="66265-162">(Consider using the <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="66265-163">Liczba bajtów odczytanych ze strumienia, z zakresu od 0 (zero) do liczby żądanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="66265-163">The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</span></span> <span data-ttu-id="66265-164"><see cref="T:System.IO.Compression.BrotliStream" />Zwraca wartość 0 tylko na końcu strumienia; w przeciwnym razie blokuje do momentu udostępnienia co najmniej jednego bajtu.</span><span class="sxs-lookup"><span data-stu-id="66265-164"><see cref="T:System.IO.Compression.BrotliStream" /> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66265-165"><paramref name="asyncResult" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66265-165"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66265-166"><paramref name="asyncResult" />nie pochodzi z <see cref="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> metody w bieżącym strumieniu.</span><span class="sxs-lookup"><span data-stu-id="66265-166"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66265-167">Nie można wykonać operacji końcowej, ponieważ strumień jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="66265-167">The end operation cannot be performed because the stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="brotliStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="66265-168">Obiekt, który reprezentuje wywołanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="66265-168">The object that represents the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="66265-169">Obsługuje koniec asynchronicznej operacji zapisu.</span><span class="sxs-lookup"><span data-stu-id="66265-169">Handles the end of an asynchronous write operation.</span></span> <span data-ttu-id="66265-170">(Rozważ użycie <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> metody).</span><span class="sxs-lookup"><span data-stu-id="66265-170">(Consider using the <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66265-171">Strumień źródłowy jest zamknięty lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66265-171">The underlying stream is closed or <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="brotliStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="66265-172">Bieżąca implementacja tej metody nie ma funkcji.</span><span class="sxs-lookup"><span data-stu-id="66265-172">The current implementation of this method has no functionality.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="brotliStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="66265-173">Token do monitorowania żądań anulowania.</span><span class="sxs-lookup"><span data-stu-id="66265-173">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="66265-174">Wartość domyślna to <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="66265-174">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="66265-175">Asynchronicznie czyści wszystkie bufory dla tego strumienia Brotli, powoduje, że wszystkie buforowane dane są zapisywane na podstawowym urządzeniu i monitoruje żądania anulowania.</span><span class="sxs-lookup"><span data-stu-id="66265-175">Asynchronously clears all buffers for this Brotli stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="66265-176">Zadanie, które reprezentuje asynchroniczną operację opróżniania.</span><span class="sxs-lookup"><span data-stu-id="66265-176">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="66265-177">Jeśli operacja zostanie anulowana przed zakończeniem, zwrócone zadanie zawiera <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> wartość <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="66265-177">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.Compression.BrotliStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66265-178">Ta właściwość nie jest obsługiwana i zawsze zgłasza <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="66265-178">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="66265-179">Wartość długa.</span><span class="sxs-lookup"><span data-stu-id="66265-179">A long value.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="66265-180">Ta właściwość nie jest obsługiwana w tym strumieniu.</span><span class="sxs-lookup"><span data-stu-id="66265-180">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.Compression.BrotliStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="66265-181">Ta właściwość nie jest obsługiwana i zawsze zgłasza <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="66265-181">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="66265-182">Wartość długa.</span><span class="sxs-lookup"><span data-stu-id="66265-182">A long value.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="66265-183">Ta właściwość nie jest obsługiwana w tym strumieniu.</span><span class="sxs-lookup"><span data-stu-id="66265-183">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="brotliStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66265-184">Region pamięci.</span><span class="sxs-lookup"><span data-stu-id="66265-184">A region of memory.</span></span> <span data-ttu-id="66265-185">Gdy ta metoda zwraca, zawartość tego regionu jest zastępowana przez Bajty odczytane z bieżącego źródła.</span><span class="sxs-lookup"><span data-stu-id="66265-185">When this method returns, the contents of this region are replaced by the bytes read from the current source.</span></span></param>
        <summary><span data-ttu-id="66265-186">Odczytuje sekwencję bajtów z bieżącego strumienia Brotli do zakresu bajtów i przesuwa pozycję w strumieniu Brotli przez liczbę odczytanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="66265-186">Reads a sequence of bytes from the current Brotli stream to a byte span and advances the position within the Brotli stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="66265-187">Całkowita liczba bajtów odczytywanych w buforze.</span><span class="sxs-lookup"><span data-stu-id="66265-187">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="66265-188">Wartość ta może być mniejsza niż liczba bajtów przypadających w buforze, jeśli wiele bajtów nie jest obecnie dostępna lub zero (0), jeśli osiągnięto koniec strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-188">This can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="66265-189"><xref:System.IO.Compression.BrotliStream.CanRead%2A> Użyj właściwości, aby określić, czy bieżące wystąpienie obsługuje odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="66265-189">Use the <xref:System.IO.Compression.BrotliStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="66265-190">Użyj metody <xref:System.IO.Compression.BrotliStream.ReadAsync%2A> , aby odczytywać asynchronicznie z bieżącego strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-190">Use the <xref:System.IO.Compression.BrotliStream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>

<span data-ttu-id="66265-191">Ta metoda odczytaje maksymalnie `buffer.Length` bajtów z bieżącego strumienia i zapisuje je w. `buffer`</span><span class="sxs-lookup"><span data-stu-id="66265-191">This method read a maximum of `buffer.Length` bytes from the current stream and store them in `buffer`.</span></span> <span data-ttu-id="66265-192">Bieżąca pozycja w strumieniu Brotli jest zaawansowana przez liczbę odczytanych bajtów; Jeśli jednak wystąpi wyjątek, bieżąca pozycja w strumieniu Brotli pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="66265-192">The current position within the Brotli stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the Brotli stream remains unchanged.</span></span> <span data-ttu-id="66265-193">Ta metoda zostanie Zablokowani do momentu odczytania co najmniej jednego bajtu danych, w przypadku, gdy żadne dane nie są dostępne.</span><span class="sxs-lookup"><span data-stu-id="66265-193">This method will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="66265-194">`Read`Zwraca wartość 0 tylko wtedy, gdy nie ma więcej danych w strumieniu i nie ma więcej oczekiwanych (takich jak zamknięte gniazdo lub koniec pliku).</span><span class="sxs-lookup"><span data-stu-id="66265-194">`Read` returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="66265-195">Metoda jest bezpłatna, aby zwrócić mniejszą liczbę bajtów niż żądana, nawet jeśli koniec strumienia nie został osiągnięty.</span><span class="sxs-lookup"><span data-stu-id="66265-195">The method is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>

 <span data-ttu-id="66265-196">Służy <xref:System.IO.BinaryReader> do odczytywania typów danych pierwotnych.</span><span class="sxs-lookup"><span data-stu-id="66265-196">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="brotliStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66265-197">Tablica służąca do przechowywania dekompresowanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="66265-197">The array used to store decompressed bytes.</span></span></param>
        <param name="offset"><span data-ttu-id="66265-198">Przesunięcie bajtu w <paramref name="buffer" /> czasie, w którym zostaną umieszczone bajty odczytu.</span><span class="sxs-lookup"><span data-stu-id="66265-198">The byte offset in <paramref name="buffer" /> at which the read bytes will be placed.</span></span></param>
        <param name="count"><span data-ttu-id="66265-199">Maksymalna liczba skompresowanych bajtów do odczytu.</span><span class="sxs-lookup"><span data-stu-id="66265-199">The maximum number of decompressed bytes to read.</span></span></param>
        <summary><span data-ttu-id="66265-200">Odczytuje liczbę skompresowanych bajtów do określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="66265-200">Reads a number of decompressed bytes into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="66265-201">Liczba bajtów, które zostały oddzielone do tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="66265-201">The number of bytes that were decompressed into the byte array.</span></span> <span data-ttu-id="66265-202">Jeśli osiągnięto koniec strumienia, zwracana jest wartość zero lub Liczba odczytanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="66265-202">If the end of the stream has been reached, zero or the number of bytes read is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="66265-203"><paramref name="buffer" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="66265-203"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="66265-204"><see cref="T:System.IO.Compression.CompressionMode" /> Wartość była<see langword="Compress" /> podczas tworzenia obiektu lub istnieje już aktywna operacja asynchroniczna dla tego strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-204">The <see cref="T:System.IO.Compression.CompressionMode" /> value was <see langword="Compress" /> when the object was created, or there is already an active asynchronous operation on this stream.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="66265-205"><paramref name="offset" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="66265-205"><paramref name="offset" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="66265-206">Długość minus punkt początkowy indeksu jest mniejsza niż <paramref name="count" />. <paramref name="buffer" /></span><span class="sxs-lookup"><span data-stu-id="66265-206">The <paramref name="buffer" /> length minus the index starting point is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.IO.InvalidDataException"><span data-ttu-id="66265-207">Dane mają nieprawidłowy format.</span><span class="sxs-lookup"><span data-stu-id="66265-207">The data is in an invalid format.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="66265-208">Źródłowy strumień ma wartość null lub jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="66265-208">The underlying stream is null or closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="brotliStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66265-209">Region pamięci, w którym mają zostać zapisane dane.</span><span class="sxs-lookup"><span data-stu-id="66265-209">The region of memory to write the data into.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="66265-210">Token do monitorowania żądań anulowania.</span><span class="sxs-lookup"><span data-stu-id="66265-210">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="66265-211">Wartość domyślna to <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="66265-211">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="66265-212">Asynchronicznie odczytuje sekwencję bajtów z bieżącego strumienia Brotli, zapisuje je w zakresie pamięci bajtowej, przesuwa pozycję w strumieniu Brotli przez liczbę odczytanych bajtów i monitoruje żądania anulowania.</span><span class="sxs-lookup"><span data-stu-id="66265-212">Asynchronously reads a sequence of bytes from the current Brotli stream, writes them to a byte memory range, advances the position within the Brotli stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="66265-213">Zadanie, które reprezentuje asynchroniczną operację odczytu, która otacza całkowitą liczbę bajtów odczytywanych w buforze.</span><span class="sxs-lookup"><span data-stu-id="66265-213">A task that represents the asynchronous read operation, which wraps the total number of bytes read into the buffer.</span></span> <span data-ttu-id="66265-214">Wartość wynikowa może być mniejsza niż liczba bajtów przydzieloną w buforze, jeśli wiele bajtów nie jest obecnie dostępna lub jeśli osiągnięto koniec strumienia Brotli, może to być 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="66265-214">The result value can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or it can be 0 (zero) if the end of the Brotli stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="66265-215">`ReadAsync` Metoda umożliwia wykonywanie operacji We/Wy intensywnie obciążających zasoby bez blokowania wątku głównego.</span><span class="sxs-lookup"><span data-stu-id="66265-215">The `ReadAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="66265-216">Ten aspekt dotyczący wydajności jest szczególnie ważny w aplikacji [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] lub aplikacjach [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], gdzie czasochłonne operacje strumieniowe mogą zablokować wątek interfejsu użytkownika i spowodować, że aplikacja będzie wyglądać, jakby przestała działać.</span><span class="sxs-lookup"><span data-stu-id="66265-216">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="66265-217">Metody asynchroniczne są używane w połączeniu z `async` słowami kluczowymi i `await` w Visual Basic C#i.</span><span class="sxs-lookup"><span data-stu-id="66265-217">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="66265-218"><xref:System.IO.Compression.BrotliStream.CanRead%2A> Użyj właściwości, aby określić, czy bieżące wystąpienie obsługuje odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="66265-218">Use the <xref:System.IO.Compression.BrotliStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="66265-219">Jeśli operacja zostanie anulowana przed zakończeniem, zwrócone zadanie zawiera <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> wartość <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="66265-219">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="brotliStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66265-220">Bufor, w którym mają zostać zapisane dane.</span><span class="sxs-lookup"><span data-stu-id="66265-220">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="66265-221">Przesunięcie bajtu, <paramref name="buffer" /> w którym rozpocznie się zapisywanie danych ze strumienia Brotli.</span><span class="sxs-lookup"><span data-stu-id="66265-221">The byte offset in <paramref name="buffer" /> at which to begin writing data from the Brotli stream.</span></span></param>
        <param name="count"><span data-ttu-id="66265-222">Maksymalna liczba bajtów do odczytania.</span><span class="sxs-lookup"><span data-stu-id="66265-222">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="66265-223">Token do monitorowania żądań anulowania.</span><span class="sxs-lookup"><span data-stu-id="66265-223">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="66265-224">Wartość domyślna to <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="66265-224">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="66265-225">Asynchronicznie odczytuje sekwencję bajtów z bieżącego strumienia Brotli, zapisuje je w tablicy bajtów, zaczynając od określonego indeksu, przesuwa pozycję w strumieniu Brotli przez liczbę odczytanych bajtów i monitoruje żądania anulowania.</span><span class="sxs-lookup"><span data-stu-id="66265-225">Asynchronously reads a sequence of bytes from the current Brotli stream, writes them to a byte array starting at a specified index, advances the position within the Brotli stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="66265-226">Zadanie, które reprezentuje asynchroniczną operację odczytu, która otacza całkowitą liczbę bajtów odczytywanych do <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="66265-226">A task that represents the asynchronous read operation, which wraps the total number of bytes read into the <paramref name="buffer" />.</span></span> <span data-ttu-id="66265-227">Wartość wynikowa może być mniejsza niż liczba bajtów żądana, jeśli liczba aktualnie dostępnych bajtów jest mniejsza niż żądana liczba, lub może być równa 0 (zero), jeśli osiągnięto koniec strumienia Brotli.</span><span class="sxs-lookup"><span data-stu-id="66265-227">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the Brotli stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Remarks

<span data-ttu-id="66265-228">`ReadAsync` Metoda umożliwia wykonywanie operacji We/Wy intensywnie obciążających zasoby bez blokowania wątku głównego.</span><span class="sxs-lookup"><span data-stu-id="66265-228">The `ReadAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="66265-229">Ten aspekt dotyczący wydajności jest szczególnie ważny w aplikacji [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] lub aplikacjach [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], gdzie czasochłonne operacje strumieniowe mogą zablokować wątek interfejsu użytkownika i spowodować, że aplikacja będzie wyglądać, jakby przestała działać.</span><span class="sxs-lookup"><span data-stu-id="66265-229">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="66265-230">Metody asynchroniczne są używane w połączeniu z `async` słowami kluczowymi i `await` w Visual Basic C#i.</span><span class="sxs-lookup"><span data-stu-id="66265-230">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="66265-231"><xref:System.IO.Compression.BrotliStream.CanRead%2A> Użyj właściwości, aby określić, czy bieżące wystąpienie obsługuje odczytywanie.</span><span class="sxs-lookup"><span data-stu-id="66265-231">Use the <xref:System.IO.Compression.BrotliStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="66265-232">Jeśli operacja zostanie anulowana przed zakończeniem, zwrócone zadanie zawiera <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> wartość <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="66265-232">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="brotliStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="66265-233">Lokalizacja w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="66265-233">The location in the stream.</span></span></param>
        <param name="origin"><span data-ttu-id="66265-234">Jedna z <see cref="T:System.IO.SeekOrigin" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="66265-234">One of the <see cref="T:System.IO.SeekOrigin" /> values.</span></span></param>
        <summary><span data-ttu-id="66265-235">Ta właściwość nie jest obsługiwana i zawsze zgłasza <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="66265-235">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="66265-236">Wartość długa.</span><span class="sxs-lookup"><span data-stu-id="66265-236">A long value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="66265-237">Ta właściwość nie jest obsługiwana w tym strumieniu.</span><span class="sxs-lookup"><span data-stu-id="66265-237">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="brotliStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="66265-238">Długość strumienia.</span><span class="sxs-lookup"><span data-stu-id="66265-238">The length of the stream.</span></span></param>
        <summary><span data-ttu-id="66265-239">Ta właściwość nie jest obsługiwana i zawsze zgłasza <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="66265-239">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="brotliStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66265-240">Region pamięci.</span><span class="sxs-lookup"><span data-stu-id="66265-240">A region of memory.</span></span> <span data-ttu-id="66265-241">Ta metoda kopiuje zawartość tego regionu do bieżącego strumienia Brotli.</span><span class="sxs-lookup"><span data-stu-id="66265-241">This method copies the contents of this region to the current Brotli stream.</span></span></param>
        <summary><span data-ttu-id="66265-242">Zapisuje sekwencję bajtów do bieżącego strumienia Brotli z zakresu bajtów tylko do odczytu i przesuwa bieżącą pozycję w tym strumieniu Brotli przez liczbę zapisanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="66265-242">Writes a sequence of bytes to the current Brotli stream from a read-only byte span and advances the current position within this Brotli stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="66265-243"><xref:System.IO.Compression.BrotliStream.CanWrite%2A> Użyj właściwości, aby określić, czy bieżące wystąpienie obsługuje zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="66265-243">Use the <xref:System.IO.Compression.BrotliStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="66265-244">Użyj metody <xref:System.IO.Compression.BrotliStream.WriteAsync%2A> , aby zapisać asynchronicznie w bieżącym strumieniu.</span><span class="sxs-lookup"><span data-stu-id="66265-244">Use the <xref:System.IO.Compression.BrotliStream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>

<span data-ttu-id="66265-245">Jeśli operacja zapisu powiedzie się, pozycja w strumieniu Brotli zastąpi liczbą zapisanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="66265-245">If the write operation is successful, the position within the Brotli stream advances by the number of bytes written.</span></span> <span data-ttu-id="66265-246">Jeśli wystąpi wyjątek, pozycja w strumieniu Brotli pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="66265-246">If an exception occurs, the position within the Brotli stream remains unchanged.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="brotliStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66265-247">Bufor zawierający dane do skompresowania.</span><span class="sxs-lookup"><span data-stu-id="66265-247">The buffer containing the data to compress.</span></span></param>
        <param name="offset"><span data-ttu-id="66265-248">Przesunięcie bajtu, <paramref name="array" /> z którego będą odczytywane bajty.</span><span class="sxs-lookup"><span data-stu-id="66265-248">The byte offset in <paramref name="array" /> from which the bytes will be read.</span></span></param>
        <param name="count"><span data-ttu-id="66265-249">Maksymalna liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="66265-249">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="66265-250">Zapisuje skompresowane bajty do strumienia źródłowego z określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="66265-250">Writes compressed bytes to the underlying stream from the specified byte array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="66265-251">Nie można wykonać operacji zapisu, ponieważ strumień jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="66265-251">The write operation cannot be performed because the stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="brotliStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66265-252">Region pamięci, z którego mają zostać zapisane dane.</span><span class="sxs-lookup"><span data-stu-id="66265-252">The memory region to write data from.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="66265-253">Token do monitorowania żądań anulowania.</span><span class="sxs-lookup"><span data-stu-id="66265-253">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="66265-254">Wartość domyślna to <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="66265-254">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="66265-255">Asynchronicznie zapisuje skompresowane bajty do bazowego strumienia Brotli z określonego bajtowego zakresu pamięci.</span><span class="sxs-lookup"><span data-stu-id="66265-255">Asynchronously writes compressed bytes to the underlying Brotli stream from the specified byte memory range.</span></span></summary>
        <returns><span data-ttu-id="66265-256">Zadanie, które reprezentuje asynchroniczny zapis operacji.</span><span class="sxs-lookup"><span data-stu-id="66265-256">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="66265-257">`WriteAsync` Metoda umożliwia wykonywanie operacji We/Wy intensywnie obciążających zasoby bez blokowania wątku głównego.</span><span class="sxs-lookup"><span data-stu-id="66265-257">The `WriteAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="66265-258">Ten aspekt dotyczący wydajności jest szczególnie ważny w aplikacji [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] lub aplikacjach [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], gdzie czasochłonne operacje strumieniowe mogą zablokować wątek interfejsu użytkownika i spowodować, że aplikacja będzie wyglądać, jakby przestała działać.</span><span class="sxs-lookup"><span data-stu-id="66265-258">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="66265-259">Metody asynchroniczne są używane w połączeniu z `async` słowami kluczowymi i `await` w Visual Basic C#i.</span><span class="sxs-lookup"><span data-stu-id="66265-259">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="66265-260"><xref:System.IO.Compression.BrotliStream.CanWrite%2A> Użyj właściwości, aby określić, czy bieżące wystąpienie obsługuje zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="66265-260">Use the <xref:System.IO.Compression.BrotliStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="66265-261">Jeśli operacja zostanie anulowana przed zakończeniem, zwrócone zadanie zawiera <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> wartość <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="66265-261">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="brotliStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="66265-262">Bufor zawierający dane do skompresowania.</span><span class="sxs-lookup"><span data-stu-id="66265-262">The buffer that contains the data to compress.</span></span></param>
        <param name="offset"><span data-ttu-id="66265-263">Przesunięcie bajtu (liczony <paramref name="buffer" /> od zera), od którego należy rozpocząć kopiowanie bajtów do strumienia Brotli.</span><span class="sxs-lookup"><span data-stu-id="66265-263">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the Brotli stream.</span></span></param>
        <param name="count"><span data-ttu-id="66265-264">Maksymalna liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="66265-264">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="66265-265">Token do monitorowania żądań anulowania.</span><span class="sxs-lookup"><span data-stu-id="66265-265">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="66265-266">Wartość domyślna to <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="66265-266">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="66265-267">Asynchronicznie zapisuje skompresowane bajty w źródłowym strumieniu Brotli z określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="66265-267">Asynchronously writes compressed bytes to the underlying Brotli stream from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="66265-268">Zadanie, które reprezentuje asynchroniczny zapis operacji.</span><span class="sxs-lookup"><span data-stu-id="66265-268">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="66265-269">`WriteAsync` Metoda umożliwia wykonywanie operacji We/Wy intensywnie obciążających zasoby bez blokowania wątku głównego.</span><span class="sxs-lookup"><span data-stu-id="66265-269">The `WriteAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="66265-270">Ten aspekt dotyczący wydajności jest szczególnie ważny w aplikacji [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] lub aplikacjach [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], gdzie czasochłonne operacje strumieniowe mogą zablokować wątek interfejsu użytkownika i spowodować, że aplikacja będzie wyglądać, jakby przestała działać.</span><span class="sxs-lookup"><span data-stu-id="66265-270">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="66265-271">Metody asynchroniczne są używane w połączeniu z `async` słowami kluczowymi i `await` w Visual Basic C#i.</span><span class="sxs-lookup"><span data-stu-id="66265-271">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="66265-272"><xref:System.IO.Compression.BrotliStream.CanWrite%2A> Użyj właściwości, aby określić, czy bieżące wystąpienie obsługuje zapisywanie.</span><span class="sxs-lookup"><span data-stu-id="66265-272">Use the <xref:System.IO.Compression.BrotliStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="66265-273">Jeśli operacja zostanie anulowana przed zakończeniem, zwrócone zadanie zawiera <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> wartość <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="66265-273">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
