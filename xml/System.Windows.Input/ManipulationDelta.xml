<Type Name="ManipulationDelta" FullName="System.Windows.Input.ManipulationDelta">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b2f56d6718137b85c12747a8df64332b25a32ed" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69171073" /></Metadata><TypeSignature Language="C#" Value="public class ManipulationDelta" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationDelta extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDelta" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationDelta" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDelta" />
  <TypeSignature Language="F#" Value="type ManipulationDelta = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera dane transformacji, które są gromadzone w przypadku wystąpienia zdarzeń manipulacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta> Klasa zawiera informacje o zmianach w pozycji manipulowania.  [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]interpretuje zmiany jako <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>lub <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>. Gdy zdarzenie wystąpi w programie, należy użyć właściwości obiektu do przekształcenia obiektu, który powinien być manipulowany. <xref:System.Windows.Input.ManipulationDelta> <xref:System.Windows.UIElement> <xref:System.Windows.UIElement.ManipulationDelta>  Klasa zawiera dwie właściwości typu <xref:System.Windows.Input.ManipulationDelta>: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> i <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>. <xref:System.Windows.Input.ManipulationDeltaEventArgs>  
  
 Aby uzyskać więcej informacji na temat manipulowania, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  Przykład aplikacji, która reaguje na manipulowanie, znajduje [się w przewodniku: Tworzenie pierwszej aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)dotykowej.  
  
   
  
## Examples  
 Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia.  W przykładzie stosowane są <xref:System.Windows.Input.ManipulationDelta.Translation%2A>właściwości <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, i <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> , <xref:System.Windows.Shapes.Rectangle>które umożliwiają przenoszenie, zmienianie rozmiaru i obracanie. Ten przykład jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)dotykowej.  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Vector translation, float64 rotation, valuetype System.Windows.Vector scale, valuetype System.Windows.Vector expansion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (translation As Vector, rotation As Double, scale As Vector, expansion As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationDelta(System::Windows::Vector translation, double rotation, System::Windows::Vector scale, System::Windows::Vector expansion);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.ManipulationDelta : System.Windows.Vector * double * System.Windows.Vector * System.Windows.Vector -&gt; System.Windows.Input.ManipulationDelta" Usage="new System.Windows.Input.ManipulationDelta (translation, rotation, scale, expansion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="translation" Type="System.Windows.Vector" />
        <Parameter Name="rotation" Type="System.Double" />
        <Parameter Name="scale" Type="System.Windows.Vector" />
        <Parameter Name="expansion" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="translation">Liniowe ruchy manipulowania w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="rotation">Obrót manipulowania w stopniach.</param>
        <param name="scale">Ilość zmienionego rozmiaru manipulacji jako mnożnik.</param>
        <param name="expansion">Ilość, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]której Zmieniono rozmiar manipulacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.ManipulationDelta" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expansion">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Expansion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Expansion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expansion As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Expansion { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Expansion : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ilość zmiany rozmiaru [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]manipulacji.</summary>
        <value>Ilość, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]której Zmieniono rozmiar manipulacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Windows.Input.ManipulationDelta.Scale%2A> i<xref:System.Windows.Input.ManipulationDelta.Expansion%2A> raportują jednocześnie manipulowanie zmianami rozmiarów.  Różnica między tymi dwoma jest sposobem, w jaki wartość jest raportowana.  Właściwość raportuje manipulowanie zmianami rozmiarów [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]w. <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> <xref:System.Windows.Input.ManipulationDelta.Scale%2A> Właściwość raportuje wartość jako mnożnik.  Jeśli <xref:System.Windows.Input.ManipulationDelta.Scale%2A> jest 0,5, Manipulacja jest interpretowana jako zmniejszająca rozmiar o 50%.  Jeśli <xref:System.Windows.Input.ManipulationDelta.Scale%2A> wartość to 2, Manipulacja jest interpretowana jako zwiększenie rozmiaru o 100 procent.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public double Rotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Rotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rotation As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Rotation { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Rotation : double" Usage="System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obroty manipulowania (w stopniach).</summary>
        <value>Obrót manipulowania w stopniach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> Właściwość raportuje sposób interpretowania manipulowania jako obracającego się wokół osi.  Oś jest zwykle punktem między dwoma punktami kontaktu, który zainicjował manipulowanie.  
  
   
  
## Examples  
 Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia.  W przykładzie stosowane są <xref:System.Windows.Input.ManipulationDelta.Translation%2A>właściwości <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, i <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> , <xref:System.Windows.Shapes.Rectangle>które umożliwiają przenoszenie, zmienianie rozmiaru i obracanie. Ten przykład jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)dotykowej.  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Scale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Scale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scale As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Scale { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ilość zmiany rozmiaru manipulacji jako mnożnika.</summary>
        <value>Ilość zmiany rozmiaru manipulacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Windows.Input.ManipulationDelta.Scale%2A> i<xref:System.Windows.Input.ManipulationDelta.Expansion%2A> raportują jednocześnie manipulowanie zmianami rozmiarów.  Różnica między tymi dwoma jest sposobem, w jaki wartość jest raportowana.  <xref:System.Windows.Input.ManipulationDelta.Scale%2A> Właściwość raportuje wartość jako mnożnik.  Jeśli <xref:System.Windows.Input.ManipulationDelta.Scale%2A> jest 0,5, Manipulacja jest interpretowana jako zmniejszająca rozmiar o 50%.  Jeśli <xref:System.Windows.Input.ManipulationDelta.Scale%2A> wartość to 2, Manipulacja jest interpretowana jako zwiększenie rozmiaru o 100 procent. Właściwość raportuje manipulowanie zmianami rozmiarów [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]w. <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>  
  
   
  
## Examples  
 Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia.  W przykładzie stosowane są <xref:System.Windows.Input.ManipulationDelta.Translation%2A>właściwości <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, i <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> , <xref:System.Windows.Shapes.Rectangle>które umożliwiają przenoszenie, zmienianie rozmiaru i obracanie. Ten przykład jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)dotykowej.  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Translation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Translation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Translation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Translation As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Translation { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Translation : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Translation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liniowe ruchy manipulowania.</summary>
        <value>Liniowe ruchy manipulowania w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta.Translation%2A> Właściwość raportuje sposób interpretowania manipulowania w poziomie i w pionie na ekranie.  
  
   
  
## Examples  
 Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia.  W przykładzie stosowane są <xref:System.Windows.Input.ManipulationDelta.Translation%2A>właściwości <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, i <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> , <xref:System.Windows.Shapes.Rectangle>które umożliwiają przenoszenie, zmienianie rozmiaru i obracanie. Ten przykład jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)dotykowej.  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
