<Type Name="ManipulationDelta" FullName="System.Windows.Input.ManipulationDelta">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b0a48875a97e5f72317831a9e6c1caea75c593f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39991597" /></Metadata><TypeSignature Language="C#" Value="public class ManipulationDelta" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationDelta extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDelta" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationDelta" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDelta" />
  <TypeSignature Language="F#" Value="type ManipulationDelta = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera dane przekształcenie, które są zbierane, gdy wystąpią zdarzenia manipulowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta> Klasa zawiera informacje o zmianach wprowadzonych w pozycji manipulowania.  [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] interpretuje zmian jako <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, lub <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>. Gdy <xref:System.Windows.UIElement.ManipulationDelta> wystąpi zdarzenie na <xref:System.Windows.UIElement>, użyj właściwości na <xref:System.Windows.Input.ManipulationDelta> obiekt, aby przekształcić obiekt, który powinien być zmieniane.  <xref:System.Windows.Input.ManipulationDeltaEventArgs> Klasa udostępnia dwie właściwości typu <xref:System.Windows.Input.ManipulationDelta>: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> i <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>.  
  
 Aby uzyskać więcej informacji na temat manipulacje zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  Na przykład aplikację, która odpowiada na manipulacje zobacz [wskazówki: tworzenie pierwszej funkcji Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzeń.  Przykład dotyczy <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, i <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> właściwości, aby przenieść, zmienić rozmiar i Obróć <xref:System.Windows.Shapes.Rectangle>. W tym przykładzie jest częścią większego przykładu w [wskazówki: tworzenie pierwszej funkcji Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Vector translation, float64 rotation, valuetype System.Windows.Vector scale, valuetype System.Windows.Vector expansion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (translation As Vector, rotation As Double, scale As Vector, expansion As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationDelta(System::Windows::Vector translation, double rotation, System::Windows::Vector scale, System::Windows::Vector expansion);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.ManipulationDelta : System.Windows.Vector * double * System.Windows.Vector * System.Windows.Vector -&gt; System.Windows.Input.ManipulationDelta" Usage="new System.Windows.Input.ManipulationDelta (translation, rotation, scale, expansion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="translation" Type="System.Windows.Vector" />
        <Parameter Name="rotation" Type="System.Double" />
        <Parameter Name="scale" Type="System.Windows.Vector" />
        <Parameter Name="expansion" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="translation">Liniowy ruchu manipulacji w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="rotation">Obrót manipulowania w stopniach.</param>
        <param name="scale">Kwota operowanie ma rozmiar jako mnożnik.</param>
        <param name="expansion">Kwota operowanie ma zmienić [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.ManipulationDelta" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expansion">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Expansion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Expansion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expansion As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Expansion { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Expansion : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kwotę operowanie ma zmienić [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</summary>
        <value>Kwota operowanie ma zmienić [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta.Scale%2A> i <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> obie właściwości raportu manipulowania zmiany rozmiaru.  Różnica między tymi dwoma jest sposób, w którym jest zgłaszana wartość.  <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> Właściwości raportów operacji zmiany rozmiaru, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. <xref:System.Windows.Input.ManipulationDelta.Scale%2A> Właściwość raportuje wartości jako mnożnik.  Jeśli <xref:System.Windows.Input.ManipulationDelta.Scale%2A> wynosi 0,5, manipulowania jest interpretowany jako zmniejszyć rozmiar 50 procent.  Jeśli <xref:System.Windows.Input.ManipulationDelta.Scale%2A> wynosi 2, manipulowania jest interpretowany jako zwiększenie rozmiaru przez 100 procent.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public double Rotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Rotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rotation As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Rotation { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Rotation : double" Usage="System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obrót operowanie w stopniach.</summary>
        <value>Obrót manipulowania w stopniach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> Właściwości raportów sposobu manipulowania jest interpretowany jako rotacji wokół osi.  Osi jest zazwyczaj punkt między dwoma punktami kontaktu, która zainicjowała operowanie atrybutami.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzeń.  Przykład dotyczy <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, i <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> właściwości, aby przenieść, zmienić rozmiar i Obróć <xref:System.Windows.Shapes.Rectangle>. W tym przykładzie jest częścią większego przykładu w [wskazówki: tworzenie pierwszej funkcji Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Scale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Scale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scale As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Scale { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kwotę, która ma rozmiar operowanie jako mnożnik.</summary>
        <value>Kwota operowanie ma ze zmienionym rozmiarem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta.Scale%2A> i <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> obie właściwości raportu manipulowania zmiany rozmiaru.  Różnica między tymi dwoma jest sposób, w którym jest zgłaszana wartość.  <xref:System.Windows.Input.ManipulationDelta.Scale%2A> Właściwość raportuje wartości jako mnożnik.  Jeśli <xref:System.Windows.Input.ManipulationDelta.Scale%2A> wynosi 0,5, manipulowania jest interpretowany jako zmniejszyć rozmiar 50 procent.  Jeśli <xref:System.Windows.Input.ManipulationDelta.Scale%2A> wynosi 2, manipulowania jest interpretowany jako zwiększenie rozmiaru przez 100 procent. <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> Właściwości raportów operacji zmiany rozmiaru, w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzeń.  Przykład dotyczy <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, i <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> właściwości, aby przenieść, zmienić rozmiar i Obróć <xref:System.Windows.Shapes.Rectangle>. W tym przykładzie jest częścią większego przykładu w [wskazówki: tworzenie pierwszej funkcji Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Translation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Translation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Translation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Translation As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Translation { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Translation : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Translation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liniowej ruchu manipulacji.</summary>
        <value>Liniowy ruchu manipulacji w [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta.Translation%2A> Właściwości raportów sposobu manipulowania jest interpretowany jako przenoszenie poziomo i pionowo na ekranie.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzeń.  Przykład dotyczy <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, i <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> właściwości, aby przenieść, zmienić rozmiar i Obróć <xref:System.Windows.Shapes.Rectangle>. W tym przykładzie jest częścią większego przykładu w [wskazówki: tworzenie pierwszej funkcji Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>