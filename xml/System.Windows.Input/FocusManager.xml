<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83d83150d64a10e751976181c0d5499bc4228676" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69173067" /></Metadata><TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <TypeSignature Language="F#" Value="type FocusManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera zestaw metod statycznych, dołączonych właściwości i zdarzeń służących do określania i ustawiania zakresów fokusu oraz do ustawiania elementu skoncentrowanego w zakresie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W Windows Presentation Foundation (WPF) Istnieją dwie koncepcje dotyczące fokusu: fokus klawiatury i fokus logiczny.  
  
 Fokus klawiatury odnosi się do elementu, który aktualnie otrzymuje dane wejściowe z klawiatury.  Może istnieć tylko jeden element z fokusem klawiatury.  Ten element z fokusem klawiatury <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> ma `true`ustawioną wartość.  <xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType>Zwraca element z fokusem klawiatury.  
  
 Fokus logiczny dotyczy <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> w ramach określonego zakresu fokusu.  
  
 Zakres fokusu to element kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> zakres.  Domyślnie <xref:System.Windows.Window> Klasa jest zakresem koncentracji jako <xref:System.Windows.Controls.Menu>klasą, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar> .  Element, który jest zakresem fokusu <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ma `true`ustawioną wartość.  
  
 Może istnieć wiele elementów z fokusem logicznym, ale może istnieć tylko jeden element z fokusem logicznym w ramach jednego zakresu fokusu.  Element z fokusem logicznym nie musi mieć fokusu klawiatury, ale element z fokusem klawiatury będzie miał fokus logiczny.  Istnieje możliwość zdefiniowania zakresu fokusu w ramach zakresu fokusu.  W takim przypadku zarówno nadrzędny zakres fokusu, jak i zakres fokusu podrzędnego mogą <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>mieć.  
  
 W poniższym scenariuszu przedstawiono sposób, w jaki fokus klawiatury i zmiana fokusu logicznego w <xref:System.Windows.Window> aplikacji WPF <xref:System.Windows.Controls.TextBox> , która <xref:System.Windows.Controls.Menu> ma <xref:System.Windows.Controls.MenuItem>.  Gdy fokus klawiatury zmieni się z <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.MenuItem>na, jest to <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Window> fokus klawiatury, ale zachowuje fokus logiczny dla zakresu fokusu.  Funkcja uzyskuje fokus klawiatury i uzyskuje fokus logiczny <xref:System.Windows.Controls.Menu> dla zakresu fokusu. <xref:System.Windows.Controls.MenuItem>  Gdy fokus klawiatury wraca do katalogu głównego <xref:System.Windows.Window>, element w <xref:System.Windows.Window> zakresie fokusu z fokusem logicznym będzie miał fokus klawiatury, który <xref:System.Windows.Controls.TextBox>w tym przypadku jest.  Ma <xref:System.Windows.Controls.TextBox> teraz fokus klawiatury i fokus logiczny.  Utraci fokus klawiatury, ale zachowuje fokus logiczny <xref:System.Windows.Controls.Menu> dla zakresu fokusu. <xref:System.Windows.Controls.MenuItem>  
  
 Wartość <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> Domyślna <xref:System.Windows.Window>w, <xref:System.Windows.Controls.Menu> ,<xref:System.Windows.Controls.ContextMenu> , i to`true`. <xref:System.Windows.Controls.ToolBar>  
  
 Aby uzyskać więcej informacji na temat koncentracji, zobacz [Omówienie danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md) i [Omówienie fokusu](~/docs/framework/wpf/advanced/focus-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</param>
        <param name="handler">Procedura obsługi zdarzeń, która ma zostać dodana.</param>
        <summary>Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> dołączonego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</param>
        <param name="handler">Procedura obsługi zdarzeń, która ma zostać dodana.</param>
        <summary>Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> dołączonego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="F#" Value="see GetFocusedElement, and SetFocusedElement" Usage="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy element, do którego jest dołączona ta właściwość, ma fokus logiczny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.FocusManager.FocusedElement%2A> Jest elementem, który ma logiczne fokus dla określonego zakresu fokusu.  Ten obiekt może mieć fokus klawiatury lub go nie może.  Fokus klawiatury odnosi się do elementu, który odbiera dane wejściowe z klawiatury.  Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>i <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> może służyć do pobierania i ustawiania priorytetowego elementu w ramach określonego zakresu fokusu.  
  
<a name="dependencyPropertyInfo_FocusedElement"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Input.FocusManager.FocusedElementProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
   
  
## Examples  
 Poniższy przykład pokazuje <xref:System.Windows.Controls.Button> , jak utworzyć element z fokusem.  
  
 [!code-xml[markupsnippets#MarkupFocusManagerFocusedElementXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupfocusmanagerfocusedelementxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedElementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> Identyfikuje załączoną właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusedElement : System.Windows.DependencyObject -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.FocusManager.GetFocusedElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Element z fokusem logicznym w określonym zakresie fokusu.</param>
        <summary>Pobiera element z fokusem logicznym w określonym zakresie fokusu.</summary>
        <returns>Element w określonym zakresie fokusu z fokusem logicznym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.FocusManager.FocusedElement%2A> Jest elementem, który ma logiczne fokus dla określonego zakresu fokusu.  Ten obiekt może mieć fokus klawiatury lub go nie może.  Fokus klawiatury odnosi się do elementu, który odbiera dane wejściowe z klawiatury.  Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  
  
 Jeśli `element` nie jest zakresem fokusu, ta metoda zwróci `null`wartość.  
  
 Użyj <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, aby określić element z fokusem logicznym w ramach określonego zakresu fokusu.  
  
   
  
## Examples  
 Poniższy przykład ustawia element z fokusem logicznym przy użyciu <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> i pobiera element z fokusem logicznym przy <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>użyciu.  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusScope : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Input.FocusManager.GetFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Element, dla którego ma zostać wyświetlony najbliższy zakres fokusu.</param>
        <summary>Określa najbliższy element nadrzędny określonego elementu, który ma <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> <see langword="true" />ustawioną wartość.</summary>
        <returns>Zakres fokusu dla określonego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> Domyślna <xref:System.Windows.Window>w, <xref:System.Windows.Controls.Menu> ,<xref:System.Windows.Controls.ContextMenu> , jest .`true` <xref:System.Windows.Controls.ToolBar>  
  
 Zakres fokusu to element kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> zakres.  Domyślnie <xref:System.Windows.Window> Klasa jest zakresem koncentracji jako <xref:System.Windows.Controls.Menu>klasą, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar> .  Element, który jest zakresem fokusu <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ma `true`ustawioną wartość.  
  
 Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFocusScope : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.FocusManager.GetIsFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Element, z którego ma zostać odczytana dołączona właściwość.</param>
        <summary>Określa, czy określony <see cref="T:System.Windows.DependencyObject" /> jest zakresem fokusu.</summary>
        <returns><see langword="true" />Jeśli <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> jest <see langword="false" />ustawiona na dla określonego elementu; w przeciwnym razie,. <see langword="true" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakres fokusu to element kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> zakres.  Domyślnie <xref:System.Windows.Window> Klasa jest zakresem koncentracji jako <xref:System.Windows.Controls.Menu>klasą, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar> .  Element, który jest zakresem fokusu <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ma `true`ustawioną wartość.  
  
 Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" Usage="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Występuje, gdy element staje się fokusem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Input.FocusManager.GotFocus" /> Identyfikuje dołączone zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="F#" Value="see GetIsFocusScope, and SetIsFocusScope" Usage="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy element, do którego jest dołączona ta właściwość, jest zakresem fokusu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakres fokusu to element kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> zakres.  Domyślnie <xref:System.Windows.Window> Klasa jest zakresem koncentracji jako <xref:System.Windows.Controls.Menu>klasą, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar> .  Element, który jest zakresem fokusu <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ma `true`ustawioną wartość.  
  
 Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  
  
<a name="dependencyPropertyInfo_IsFocusScope"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Input.FocusManager.IsFocusScopeProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.StackPanel> zakres fokusu.  
  
 [!code-xml[markupsnippets#MarkupIsFocusScopeXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupisfocusscopexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> Identyfikuje załączoną właściwość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> Domyślna <xref:System.Windows.Window>w, <xref:System.Windows.Controls.Menu> ,<xref:System.Windows.Controls.ContextMenu> , jest .`true` <xref:System.Windows.Controls.ToolBar>  
  
 Zakres fokusu to element kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> zakres.  Domyślnie <xref:System.Windows.Window> Klasa jest zakresem koncentracji jako <xref:System.Windows.Controls.Menu>klasą, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar> .  Element, który jest zakresem fokusu <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ma `true`ustawioną wartość.  
  
 Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" Usage="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Występuje, gdy element utraci fokus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Input.FocusManager.LostFocus" /> Identyfikuje dołączone zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</param>
        <param name="handler">Procedura obsługi zdarzeń, która ma zostać usunięta.</param>
        <summary>Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> dołączonego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</param>
        <param name="handler">Procedura obsługi zdarzeń, która ma zostać usunięta.</param>
        <summary>Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> dołączonego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberSignature Language="F#" Value="static member SetFocusedElement : System.Windows.DependencyObject * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.FocusManager.SetFocusedElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">Zakres fokusu, <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />w którym ma być określony element.</param>
        <param name="value">Element, na który ma być skierowany fokus logiczny.</param>
        <summary>Ustawia fokus logiczny dla określonego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.FocusManager.FocusedElement%2A> Jest elementem, który ma logiczne fokus dla określonego zakresu fokusu.  Ten obiekt może mieć fokus klawiatury lub go nie może.  Fokus klawiatury odnosi się do elementu, który odbiera dane wejściowe z klawiatury.  Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  
  
 Możliwe jest określenie zakresu fokusu, który jest elementem nadrzędnym zakresu fokusu, w którym znajduje się element.  Na przykład <xref:System.Windows.Controls.StackPanel> Jeśli element jest zakresem ostrości <xref:System.Windows.Controls.StackPanel> , a jego element <xref:System.Windows.Window> nadrzędny jest zakresem koncentracji, <xref:System.Windows.Controls.TextBox> element podrzędny może określić <xref:System.Windows.Window> jako zakres fokusu podczas wywoływania <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.  Jest to <xref:System.Windows.Controls.StackPanel> zarówno dla zakresu fokusu, jak i zakresu fokusu. <xref:System.Windows.Window> <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Input.FocusManager.FocusedElement%2A>  
  
 <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>nadaje fokus logiczny określony element w określonym zakresie fokusu i podejmie próbę nadania fokusu na klawiaturze elementu.  
  
   
  
## Examples  
 Poniższy przykład ustawia element z fokusem logicznym przy użyciu <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> i pobiera element z fokusem logicznym przy <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>użyciu.  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsFocusScope : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.FocusManager.SetIsFocusScope (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Element, który ma być zakresem fokusu.</param>
        <param name="value"><see langword="true" />Jeśli <paramref name="element" /> jest zakresem fokusu; <see langword="false" />w przeciwnym razie.</param>
        <summary>Ustawia określony <see cref="T:System.Windows.DependencyObject" /> jako zakres fokusu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakres fokusu to element kontenera, który śledzi <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> zakres.  Domyślnie <xref:System.Windows.Window> Klasa jest zakresem koncentracji jako <xref:System.Windows.Controls.Menu>klasą, <xref:System.Windows.Controls.ContextMenu>, i <xref:System.Windows.Controls.ToolBar> .  Element, który jest zakresem fokusu <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ma `true`ustawioną wartość.  
  
 Aby uzyskać więcej informacji na temat fokusu, fokus klawiatury i koncentracji logicznej, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).  
  
   
  
## Examples  
 W poniższym przykładzie element staje się zakresem fokusu przy <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>użyciu.  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
