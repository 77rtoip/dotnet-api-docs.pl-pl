<Type Name="RoutedCommand" FullName="System.Windows.Input.RoutedCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cb4b0887eb9edb341d7337240bcb48e0f262dfe" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015022" /></Metadata><TypeSignature Language="C#" Value="public class RoutedCommand : System.Windows.Input.ICommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoutedCommand extends System.Object implements class System.Windows.Input.ICommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.RoutedCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class RoutedCommand&#xA;Implements ICommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedCommand : System::Windows::Input::ICommand" />
  <TypeSignature Language="F#" Value="type RoutedCommand = class&#xA;    interface ICommand" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommand</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fa378-101">Definiuje polecenie, które implementuje <see cref="T:System.Windows.Input.ICommand" /> i odbywa się za pośrednictwem drzewa elementów.</span><span class="sxs-lookup"><span data-stu-id="fa378-101">Defines a command that implements <see cref="T:System.Windows.Input.ICommand" /> and is routed through the element tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa378-102"><xref:System.Windows.Input.RoutedCommand.Execute%2A> i <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metod <xref:System.Windows.Input.RoutedCommand> nie zawierają logikę aplikacji, dla polecenia, jak w przypadku typowej <xref:System.Windows.Input.ICommand>, ale raczej tych metod wywoływać zdarzenia, które przechodzić przez drzewo elementów, szukanie obiektu z <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="fa378-102">The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the application logic for the command as is the case with a typical <xref:System.Windows.Input.ICommand>, but rather, these methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="fa378-103">Programy obsługi zdarzeń dołączonych do <xref:System.Windows.Input.CommandBinding> zawierają logikę polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-103">The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic.</span></span>  
  
 <span data-ttu-id="fa378-104"><xref:System.Windows.Input.RoutedCommand.Execute%2A> Wywołuje metodę <xref:System.Windows.Input.CommandManager.PreviewExecuted> i <xref:System.Windows.Input.CommandManager.Executed> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-104">The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events.</span></span>  <span data-ttu-id="fa378-105"><xref:System.Windows.Input.RoutedCommand.CanExecute%2A> Wywołuje metodę <xref:System.Windows.Input.CommandManager.PreviewCanExecute> i <xref:System.Windows.Input.CommandManager.CanExecute> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-105">The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events.</span></span>  
  
<a name="xamlAttributeUsage_RoutedCommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="fa378-106">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="fa378-106">XAML Attribute Usage</span></span>  
 <span data-ttu-id="fa378-107">\<*object* *property*="*predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="fa378-107">\<*object* *property*="*predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="fa378-108">—lub—</span><span class="sxs-lookup"><span data-stu-id="fa378-108">-or-</span></span>
  
 <span data-ttu-id="fa378-109">\<*object* *property*="*predefinedClassName*.*predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="fa378-109">\<*object* *property*="*predefinedClassName*.*predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="fa378-110">—lub—</span><span class="sxs-lookup"><span data-stu-id="fa378-110">-or-</span></span>
  
 <span data-ttu-id="fa378-111">\<*object* *property*="{ *customClassName*.*customCommandName*}"/></span><span class="sxs-lookup"><span data-stu-id="fa378-111">\<*object* *property*="{ *customClassName*.*customCommandName*}"/></span></span>  
  
<a name="xamlValues_RoutedCommand"></a>   
## <a name="xaml-values"></a><span data-ttu-id="fa378-112">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="fa378-112">XAML Values</span></span>  
 <span data-ttu-id="fa378-113">*predefinedClassName*</span><span class="sxs-lookup"><span data-stu-id="fa378-113">*predefinedClassName*</span></span>  
 <span data-ttu-id="fa378-114">Jedną z klas wstępnie zdefiniowanego polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-114">One of the predefined command classes.</span></span>  
  
 <span data-ttu-id="fa378-115">*predefinedCommandName*</span><span class="sxs-lookup"><span data-stu-id="fa378-115">*predefinedCommandName*</span></span>  
 <span data-ttu-id="fa378-116">Jeden z wstępnie zdefiniowanego polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-116">One of the predefined commands.</span></span>  
  
 <span data-ttu-id="fa378-117">*customClassName*</span><span class="sxs-lookup"><span data-stu-id="fa378-117">*customClassName*</span></span>  
 <span data-ttu-id="fa378-118">Klasa niestandardowa, który zawiera polecenie niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="fa378-118">A custom class which contains the custom command.</span></span> <span data-ttu-id="fa378-119">Klasy niestandardowe wymagają `xlmns` przedrostkowe mapowanie; zobacz [przestrzeń nazw XAML i mapowanie Namespace dla WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="fa378-119">Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="fa378-120">*customCommandName*</span><span class="sxs-lookup"><span data-stu-id="fa378-120">*customCommandName*</span></span>  
 <span data-ttu-id="fa378-121">Polecenie niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="fa378-121">A custom command.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa378-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.RoutedCommand" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="fa378-122">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa378-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.RoutedCommand" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="fa378-123">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand (string name, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ownerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand(System::String ^ name, Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.RoutedCommand : string * Type -&gt; System.Windows.Input.RoutedCommand" Usage="new System.Windows.Input.RoutedCommand (name, ownerType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fa378-124">Zadeklarowany nazwa dla serializacji.</span><span class="sxs-lookup"><span data-stu-id="fa378-124">Declared name for serialization.</span></span></param>
        <param name="ownerType"><span data-ttu-id="fa378-125">Typ, który rejestruje polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-125">The type which is registering the command.</span></span></param>
        <summary><span data-ttu-id="fa378-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.RoutedCommand" /> klasy z określonym typem nazwę i właściciela.</span><span class="sxs-lookup"><span data-stu-id="fa378-126">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class with the specified name and owner type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa378-127"><paramref name="name" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-127"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa378-128"><paramref name="ownerType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-128"><paramref name="ownerType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand (string name, Type ownerType, System.Windows.Input.InputGestureCollection inputGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type ownerType, class System.Windows.Input.InputGestureCollection inputGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type,System.Windows.Input.InputGestureCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ownerType As Type, inputGestures As InputGestureCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand(System::String ^ name, Type ^ ownerType, System::Windows::Input::InputGestureCollection ^ inputGestures);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.RoutedCommand : string * Type * System.Windows.Input.InputGestureCollection -&gt; System.Windows.Input.RoutedCommand" Usage="new System.Windows.Input.RoutedCommand (name, ownerType, inputGestures)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="inputGestures" Type="System.Windows.Input.InputGestureCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fa378-129">Zadeklarowany nazwa dla serializacji.</span><span class="sxs-lookup"><span data-stu-id="fa378-129">Declared name for serialization.</span></span></param>
        <param name="ownerType"><span data-ttu-id="fa378-130">Typ, który rejestruje polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-130">The type that is registering the command.</span></span></param>
        <param name="inputGestures"><span data-ttu-id="fa378-131">Domyślnie wejściowych gestów skojarzony z tym poleceniem.</span><span class="sxs-lookup"><span data-stu-id="fa378-131">Default input gestures associated with this command.</span></span></param>
        <summary><span data-ttu-id="fa378-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.RoutedCommand" /> klasy o określonej nazwie, typ właściciela i kolekcji gestów.</span><span class="sxs-lookup"><span data-stu-id="fa378-132">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class with the specified name, owner type, and collection of gestures.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fa378-133"><paramref name="name" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-133"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fa378-134">długość <paramref name="name" /> wynosi zero</span><span class="sxs-lookup"><span data-stu-id="fa378-134">the length of <paramref name="name" /> is zero</span></span> 
<span data-ttu-id="fa378-135">—lub—</span><span class="sxs-lookup"><span data-stu-id="fa378-135">-or-</span></span> 
 <span data-ttu-id="fa378-136"><paramref name="ownerType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-136"><paramref name="ownerType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (object parameter, System.Windows.IInputElement target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExecute(object parameter, class System.Windows.IInputElement target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecute (parameter As Object, target As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecute(System::Object ^ parameter, System::Windows::IInputElement ^ target);" />
      <MemberSignature Language="F#" Value="member this.CanExecute : obj * System.Windows.IInputElement -&gt; bool" Usage="routedCommand.CanExecute (parameter, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="target" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="fa378-137">Typ danych zdefiniowany przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="fa378-137">A user defined data type.</span></span></param>
        <param name="target"><span data-ttu-id="fa378-138">Element docelowy polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-138">The command target.</span></span></param>
        <summary><span data-ttu-id="fa378-139">Określa, czy to <see cref="T:System.Windows.Input.RoutedCommand" /> można wykonać w jego bieżącym stanie.</span><span class="sxs-lookup"><span data-stu-id="fa378-139">Determines whether this <see cref="T:System.Windows.Input.RoutedCommand" /> can execute in its current state.</span></span></summary>
        <returns><span data-ttu-id="fa378-140"><see langword="true" /> Jeśli polecenie można wykonać na aktualnym elemencie docelowym polecenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-140"><see langword="true" /> if the command can execute on the current command target; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa378-141">Rzeczywiste logikę, która określa, czy <xref:System.Windows.Input.RoutedCommand> można wykonać na bieżącym elemencie docelowym polecenia nie jest zawarta w <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metody, zamiast <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> zgłasza <xref:System.Windows.Input.CommandManager.PreviewCanExecute> i <xref:System.Windows.Input.CommandManager.CanExecute> zdarzenia, które tunelowania i będą się pojawiać za pośrednictwem elementu szukanie obiektu z drzewa <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="fa378-141">The actual logic that determines if a <xref:System.Windows.Input.RoutedCommand> can execute on the current command target is not contained in the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods, rather <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and the <xref:System.Windows.Input.CommandManager.CanExecute> events which tunnel and bubble through element tree looking for a object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="fa378-142">Jeśli <xref:System.Windows.Input.CommandBinding> tego <xref:System.Windows.Input.RoutedCommand> zostanie znaleziony, a następnie <xref:System.Windows.Input.CanExecuteRoutedEventHandler> dołączone do <xref:System.Windows.Input.CommandBinding> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="fa378-142">If a <xref:System.Windows.Input.CommandBinding> for that <xref:System.Windows.Input.RoutedCommand> is found, then the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> attached to <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="fa378-143">Te procedury obsługi podać logikę programistyczną do określania, czy <xref:System.Windows.Input.RoutedCommand> lub nie można uruchamiać.</span><span class="sxs-lookup"><span data-stu-id="fa378-143">These handlers supply the programming logic for determining if the <xref:System.Windows.Input.RoutedCommand> can execute or not.</span></span>  
  
 <span data-ttu-id="fa378-144"><xref:System.Windows.Input.CommandManager.PreviewCanExecute> i <xref:System.Windows.Input.CommandManager.PreviewExecuted> zdarzenia są wywoływane na <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa378-144">The <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.PreviewExecuted> events are raised on the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span></span>  <span data-ttu-id="fa378-145">Jeśli <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> nie jest ustawiony na <xref:System.Windows.Input.ICommandSource>, <xref:System.Windows.Input.CommandManager.PreviewCanExecute> i <xref:System.Windows.Input.CommandManager.CanExecute> zdarzenia są wywoływane w elemencie fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="fa378-145">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set on the <xref:System.Windows.Input.ICommandSource>, the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised on the element with keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa378-146">Poniższy przykład jest <xref:System.Windows.Input.ICommand.CanExecuteChanged> programu obsługi zdarzeń z niestandardową implementację <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="fa378-146">The following example is a <xref:System.Windows.Input.ICommand.CanExecuteChanged> event handler from a custom implementation of <xref:System.Windows.Input.ICommandSource>.</span></span>  
  
 <span data-ttu-id="fa378-147">`this.Command` w tym przykładzie jest <xref:System.Windows.Input.ICommandSource.Command%2A> właściwość <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="fa378-147">`this.Command` in this example is the <xref:System.Windows.Input.ICommandSource.Command%2A> property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="fa378-148">Jeśli polecenie nie jest `null`, polecenie jest rzutowany na <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="fa378-148">If the command is not `null`, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="fa378-149">Jeśli polecenie jest <xref:System.Windows.Input.RoutedCommand>, a następnie <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metoda jest wywoływana, przekazując <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> i <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa378-149">If the command is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="fa378-150">Jeśli polecenie nie jest <xref:System.Windows.Input.RoutedCommand>, jest rzutowany na <xref:System.Windows.Input.ICommand> i <xref:System.Windows.Input.ICommand.CanExecute%2A> metoda jest wywoływana, przekazując <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa378-150">If command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 <span data-ttu-id="fa378-151">Jeśli <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metoda zwraca `true`, następnie formant jest włączony; w przeciwnym razie kontrolka jest wyłączona.</span><span class="sxs-lookup"><span data-stu-id="fa378-151">If the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method returns `true`, then the control is enabled; otherwise, the control is disable.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandcanexecutechanged)]
 [!code-vb[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandcanexecutechanged)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa378-152"><paramref name="target" /> nie jest <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-152"><paramref name="target" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanExecuteChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanExecuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanExecuteChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.RoutedCommand.CanExecuteChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CanExecuteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ CanExecuteChanged;" />
      <MemberSignature Language="F#" Value="member this.CanExecuteChanged : EventHandler " Usage="member this.CanExecuteChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Input.ICommand.CanExecuteChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa378-153">Występuje, gdy zmiany w źródle polecenia są wykrywane przez Menedżer poleceń.</span><span class="sxs-lookup"><span data-stu-id="fa378-153">Occurs when changes to the command source are detected by the command manager.</span></span> <span data-ttu-id="fa378-154">Te zmiany wpływają na często, czy polecenie powinno być wykonane na aktualnym elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-154">These changes often affect whether the command should execute on the current command target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa378-155"><xref:System.Windows.Input.RoutedCommand> Nasłuchuje <xref:System.Windows.Input.CommandManager.RequerySuggested> zdarzenie, które jest wywoływane przez <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="fa378-155">The <xref:System.Windows.Input.RoutedCommand> listens for the <xref:System.Windows.Input.CommandManager.RequerySuggested> event, which is raised by the <xref:System.Windows.Input.CommandManager>.</span></span> <span data-ttu-id="fa378-156"><xref:System.Windows.Input.CommandManager.RequerySuggested> Zdarzenie jest wywoływane zawsze wtedy, gdy warunki są spełnione, mogą ulec zmianie, czy polecenie powinno być wykonane, takie jak zmiana fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="fa378-156">The <xref:System.Windows.Input.CommandManager.RequerySuggested> event is raised whenever conditions are met that may change the whether the command should execute, such as a change in keyboard focus.</span></span>  <span data-ttu-id="fa378-157">Gdy odbierze polecenie <xref:System.Windows.Input.CommandManager.RequerySuggested> zgłasza zdarzenie, <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fa378-157">When the command receives the <xref:System.Windows.Input.CommandManager.RequerySuggested> event, it raises the <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> event.</span></span>  <span data-ttu-id="fa378-158">Ogólnie rzecz biorąc, źródło polecenia będzie nasłuchiwać tych zdarzeń i zapytania <xref:System.Windows.Input.RoutedCommand> za <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fa378-158">Generally, the command source will listen for this event and query the <xref:System.Windows.Input.RoutedCommand> by way of the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method.</span></span>  <span data-ttu-id="fa378-159">Większości źródeł polecenie spowoduje wyłączenie samodzielnie, jeśli nie można wykonać polecenia jako część ich powiązania poleceń.</span><span class="sxs-lookup"><span data-stu-id="fa378-159">Most command sources will disable themselves if the command cannot be executed, as part of their command binding.</span></span>  <span data-ttu-id="fa378-160">Na przykład jest, gdy <xref:System.Windows.Controls.MenuItem> grays sam się, gdy nie można wykonać polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-160">An example of this is when a <xref:System.Windows.Controls.MenuItem> grays itself out when the command cannot be executed.</span></span>  
  
 <span data-ttu-id="fa378-161">W niektórych sytuacjach <xref:System.Windows.Input.CommandManager> jest niebranie pod uwagę zmiany w warunkach zmieniającą możliwości polecenia do wykonania.</span><span class="sxs-lookup"><span data-stu-id="fa378-161">In some situations, the <xref:System.Windows.Input.CommandManager> is unaware of a change in conditions that alters the ability of a command to execute.</span></span>  <span data-ttu-id="fa378-162">W takich przypadkach istnieje możliwość wymuszenia <xref:System.Windows.Input.CommandManager> do zgłasza <xref:System.Windows.Input.CommandManager.RequerySuggested> zdarzeń przez wywołanie metody <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> metody, z kolei spowoduje <xref:System.Windows.Input.RoutedCommand> podnieść <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fa378-162">In these cases, you can force the <xref:System.Windows.Input.CommandManager> to raises the <xref:System.Windows.Input.CommandManager.RequerySuggested> event by calling the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method, this will in turn cause the <xref:System.Windows.Input.RoutedCommand> to raise the <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa378-163">Poniższy przykład jest <xref:System.Windows.Input.ICommand.CanExecuteChanged> programu obsługi zdarzeń z niestandardową implementację <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="fa378-163">The following example is a <xref:System.Windows.Input.ICommand.CanExecuteChanged> event handler from a custom implementation of <xref:System.Windows.Input.ICommandSource>.</span></span>  
  
 <span data-ttu-id="fa378-164">`this.Command` w tym przykładzie jest <xref:System.Windows.Input.ICommandSource.Command%2A> właściwość <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="fa378-164">`this.Command` in this example is the <xref:System.Windows.Input.ICommandSource.Command%2A> property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="fa378-165">Jeśli polecenie nie jest `null`, polecenie jest rzutowany na <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="fa378-165">If the command is not `null`, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="fa378-166">Jeśli polecenie jest <xref:System.Windows.Input.RoutedCommand>, a następnie <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metoda jest wywoływana, przekazując <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> i <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa378-166">If the command is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="fa378-167">Jeśli polecenie nie jest <xref:System.Windows.Input.RoutedCommand>, jest rzutowany na <xref:System.Windows.Input.ICommand> i <xref:System.Windows.Input.ICommand.CanExecute%2A> metoda jest wywoływana, przekazując <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa378-167">If command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 <span data-ttu-id="fa378-168">Jeśli <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metoda zwraca `true`, następnie formant jest włączony; w przeciwnym razie kontrolka jest wyłączona.</span><span class="sxs-lookup"><span data-stu-id="fa378-168">If the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method returns `true`, then the control is enabled; otherwise, the control is disabled.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandcanexecutechanged)]
 [!code-vb[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandcanexecutechanged)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object parameter, System.Windows.IInputElement target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(object parameter, class System.Windows.IInputElement target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (parameter As Object, target As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Object ^ parameter, System::Windows::IInputElement ^ target);" />
      <MemberSignature Language="F#" Value="member this.Execute : obj * System.Windows.IInputElement -&gt; unit" Usage="routedCommand.Execute (parameter, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="target" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="fa378-169">Parametr do przekazania do narzędzia obsługi zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="fa378-169">User defined parameter to be passed to the handler.</span></span></param>
        <param name="target"><span data-ttu-id="fa378-170">Element, od którego należy rozpocząć wyszukiwanie programy obsługi poleceń.</span><span class="sxs-lookup"><span data-stu-id="fa378-170">Element at which to begin looking for command handlers.</span></span></param>
        <summary><span data-ttu-id="fa378-171">Wykonuje <see cref="T:System.Windows.Input.RoutedCommand" /> na aktualnym elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-171">Executes the <see cref="T:System.Windows.Input.RoutedCommand" /> on the current command target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa378-172">Rzeczywiste logika, która wykonuje <xref:System.Windows.Input.RoutedCommand> nie jest zawarta w <xref:System.Windows.Input.RoutedCommand.Execute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fa378-172">The actual logic that executes the <xref:System.Windows.Input.RoutedCommand> is not contained in the <xref:System.Windows.Input.RoutedCommand.Execute%2A> methods.</span></span>  <span data-ttu-id="fa378-173"><xref:System.Windows.Input.RoutedCommand.Execute%2A> wywołuje <xref:System.Windows.Input.CommandManager.PreviewExecuted> i <xref:System.Windows.Input.CommandManager.Executed> zdarzenia, które tunel i bąbelkowych za pośrednictwem elementu drzewa, szukanie obiektu z <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="fa378-173"><xref:System.Windows.Input.RoutedCommand.Execute%2A> raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events, which tunnel and bubble through the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="fa378-174">Jeśli <xref:System.Windows.Input.CommandBinding> tego <xref:System.Windows.Input.RoutedCommand> zostanie znaleziony, a następnie <xref:System.Windows.Input.ExecutedRoutedEventHandler> dołączone do <xref:System.Windows.Input.CommandBinding> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="fa378-174">If a <xref:System.Windows.Input.CommandBinding> for that <xref:System.Windows.Input.RoutedCommand> is found, then the <xref:System.Windows.Input.ExecutedRoutedEventHandler> attached to <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="fa378-175">Te procedury obsługi podać logikę programistyczną, który wykonuje <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="fa378-175">These handlers supply the programming logic that performs the <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 <span data-ttu-id="fa378-176"><xref:System.Windows.Input.CommandManager.PreviewExecuted> i <xref:System.Windows.Input.CommandManager.Executed> zdarzenia są wywoływane na <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa378-176">The <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events are raised on the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span></span>  <span data-ttu-id="fa378-177">Jeśli <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> nie jest ustawiony na <xref:System.Windows.Input.ICommandSource>, <xref:System.Windows.Input.CommandManager.PreviewExecuted> i <xref:System.Windows.Input.CommandManager.Executed> zdarzenia są wywoływane w elemencie fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="fa378-177">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set on the <xref:System.Windows.Input.ICommandSource>, the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events are raised on the element with keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa378-178">Poniższy przykład pochodzi z niestandardową implementację <xref:System.Windows.Input.ICommandSource> próbki.</span><span class="sxs-lookup"><span data-stu-id="fa378-178">The following example is from a custom implementation of <xref:System.Windows.Input.ICommandSource> sample.</span></span>  
  
 <span data-ttu-id="fa378-179">`this.Command` w tym przykładzie jest to właściwość polecenia na <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="fa378-179">`this.Command` in this example is the Command property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="fa378-180">Jeśli polecenie nie jest null, polecenie jest rzutowany na <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="fa378-180">If the command is not null, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="fa378-181">Jeśli jest <xref:System.Windows.Input.RoutedCommand>, a następnie <xref:System.Windows.Input.RoutedCommand.Execute%2A> metoda jest wywoływana, przekazując <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> i <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa378-181">If it is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="fa378-182">Jeśli polecenie nie jest <xref:System.Windows.Input.RoutedCommand>, jest rzutowany na <xref:System.Windows.Input.ICommand> i <xref:System.Windows.Input.ICommand.Execute%2A> metoda jest wywoływana, przekazując <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa378-182">If the command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.Execute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandExecute](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandexecute)]
 [!code-vb[ImplementICommandSource#ImplementICommandExecute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandexecute)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fa378-183"><paramref name="target" /> nie jest <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-183"><paramref name="target" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InputGestures">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputGestureCollection InputGestures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGestureCollection InputGestures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.InputGestures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputGestures As InputGestureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputGestureCollection ^ InputGestures { System::Windows::Input::InputGestureCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputGestures : System.Windows.Input.InputGestureCollection" Usage="System.Windows.Input.RoutedCommand.InputGestures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGestureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa378-184">Pobiera kolekcję <see cref="T:System.Windows.Input.InputGesture" /> obiekty, które są skojarzone z tym poleceniem.</span><span class="sxs-lookup"><span data-stu-id="fa378-184">Gets the collection of <see cref="T:System.Windows.Input.InputGesture" /> objects that are associated with this command.</span></span></summary>
        <value><span data-ttu-id="fa378-185">Gesty danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="fa378-185">The input gestures.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa378-186">Poniższy przykład pokazuje, jak dodać nową <xref:System.Windows.Input.MouseGesture> do <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="fa378-186">The following example shows how to add a new <xref:System.Windows.Input.MouseGesture> to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedcommand)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedcommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Input.RoutedCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa378-187">Pobiera nazwę polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-187">Gets the name of the command.</span></span></summary>
        <value><span data-ttu-id="fa378-188">Nazwę polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-188">The name of the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa378-189">Tej właściwości można używać podczas odwoływania się do <xref:System.Windows.Input.RoutedCommand> w [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="fa378-189">This property can be used when referencing a <xref:System.Windows.Input.RoutedCommand> in [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerType">
      <MemberSignature Language="C#" Value="public Type OwnerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type OwnerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.OwnerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ OwnerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerType : Type" Usage="System.Windows.Input.RoutedCommand.OwnerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa378-190">Pobiera typ, który jest zarejestrowany za pomocą polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-190">Gets the type that is registered with the command.</span></span></summary>
        <value><span data-ttu-id="fa378-191">Typ właściciela polecenia.</span><span class="sxs-lookup"><span data-stu-id="fa378-191">The type of the command owner.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.ICommand.CanExecute">
      <MemberSignature Language="C#" Value="bool ICommand.CanExecute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Input.ICommand.CanExecute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CanExecute (parameter As Object) As Boolean Implements ICommand.CanExecute" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Input.ICommand.CanExecute(System::Object ^ parameter) = System::Windows::Input::ICommand::CanExecute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.ICommand.CanExecute(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="fa378-192">Dane używane przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="fa378-192">Data used by the command.</span></span>  <span data-ttu-id="fa378-193">Jeśli polecenie nie wymaga przekazywania danych, ten obiekt może być równa <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-193">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fa378-194">Aby uzyskać opis składowe this, zobacz <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-194">For a description of this members, see <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="fa378-195"><see langword="true" /> Jeśli to polecenie może zostać wykonane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-195"><see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa378-196">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="fa378-196">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa378-197">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Input.RoutedCommand> wystąpienia jest rzutowany na <xref:System.Windows.Input.ICommand> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="fa378-197">It can be used only when the <xref:System.Windows.Input.RoutedCommand> instance is cast to an <xref:System.Windows.Input.ICommand> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.ICommand.Execute">
      <MemberSignature Language="C#" Value="void ICommand.Execute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Input.ICommand.Execute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Execute (parameter As Object) Implements ICommand.Execute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Input.ICommand.Execute(System::Object ^ parameter) = System::Windows::Input::ICommand::Execute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.ICommand.Execute(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="fa378-198">Dane używane przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="fa378-198">Data used by the command.</span></span>  <span data-ttu-id="fa378-199">Jeśli polecenie nie wymaga przekazywania danych, ten obiekt może być równa <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-199">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fa378-200">Aby uzyskać opis składowe this, zobacz <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="fa378-200">For a description of this members, see <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa378-201">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="fa378-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fa378-202">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Input.RoutedCommand> wystąpienia jest rzutowany na <xref:System.Windows.Input.ICommand> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="fa378-202">It can be used only when the <xref:System.Windows.Input.RoutedCommand> instance is cast to an <xref:System.Windows.Input.ICommand> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa378-203">Zobacz też</span><span class="sxs-lookup"><span data-stu-id="fa378-203">See Also</span></span>  
  
 <xref:System.Windows.Input.RoutedCommand.Execute%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>