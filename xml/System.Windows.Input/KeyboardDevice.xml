<Type Name="KeyboardDevice" FullName="System.Windows.Input.KeyboardDevice">
  <TypeSignature Language="C#" Value="public abstract class KeyboardDevice : System.Windows.Input.InputDevice" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit KeyboardDevice extends System.Windows.Input.InputDevice" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyboardDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyboardDevice&#xA;Inherits InputDevice" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyboardDevice abstract : System::Windows::Input::InputDevice" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="be554-101">Klasa ogólna reprezentuje urządzenia klawiatury.</span><span class="sxs-lookup"><span data-stu-id="be554-101">Abstract class that represents a keyboard device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be554-102"><xref:System.Windows.Input.KeyboardDevice> Obsługuje [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastrukturę i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="be554-102">The <xref:System.Windows.Input.KeyboardDevice> supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="be554-103">Klawiatura powiązane dane wejściowe, użyj <xref:System.Windows.Input.Keyboard> klasy.</span><span class="sxs-lookup"><span data-stu-id="be554-103">For keyboard related input, use the <xref:System.Windows.Input.Keyboard> class.</span></span> <span data-ttu-id="be554-104"><xref:System.Windows.Input.Keyboard> Klasa reprezentuje klawiatury do aplikacji i dostarcza metod, właściwości i zdarzenia, które odzwierciedlają stan klawiatury.</span><span class="sxs-lookup"><span data-stu-id="be554-104">The <xref:System.Windows.Input.Keyboard> class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard.</span></span>  
  
 <span data-ttu-id="be554-105"><xref:System.Windows.Input.Keyboard> Klasy obiektów delegowanych z odpowiednią <xref:System.Windows.Input.KeyboardDevice>.</span><span class="sxs-lookup"><span data-stu-id="be554-105">The <xref:System.Windows.Input.Keyboard> class delegates to the appropriate <xref:System.Windows.Input.KeyboardDevice>.</span></span>  
  
 <span data-ttu-id="be554-106">Każdy <xref:System.Windows.Input.InputDevice> obiekt reprezentuje jeden określone urządzenie wejściowe.</span><span class="sxs-lookup"><span data-stu-id="be554-106">Each <xref:System.Windows.Input.InputDevice> object represents one particular input device.</span></span>  <span data-ttu-id="be554-107">Na przykład w przypadku dwóch myszy będą istnieć dwa <xref:System.Windows.Input.InputDevice> obiektów.</span><span class="sxs-lookup"><span data-stu-id="be554-107">For example, if there are two mice, there will be two <xref:System.Windows.Input.InputDevice> objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.Keyboard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyboardDevice (System.Windows.Input.InputManager inputManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.InputManager inputManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyboardDevice(System::Windows::Input::InputManager ^ inputManager);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="inputManager" Type="System.Windows.Input.InputManager" />
      </Parameters>
      <Docs>
        <param name="inputManager"><span data-ttu-id="be554-108">Menedżer wejściowych skojarzonych z tym <see cref="T:System.Windows.Input.KeyboardDevice" />.</span><span class="sxs-lookup"><span data-stu-id="be554-108">The input manager associated with this <see cref="T:System.Windows.Input.KeyboardDevice" />.</span></span></param>
        <summary><span data-ttu-id="be554-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.KeyboardDevice" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="be554-109">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyboardDevice" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyboardDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be554-110">Pobiera <see cref="T:System.Windows.PresentationSource" /> zgłasza danych wejściowych dla tego urządzenia.</span><span class="sxs-lookup"><span data-stu-id="be554-110">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span></span></summary>
        <value><span data-ttu-id="be554-111">Źródło danych wejściowych dla tego urządzenia.</span><span class="sxs-lookup"><span data-stu-id="be554-111">The source of input for this device.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="be554-112">do uzyskania active źródła.</span><span class="sxs-lookup"><span data-stu-id="be554-112">for getting the active source.</span></span>  <span data-ttu-id="be554-113">Wyliczenia skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="be554-113">Associated enumerations: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardDevice.ClearFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be554-114">Czyści fokus.</span><span class="sxs-lookup"><span data-stu-id="be554-114">Clears focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be554-115"><xref:System.Windows.Input.KeyboardDevice.ClearFocus%2A> Metody Ustawia fokus `null`.</span><span class="sxs-lookup"><span data-stu-id="be554-115">The <xref:System.Windows.Input.KeyboardDevice.ClearFocus%2A> method sets the focus to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultRestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode DefaultRestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be554-116">Pobiera lub ustawia zachowanie [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] podczas przywracania fokus.</span><span class="sxs-lookup"><span data-stu-id="be554-116">Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.</span></span></summary>
        <value><span data-ttu-id="be554-117">Wartość wyliczenia, który określa zachowania [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] podczas przywracania fokus.</span><span class="sxs-lookup"><span data-stu-id="be554-117">An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus.</span></span> <span data-ttu-id="be554-118">Domyślnie <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span><span class="sxs-lookup"><span data-stu-id="be554-118">The default in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Focus (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.IInputElement Focus(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus (element As IInputElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ Focus(System::Windows::IInputElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="be554-119">Przenosi zaznaczenie do elementu.</span><span class="sxs-lookup"><span data-stu-id="be554-119">The element to move focus to.</span></span></param>
        <summary><span data-ttu-id="be554-120">Ustawia fokus klawiatury określonego <see cref="T:System.Windows.IInputElement" />.</span><span class="sxs-lookup"><span data-stu-id="be554-120">Sets keyboard focus on the specified <see cref="T:System.Windows.IInputElement" />.</span></span></summary>
        <returns><span data-ttu-id="be554-121">Element, który ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="be554-121">The element that has keyboard focus.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be554-122"><paramref name="element" /> nie jest <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="be554-122"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyboardDevice.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusedElement As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ FocusedElement { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be554-123">Pobiera element, który ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="be554-123">Gets the element that has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="be554-124">Element z fokusem klawiatury.</span><span class="sxs-lookup"><span data-stu-id="be554-124">The element with keyboard focus.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStates">
      <MemberSignature Language="C#" Value="public System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Input.KeyStates GetKeyStates(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::KeyStates GetKeyStates(System::Windows::Input::Key key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="be554-125">Klucz do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="be554-125">The key to check.</span></span></param>
        <summary><span data-ttu-id="be554-126">Pobiera zestaw kluczy stanów dla określonego <see cref="T:System.Windows.Input.Key" />.</span><span class="sxs-lookup"><span data-stu-id="be554-126">Gets the set of key states for the specified <see cref="T:System.Windows.Input.Key" />.</span></span></summary>
        <returns><span data-ttu-id="be554-127">Zestaw kluczy stanów dla określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="be554-127">The set of key states for the specified key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="be554-128"><paramref name="key" /> nie jest prawidłowym kluczem.</span><span class="sxs-lookup"><span data-stu-id="be554-128"><paramref name="key" /> is not a valid key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStatesFromSystem">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Input.KeyStates GetKeyStatesFromSystem (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Input.KeyStates GetKeyStatesFromSystem(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Input::KeyStates GetKeyStatesFromSystem(System::Windows::Input::Key key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="be554-129">Klucz do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="be554-129">The key to check.</span></span></param>
        <summary><span data-ttu-id="be554-130">W przypadku przesłonięcia w klasie pochodnej pobiera <see cref="T:System.Windows.Input.KeyStates" /> dla określonego <see cref="T:System.Windows.Input.Key" />.</span><span class="sxs-lookup"><span data-stu-id="be554-130">When overridden in a derived class, obtains the <see cref="T:System.Windows.Input.KeyStates" /> for the specified <see cref="T:System.Windows.Input.Key" />.</span></span></summary>
        <returns><span data-ttu-id="be554-131">Zestaw kluczy stanów dla określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="be554-131">The set of key states for the specified key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyDown">
      <MemberSignature Language="C#" Value="public bool IsKeyDown (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsKeyDown(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsKeyDown(System::Windows::Input::Key key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="be554-132">Klucz do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="be554-132">The key to check.</span></span></param>
        <summary><span data-ttu-id="be554-133">Określa, czy określony <see cref="T:System.Windows.Input.Key" /> jest w stanie down.</span><span class="sxs-lookup"><span data-stu-id="be554-133">Determines whether the specified <see cref="T:System.Windows.Input.Key" /> is in the down state.</span></span></summary>
        <returns>
          <span data-ttu-id="be554-134"><see langword="true" /> Jeśli <paramref name="key" /> jest w stanie stanu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="be554-134"><see langword="true" /> if <paramref name="key" /> is in the down state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="be554-135"><paramref name="key" /> nie jest prawidłowym kluczem.</span><span class="sxs-lookup"><span data-stu-id="be554-135"><paramref name="key" /> is not a valid key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsKeyToggled">
      <MemberSignature Language="C#" Value="public bool IsKeyToggled (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsKeyToggled(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsKeyToggled(System::Windows::Input::Key key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="be554-136">Klucz do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="be554-136">The key to check.</span></span></param>
        <summary><span data-ttu-id="be554-137">Określa, czy określony <see cref="T:System.Windows.Input.Key" /> jest w stanie przełączony.</span><span class="sxs-lookup"><span data-stu-id="be554-137">Determines whether the specified <see cref="T:System.Windows.Input.Key" /> is in the toggled state.</span></span></summary>
        <returns>
          <span data-ttu-id="be554-138"><see langword="true" /> Jeśli <paramref name="key" /> jest przełączony stanu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="be554-138"><see langword="true" /> if <paramref name="key" /> is in the toggled state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="be554-139"><paramref name="key" /> nie jest prawidłowym kluczem.</span><span class="sxs-lookup"><span data-stu-id="be554-139"><paramref name="key" /> is not a valid key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsKeyUp">
      <MemberSignature Language="C#" Value="public bool IsKeyUp (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsKeyUp(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsKeyUp(System::Windows::Input::Key key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="be554-140">Klucz do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="be554-140">The key to check.</span></span></param>
        <summary><span data-ttu-id="be554-141">Określa, czy określony <see cref="T:System.Windows.Input.Key" /> jest w stanie up.</span><span class="sxs-lookup"><span data-stu-id="be554-141">Determines whether the specified <see cref="T:System.Windows.Input.Key" /> is in the up state.</span></span></summary>
        <returns>
          <span data-ttu-id="be554-142"><see langword="true" /> Jeśli <paramref name="key" /> znajduje się w górę stanu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="be554-142"><see langword="true" /> if <paramref name="key" /> is in the up state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="be554-143"><paramref name="key" /> nie jest prawidłowym kluczem.</span><span class="sxs-lookup"><span data-stu-id="be554-143"><paramref name="key" /> is not a valid key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyboardDevice.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be554-144">Pobiera zestaw <see cref="T:System.Windows.Input.ModifierKeys" /> które są obecnie naciśnięty.</span><span class="sxs-lookup"><span data-stu-id="be554-144">Gets the set of <see cref="T:System.Windows.Input.ModifierKeys" /> which are currently pressed.</span></span></summary>
        <value><span data-ttu-id="be554-145">Zestaw klawisze modyfikujące.</span><span class="sxs-lookup"><span data-stu-id="be554-145">The set of modifier keys.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyboardDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be554-146">Pobiera określony <see cref="T:System.Windows.IInputElement" /> czy dane wejściowe z tego urządzenia są wysyłane do.</span><span class="sxs-lookup"><span data-stu-id="be554-146">Gets the specified <see cref="T:System.Windows.IInputElement" /> that input from this device is sent to.</span></span></summary>
        <value><span data-ttu-id="be554-147">Element, który odbiera dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="be554-147">The element that receives input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be554-148">Element docelowy dla <xref:System.Windows.Input.KeyboardDevice> jest obiekt, który ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="be554-148">The target for a <xref:System.Windows.Input.KeyboardDevice> is the object that has keyboard focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>