<Type Name="MouseDevice" FullName="System.Windows.Input.MouseDevice">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5cec333e50d22e629a8c194bb0896038bc8bf171" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55345802" /></Metadata><TypeSignature Language="C#" Value="public abstract class MouseDevice : System.Windows.Input.InputDevice" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MouseDevice extends System.Windows.Input.InputDevice" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MouseDevice&#xA;Inherits InputDevice" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseDevice abstract : System::Windows::Input::InputDevice" />
  <TypeSignature Language="F#" Value="type MouseDevice = class&#xA;    inherit InputDevice" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje urządzenie myszy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.MouseDevice> Obsługuje [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastrukturę i nie jest przeznaczona do użycia bezpośrednio w kodzie.  
  
 Myszy związane z danych wejściowych, użyj <xref:System.Windows.Input.Mouse> klasy.  <xref:System.Windows.Input.Mouse> Klasa reprezentuje wskaźnik myszy do aplikacji i udostępnia metody, właściwości i zdarzenia, które odzwierciedlają stan przycisku myszy.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
  <Members>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveSource : System.Windows.PresentationSource" Usage="System.Windows.Input.MouseDevice.ActiveSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.PresentationSource" /> zgłasza dane wejściowe dla tego urządzenia.</summary>
        <value>Źródło danych wejściowych dla tego urządzenia.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">w celu uzyskania aktywne źródłowe.  Skojarzone wyliczeń:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przechwytuje dane wejściowe myszy określony element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element przechwytuje mysz, otrzymuje wejście myszy czy kursor znajduje się w jego granicach.  
  
 Jeśli <xref:System.Windows.Input.CaptureMode> nie zostanie określony, domyślnie <xref:System.Windows.Input.CaptureMode> jest <xref:System.Windows.Input.CaptureMode.Element>.  
  
 Aby zwolnić przechwytywanie myszy, należy wywołać <xref:System.Windows.Input.MouseDevice.Capture%2A> przekazywanie `null` jako element do przechwytywania.  
  
 Jeśli przycisk myszy jest przechwytywane podczas <xref:System.Windows.Input.Mouse.MouseDown> lub <xref:System.Windows.Input.Mouse.MouseUp> zdarzenie jest zgłaszane i nie ma danych wejściowych do elementu poniżej mysz, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> i <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> są inicjowane jako pierwsze.  Dzięki temu przechwyconych element szansę, aby zwolnić Przechwytywanie przed <xref:System.Windows.Input.Mouse.MouseDown> i <xref:System.Windows.Input.Mouse.MouseUp> są kierowane zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement -&gt; bool" Usage="mouseDevice.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">Element do przechwytywania myszą.</param>
        <summary>Rejestruje zdarzenia myszy do określonego elementu.</summary>
        <returns><see langword="true" /> Jeśli element był w stanie przechwytywania myszy; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element przechwytuje mysz, czy kursor znajduje się w jego granicach odbiera wejście myszy  
  
 Jeśli <xref:System.Windows.Input.CaptureMode> nie zostanie określony, domyślnie <xref:System.Windows.Input.CaptureMode> jest <xref:System.Windows.Input.CaptureMode.Element>.  
  
 Aby zwolnić przechwytywanie myszy, należy wywołać <xref:System.Windows.Input.MouseDevice.Capture%2A> przekazywanie `null` jako element do przechwytywania.  
  
 Jeśli przycisk myszy jest przechwytywane podczas <xref:System.Windows.Input.Mouse.MouseDown> lub <xref:System.Windows.Input.Mouse.MouseUp> zdarzenie jest zgłaszane i nie ma danych wejściowych do elementu poniżej mysz, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> i <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> są inicjowane jako pierwsze.  Dzięki temu przechwyconych element szansę, aby zwolnić Przechwytywanie przed <xref:System.Windows.Input.Mouse.MouseDown> i <xref:System.Windows.Input.Mouse.MouseUp> są kierowane zdarzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="element" /> nie jest <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="mouseDevice.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">Element do przechwytywania myszą.</param>
        <param name="captureMode">Zasady przechwytywania do użycia.</param>
        <summary>Przechwytuje dane wejściowe myszy określony element przy użyciu określonego <see cref="T:System.Windows.Input.CaptureMode" />.</summary>
        <returns><see langword="true" /> Jeśli element był w stanie przechwytywania myszy; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element przechwytuje mysz, otrzymuje wejście myszy czy kursor znajduje się w jego granicach.  
  
 Aby zwolnić przechwytywanie myszy, należy wywołać <xref:System.Windows.Input.MouseDevice.Capture%2A> przekazywanie `null` jako element do przechwytywania.  
  
 Jeśli przycisk myszy jest przechwytywane podczas <xref:System.Windows.Input.Mouse.MouseDown> lub <xref:System.Windows.Input.Mouse.MouseUp> zdarzenie jest zgłaszane i nie ma danych wejściowych do elementu poniżej mysz, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> i <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> są inicjowane jako pierwsze.  Dzięki temu przechwyconych element szansę, aby zwolnić Przechwytywanie przed <xref:System.Windows.Input.Mouse.MouseDown> i <xref:System.Windows.Input.Mouse.MouseUp> są kierowane zdarzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="element" /> nie jest <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="captureMode" /> nie jest prawidłowym <see cref="T:System.Windows.Input.CaptureMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.MouseDevice.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.IInputElement" /> przechwytywane przy użyciu myszy.</summary>
        <value>Element, który jest przechwytywane przy użyciu myszy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element przechwytuje mysz, otrzymuje wejście myszy czy kursor znajduje się w jego granicach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.MouseDevice.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element, który wskaźnik myszy znajduje się bezpośrednio za pośrednictwem.</summary>
        <value>Element wskaźnik myszy znajduje się nad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wskaźnik myszy jest uważany za bezpośrednio nad elementem, gdy wskaźnik myszy zostanie przechwycony z tym elementem.  
  
 Formanty może składać się z wielu elementów. <xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> Raporty określonego elementu złożonego formantu, który znajduje się wskaźnik myszy nad i nie formantu.  Na przykład, w zależności od część <xref:System.Windows.Controls.Button> wskaźnik znajduje się nad, <xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> właściwości można raportować <xref:System.Windows.Controls.TextBox> z <xref:System.Windows.Controls.ContentControl.Content%2A> właściwości lub <xref:Microsoft.Windows.Themes.ButtonChrome>.  
  
 Użyj <xref:System.Windows.IInputElement.IsMouseOver%2A> właściwość <xref:System.Windows.UIElement> i <xref:System.Windows.ContentElement> ustalić, czy wskaźnik myszy nad elementem, w tym jego elementy podrzędne visual lub kontroluje elementy, składania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetButtonState">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.MouseButtonState GetButtonState (System.Windows.Input.MouseButton mouseButton);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Input.MouseButtonState GetButtonState(valuetype System.Windows.Input.MouseButton mouseButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Input::MouseButtonState GetButtonState(System::Windows::Input::MouseButton mouseButton);" />
      <MemberSignature Language="F#" Value="member this.GetButtonState : System.Windows.Input.MouseButton -&gt; System.Windows.Input.MouseButtonState" Usage="mouseDevice.GetButtonState mouseButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mouseButton" Type="System.Windows.Input.MouseButton" />
      </Parameters>
      <Docs>
        <param name="mouseButton">Przycisk, którego dotyczy kwerenda.</param>
        <summary>Pobiera stan przycisku myszy określony.</summary>
        <returns>Stan przycisku.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClientPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Oblicza pozycji wskaźnika myszy w współrzędne klienta.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClientPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetClientPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetClientPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetClientPosition" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetClientPosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetClientPosition();" />
      <MemberSignature Language="F#" Value="member this.GetClientPosition : unit -&gt; System.Windows.Point" Usage="mouseDevice.GetClientPosition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oblicza pozycji wskaźnika myszy w współrzędne klienta.</summary>
        <returns>Pozycja wskaźnika myszy współrzędne klienta.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetClientPosition (System.Windows.PresentationSource presentationSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetClientPosition(class System.Windows.PresentationSource presentationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetClientPosition(System::Windows::PresentationSource ^ presentationSource);" />
      <MemberSignature Language="F#" Value="member this.GetClientPosition : System.Windows.PresentationSource -&gt; System.Windows.Point" Usage="mouseDevice.GetClientPosition presentationSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presentationSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="presentationSource">Źródło, w którym można uzyskać położenia kursora myszy.</param>
        <summary>Oblicza pozycji wskaźnika myszy w współrzędne klienta, w określonym <see cref="T:System.Windows.PresentationSource" />.</summary>
        <returns>Pozycja wskaźnika myszy w współrzędne klienta, w określonym <see cref="T:System.Windows.PresentationSource" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="mouseDevice.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">Układem odniesienia w ramach którego ma zostać obliczona położenie kursora myszy.</param>
        <summary>Pobiera położenie kursora myszy względem określonego elementu.</summary>
        <returns>Położenie kursora myszy względem parametru <paramref name="relativeTo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pozycja wskaźnika myszy jest obliczana względem określonego <xref:System.Windows.IInputElement> za pomocą lewego górnego rogu elementu jest punkt początkowy, od 0,0.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="relativeTo" /> jest <see langword="null" /> lub nie jest <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetScreenPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetScreenPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetScreenPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetScreenPosition" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetScreenPosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetScreenPosition();" />
      <MemberSignature Language="F#" Value="member this.GetScreenPosition : unit -&gt; System.Windows.Point" Usage="mouseDevice.GetScreenPosition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oblicza pozycję wskaźnika myszy na ekranie.</summary>
        <returns>Pozycja wskaźnika myszy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.LeftButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseDevice.LeftButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan lewego przycisku myszy nad tym urządzeniem myszy.</summary>
        <value>Stan przycisku.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.MiddleButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseDevice.MiddleButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stan środkowy przycisk to urządzenie myszy.</summary>
        <value>Stan przycisku.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.Input.MouseDevice.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kursor dla całej aplikacji.</summary>
        <value>Kursor zastąpienia lub <see langword="null" /> Jeśli <see cref="P:System.Windows.Input.MouseDevice.OverrideCursor" /> nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Cursor> , <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> Jest ustawiona na będą stosowane do całej aplikacji.  
  
 Aby wyczyścić zastąpienie <xref:System.Windows.Input.Cursor>ustaw <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> do `null`.  
  
 Ustawienie <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> do <xref:System.Windows.Input.Cursors.None%2A> wymusi kursora myszy, które nie mają być wyświetlane, ale zdarzenia myszy są nadal przetwarzane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.RightButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseDevice.RightButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan prawy przycisk to urządzenie myszy.</summary>
        <value>Stan przycisku.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberSignature Language="F#" Value="member this.SetCursor : System.Windows.Input.Cursor -&gt; bool" Usage="mouseDevice.SetCursor cursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor">Kursora, aby ustawić wskaźnik myszy.</param>
        <summary>Ustawia kursor do określonego <see cref="T:System.Windows.Input.Cursor" /></summary>
        <returns><see langword="true" /> Jeśli ustawiono kursora myszy; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uwaga Ten kursor nie dotyczy dowolnego określonego <xref:System.Windows.UIElement>, ale raczej ma zastosowanie do całej aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberSignature Language="F#" Value="member this.Synchronize : unit -&gt; unit" Usage="mouseDevice.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wymusza myszą, aby ponownie zsynchronizować.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.MouseDevice> Monitoruje zmiany układu i wywołania <xref:System.Windows.Input.MouseDevice.Synchronize%2A>.  Istnieją przypadki, w których system wejściowy myszy musi musieli zaktualizować go do reagowania na zmiany.  Na przykład należy ponownie zsynchronizować myszy przez czasomierz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.IInputElement" Usage="System.Windows.Input.MouseDevice.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.IInputElement" /> przesyłanych danych wejściowych z tego urządzenia myszy.</summary>
        <value>Element, który odbiera dane wejściowe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element docelowy akcji <xref:System.Windows.Input.MouseDevice> jest obiekt wskaźnik myszy znajduje się nad lub przez przechwytywanie myszy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCursor();" />
      <MemberSignature Language="F#" Value="member this.UpdateCursor : unit -&gt; unit" Usage="mouseDevice.UpdateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wymusza kursora myszy, aby zaktualizować.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton1 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseDevice.XButton1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan pierwszy przycisk rozszerzone na tym urządzeniu myszy.</summary>
        <value>Stan przycisku.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton2 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseDevice.XButton2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan drugi przycisk rozszerzonej nad tym urządzeniem myszy.</summary>
        <value>Stan przycisku.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>