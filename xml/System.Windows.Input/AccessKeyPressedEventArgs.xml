<Type Name="AccessKeyPressedEventArgs" FullName="System.Windows.Input.AccessKeyPressedEventArgs">
  <TypeSignature Language="C#" Value="public class AccessKeyPressedEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessKeyPressedEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.AccessKeyPressedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessKeyPressedEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessKeyPressedEventArgs : System::Windows::RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="502e0-101">Udostępnia dane dla <see cref="T:System.Windows.Input.AccessKeyManager" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="502e0-101">Provides data for the <see cref="T:System.Windows.Input.AccessKeyManager" /> routed event.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Input.AccessKeyManager" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="502e0-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="502e0-102">Initializes a new instance of the <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.AccessKeyManager>  
  
 <xref:System.Windows.Input.AccessKeyPressedEventHandler>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessKeyPressedEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyPressedEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessKeyPressedEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="502e0-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="502e0-103">Initializes a new instance of the <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
        <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessKeyPressedEventArgs (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyPressedEventArgs.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessKeyPressedEventArgs(System::String ^ key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="502e0-104">Klucz dostępu.</span><span class="sxs-lookup"><span data-stu-id="502e0-104">The access key.</span></span></param>
        <summary><span data-ttu-id="502e0-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.AccessKeyPressedEventArgs" /> klasy z kluczem określonym dostępu.</span><span class="sxs-lookup"><span data-stu-id="502e0-105">Initializes a new instance of the <see cref="T:System.Windows.Input.AccessKeyPressedEventArgs" /> class with the specified access key.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
        <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyPressedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="502e0-106">Ogólny program obsługi do wywołania w sposób określonego typu.</span><span class="sxs-lookup"><span data-stu-id="502e0-106">The generic handler to call in a type-specific way.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="502e0-107">Element docelowy może wywołać programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="502e0-107">The target to call the handler on.</span></span></param>
        <summary><span data-ttu-id="502e0-108">Wywołuje procedury obsługi zdarzeń w sposób określonego typu, co może zwiększyć wydajność systemu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="502e0-108">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="502e0-109">Ta implementacja rzutuje obsługi ogólnej jako <xref:System.Windows.Input.AccessKeyPressedEventHandler> , a następnie wywołuje go.</span><span class="sxs-lookup"><span data-stu-id="502e0-109">This implementation casts the generic handler as an <xref:System.Windows.Input.AccessKeyPressedEventHandler> and then invokes it.</span></span> <span data-ttu-id="502e0-110">Szczegółowe informacje dotyczące tego wzorca implementacji i przyczyny, zobacz <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> i [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="502e0-110">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
        <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public string Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.AccessKeyPressedEventArgs.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Key { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="502e0-111">Pobiera reprezentację ciągu naciśnięty klawisz dostępu</span><span class="sxs-lookup"><span data-stu-id="502e0-111">Gets a string representation of the access key that was pressed</span></span></summary>
        <value><span data-ttu-id="502e0-112">Klucz dostępu.</span><span class="sxs-lookup"><span data-stu-id="502e0-112">The access key.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
        <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public object Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Scope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.AccessKeyPressedEventArgs.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Scope { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="502e0-113">Pobiera element, który wywołał zdarzenie ten zakres.</span><span class="sxs-lookup"><span data-stu-id="502e0-113">Gets the scope for the element that raised this event.</span></span></summary>
        <value><span data-ttu-id="502e0-114">Zakres elementu.</span><span class="sxs-lookup"><span data-stu-id="502e0-114">The element's scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="502e0-115">Zakres określa obszar, w których stosowane są klucze dostępu, takie jak klucze menu lub wyskakujących kluczy.</span><span class="sxs-lookup"><span data-stu-id="502e0-115">The scope identifies the area where the access keys, such as menu keys or pop-up keys, are applied.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
        <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.AccessKeyPressedEventArgs.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Target { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="502e0-116">Pobiera lub ustawia element docelowy dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="502e0-116">Gets or sets the target for the event.</span></span></summary>
        <value><span data-ttu-id="502e0-117">Element, który wywołał to zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="502e0-117">The element that raised this event.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
        <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
      </Docs>
    </Member>
  </Members>
</Type>