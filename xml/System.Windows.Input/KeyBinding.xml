<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyBinding.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f7ffcff8092d477e75345cd0afc6f0d3c265489e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7ffcff8092d477e75345cd0afc6f0d3c265489e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyBinding">
          <source>Binds a <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> (or another  <ph id="ph3">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> implementation).</source>
          <target state="translated">Wiąże <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> (lub innego <ph id="ph3">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> implementacji).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> associates a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> with a <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, such as a <ph id="ph4">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> kojarzy <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> z <ph id="ph3">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, takich jak <ph id="ph4">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is the primary implementation of the <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> interface for the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> commanding system .</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> to implementacja podstawowego <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> interfejs na potrzeby <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> droższe systemu.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>In general, when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> value.</source>
          <target state="translated">Zwykle, gdy <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> wykonywania polecenia zostanie wywołany, mimo że zachowania polecenia jest dalsze zależeć od czynników specyficzne dla polecenia takie jak <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>For more information on commanding, see the <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na wydawanie poleceń, zobacz <bpt id="p1">[</bpt>droższe omówienie<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>With the exception of the function keys and the numeric keypad keys, a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain exactly one <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">Z wyjątkiem klawiszy funkcyjnych i klucze numerycznej prawidłową <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> musi zawierać dokładnie jeden <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> i co najmniej jeden <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>Function keys and numeric keypad keys do not require a modifier key in order to be a valid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">Funkcja klucze i klucze numerycznej nie wymagają klawisz modyfikujący aby mogła być prawidłowym <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>It is possible to specify an invalid <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> with an invalid associated gesture, either through <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> or code.</source>
          <target state="translated">Istnieje możliwość określenia nieprawidłową <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> z nieprawidłową skojarzone gestu, za pośrednictwem <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> lub kodu.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>For instance, there is no validation that prevents creating and binding a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> that contains only a nonfunction key, or only modifiers but no key.</source>
          <target state="translated">Na przykład istnieje nie weryfikacji, który uniemożliwia tworzenie i powiązanie <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> zawiera tylko klucz niefunkcjonalnego, lub tylko Modyfikatory ale żaden klucz.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>Such a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> will never attempt to invoke its associated command.</source>
          <target state="translated">Takie <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> nigdy nie będzie podejmować próby wywołania jego skojarzone polecenie.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>When defining a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">Podczas definiowania <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> w <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> istnieją dwa sposoby określania <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The first way to establish a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is to define the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute of the <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">Pierwszym sposobem ustanowienia <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> w <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> jest określenie <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atrybutu <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, który umożliwia składni określić kluczy i Modyfikatory jako pojedynczy ciąg, na przykład "CTRL + P".</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The second way is to define the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> attribute and the <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> attributes of the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element.</source>
          <target state="translated">Drugim sposobem jest zdefiniowanie <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> atrybutu i <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> atrybuty <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>Both ways of setting the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">Obie strony ustawienie <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> są równoważne i modyfikować tego samego obiektu źródłowego, ale będzie konflikt, jeśli obie są używane.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>In the case when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attributes are all set, the attribute which is defined last will be used for the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">W przypadku gdy <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>i <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atrybuty są ustawione, atrybut, który jest zdefiniowany ostatnio będzie służyć do <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>You can potentially have situations where for example a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">Potencjalnie może mieć sytuacji, gdy na przykład <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> zestaw ostatnio będzie zastąpić tylko składnik klucza poprzedniego gestu, ale pozostawić Modyfikatory gestu takie same.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>In general, it is recommended that you use only the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute from <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">Ogólnie rzecz biorąc, zaleca się używanie tylko <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atrybutu z <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; to uniknąć niejednoznaczności, zapewnia najbardziej prostsze składni i zapewnia najbardziej oczywistym reprezentacja do serializacji.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> can be defined on a specific object or at the class level by registering a <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> class.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> można zdefiniować określonego obiektu lub na poziomie klasy rejestrując <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph> na <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The most typical way to define a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> is within the control template, setting the <ph id="ph2">&lt;xref:System.Windows.UIElement.InputBindings%2A&gt;</ph> property in <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> by declaring one or more <ph id="ph4">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elements.</source>
          <target state="translated">Najbardziej typowy sposób definiowania <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> znajduje się w kontroli szablonu ustawienie <ph id="ph2">&lt;xref:System.Windows.UIElement.InputBindings%2A&gt;</ph> właściwości w <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> przez zadeklarowanie co najmniej jeden <ph id="ph4">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> lub <ph id="ph5">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elementów.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyBinding">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and adds it to the <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> of the root window.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> i dodaje go do <ph id="ph2">&lt;xref:System.Windows.Input.InputBindingCollection&gt;</ph> okna głównego.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyBinding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source>The command to associate with <bpt id="p1">&lt;c&gt;</bpt>gesture<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Polecenie, aby skojarzyć z <bpt id="p1">&lt;c&gt;</bpt>gestu<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source>The key combination to associate with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Kombinacja klawiszy do skojarzenia z <bpt id="p1">&lt;c&gt;</bpt>polecenia<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> przy użyciu określonego <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> i <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
          <source><ph id="ph1">&lt;paramref name="command" /&gt;</ph> or <ph id="ph2">&lt;paramref name="gesture" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="command" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="gesture" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The command to invoke.</source>
          <target state="translated">Polecenie do wywołania.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The key to be associated with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Klucz, który ma zostać skojarzony z <bpt id="p1">&lt;c&gt;</bpt>polecenia<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>The modifiers to be associated with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Modyfikatory ma być skojarzone z <bpt id="p1">&lt;c&gt;</bpt>polecenia<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> and the specified <ph id="ph3">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> which will be converted into a <ph id="ph5">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph> przy użyciu określonego <ph id="ph2">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> i określonego <ph id="ph3">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> i <ph id="ph4">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> zostaną poddane konwersji na <ph id="ph5">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.CreateInstanceCore">
          <source>Creates an instance of a <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">Tworzy wystąpienie <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyBinding.CreateInstanceCore">
          <source>The new object.</source>
          <target state="translated">Nowy obiekt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>Gets or sets the gesture associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">Pobiera lub ustawia gestu skojarzony z tym <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>The key sequence.</source>
          <target state="translated">Sekwencja klucza.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>With the exception of the function keys and the numeric keypad keys, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">Z wyjątkiem klawiszy funkcyjnych i kluczach numerycznej <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> musi zawierać <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> i co najmniej jeden <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>The following example shows how to bind a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> using a <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> (the markup and code examples specify different keys but are otherwise equivalent).</source>
          <target state="translated">Poniższy przykład przedstawia sposób powiązania <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> do <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> przy użyciu <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> (przykłady znaczników i kodu określ różne klucze, ale w przeciwnym razie są równoważne).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Gesture">
          <source>the value <ph id="ph1">&lt;paramref name="gesture" /&gt;</ph> is being set to is not a <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">wartość <ph id="ph1">&lt;paramref name="gesture" /&gt;</ph> jest ustawiany jest <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> associated with this <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">Pobiera lub ustawia <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> skojarzony z tym <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The key part of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Część klucza <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Input.Key.None" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see cref="F:System.Windows.Input.Key.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>With the exception of the function keys and the numeric keypad keys, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">Z wyjątkiem klawiszy funkcyjnych i kluczach numerycznej <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> musi zawierać <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> i co najmniej jeden <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>When defining a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">Podczas definiowania <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> w <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> istnieją dwa sposoby określania <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The first way to establish a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is to define the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute of the <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">Pierwszym sposobem ustanowienia <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> w <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> jest określenie <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atrybutu <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, który umożliwia składni określić kluczy i Modyfikatory jako pojedynczy ciąg, na przykład "CTRL + P".</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>The second way is to define the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> attribute and the <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> attributes of the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element.</source>
          <target state="translated">Drugim sposobem jest zdefiniowanie <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> atrybutu i <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> atrybuty <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>Both ways of setting the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">Obie strony ustawienie <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> są równoważne i modyfikować tego samego obiektu źródłowego, ale będzie konflikt, jeśli obie są używane.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>In the case when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attributes are all set, the attribute which is defined last will be used for the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">W przypadku gdy <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>i <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atrybuty są ustawione, atrybut, który jest zdefiniowany ostatnio będzie służyć do <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>You can potentially have situations where for example a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">Potencjalnie może mieć sytuacji, gdy na przykład <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> zestaw ostatnio będzie zastąpić tylko składnik klucza poprzedniego gestu, ale pozostawić Modyfikatory gestu takie same.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Key">
          <source>In general, it is recommended that you use only the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute from <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">Ogólnie rzecz biorąc, zaleca się używanie tylko <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atrybutu z <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; to uniknąć niejednoznaczności, zapewnia najbardziej prostsze składni i zapewnia najbardziej oczywistym reprezentacja do serializacji.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.KeyBinding.KeyProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Key" /&gt;</ph> dependency property.</source>
          <target state="translated">Identyfikuje <ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Key" /&gt;</ph> właściwości zależności.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> associated with this <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</source>
          <target state="translated">Pobiera lub ustawia <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph> skojarzony z tym <ph id="ph3">&lt;see cref="T:System.Windows.Input.KeyBinding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The modifier keys of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</source>
          <target state="translated">Klawisze modyfikujące z <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyGesture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Input.ModifierKeys.None" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see cref="F:System.Windows.Input.ModifierKeys.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>With the exception of the function keys and the numeric keypad keys, a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> must contain a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and one or more <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">Z wyjątkiem klawiszy funkcyjnych i kluczach numerycznej <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> musi zawierać <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> i co najmniej jeden <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>When defining a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> there are two ways to specify the <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">Podczas definiowania <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> w <ph id="ph2">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> istnieją dwa sposoby określania <ph id="ph3">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The first way to establish a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is to define the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute of the <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</source>
          <target state="translated">Pierwszym sposobem ustanowienia <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> w <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> jest określenie <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atrybutu <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element, który umożliwia składni określić kluczy i Modyfikatory jako pojedynczy ciąg, na przykład "CTRL + P".</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>The second way is to define the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> attribute and the <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> attributes of the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> element.</source>
          <target state="translated">Drugim sposobem jest zdefiniowanie <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> atrybutu i <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph> atrybuty <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>Both ways of setting the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</source>
          <target state="translated">Obie strony ustawienie <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> są równoważne i modyfikować tego samego obiektu źródłowego, ale będzie konflikt, jeśli obie są używane.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>In the case when the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attributes are all set, the attribute which is defined last will be used for the <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</source>
          <target state="translated">W przypadku gdy <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A&gt;</ph>i <ph id="ph3">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atrybuty są ustawione, atrybut, który jest zdefiniowany ostatnio będzie służyć do <ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>You can potentially have situations where for example a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</source>
          <target state="translated">Potencjalnie może mieć sytuacji, gdy na przykład <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A&gt;</ph> zestaw ostatnio będzie zastąpić tylko składnik klucza poprzedniego gestu, ale pozostawić Modyfikatory gestu takie same.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>In general, it is recommended that you use only the <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> attribute from <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</source>
          <target state="translated">Ogólnie rzecz biorąc, zaleca się używanie tylko <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Gesture%2A&gt;</ph> atrybutu z <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>; to uniknąć niejednoznaczności, zapewnia najbardziej prostsze składni i zapewnia najbardziej oczywistym reprezentacja do serializacji.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>XAML Attribute Usage</source>
          <target state="translated">Użycie atrybutu języka XAML</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>XAML Values</source>
          <target state="translated">Wartości XAML</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source><bpt id="p1">*</bpt>oneOrMoreModifierKeys<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>oneOrMoreModifierKeys<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyBinding.Modifiers">
          <source>One or more modifier keys, defined by the <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> enumeration, delimited with a "+" character.</source>
          <target state="translated">Klawisze modyfikujące, zdefiniowane przez <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> wyliczenie rozdzielone znakiem "+".</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.KeyBinding.ModifiersProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Modifiers" /&gt;</ph> dependency property.</source>
          <target state="translated">Identyfikuje <ph id="ph1">&lt;see cref="P:System.Windows.Input.KeyBinding.Modifiers" /&gt;</ph> właściwości zależności.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>