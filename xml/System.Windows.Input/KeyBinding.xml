<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7ffcff8092d477e75345cd0afc6f0d3c265489e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30709457" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wiąże <see cref="T:System.Windows.Input.KeyGesture" /> do <see cref="T:System.Windows.Input.RoutedCommand" /> (lub innego <see cref="T:System.Windows.Input.ICommand" /> implementacji).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Input.KeyBinding> kojarzy <xref:System.Windows.Input.KeyGesture> z <xref:System.Windows.Input.ICommand>, takich jak <xref:System.Windows.Input.RoutedCommand>. <xref:System.Windows.Input.RoutedCommand> to implementacja podstawowego <xref:System.Windows.Input.ICommand> interfejs na potrzeby [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] droższe systemu.  Zwykle, gdy <xref:System.Windows.Input.KeyGesture> wykonywania polecenia zostanie wywołany, mimo że zachowania polecenia jest dalsze zależeć od czynników specyficzne dla polecenia takie jak <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> wartość.  Aby uzyskać więcej informacji na wydawanie poleceń, zobacz [droższe omówienie](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 Z wyjątkiem klawiszy funkcyjnych i klucze numerycznej prawidłową <xref:System.Windows.Input.KeyGesture> musi zawierać dokładnie jeden <xref:System.Windows.Input.Key> i co najmniej jeden <xref:System.Windows.Input.ModifierKeys>.  Funkcja klucze i klucze numerycznej nie wymagają klawisz modyfikujący aby mogła być prawidłowym <xref:System.Windows.Input.KeyGesture>. Istnieje możliwość określenia nieprawidłową <xref:System.Windows.Input.KeyGesture> i <xref:System.Windows.Input.KeyBinding> z nieprawidłową skojarzone gestu, za pośrednictwem [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] lub kodu. Na przykład istnieje nie weryfikacji, który uniemożliwia tworzenie i powiązanie <xref:System.Windows.Input.KeyGesture> zawiera tylko klucz niefunkcjonalnego, lub tylko Modyfikatory ale żaden klucz. Takie <xref:System.Windows.Input.KeyBinding> nigdy nie będzie podejmować próby wywołania jego skojarzone polecenie.  
  
 Podczas definiowania <xref:System.Windows.Input.KeyBinding> w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] istnieją dwa sposoby określania <xref:System.Windows.Input.KeyGesture>. Pierwszym sposobem ustanowienia <xref:System.Windows.Input.KeyBinding> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] jest określenie <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybutu <xref:System.Windows.Input.KeyBinding> element, który umożliwia składni określić kluczy i Modyfikatory jako pojedynczy ciąg, na przykład "CTRL + P". Drugim sposobem jest zdefiniowanie <xref:System.Windows.Input.KeyBinding.Key%2A> atrybutu i <xref:System.Windows.Input.KeyBinding.Modifiers%2A> atrybuty <xref:System.Windows.Input.KeyBinding> elementu. Obie strony ustawienie <xref:System.Windows.Input.KeyGesture> są równoważne i modyfikować tego samego obiektu źródłowego, ale będzie konflikt, jeśli obie są używane.  W przypadku gdy <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>i <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybuty są ustawione, atrybut, który jest zdefiniowany ostatnio będzie służyć do <xref:System.Windows.Input.KeyGesture>. Potencjalnie może mieć sytuacji, gdy na przykład <xref:System.Windows.Input.KeyBinding.Key%2A> zestaw ostatnio będzie zastąpić tylko składnik klucza poprzedniego gestu, ale pozostawić Modyfikatory gestu takie same. Ogólnie rzecz biorąc, zaleca się używanie tylko <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybutu z [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; to uniknąć niejednoznaczności, zapewnia najbardziej prostsze składni i zapewnia najbardziej oczywistym reprezentacja do serializacji.  
  
 A <xref:System.Windows.Input.KeyBinding> można zdefiniować określonego obiektu lub na poziomie klasy rejestrując <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> na <xref:System.Windows.Input.CommandManager> klasy. Najbardziej typowy sposób definiowania <xref:System.Windows.Input.KeyBinding> znajduje się w kontroli szablonu ustawienie <xref:System.Windows.UIElement.InputBindings%2A> właściwości w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przez zadeklarowanie co najmniej jeden <xref:System.Windows.Input.MouseBinding> lub <xref:System.Windows.Input.KeyBinding> elementów.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Input.KeyBinding> i dodaje go do <xref:System.Windows.Input.InputBindingCollection> okna głównego.  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.KeyBinding" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.KeyBinding" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">Polecenie, aby skojarzyć z <c>gestu</c>.</param>
        <param name="gesture">Kombinacja klawiszy do skojarzenia z <c>polecenia</c>.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.KeyBinding" /> przy użyciu określonego <see cref="T:System.Windows.Input.ICommand" /> i <see cref="T:System.Windows.Input.KeyGesture" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="command" /> lub <paramref name="gesture" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">Polecenie do wywołania.</param>
        <param name="key">Klucz, który ma zostać skojarzony z <c>polecenia</c>.</param>
        <param name="modifiers">Modyfikatory ma być skojarzone z <c>polecenia</c>.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.KeyBinding" /> przy użyciu określonego <see cref="T:System.Windows.Input.ICommand" /> i określonego <see cref="T:System.Windows.Input.Key" /> i <see cref="T:System.Windows.Input.ModifierKeys" /> zostaną poddane konwersji na <see cref="T:System.Windows.Input.KeyGesture" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <returns>Nowy obiekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia gestu skojarzony z tym <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>Sekwencja klucza. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z wyjątkiem klawiszy funkcyjnych i kluczach numerycznej <xref:System.Windows.Input.KeyGesture> musi zawierać <xref:System.Windows.Input.Key> i co najmniej jeden <xref:System.Windows.Input.ModifierKeys>.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób powiązania <xref:System.Windows.Input.KeyGesture> do <xref:System.Windows.Input.RoutedCommand> przy użyciu <xref:System.Windows.Input.KeyBinding> (przykłady znaczników i kodu określ różne klucze, ale w przeciwnym razie są równoważne).  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">wartość <paramref name="gesture" /> jest ustawiany jest <see cref="T:System.Windows.Input.KeyGesture" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Input.Key" /> z <see cref="T:System.Windows.Input.KeyGesture" /> skojarzony z tym <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>Część klucza <see cref="T:System.Windows.Input.KeyGesture" />. Wartość domyślna to <see cref="F:System.Windows.Input.Key.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z wyjątkiem klawiszy funkcyjnych i kluczach numerycznej <xref:System.Windows.Input.KeyGesture> musi zawierać <xref:System.Windows.Input.Key> i co najmniej jeden <xref:System.Windows.Input.ModifierKeys>.  
  
 Podczas definiowania <xref:System.Windows.Input.KeyBinding> w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] istnieją dwa sposoby określania <xref:System.Windows.Input.KeyGesture>. Pierwszym sposobem ustanowienia <xref:System.Windows.Input.KeyBinding> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] jest określenie <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybutu <xref:System.Windows.Input.KeyBinding> element, który umożliwia składni określić kluczy i Modyfikatory jako pojedynczy ciąg, na przykład "CTRL + P". Drugim sposobem jest zdefiniowanie <xref:System.Windows.Input.KeyBinding.Key%2A> atrybutu i <xref:System.Windows.Input.KeyBinding.Modifiers%2A> atrybuty <xref:System.Windows.Input.KeyBinding> elementu. Obie strony ustawienie <xref:System.Windows.Input.KeyGesture> są równoważne i modyfikować tego samego obiektu źródłowego, ale będzie konflikt, jeśli obie są używane.  W przypadku gdy <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>i <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybuty są ustawione, atrybut, który jest zdefiniowany ostatnio będzie służyć do <xref:System.Windows.Input.KeyGesture>. Potencjalnie może mieć sytuacji, gdy na przykład <xref:System.Windows.Input.KeyBinding.Key%2A> zestaw ostatnio będzie zastąpić tylko składnik klucza poprzedniego gestu, ale pozostawić Modyfikatory gestu takie same. Ogólnie rzecz biorąc, zaleca się używanie tylko <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybutu z [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; to uniknąć niejednoznaczności, zapewnia najbardziej prostsze składni i zapewnia najbardziej oczywistym reprezentacja do serializacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Input.KeyBinding.Key" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Input.ModifierKeys" /> z <see cref="T:System.Windows.Input.KeyGesture" /> skojarzony z tym <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>Klawisze modyfikujące z <see cref="T:System.Windows.Input.KeyGesture" />.  Wartość domyślna to <see cref="F:System.Windows.Input.ModifierKeys.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z wyjątkiem klawiszy funkcyjnych i kluczach numerycznej <xref:System.Windows.Input.KeyGesture> musi zawierać <xref:System.Windows.Input.Key> i co najmniej jeden <xref:System.Windows.Input.ModifierKeys>.  
  
 Podczas definiowania <xref:System.Windows.Input.KeyBinding> w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] istnieją dwa sposoby określania <xref:System.Windows.Input.KeyGesture>. Pierwszym sposobem ustanowienia <xref:System.Windows.Input.KeyBinding> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] jest określenie <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybutu <xref:System.Windows.Input.KeyBinding> element, który umożliwia składni określić kluczy i Modyfikatory jako pojedynczy ciąg, na przykład "CTRL + P". Drugim sposobem jest zdefiniowanie <xref:System.Windows.Input.KeyBinding.Key%2A> atrybutu i <xref:System.Windows.Input.KeyBinding.Modifiers%2A> atrybuty <xref:System.Windows.Input.KeyBinding> elementu. Obie strony ustawienie <xref:System.Windows.Input.KeyGesture> są równoważne i modyfikować tego samego obiektu źródłowego, ale będzie konflikt, jeśli obie są używane.  W przypadku gdy <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>i <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybuty są ustawione, atrybut, który jest zdefiniowany ostatnio będzie służyć do <xref:System.Windows.Input.KeyGesture>. Potencjalnie może mieć sytuacji, gdy na przykład <xref:System.Windows.Input.KeyBinding.Key%2A> zestaw ostatnio będzie zastąpić tylko składnik klucza poprzedniego gestu, ale pozostawić Modyfikatory gestu takie same. Ogólnie rzecz biorąc, zaleca się używanie tylko <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybutu z [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; to uniknąć niejednoznaczności, zapewnia najbardziej prostsze składni i zapewnia najbardziej oczywistym reprezentacja do serializacji.  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *oneOrMoreModifierKeys*  
 Klawisze modyfikujące, zdefiniowane przez <xref:System.Windows.Input.ModifierKeys> wyliczenie rozdzielone znakiem "+".  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>