<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd5a45163260024674fb94da554be682f2069dad" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69171593" /></Metadata><TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Tworzy powiązanie a <see cref="T:System.Windows.Input.KeyGesture" /> <see cref="T:System.Windows.Input.RoutedCommand" /> z (lub inną <see cref="T:System.Windows.Input.ICommand" /> implementacją).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Skojarzenie a <xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.RoutedCommand>z <xref:System.Windows.Input.ICommand>, takich jak. <xref:System.Windows.Input.KeyBinding> <xref:System.Windows.Input.RoutedCommand>jest podstawową implementacją <xref:System.Windows.Input.ICommand> interfejsu [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dla systemu poleceń.  Ogólnie rzecz biorąc, gdy <xref:System.Windows.Input.KeyGesture> jest wykonywane polecenie jest wywoływane, mimo że zachowanie polecenia ma wpływ na czynniki specyficzne dla poleceń, takie <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> jak wartość.  Aby uzyskać więcej informacji na temat poleceń, zobacz [Omówienie poleceń](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 Z wyjątkiem klawiszy funkcyjnych i klawiszy numerycznych, prawidłowy <xref:System.Windows.Input.KeyGesture> musi zawierać dokładnie jeden <xref:System.Windows.Input.Key> i jeden lub więcej <xref:System.Windows.Input.ModifierKeys>.  Klucze funkcji i klawiatury numeryczne nie wymagają klawisza modyfikującego, aby były prawidłowe <xref:System.Windows.Input.KeyGesture>. Można określić nieprawidłowe <xref:System.Windows.Input.KeyGesture> i a <xref:System.Windows.Input.KeyBinding> z nieprawidłowym skojarzonym gestem za pomocą [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] lub kodu. Na przykład nie istnieje żadna Walidacja, która uniemożliwia tworzenie i powiązywanie <xref:System.Windows.Input.KeyGesture> , które zawiera tylko klucz niefunkcyjny, lub tylko modyfikatory, ale nie klucz. Taka próba nie będzie podejmować próby wywołania skojarzonego z nim polecenia. <xref:System.Windows.Input.KeyBinding>  
  
 Podczas definiowania <xref:System.Windows.Input.KeyBinding> w programie [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] istnieją <xref:System.Windows.Input.KeyGesture>dwa sposoby określenia. Pierwszym sposobem ustanowienia <xref:System.Windows.Input.KeyBinding> w programie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] jest <xref:System.Windows.Input.KeyBinding.Gesture%2A> <xref:System.Windows.Input.KeyBinding> zdefiniowanie atrybutu elementu, co umożliwia składnię określania kluczy i modyfikatorów jako jednego ciągu, na przykład "Ctrl + P". Drugi sposób polega na zdefiniowaniu <xref:System.Windows.Input.KeyBinding.Key%2A> atrybutu <xref:System.Windows.Input.KeyBinding.Modifiers%2A> i atrybutów <xref:System.Windows.Input.KeyBinding> elementu. Oba sposoby ustawiania wartości <xref:System.Windows.Input.KeyGesture> są równoważne i modyfikują ten sam obiekt podstawowy, ale w przypadku użycia obu tych elementów występuje konflikt.  W przypadku <xref:System.Windows.Input.KeyBinding.Key%2A>, gdy <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybuty, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>i są ustawione, atrybut, który <xref:System.Windows.Input.KeyGesture>jest zdefiniowany jako Last zostanie użyty dla. Mogą być sytuacje, w których na przykład <xref:System.Windows.Input.KeyBinding.Key%2A> ostatni zestaw zastępuje tylko kluczowy składnik poprzedniego gestu, ale pozostawia modyfikator gestu. Ogólnie rzecz biorąc zaleca się użycie tylko <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybutu z [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; pozwoli to uniknąć niejednoznaczności, zapewnia najbardziej ulepszoną składnię i zapewnia najbardziej prostą reprezentację serializacji.  
  
 Element <xref:System.Windows.Input.KeyBinding> można zdefiniować dla określonego obiektu lub na poziomie klasy przez <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> zarejestrowanie w <xref:System.Windows.Input.CommandManager> klasie. Najbardziej typowym sposobem zdefiniowania elementu <xref:System.Windows.Input.KeyBinding> jest w szablonie kontrolki, <xref:System.Windows.UIElement.InputBindings%2A> ustawienie właściwości w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przez zadeklarowanie co najmniej jednego <xref:System.Windows.Input.MouseBinding> <xref:System.Windows.Input.KeyBinding> elementu.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Input.KeyBinding> i dodaje go <xref:System.Windows.Input.InputBindingCollection> do okna głównego.  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.KeyBinding" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.KeyBinding" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">Polecenie do skojarzenia z <paramref name="gesture" />.</param>
        <param name="gesture">Kombinacja klawiszy do skojarzenia <paramref name="command" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Input.KeyBinding" /> klasy przy użyciu określonych <see cref="T:System.Windows.Input.ICommand" /> elementów i <see cref="T:System.Windows.Input.KeyGesture" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="command" />lub <paramref name="gesture" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">Polecenie do wywołania.</param>
        <param name="key">Klucz, z <paramref name="command" />którym ma zostać skojarzone.</param>
        <param name="modifiers">Modyfikatory, z <paramref name="command" />którymi należy skojarzyć.</param>
        <summary>Inicjuje <see cref="T:System.Windows.Input.KeyBinding" /> nowe wystąpienie klasy przy użyciu określonego <see cref="T:System.Windows.Input.Key" /> <see cref="T:System.Windows.Input.ICommand" /> i określonego <see cref="T:System.Windows.Input.ModifierKeys" /> i który zostanie przekonwertowany na <see cref="T:System.Windows.Input.KeyGesture" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie elementu <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <returns>Nowy obiekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia gest skojarzony z tym <see cref="T:System.Windows.Input.KeyBinding" />elementem.</summary>
        <value>Sekwencja klawiszy. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z wyjątkiem klawiszy funkcyjnych i klawiszy numerycznych, <xref:System.Windows.Input.KeyGesture> a musi <xref:System.Windows.Input.Key> zawierać a i jeden lub więcej <xref:System.Windows.Input.ModifierKeys>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak powiązać z <xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.RoutedCommand> przy użyciu a <xref:System.Windows.Input.KeyBinding> (przykłady znaczników i kodu określają różne klucze, ale są równoważne).  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">wartość <paramref name="gesture" /> jest ustawiana na <see cref="T:System.Windows.Input.KeyGesture" />nie jest.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Input.Key" /> <see cref="T:System.Windows.Input.KeyGesture" /> skojarzoną z tym <see cref="T:System.Windows.Input.KeyBinding" />elementem.</summary>
        <value>Kluczowa część elementu <see cref="T:System.Windows.Input.KeyGesture" />. Wartość domyślna to <see cref="F:System.Windows.Input.Key.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z wyjątkiem klawiszy funkcyjnych i klawiszy numerycznych, <xref:System.Windows.Input.KeyGesture> a musi <xref:System.Windows.Input.Key> zawierać a i jeden lub więcej <xref:System.Windows.Input.ModifierKeys>.  
  
 Podczas definiowania <xref:System.Windows.Input.KeyBinding> w programie [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] istnieją <xref:System.Windows.Input.KeyGesture>dwa sposoby określenia. Pierwszym sposobem ustanowienia <xref:System.Windows.Input.KeyBinding> w programie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] jest <xref:System.Windows.Input.KeyBinding.Gesture%2A> <xref:System.Windows.Input.KeyBinding> zdefiniowanie atrybutu elementu, co umożliwia składnię określania kluczy i modyfikatorów jako jednego ciągu, na przykład "Ctrl + P". Drugi sposób polega na zdefiniowaniu <xref:System.Windows.Input.KeyBinding.Key%2A> atrybutu <xref:System.Windows.Input.KeyBinding.Modifiers%2A> i atrybutów <xref:System.Windows.Input.KeyBinding> elementu. Oba sposoby ustawiania wartości <xref:System.Windows.Input.KeyGesture> są równoważne i modyfikują ten sam obiekt podstawowy, ale w przypadku użycia obu tych elementów występuje konflikt.  W przypadku <xref:System.Windows.Input.KeyBinding.Key%2A>, gdy <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybuty, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>i są ustawione, atrybut, który <xref:System.Windows.Input.KeyGesture>jest zdefiniowany jako Last zostanie użyty dla. Mogą być sytuacje, w których na przykład <xref:System.Windows.Input.KeyBinding.Key%2A> ostatni zestaw zastępuje tylko kluczowy składnik poprzedniego gestu, ale pozostawia modyfikator gestu. Ogólnie rzecz biorąc zaleca się użycie tylko <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybutu z [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; pozwoli to uniknąć niejednoznaczności, zapewnia najbardziej ulepszoną składnię i zapewnia najbardziej prostą reprezentację serializacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Input.KeyBinding.Key" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Input.ModifierKeys" /> <see cref="T:System.Windows.Input.KeyGesture" /> skojarzoną z tym <see cref="T:System.Windows.Input.KeyBinding" />elementem.</summary>
        <value>Klawisze modyfikujące <see cref="T:System.Windows.Input.KeyGesture" />.  Wartość domyślna to <see cref="F:System.Windows.Input.ModifierKeys.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z wyjątkiem klawiszy funkcyjnych i klawiszy numerycznych, <xref:System.Windows.Input.KeyGesture> a musi <xref:System.Windows.Input.Key> zawierać a i jeden lub więcej <xref:System.Windows.Input.ModifierKeys>.  
  
 Podczas definiowania <xref:System.Windows.Input.KeyBinding> w programie [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] istnieją <xref:System.Windows.Input.KeyGesture>dwa sposoby określenia. Pierwszym sposobem ustanowienia <xref:System.Windows.Input.KeyBinding> w programie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] jest <xref:System.Windows.Input.KeyBinding.Gesture%2A> <xref:System.Windows.Input.KeyBinding> zdefiniowanie atrybutu elementu, co umożliwia składnię określania kluczy i modyfikatorów jako jednego ciągu, na przykład "Ctrl + P". Drugi sposób polega na zdefiniowaniu <xref:System.Windows.Input.KeyBinding.Key%2A> atrybutu <xref:System.Windows.Input.KeyBinding.Modifiers%2A> i atrybutów <xref:System.Windows.Input.KeyBinding> elementu. Oba sposoby ustawiania wartości <xref:System.Windows.Input.KeyGesture> są równoważne i modyfikują ten sam obiekt podstawowy, ale w przypadku użycia obu tych elementów występuje konflikt.  W przypadku <xref:System.Windows.Input.KeyBinding.Key%2A>, gdy <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybuty, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>i są ustawione, atrybut, który <xref:System.Windows.Input.KeyGesture>jest zdefiniowany jako Last zostanie użyty dla. Mogą być sytuacje, w których na przykład <xref:System.Windows.Input.KeyBinding.Key%2A> ostatni zestaw zastępuje tylko kluczowy składnik poprzedniego gestu, ale pozostawia modyfikator gestu. Ogólnie rzecz biorąc zaleca się użycie tylko <xref:System.Windows.Input.KeyBinding.Gesture%2A> atrybutu z [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; pozwoli to uniknąć niejednoznaczności, zapewnia najbardziej ulepszoną składnię i zapewnia najbardziej prostą reprezentację serializacji.  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *oneOrMoreModifierKeys*  
 Co najmniej jeden klawisz modyfikujący, zdefiniowany przez <xref:System.Windows.Input.ModifierKeys> Wyliczenie, rozdzielany znakiem "+".  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
