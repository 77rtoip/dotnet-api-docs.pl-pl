<Type Name="CommandBindingCollection" FullName="System.Windows.Input.CommandBindingCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="153261fb45bd148a337057792b70f1844cb48cfe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30706454" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CommandBindingCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommandBindingCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CommandBindingCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommandBindingCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandBindingCollection sealed : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje kolekcję <see cref="T:System.Windows.Input.CommandBinding" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie obiekty, które wynikają z <xref:System.Windows.UIElement> ma <xref:System.Windows.Input.CommandBindingCollection> o nazwie  
  
 <xref:System.Windows.UIElement.CommandBindings%2A>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Input.CommandBinding> i dodaje go do <xref:System.Windows.Input.CommandBindingCollection> z <xref:System.Windows.Window>.  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewWindowCommandBindingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewwindowcommandbindingxaml)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCustomCommandBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcustomcommandbindingcodebehind)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCustomCommandBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcustomcommandbindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.ICommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.CommandBindingCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [Przegląd poleceń](~/docs/framework/wpf/advanced/commanding-overview.md)  
  
 <xref:System.Windows.Input.RoutedCommand>  
  
 <xref:System.Windows.Input.ICommand>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBindingCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBindingCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.CommandBindingCollection" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBindingCollection (System.Collections.IList commandBindings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IList commandBindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.#ctor(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandBindings As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBindingCollection(System::Collections::IList ^ commandBindings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandBindings" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="commandBindings">Kolekcja, którego elementy są kopiowane do nowego <see cref="T:System.Windows.Input.CommandBindingCollection" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.CommandBindingCollection" /> przy użyciu elementów w określonym <see cref="T:System.Collections.IList" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Input.CommandBinding commandBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Input.CommandBinding commandBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.Add(System.Windows.Input.CommandBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Input::CommandBinding ^ commandBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBinding" Type="System.Windows.Input.CommandBinding" />
      </Parameters>
      <Docs>
        <param name="commandBinding">Wiązanie, aby dodać do kolekcji.</param>
        <summary>Dodaje określony <see cref="T:System.Windows.Input.CommandBinding" /> tej <see cref="T:System.Windows.Input.CommandBindingCollection" />.</summary>
        <returns>0, jeśli operacja zakończyła się pomyślnie (Zauważ, że nie jest indeksem dodanego elementu).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Input.CommandBinding> i dodaje go do <xref:System.Windows.Input.CommandBindingCollection> z <xref:System.Windows.Window>.  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewWindowCommandBindingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewwindowcommandbindingxaml)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewCustomCommandBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcustomcommandbindingcodebehind)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewCustomCommandBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcustomcommandbindingcodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="commandBinding" /> jest **null**.</exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.ICollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.ICollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.AddRange(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (collection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::ICollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="collection">Kolekcja elementów do dodania na koniec <see cref="T:System.Windows.Input.CommandBindingCollection" />.</param>
        <summary>Dodaje elementy określonej <see cref="T:System.Collections.ICollection" /> na końcu <see cref="T:System.Windows.Input.CommandBindingCollection" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja, aby dodać jest <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy z tej <see cref="T:System.Windows.Input.CommandBindingCollection" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Input.CommandBinding commandBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Input.CommandBinding commandBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.Contains(System.Windows.Input.CommandBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Input::CommandBinding ^ commandBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBinding" Type="System.Windows.Input.CommandBinding" />
      </Parameters>
      <Docs>
        <param name="commandBinding">Powiązanie do zlokalizowania w kolekcji.</param>
        <summary>Określa, czy określony <see cref="T:System.Windows.Input.CommandBinding" /> jest w tym <see cref="T:System.Windows.Input.CommandBindingCollection" />.</summary>
        <returns>**wartość true,** Jeśli określonego <see cref="T:System.Windows.Input.CommandBinding" /> znajduje się w kolekcji; w przeciwnym razie **false**.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Input.CommandBinding[] commandBindings, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Input.CommandBinding[] commandBindings, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.CopyTo(System.Windows.Input.CommandBinding[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (commandBindings As CommandBinding(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Input::CommandBinding ^&gt; ^ commandBindings, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBindings" Type="System.Windows.Input.CommandBinding[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandBindings">Tablica, do którego zostanie skopiowana kolekcji.</param>
        <param name="index">Indeks w <c>commandBindings</c> na którego rozpocznie się kopiowanie.</param>
        <summary>Kopiuje wszystkie elementy w <see cref="T:System.Windows.Input.CommandBindingCollection" /> do określonej tablicy jednowymiarowej tablicy, zaczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="commandBindings" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza niż 0.</exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBindingCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę <see cref="T:System.Windows.Input.CommandBinding" /> elementów na tym <see cref="T:System.Windows.Input.CommandBindingCollection" />.</summary>
        <value>Liczba powiązań w kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera moduł wyliczający, który iteruje po za pośrednictwem to <see cref="T:System.Windows.Input.CommandBindingCollection" />.</summary>
        <returns>Moduł wyliczający dla tej kolekcji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Input.CommandBinding value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Input.CommandBinding value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.IndexOf(System.Windows.Input.CommandBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As CommandBinding) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Input::CommandBinding ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Input.CommandBinding" />
      </Parameters>
      <Docs>
        <param name="value">Powiązanie do zlokalizowania w kolekcji.</param>
        <summary>Wyszukuje pierwsze wystąpienie określonego <see cref="T:System.Windows.Input.CommandBinding" /> w tym <see cref="T:System.Windows.Input.CommandBindingCollection" />.</summary>
        <returns>Indeks pierwszego wystąpienia <paramref name="value" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Input.CommandBinding commandBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Input.CommandBinding commandBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.Insert(System.Int32,System.Windows.Input.CommandBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Input::CommandBinding ^ commandBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="commandBinding" Type="System.Windows.Input.CommandBinding" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks, w której mają zostać wstawione <c>commandBinding</c></param>
        <param name="commandBinding">Powiązanie do wstawienia.</param>
        <summary>Wstawia określony <see cref="T:System.Windows.Input.CommandBinding" /> do tego <see cref="T:System.Windows.Input.CommandBindingCollection" /> pod określonym indeksem.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="commandBinding" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBindingCollection.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy to <see cref="T:System.Windows.Input.CommandBindingCollection" /> ma stały rozmiar.</summary>
        <value>**wartość true,** Jeśli kolekcja zawiera określony rozmiar, a w przeciwnym razie **false**.  Wartość domyślna to **false**.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Input.CommandBindingCollection> nigdy nie ma stały rozmiar; w związku z tym <xref:System.Windows.Input.CommandBindingCollection.IsFixedSize%2A> zawsze zwraca **false**.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBindingCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy to <see cref="T:System.Windows.Input.CommandBindingCollection" /> jest tylko do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli kolekcja jest tylko do odczytu. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Input.CommandBindingCollection> nigdy nie jest tylko do odczytu; w związku z tym <xref:System.Windows.Input.CommandBindingCollection.IsReadOnly%2A> zawsze zwraca `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBindingCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy uzyskują dostęp do tego <see cref="T:System.Windows.Input.CommandBindingCollection" /> jest zsynchronizowany (wątkowo).</summary>
        <value>
          <see langword="true" /> Jeśli kolekcja jest wielowątkowość; w przeciwnym razie <see langword="false" />.  Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.CommandBindingCollection.SyncRoot%2A> może służyć do synchronizowania dostępu do kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBinding this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBinding Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBindingCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As CommandBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBinding ^ default[int] { System::Windows::Input::CommandBinding ^ get(int index); void set(int index, System::Windows::Input::CommandBinding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Pozycja w kolekcji.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Input.CommandBinding" /> pod określonym indeksem.</summary>
        <value>Wiązanie pod określonym indeksem.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Input.CommandBinding commandBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Input.CommandBinding commandBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.Remove(System.Windows.Input.CommandBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Input::CommandBinding ^ commandBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBinding" Type="System.Windows.Input.CommandBinding" />
      </Parameters>
      <Docs>
        <param name="commandBinding">Powiązanie do usunięcia.</param>
        <summary>Usuwa pierwsze wystąpienie określonego <see cref="T:System.Windows.Input.CommandBinding" /> tego <see cref="T:System.Windows.Input.CommandBindingCollection" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks <see cref="T:System.Windows.Input.CommandBinding" /> do usunięcia.</param>
        <summary>Usuwa określoną <see cref="T:System.Windows.Input.CommandBinding" /> pod określonym indeksem tego <see cref="T:System.Windows.Input.CommandBindingCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBindingCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Windows.Input.CommandBindingCollection" />.</summary>
        <value>Obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Windows.Input.CommandBindingCollection" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.CommandBindingCollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Liczony od zera <see cref="T:System.Array" /> odbierająca skopiowane elementy z <see cref="T:System.Windows.Input.CommandBindingCollection" />.</param>
        <param name="index">Pierwszą pozycję w określonym <see cref="T:System.Array" /> do odbierania skopiowane dane.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Input.CommandBindingCollection> wystąpienia jest rzutowane na <xref:System.Collections.ICollection> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.CommandBindingCollection.CopyTo(System.Windows.Input.CommandBinding[],System.Int32)" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object commandBinding);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object commandBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (commandBinding As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ commandBinding) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBinding" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandBinding">
          <see cref="T:System.Object" /> Do dodania do <see cref="T:System.Windows.Input.CommandBindingCollection" />.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
        <returns>Pozycja, do której dodano nowy element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Input.CommandBindingCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.CommandBindingCollection.Add(System.Windows.Input.CommandBinding)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ key) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Windows.Media.TextEffectCollection" />.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Object" /> znajduje się w <see cref="T:System.Windows.Input.CommandBindingCollection" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Input.CommandBindingCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.CommandBindingCollection.Contains(System.Windows.Input.CommandBinding)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Windows.Input.CommandBindingCollection" />.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
        <returns>Indeks <paramref name="value" /> jeśli je znaleziono na liście; w przeciwnym razie wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Input.CommandBindingCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.CommandBindingCollection.IndexOf(System.Windows.Input.CommandBinding)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks, w której mają zostać wstawione <see cref="T:System.Object" />.</param>
        <param name="value">
          <see cref="T:System.Object" /> Do wstawienia do <see cref="T:System.Windows.Input.CommandBindingCollection" />.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Input.CommandBindingCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.CommandBindingCollection.Insert(System.Int32,System.Windows.Input.CommandBinding)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBindingCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
        <value>Element pod określonym indeksem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Input.CommandBindingCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.CommandBindingCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object commandBinding);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object commandBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBindingCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (commandBinding As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ commandBinding) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBinding" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandBinding">
          <see cref="T:System.Object" /> Do usunięcia z <see cref="T:System.Windows.Input.CommandBindingCollection" />.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Windows.Input.CommandBindingCollection> wystąpienia jest rzutowane na <xref:System.Collections.IList> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.CommandBindingCollection.Remove(System.Windows.Input.CommandBinding)" />
      </Docs>
    </Member>
  </Members>
</Type>