<Type Name="CommandBinding" FullName="System.Windows.Input.CommandBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73971c0ddba6c7d04667419167297e08af183edc" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48720794" /></Metadata><TypeSignature Language="C#" Value="public class CommandBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CommandBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandBinding" />
  <TypeSignature Language="F#" Value="type CommandBinding = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="02fa4-101">Wiąże <see cref="T:System.Windows.Input.RoutedCommand" /> do obsługi zdarzeń, które implementują polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-101">Binds a <see cref="T:System.Windows.Input.RoutedCommand" /> to the event handlers that implement the command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02fa4-102">A <xref:System.Windows.Input.CommandBinding> kojarzy polecenia za pomocą <xref:System.Windows.Input.CommandBinding.PreviewExecuted> / <xref:System.Windows.Input.CommandBinding.Executed> i <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> / <xref:System.Windows.Input.CommandBinding.CanExecute> zdarzenia, które implementuje i określenia stanu polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-102">A <xref:System.Windows.Input.CommandBinding> associates a command with the <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> and <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> events which implement and determine the status of the command.</span></span>  
  
 <span data-ttu-id="02fa4-103">Gdy <xref:System.Windows.Input.RoutedCommand.Execute%2A> lub <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metody <xref:System.Windows.Input.RoutedCommand> jest wywoływana, <xref:System.Windows.Input.CommandBinding.PreviewExecuted> / <xref:System.Windows.Input.CommandBinding.Executed> lub <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> / <xref:System.Windows.Input.CommandBinding.CanExecute> zdarzenia są wywoływane na elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-103">When the <xref:System.Windows.Input.RoutedCommand.Execute%2A> or <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method of a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> or the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> events are raised on the command target.</span></span>  <span data-ttu-id="02fa4-104">Jeśli element docelowy polecenia ma <xref:System.Windows.Input.CommandBinding> polecenia, odpowiednie programy obsługi są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="02fa4-104">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command, the appropriate handlers are called.</span></span>  <span data-ttu-id="02fa4-105">Jeśli w elemencie docelowym polecenia nie ma <xref:System.Windows.Input.CommandBinding> polecenia, zdarzenia są przesyłane za pośrednictwem drzewa elementów do elementu, który ma <xref:System.Windows.Input.CommandBinding> zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="02fa4-105">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the events are routed through the element tree until an element that has a <xref:System.Windows.Input.CommandBinding> is found.</span></span>  
  
 <span data-ttu-id="02fa4-106">A <xref:System.Windows.Input.CommandBinding> ma ograniczone użycie z <xref:System.Windows.Input.ICommand> , który nie jest <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="02fa4-106">A <xref:System.Windows.Input.CommandBinding> has limited use with an <xref:System.Windows.Input.ICommand> that is not a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="02fa4-107">Jest to spowodowane <xref:System.Windows.Input.CommandBinding> wiąże polecenie, aby <xref:System.Windows.Input.ExecutedRoutedEventHandler> i <xref:System.Windows.Input.CanExecuteRoutedEventHandler> słuchać, który <xref:System.Windows.Input.CommandManager.Executed> i <xref:System.Windows.Input.CommandManager.CanExecute> zdarzeń, które są wywoływane, gdy <xref:System.Windows.Input.RoutedCommand.Execute%2A> i <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metoda <xref:System.Windows.Input.RoutedCommand>są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="02fa4-107">This is because a <xref:System.Windows.Input.CommandBinding> binds the command to the <xref:System.Windows.Input.ExecutedRoutedEventHandler> and the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which listen to the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> routed events which are raised when the <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method of the <xref:System.Windows.Input.RoutedCommand> are called.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02fa4-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.CommandBinding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="02fa4-108">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02fa4-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.CommandBinding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="02fa4-109">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.CommandBinding : System.Windows.Input.ICommand -&gt; System.Windows.Input.CommandBinding" Usage="new System.Windows.Input.CommandBinding command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="02fa4-110">Polecenie, aby utworzyć nowy <see cref="T:System.Windows.Input.RoutedCommand" /> na.</span><span class="sxs-lookup"><span data-stu-id="02fa4-110">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span></span></param>
        <summary><span data-ttu-id="02fa4-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.CommandBinding" /> klasy przy użyciu określonego <see cref="T:System.Windows.Input.ICommand" />.</span><span class="sxs-lookup"><span data-stu-id="02fa4-111">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.ExecutedRoutedEventHandler executed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, executed As ExecutedRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::ExecutedRoutedEventHandler ^ executed);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.CommandBinding : System.Windows.Input.ICommand * System.Windows.Input.ExecutedRoutedEventHandler -&gt; System.Windows.Input.CommandBinding" Usage="new System.Windows.Input.CommandBinding (command, executed)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="executed" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="02fa4-112">Polecenie, aby utworzyć nowy <see cref="T:System.Windows.Input.RoutedCommand" /> na.</span><span class="sxs-lookup"><span data-stu-id="02fa4-112">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span></span></param>
        <param name="executed"><span data-ttu-id="02fa4-113">Obsługa <see cref="E:System.Windows.Input.CommandBinding.Executed" /> zdarzenie w nowym <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="02fa4-113">The handler for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span></span></param>
        <summary><span data-ttu-id="02fa4-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.CommandBinding" /> klasy przy użyciu określonego <see cref="T:System.Windows.Input.ICommand" /> , a określony <see cref="E:System.Windows.Input.CommandBinding.Executed" /> programu obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="02fa4-114">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event handler.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed, System.Windows.Input.CanExecuteRoutedEventHandler canExecute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.ExecutedRoutedEventHandler executed, class System.Windows.Input.CanExecuteRoutedEventHandler canExecute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, executed As ExecutedRoutedEventHandler, canExecute As CanExecuteRoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::ExecutedRoutedEventHandler ^ executed, System::Windows::Input::CanExecuteRoutedEventHandler ^ canExecute);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.CommandBinding : System.Windows.Input.ICommand * System.Windows.Input.ExecutedRoutedEventHandler * System.Windows.Input.CanExecuteRoutedEventHandler -&gt; System.Windows.Input.CommandBinding" Usage="new System.Windows.Input.CommandBinding (command, executed, canExecute)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="executed" Type="System.Windows.Input.ExecutedRoutedEventHandler" />
        <Parameter Name="canExecute" Type="System.Windows.Input.CanExecuteRoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="02fa4-115">Polecenie, aby utworzyć nowy <see cref="T:System.Windows.Input.RoutedCommand" /> na.</span><span class="sxs-lookup"><span data-stu-id="02fa4-115">The command to base the new <see cref="T:System.Windows.Input.RoutedCommand" /> on.</span></span></param>
        <param name="executed"><span data-ttu-id="02fa4-116">Obsługa <see cref="E:System.Windows.Input.CommandBinding.Executed" /> zdarzenie w nowym <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="02fa4-116">The handler for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span></span></param>
        <param name="canExecute"><span data-ttu-id="02fa4-117">Obsługa <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> zdarzenie w nowym <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="02fa4-117">The handler for the <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event on the new <see cref="T:System.Windows.Input.RoutedCommand" />.</span></span></param>
        <summary><span data-ttu-id="02fa4-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.CommandBinding" /> klasy przy użyciu określonego <see cref="T:System.Windows.Input.ICommand" /> , a określony <see cref="E:System.Windows.Input.CommandBinding.Executed" /> i <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> procedury obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="02fa4-118">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandBinding" /> class by using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> event handlers.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.CanExecuteRoutedEventHandler CanExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.CanExecuteRoutedEventHandler CanExecute" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.CanExecute" />
      <MemberSignature Language="VB.NET" Value="Public Event CanExecute As CanExecuteRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::CanExecuteRoutedEventHandler ^ CanExecute;" />
      <MemberSignature Language="F#" Value="member this.CanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " Usage="member this.CanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CanExecuteRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02fa4-119">Występuje, gdy polecenie skojarzone z tym <see cref="T:System.Windows.Input.CommandBinding" /> inicjuje sprawdzenie w celu określenia, czy polecenie może być wykonywane w elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-119">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> initiates a check to determine whether the command can be executed on the command target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02fa4-120">Gdy <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metody <xref:System.Windows.Input.RoutedCommand> jest wywoływana, <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> zdarzenie jest zgłaszane w elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-120">When the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method on a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> event is raised on the command target.</span></span>  <span data-ttu-id="02fa4-121">Jeśli zdarzenie nie jest obsługiwane, <xref:System.Windows.Input.CommandBinding.CanExecute> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="02fa4-121">If the event is not handled, the <xref:System.Windows.Input.CommandBinding.CanExecute> event is raised.</span></span>  <span data-ttu-id="02fa4-122">Jeśli element docelowy polecenia ma <xref:System.Windows.Input.CommandBinding> polecenia, <xref:System.Windows.Input.CommandBinding.CanExecute> , obsługa <xref:System.Windows.Input.CommandBinding> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="02fa4-122">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="02fa4-123">Jeśli w elemencie docelowym polecenia nie ma <xref:System.Windows.Input.CommandBinding> polecenia, <xref:System.Windows.Input.CommandBinding.CanExecute> bąbelków zdarzeń w górę drzewa elementów, Wyszukiwanie elementu, który ma <xref:System.Windows.Input.CommandBinding> powiązanych z poleceniem.</span><span class="sxs-lookup"><span data-stu-id="02fa4-123">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  
  
<a name="routedEventInfo_CanExecute"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="02fa4-124">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="02fa4-124">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="02fa4-125">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="02fa4-125">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.CanExecuteEvent>|  
|<span data-ttu-id="02fa4-126">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="02fa4-126">Routing strategy</span></span>|<span data-ttu-id="02fa4-127">Propagacja</span><span class="sxs-lookup"><span data-stu-id="02fa4-127">Bubbling</span></span>|  
|<span data-ttu-id="02fa4-128">Delegate</span><span class="sxs-lookup"><span data-stu-id="02fa4-128">Delegate</span></span>|<xref:System.Windows.Input.CanExecuteRoutedEventHandler>|  
  
-   <span data-ttu-id="02fa4-129">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>.</span><span class="sxs-lookup"><span data-stu-id="02fa4-129">The corresponding tunneling event is <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02fa4-130">Poniższy przykład tworzy <xref:System.Windows.Input.CommandBinding> mapujący <xref:System.Windows.Input.ExecutedRoutedEventHandler> i <xref:System.Windows.Input.CanExecuteRoutedEventArgs> program obsługi <xref:System.Windows.Input.ApplicationCommands.Open%2A> polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-130">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandwithhandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="02fa4-131">Poniższej przedstawiono <xref:System.Windows.Input.CanExecuteRoutedEventHandler> który konfiguruje <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="02fa4-131">The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.CommandBinding.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Input.CommandBinding.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02fa4-132">Pobiera lub ustawia <see cref="T:System.Windows.Input.ICommand" /> skojarzony z tym <see cref="T:System.Windows.Input.CommandBinding" />.</span><span class="sxs-lookup"><span data-stu-id="02fa4-132">Gets or sets the <see cref="T:System.Windows.Input.ICommand" /> associated with this <see cref="T:System.Windows.Input.CommandBinding" />.</span></span></summary>
        <value><span data-ttu-id="02fa4-133">Polecenie skojarzone z tym powiązaniem.</span><span class="sxs-lookup"><span data-stu-id="02fa4-133">The command associated with this binding.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02fa4-134">Poniższy przykład tworzy <xref:System.Windows.Input.CommandBinding> mapujący <xref:System.Windows.Input.ExecutedRoutedEventHandler> i <xref:System.Windows.Input.CanExecuteRoutedEventArgs> program obsługi <xref:System.Windows.Input.ApplicationCommands.Open%2A> polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-134">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[commandhandlerprocedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[commandhandlerprocedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="02fa4-135">Poniższej przedstawiono <xref:System.Windows.Input.CanExecuteRoutedEventHandler> który konfiguruje <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="02fa4-135">The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandWithHandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 <span data-ttu-id="02fa4-136">Poniższej przedstawiono <xref:System.Windows.Input.ExecutedRoutedEventHandler> tworzy <xref:System.Windows.MessageBox> podczas wykonywania polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-136">The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]
 [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Executed">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ExecutedRoutedEventHandler Executed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ExecutedRoutedEventHandler Executed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.Executed" />
      <MemberSignature Language="VB.NET" Value="Public Event Executed As ExecutedRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ExecutedRoutedEventHandler ^ Executed;" />
      <MemberSignature Language="F#" Value="member this.Executed : System.Windows.Input.ExecutedRoutedEventHandler " Usage="member this.Executed : System.Windows.Input.ExecutedRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ExecutedRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02fa4-137">Występuje, gdy polecenie skojarzone z tym <see cref="T:System.Windows.Input.CommandBinding" /> wykonuje.</span><span class="sxs-lookup"><span data-stu-id="02fa4-137">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> executes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02fa4-138">Gdy <xref:System.Windows.Input.RoutedCommand> wykonuje, zgłasza <xref:System.Windows.Input.CommandBinding.PreviewExecuted> zdarzeń w elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-138">When a <xref:System.Windows.Input.RoutedCommand> executes, it raises the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event on the command target.</span></span>  <span data-ttu-id="02fa4-139">Jeśli <xref:System.Windows.Input.CommandBinding.PreviewExecuted> zdarzenie nie jest obsługiwane, <xref:System.Windows.Input.CommandBinding.Executed> zdarzenie jest zgłaszane w elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-139">If the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event is not handled, the <xref:System.Windows.Input.CommandBinding.Executed> event is raised on the command target.</span></span>  <span data-ttu-id="02fa4-140">Jeśli element docelowy polecenia ma <xref:System.Windows.Input.CommandBinding> dla określonego polecenia <xref:System.Windows.Input.CommandBinding.Executed> , obsługa <xref:System.Windows.Input.CommandBinding> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="02fa4-140">If the command target has a <xref:System.Windows.Input.CommandBinding> for the specific command, the <xref:System.Windows.Input.CommandBinding.Executed> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="02fa4-141">Jeśli w elemencie docelowym polecenia nie ma <xref:System.Windows.Input.CommandBinding> dla tego określonego polecenia <xref:System.Windows.Input.CommandBinding.Executed> bąbelków zdarzeń w górę drzewa elementów, Wyszukiwanie elementu, który ma <xref:System.Windows.Input.CommandBinding> powiązanych z poleceniem.</span><span class="sxs-lookup"><span data-stu-id="02fa4-141">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for that specific command the <xref:System.Windows.Input.CommandBinding.Executed> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="02fa4-142">Jeśli <xref:System.Windows.Input.CommandBinding> nie zostanie znaleziony, polecenie nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="02fa4-142">If a <xref:System.Windows.Input.CommandBinding> is not found, the command is not handled.</span></span>  
  
<a name="routedEventInfo_Executed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="02fa4-143">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="02fa4-143">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="02fa4-144">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="02fa4-144">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.ExecutedEvent>|  
|<span data-ttu-id="02fa4-145">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="02fa4-145">Routing strategy</span></span>|<span data-ttu-id="02fa4-146">Propagacja</span><span class="sxs-lookup"><span data-stu-id="02fa4-146">Bubbling</span></span>|  
|<span data-ttu-id="02fa4-147">Delegate</span><span class="sxs-lookup"><span data-stu-id="02fa4-147">Delegate</span></span>|<xref:System.Windows.Input.ExecutedRoutedEventHandler>|  
  
-   <span data-ttu-id="02fa4-148">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.Input.CommandBinding.PreviewExecuted>.</span><span class="sxs-lookup"><span data-stu-id="02fa4-148">The corresponding tunneling event is <xref:System.Windows.Input.CommandBinding.PreviewExecuted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02fa4-149">Poniższy przykład tworzy <xref:System.Windows.Input.CommandBinding> mapujący <xref:System.Windows.Input.ExecutedRoutedEventHandler> i <xref:System.Windows.Input.CanExecuteRoutedEventArgs> program obsługi <xref:System.Windows.Input.ApplicationCommands.Open%2A> polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-149">The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span>  
  
 [!code-xaml[commandwithhandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 <span data-ttu-id="02fa4-150">Poniższej przedstawiono <xref:System.Windows.Input.ExecutedRoutedEventHandler> tworzy <xref:System.Windows.MessageBox> podczas wykonywania polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-150">The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.</span></span>  
  
 [!code-csharp[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]
 [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviewCanExecute">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.PreviewCanExecute" />
      <MemberSignature Language="VB.NET" Value="Public Event PreviewCanExecute As CanExecuteRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::CanExecuteRoutedEventHandler ^ PreviewCanExecute;" />
      <MemberSignature Language="F#" Value="member this.PreviewCanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " Usage="member this.PreviewCanExecute : System.Windows.Input.CanExecuteRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CanExecuteRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02fa4-151">Występuje, gdy polecenie skojarzone z tym <see cref="T:System.Windows.Input.CommandBinding" /> inicjuje sprawdzenie w celu określenia, czy polecenie może być wykonywane na aktualnym elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-151">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> initiates a check to determine whether the command can be executed on the current command target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02fa4-152">Gdy <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> metody <xref:System.Windows.Input.RoutedCommand> jest wywoływana, <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> zdarzenie jest zgłaszane w elemencie docelowym polecenia, jeśli element docelowy polecenia ma <xref:System.Windows.Input.CommandBinding> dla polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-152">When the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method on a <xref:System.Windows.Input.RoutedCommand> is called, the <xref:System.Windows.Input.CommandBinding.PreviewCanExecute> event is raised on the command target if the command target has a <xref:System.Windows.Input.CommandBinding> for the command.</span></span> <span data-ttu-id="02fa4-153">A następnie <xref:System.Windows.Input.CommandBinding.CanExecute> , obsługa <xref:System.Windows.Input.CommandBinding> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="02fa4-153">Then the <xref:System.Windows.Input.CommandBinding.CanExecute> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="02fa4-154">Jeśli w elemencie docelowym polecenia nie ma <xref:System.Windows.Input.CommandBinding> polecenia, <xref:System.Windows.Input.CommandBinding.CanExecute> bąbelków zdarzeń w górę drzewa elementów, Wyszukiwanie elementu, który ma <xref:System.Windows.Input.CommandBinding> powiązanych z poleceniem.</span><span class="sxs-lookup"><span data-stu-id="02fa4-154">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command, the <xref:System.Windows.Input.CommandBinding.CanExecute> event bubbles up the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="02fa4-155">Jeśli zdarzenie nie jest obsługiwane, <xref:System.Windows.Input.CommandBinding.CanExecute> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="02fa4-155">If the event is not handled, the <xref:System.Windows.Input.CommandBinding.CanExecute> event is raised.</span></span>  
  
<a name="routedEventInfo_PreviewCanExecute"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="02fa4-156">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="02fa4-156">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="02fa4-157">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="02fa4-157">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>|  
|<span data-ttu-id="02fa4-158">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="02fa4-158">Routing strategy</span></span>|<span data-ttu-id="02fa4-159">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="02fa4-159">Tunneling</span></span>|  
|<span data-ttu-id="02fa4-160">Delegate</span><span class="sxs-lookup"><span data-stu-id="02fa4-160">Delegate</span></span>|<xref:System.Windows.Input.CanExecuteRoutedEventHandler>|  
  
-   <span data-ttu-id="02fa4-161">To odpowiednie zdarzenie propagacji <xref:System.Windows.Input.CommandBinding.CanExecute>.</span><span class="sxs-lookup"><span data-stu-id="02fa4-161">The corresponding bubbling event is <xref:System.Windows.Input.CommandBinding.CanExecute>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviewExecuted">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.CommandBinding.PreviewExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Event PreviewExecuted As ExecutedRoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ExecutedRoutedEventHandler ^ PreviewExecuted;" />
      <MemberSignature Language="F#" Value="member this.PreviewExecuted : System.Windows.Input.ExecutedRoutedEventHandler " Usage="member this.PreviewExecuted : System.Windows.Input.ExecutedRoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ExecutedRoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02fa4-162">Występuje, gdy polecenie skojarzone z tym <see cref="T:System.Windows.Input.CommandBinding" /> wykonuje.</span><span class="sxs-lookup"><span data-stu-id="02fa4-162">Occurs when the command associated with this <see cref="T:System.Windows.Input.CommandBinding" /> executes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02fa4-163">Gdy <xref:System.Windows.Input.RoutedCommand> wykonuje, zgłasza <xref:System.Windows.Input.CommandBinding.PreviewExecuted> zdarzeń w elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-163">When a <xref:System.Windows.Input.RoutedCommand> executes, it raises the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event on the command target.</span></span>  <span data-ttu-id="02fa4-164">Jeśli element docelowy polecenia ma <xref:System.Windows.Input.CommandBinding> polecenia <xref:System.Windows.Input.CommandBinding.PreviewExecuted> , obsługa <xref:System.Windows.Input.CommandBinding> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="02fa4-164">If the command target has a <xref:System.Windows.Input.CommandBinding> for the command the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> handler for that <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="02fa4-165">Jeśli w elemencie docelowym polecenia nie ma <xref:System.Windows.Input.CommandBinding> polecenia <xref:System.Windows.Input.CommandBinding.PreviewExecuted> tuneli zdarzenia w dół drzewa elementów, Wyszukiwanie elementu, który ma <xref:System.Windows.Input.CommandBinding> powiązanych z poleceniem.</span><span class="sxs-lookup"><span data-stu-id="02fa4-165">If the command target does not have a <xref:System.Windows.Input.CommandBinding> for the command the <xref:System.Windows.Input.CommandBinding.PreviewExecuted> event tunnels down the element tree searching for an element that has a <xref:System.Windows.Input.CommandBinding> associated with the command.</span></span>  <span data-ttu-id="02fa4-166">Jeśli zdarzenie (wersja zapoznawcza) nie jest obsługiwane, <xref:System.Windows.Input.CommandBinding.Executed> zdarzenie jest zgłaszane w elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="02fa4-166">If the preview event is not handled, the <xref:System.Windows.Input.CommandBinding.Executed> event is raised on command target.</span></span>  
  
<a name="routedEventInfo_PreviewExecuted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="02fa4-167">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="02fa4-167">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="02fa4-168">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="02fa4-168">Identifier field</span></span>|<xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>|  
|<span data-ttu-id="02fa4-169">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="02fa4-169">Routing strategy</span></span>|<span data-ttu-id="02fa4-170">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="02fa4-170">Tunneling</span></span>|  
|<span data-ttu-id="02fa4-171">Delegate</span><span class="sxs-lookup"><span data-stu-id="02fa4-171">Delegate</span></span>|<xref:System.Windows.Input.ExecutedRoutedEventHandler>|  
  
-   <span data-ttu-id="02fa4-172">To odpowiednie zdarzenie propagacji <xref:System.Windows.Input.CommandBinding.Executed>.</span><span class="sxs-lookup"><span data-stu-id="02fa4-172">The corresponding bubbling event is <xref:System.Windows.Input.CommandBinding.Executed>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>