<Type Name="Mouse" FullName="System.Windows.Input.Mouse">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="83e98a291f9d5f6cefe7297d93f8f8195e0f1c0a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30709754" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Mouse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Mouse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Mouse" />
  <TypeSignature Language="VB.NET" Value="Public Class Mouse" />
  <TypeSignature Language="C++ CLI" Value="public ref class Mouse abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5c64a-101">Reprezentuje urządzenie myszy z konkretnym wątkiem.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5c64a-101">Represents the mouse device to a specific thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-102"><xref:System.Windows.Input.Mouse> Myszy udostępnia klasy powiązane zdarzenia, metody i właściwości, które zawierają informacje dotyczące stanu myszy.</span><span class="sxs-lookup"><span data-stu-id="5c64a-102">The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.</span></span>  
  
 <span data-ttu-id="5c64a-103">Każdego zdarzenia, które <xref:System.Windows.Input.Mouse> definiuje jako dołączone zdarzenie ponownie jest również udostępniany przez klasy podstawowej elementu <xref:System.Windows.UIElement> i <xref:System.Windows.ContentElement> jako nowe kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-103">Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="5c64a-104">Ogólnie rzecz biorąc, jest wygodniejsze do obsługi zdarzeń myszy dla aplikacji na <xref:System.Windows.UIElement> i <xref:System.Windows.ContentElement>, zamiast używania <xref:System.Windows.Input.Mouse> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-104">Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events.</span></span> <span data-ttu-id="5c64a-105">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5c64a-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="5c64a-106">Statyczne elementy członkowskie <xref:System.Windows.Input.Mouse> klasa delegata do podstawowych <xref:System.Windows.Input.MouseDevice> Menedżera wejściowych wątek wywołujący.</span><span class="sxs-lookup"><span data-stu-id="5c64a-106">The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-107">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-108">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-108">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-109">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-109">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-110">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-111">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-111">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-112">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-112">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-113">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-114">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-114">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-115">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-115">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-116">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-117">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-117">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-118">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-118">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-119">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-120">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-120">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-121">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-121">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-122">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-123">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-123">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-124">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-124">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-125">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-126">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-126">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-127">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.MouseUp" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-127">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-128">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-129">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-129">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-130">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-130">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-131">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-132">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-132">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-133">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-133">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-134">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-135">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-135">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-136">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-136">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-137">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-138">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-138">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-139">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-139">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-140">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-141">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-141">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-142">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-142">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-143">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-144">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-144">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-145">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-145">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-146">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-147">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-147">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-148">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-148">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void AddQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-149">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-150">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-150">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-151">Dodaje obsługę <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-151">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-152">Przechwytuje myszą do określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-152">Captures mouse input to the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-153">Gdy element przechwytuje mysz, otrzymuje myszą czy kursor znajduje się w jej granicach.</span><span class="sxs-lookup"><span data-stu-id="5c64a-153">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="5c64a-154">Jeśli <xref:System.Windows.Input.CaptureMode> nie zostanie określony, domyślnie <xref:System.Windows.Input.CaptureMode> jest <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-154">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="5c64a-155">Aby zwolnić mysz przechwytywania, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A> przekazywanie `null` jako element do przechwycenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-155">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="5c64a-156">Jeśli przechwyceniu myszy podczas <xref:System.Windows.Input.Mouse.MouseDown> lub <xref:System.Windows.Input.Mouse.MouseUp> zdarzenia i dane wejściowe nie ma elementu poniżej przycisk myszy, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> i <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> pojawienia się najpierw.</span><span class="sxs-lookup"><span data-stu-id="5c64a-156">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="5c64a-157">Dzięki temu przechwyconych element możliwość zwolnienia Przechwytywanie przed <xref:System.Windows.Input.Mouse.MouseDown> i <xref:System.Windows.Input.Mouse.MouseUp> są kierowane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-157">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-158">Element do przechwytywania myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-158">The element to capture the mouse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-159">Przechwytuje myszą do określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-159">Captures mouse input to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c64a-160">
            <see langword="true" /> Jeśli element był w stanie przechwytywania myszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-160">
              <see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-161">Gdy element przechwytuje mysz, otrzymuje myszą czy kursor znajduje się w jej granicach.</span><span class="sxs-lookup"><span data-stu-id="5c64a-161">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="5c64a-162">Jeśli <xref:System.Windows.Input.CaptureMode> nie zostanie określony, domyślnie <xref:System.Windows.Input.CaptureMode> jest <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-162">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="5c64a-163">Aby zwolnić mysz przechwytywania, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A> przekazywanie `null` jako element do przechwycenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-163">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="5c64a-164">Jeśli przechwyceniu myszy podczas <xref:System.Windows.Input.Mouse.MouseDown> lub <xref:System.Windows.Input.Mouse.MouseUp> zdarzenia i dane wejściowe nie ma elementu poniżej przycisk myszy, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> i <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> pojawienia się najpierw.</span><span class="sxs-lookup"><span data-stu-id="5c64a-164">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="5c64a-165">Dzięki temu przechwyconych element możliwość zwolnienia Przechwytywanie przed <xref:System.Windows.Input.Mouse.MouseDown> i <xref:System.Windows.Input.Mouse.MouseUp> są kierowane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-165">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c64a-166">Poniższy przykład przedstawia sposób przechwytywanie myszy konkretnego elementu za pomocą <xref:System.Windows.Input.Mouse.Capture%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="5c64a-166">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-167">Element do przechwytywania myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-167">The element to capture the mouse.</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="5c64a-168">Zasady przechwytywania, które mają być używane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-168">The capture policy to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-169">Przechwytuje myszą do określonego elementu przy użyciu określonego <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-169">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c64a-170">
            <see langword="true" /> Jeśli element był w stanie przechwytywania myszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-170">
              <see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-171">Gdy element przechwytuje mysz, otrzymuje myszą czy kursor znajduje się w jej granicach.</span><span class="sxs-lookup"><span data-stu-id="5c64a-171">When an element captures the mouse, it receives mouse input whether the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="5c64a-172">Aby zwolnić mysz przechwytywania, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A> przekazywanie `null` jako element do przechwycenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-172">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="5c64a-173">Jeśli przechwyceniu myszy podczas <xref:System.Windows.Input.Mouse.MouseDown> lub <xref:System.Windows.Input.Mouse.MouseUp> zdarzenia i dane wejściowe nie ma elementu poniżej przycisk myszy, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> i <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> pojawienia się najpierw.</span><span class="sxs-lookup"><span data-stu-id="5c64a-173">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="5c64a-174">Dzięki temu przechwyconych element możliwość zwolnienia Przechwytywanie przed <xref:System.Windows.Input.Mouse.MouseDown> i <xref:System.Windows.Input.Mouse.MouseUp> są kierowane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-174">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c64a-175">Poniższy przykład przedstawia sposób przechwytywanie myszy konkretnego elementu za pomocą <xref:System.Windows.Input.Mouse.Capture%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="5c64a-175">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-176">Pobiera element przechwyconych myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-176">Gets the element that has captured the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c64a-177">Element przechwycone przy użyciu myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-177">The element captured by the mouse.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-178">Gdy element przechwytuje mysz, otrzymuje myszą czy kursor znajduje się w jej granicach.</span><span class="sxs-lookup"><span data-stu-id="5c64a-178">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="5c64a-179">Mysz jest zwykle przechwycona w ten sposób tylko podczas operacji przeciągania i upuszczania, a zachowuje przechwytywania, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5c64a-179">The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c64a-180">W przykładzie poniżej pokazano, jak można uzyskać elementu, który ma przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="5c64a-180">The follow example shows how to obtain the element that has mouse capture.</span></span>  
  
 [!code-csharp[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecapturemousecaptured)]
 [!code-vb[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecapturemousecaptured)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-181">Pobiera element, którego wskaźnik myszy znajduje się nad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-181">Gets the element the mouse pointer is directly over.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c64a-182">Element wskaźnik myszy znajduje się nad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-182">The element the mouse pointer is over.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-183">Formanty może składać się z wielu elementów.</span><span class="sxs-lookup"><span data-stu-id="5c64a-183">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="5c64a-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> Raporty konkretny element w złożonych kontrolek, które wskaźnik myszy znajduje się nad, a nie samego formantu.</span><span class="sxs-lookup"><span data-stu-id="5c64a-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span> <span data-ttu-id="5c64a-185">Na przykład, w zależności od część <xref:System.Windows.Controls.Button> wskaźnik znajduje się nad, <xref:System.Windows.Input.Mouse.DirectlyOver%2A> właściwości można raportować <xref:System.Windows.Controls.TextBox> z <xref:System.Windows.Controls.ContentControl.Content%2A> właściwości lub <xref:Microsoft.Windows.Themes.ButtonChrome>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-185">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="5c64a-186">Użyj <xref:System.Windows.IInputElement.IsMouseOver%2A> właściwość <xref:System.Windows.UIElement> i <xref:System.Windows.ContentElement> do ustalenia, czy wskaźnik myszy jest nad elementem, w tym jego elementy podrzędne visual lub sterowania składania elementów.</span><span class="sxs-lookup"><span data-stu-id="5c64a-186">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 <span data-ttu-id="5c64a-187">Jeśli element ma przechwytywanie myszy, wskaźnik myszy jest uznawany bezpośrednio nad elementem, niezależnie od tego, gdzie jest wskaźnik myszy.</span><span class="sxs-lookup"><span data-stu-id="5c64a-187">If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseOver" />
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="GetIntermediatePoints">
      <MemberSignature Language="C#" Value="public static int GetIntermediatePoints (System.Windows.IInputElement relativeTo, System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIntermediatePoints(class System.Windows.IInputElement relativeTo, valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIntermediatePoints (relativeTo As IInputElement, points As Point()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetIntermediatePoints(System::Windows::IInputElement ^ relativeTo, cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="5c64a-188">Elementy <c>punktów</c> są w odniesieniu do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-188">The elements <c>points</c> are in relation to.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="5c64a-189">Tablica obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-189">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-190">Pobiera maksymalnie 64 poprzedniej współrzędnych wskaźnika myszy od czasu ostatniego myszy Przenieś zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-190">Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c64a-191">Liczba punktów zwrócona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-191">The number of points returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="5c64a-192">Przestrzeni współrzędnych, w którym można obliczyć położenie kursora myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-192">The coordinate space in which to calculate the position of the mouse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-193">Pobiera położenie myszy względem określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-193">Gets the position of the mouse relative to a specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c64a-194">Położenie myszy względem parametr <paramref name="relativeTo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-194">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-195">Pozycja wskaźnik myszy jest obliczana względem określonego elementu z lewego górnego rogu elementu jest punkt początkowy, 0,0.</span><span class="sxs-lookup"><span data-stu-id="5c64a-195">The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 <span data-ttu-id="5c64a-196">Podczas operacji przeciągania i upuszczania położenie kursora myszy nie można niezawodnie ustalić za pośrednictwem <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-196">During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span></span> <span data-ttu-id="5c64a-197">Jest to spowodowane sterowania myszą (prawdopodobnie w tym przechwytywania) jest trzymana przez element źródłowy przeciągania, aż do zakończenia listy z znacznie zachowanie kontrolowane przez podstawowy [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] wywołania.</span><span class="sxs-lookup"><span data-stu-id="5c64a-197">This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls.</span></span> <span data-ttu-id="5c64a-198">Zamiast tego spróbuj następujących metod:</span><span class="sxs-lookup"><span data-stu-id="5c64a-198">Try the following approaches instead:</span></span>  
  
-   <span data-ttu-id="5c64a-199">Wywołanie <xref:System.Windows.DragEventArgs.GetPosition%2A> metody <xref:System.Windows.DragEventArgs> przekazanego do zdarzeń, przeciągnij (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span><span class="sxs-lookup"><span data-stu-id="5c64a-199">Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span></span>  
  
-   <span data-ttu-id="5c64a-200">Wywołanie [GetCursorPos](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), przy użyciu P/Invoke.</span><span class="sxs-lookup"><span data-stu-id="5c64a-200">Call [GetCursorPos](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), using P/Invoke.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c64a-201">Poniższy przykład przedstawia użycie <xref:System.Windows.Input.Mouse.GetPosition%2A> do określenia pozycji wskaźnik myszy.</span><span class="sxs-lookup"><span data-stu-id="5c64a-201">The following example shows how to use <xref:System.Windows.Input.Mouse.GetPosition%2A> to determine the position of the mouse pointer.</span></span>  <span data-ttu-id="5c64a-202">Pozycja wskaźnik myszy znajduje się w <xref:System.Windows.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="5c64a-202">The position of the mouse pointer is stored in a <xref:System.Windows.Point> structure.</span></span>  <span data-ttu-id="5c64a-203"><xref:System.Windows.Point.X%2A> i <xref:System.Windows.Point.Y%2A> wartości <xref:System.Windows.Point> obiektu są wyświetlane w <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-203">The <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of the <xref:System.Windows.Point> object are displayed in a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetspositionmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetspositionmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-204">Identyfikuje <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-204">Identifies the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-205">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-205">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-206">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-206">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-207">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-207">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-208">Pobiera stan lewego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-208">Gets the state of the left button of the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c64a-209">Stan lewego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-209">The state of the left mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5c64a-210">Poniższy przykład przedstawia sposób określania, czy lewy przycisk myszy jest wciśnięty przez sprawdzenie, czy stan <xref:System.Windows.Input.Mouse.LeftButton%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartość wyliczenia <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-210">The following example shows how to determine whether the left mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.LeftButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="5c64a-211">Jeśli przycisk jest naciśnięty, metoda jest wywoływana, które aktualizacje są wyświetlane elementy w próbce.</span><span class="sxs-lookup"><span data-stu-id="5c64a-211">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetleftbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetleftbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-212">Identyfikuje <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-212">Identifies the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-213">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-213">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-214">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-214">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-215">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-215">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-216">Pobiera stan środkowy przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-216">Gets the state of the middle button of the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c64a-217">Stan środkowego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-217">The state of the middle mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5c64a-218">Poniższy przykład przedstawia sposób określania, czy środkowy przycisk myszy jest wciśnięty przez sprawdzenie, czy stan <xref:System.Windows.Input.Mouse.MiddleButton%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartość wyliczenia <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-218">The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.MiddleButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="5c64a-219">Jeśli przycisk jest naciśnięty, metoda jest wywoływana, które aktualizacje są wyświetlane elementy w próbce.</span><span class="sxs-lookup"><span data-stu-id="5c64a-219">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetmiddlebuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetmiddlebuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-220">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-220">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-221">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-221">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-222">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-222">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-223">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-223">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-224">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-224">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-225">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-225">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-226">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-227">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-227">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-228">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-228">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-229">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-229">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-230">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-230">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-231">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-231">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-232">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-232">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-233">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-233">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-234">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-234">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-235">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-235">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-236">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseUp" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-236">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-237">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-237">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-238">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-238">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-239">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-239">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDeltaForOneLine">
      <MemberSignature Language="C#" Value="public const int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MouseWheelDeltaForOneLine = (120)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberSignature Language="VB.NET" Value="Public Const MouseWheelDeltaForOneLine As Integer  = 120" />
      <MemberSignature Language="C++ CLI" Value="public: int MouseWheelDeltaForOneLine = 120;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>120</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-240">Reprezentuje liczbę jednostek jest obracana kółka myszy przewijanie jeden wiersz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-240">Represents the number of units the mouse wheel is rotated to scroll one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-241">W bieżącym [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], wartość tego pola wynosi 120.</span><span class="sxs-lookup"><span data-stu-id="5c64a-241">In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120.</span></span> <span data-ttu-id="5c64a-242">Zamiar narażenia pole jest umożliwienie dostawcom do tworzenia bardziej precyzyjną rozpoznawania pokrętła myszy w przyszłości, które prawdopodobnie obejmuje za darmo obracania kółka bez pozycje.</span><span class="sxs-lookup"><span data-stu-id="5c64a-242">The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.</span></span> <span data-ttu-id="5c64a-243">Oczekuje się, że takie urządzenia są wysyłane więcej wiadomości na obracanie, jednak z mniejszą wartość w każdej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5c64a-243">The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.</span></span> <span data-ttu-id="5c64a-244">Do obsługi tej możliwości, należy albo dodać wartości delta przychodzących do momentu <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> kwota osiągnięciu (aby obrotu delta otrzymasz odpowiedź tej samej) lub przewiń częściowe wierszy w odpowiedzi na wiadomości częściej.</span><span class="sxs-lookup"><span data-stu-id="5c64a-244">To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.</span></span> <span data-ttu-id="5c64a-245">Można również wybrać własne szczegółowości przewijania i kumulują się delty wybranej przez użytkownika, dopóki tej różnicowej osiągnięciu lub prawdopodobnie odwołania do systemu sterowane użytkownika parametrów dla czułości myszy i ekstrapolacja tych progów delta kółka myszy.</span><span class="sxs-lookup"><span data-stu-id="5c64a-245">You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseWheelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-246">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-246">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-247">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-247">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-248">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-248">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-249">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-249">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-250">Pobiera lub ustawia kursor dla całej aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-250">Gets or sets the cursor for the entire application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c64a-251">Kursor zastąpienia lub <see langword="null" /> Jeśli <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> nie jest ustawiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-251">The override cursor or <see langword="null" /> if the <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> is not set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-252"><xref:System.Windows.Input.Cursor> Który <xref:System.Windows.Input.Mouse.OverrideCursor%2A> jest ustawiona na zostaną zastosowane dla całej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5c64a-252">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="5c64a-253">Aby wyczyścić zastąpienie <xref:System.Windows.Input.Cursor>ustaw <xref:System.Windows.Input.Mouse.OverrideCursor%2A> do `null`.</span><span class="sxs-lookup"><span data-stu-id="5c64a-253">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="5c64a-254">Ustawienie <xref:System.Windows.Input.Mouse.OverrideCursor%2A> do <xref:System.Windows.Input.Cursors.None%2A> wymusi kursora myszy nie mają być wyświetlane, ale nadal są przetwarzane zdarzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="5c64a-254">Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c64a-255">W poniższym przykładzie przedstawiono program obsługi zdarzeń dla <xref:System.Windows.Controls.RadioButton> który służy do przełączania zakresu kursora zamiany pojedynczego elementu i całej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5c64a-255">The following example shows an event handler for a <xref:System.Windows.Controls.RadioButton> that is used to toggle the scope of a cursor change between a single element and the entire application.</span></span>  <span data-ttu-id="5c64a-256">Jeśli jest formant, który wywołał zdarzenie `rbScopeElement` <xref:System.Windows.Controls.RadioButton>, jest ustawiona flaga, która określa zakres zmiany kursor i <xref:System.Windows.Input.Mouse.OverrideCursor%2A> ma ustawioną wartość `null`.</span><span class="sxs-lookup"><span data-stu-id="5c64a-256">If the control that raised the event is the `rbScopeElement`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to `null`.</span></span>  <span data-ttu-id="5c64a-257">Jeśli jest formant, który wywołał zdarzenie `rbScopeApplication` <xref:System.Windows.Controls.RadioButton>, jest ustawiona flaga, która oznacza konsekwencji tej zmiany kursora i <xref:System.Windows.Input.Mouse.OverrideCursor%2A> ma ustawioną wartość <xref:System.Windows.FrameworkElement.Cursor%2A> właściwość <xref:System.Windows.Controls.Border> formantu o nazwie `DisplayArea`.</span><span class="sxs-lookup"><span data-stu-id="5c64a-257">If the control that raised the event is the `rbScopeApplication`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to the <xref:System.Windows.FrameworkElement.Cursor%2A> property of the <xref:System.Windows.Controls.Border> control named `DisplayArea`.</span></span>  
  
 [!code-csharp[cursors#CursorsSampleOverrideCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#cursorssampleoverridecursor)]
 [!code-vb[cursors#CursorsSampleOverrideCursor](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#cursorssampleoverridecursor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-258">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-258">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-259">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-259">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-260">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-260">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-261">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-261">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-262">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-262">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-263">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-263">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-264">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-264">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-265">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-265">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-266">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-266">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-267">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-267">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-268">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-268">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-269">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-269">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-270">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-270">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-271">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-271">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-272">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-272">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-273">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-273">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-274">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-274">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-275">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-275">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-276">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-276">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-277">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-277">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-278">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-278">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-279">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-279">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-280">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-280">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-281">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-281">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.MouseDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseDevice ^ PrimaryDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-282">Pobiera urządzeniem podstawowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-282">Gets the primary mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c64a-283">Urządzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-283">The device.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-284">Ta właściwość obsługuje infrastrukturę programu Windows Presentation Foundation i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="5c64a-284">This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="ILAsm" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-285">Identyfikuje <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-285">Identifies the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-286">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane, a wynik jest zapisywany jako pole w klasie, która rejestruje kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-286">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5c64a-287">Te identyfikatory zawierają nazwę identyfikującą, typ właściciela typ obsługi, strategii routingu i metodę narzędzia na potrzeby dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-287">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5c64a-288">Często używane takie identyfikatory jako parametry metody systemu zdarzeń, aby zidentyfikować określonego kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5c64a-288">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-289">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-289">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-290">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-290">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-291">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-291">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-292">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-292">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-293">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-293">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-294">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-294">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-295">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-295">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-296">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-296">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-297">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-297">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-298">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-298">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-299">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-299">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-300">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-300">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-301">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-301">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-302">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-302">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-303">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-303">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-304">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-304">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-305">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-305">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-306">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-306">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-307">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-307">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-308">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-308">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-309">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseUp" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-309">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-310">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-310">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-311">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-311">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-312">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-312">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-313">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-313">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-314">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-314">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-315">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-315">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-316">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-316">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-317">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-317">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-318">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-318">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-319">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-319">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-320">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-320">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-321">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-321">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-322">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-322">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-323">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-323">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-324">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-324">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-325">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-325">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-326">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-326">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-327">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-327">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-328">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-328">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-329">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-329">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-330">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-330">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void RemoveQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="5c64a-331">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchującą do tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-331">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="5c64a-332">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-332">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-333">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-333">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-334">Pobiera stan prawy przycisk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-334">Gets the state of the right button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c64a-335">Stan prawym przyciskiem myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-335">The state of the right mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5c64a-336">Poniższy przykład przedstawia sposób określania, czy prawy przycisk myszy jest wciśnięty przez sprawdzenie, czy stan <xref:System.Windows.Input.Mouse.RightButton%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartość wyliczenia <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-336">The following example shows how to determine whether the right mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.RightButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="5c64a-337">Jeśli przycisk jest naciśnięty, metoda jest wywoływana, które aktualizacje są wyświetlane elementy w próbce.</span><span class="sxs-lookup"><span data-stu-id="5c64a-337">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetrightbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetrightbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public static bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor">
          <span data-ttu-id="5c64a-338">Kursor na wskaźnik myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-338">The cursor to set the mouse pointer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c64a-339">Ustawia wskaźnik myszy do określonego <see cref="T:System.Windows.Input.Cursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-339">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c64a-340">
            <see langword="true" />, jeśli ustawiono kursor; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-340">
              <see langword="true" />, if the cursor was set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c64a-341">Kursor ustawiany nie ma zastosowania do jeden z elementów, ale raczej zastosowanie do całej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5c64a-341">The cursor being set does not apply to any particular element, but rather it applies to the whole application.</span></span>  <span data-ttu-id="5c64a-342">Tak Jeśli po ustawieniu kursora, który przesuwa wskaźnik myszy nad obiektu, który ustawia kursor, gdy kursor zmieni się ponownie.</span><span class="sxs-lookup"><span data-stu-id="5c64a-342">So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.</span></span>  
  
 <span data-ttu-id="5c64a-343">Aby wymusić wskaźnik myszy do konkretnego <xref:System.Windows.Input.Cursor> i to wymuszenie <xref:System.Windows.Input.Cursor> na wszystkie elementy, ustaw <xref:System.Windows.Input.Mouse.OverrideCursor%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5c64a-343">To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property.</span></span>  
  
 <span data-ttu-id="5c64a-344">Aby ustawić kursor na określony element, użyj <xref:System.Windows.FrameworkElement.Cursor%2A> właściwości albo <xref:System.Windows.FrameworkElement> lub <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-344">To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  <span data-ttu-id="5c64a-345">Aby uzyskać więcej informacji na podstawowych elementów, zobacz [podstawowej Omówienie elementów](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5c64a-345">For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.Cursors" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-346">Wymusza myszy, aby ponownie zsynchronizować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-346">Forces the mouse to resynchronize.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
        <altmember cref="M:System.Windows.Input.Mouse.Synchronize" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public static void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateCursor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-347">Wymusza wskaźnik myszy do zaktualizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-347">Forces the mouse cursor to be updated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-348">Pobiera stan przycisku pierwszej rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-348">Gets the state of the first extended button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c64a-349">Stan pierwszej przycisk myszy rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-349">The state of the first extended mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5c64a-350">Poniższy przykład przedstawia sposób określania, czy pierwszy przycisk rozszerzonej myszy jest wciśnięty przez sprawdzenie, czy stan <xref:System.Windows.Input.Mouse.XButton1%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartość wyliczenia <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-350">The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton1%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="5c64a-351">Jeśli przycisk jest naciśnięty, metoda jest wywoływana, które aktualizacje są wyświetlane elementy w próbce.</span><span class="sxs-lookup"><span data-stu-id="5c64a-351">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx1buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx1buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c64a-352">Pobiera stan drugiego przycisku rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-352">Gets the state of the second extended button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5c64a-353">Stan drugiego przycisku myszy rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c64a-353">The state of the second extended mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5c64a-354">Poniższy przykład przedstawia sposób określania, czy drugi przycisk rozszerzonej myszy jest wciśnięty przez sprawdzenie, czy stan <xref:System.Windows.Input.Mouse.XButton2%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartość wyliczenia <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="5c64a-354">The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton2%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="5c64a-355">Jeśli przycisk jest naciśnięty, metoda jest wywoływana, które aktualizacje są wyświetlane elementy w próbce.</span><span class="sxs-lookup"><span data-stu-id="5c64a-355">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx2buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx2buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>