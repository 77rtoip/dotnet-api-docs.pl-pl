<Type Name="Mouse" FullName="System.Windows.Input.Mouse">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ec29fdc352c03282bddfca91b02b0b0b0d7ce66" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69170831" /></Metadata><TypeSignature Language="C#" Value="public static class Mouse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Mouse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Mouse" />
  <TypeSignature Language="VB.NET" Value="Public Class Mouse" />
  <TypeSignature Language="C++ CLI" Value="public ref class Mouse abstract sealed" />
  <TypeSignature Language="F#" Value="type Mouse = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="15c8d-101">Reprezentuje urządzenie myszy do określonego wątku.</span><span class="sxs-lookup"><span data-stu-id="15c8d-101">Represents the mouse device to a specific thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-102"><xref:System.Windows.Input.Mouse> Klasa zawiera zdarzenia dotyczące myszy, metody i właściwości, które zawierają informacje dotyczące stanu myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-102">The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.</span></span>  
  
 <span data-ttu-id="15c8d-103">Każde zdarzenie, <xref:System.Windows.Input.Mouse> które definiuje jako dołączone zdarzenie, jest również ponownie uwidaczniane przez klasy <xref:System.Windows.UIElement> elementów podstawowych i <xref:System.Windows.ContentElement> jako nowe zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-103">Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="15c8d-104">Ogólnie rzecz biorąc, wygodniejsze jest obsłużenie zdarzeń myszy dla aplikacji <xref:System.Windows.UIElement> <xref:System.Windows.Input.Mouse> , <xref:System.Windows.ContentElement>a nie przy użyciu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-104">Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events.</span></span> <span data-ttu-id="15c8d-105">Aby uzyskać szczegółowe informacje, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-106">Statyczny element członkowski <xref:System.Windows.Input.Mouse> klasy delegowany do podstawowego <xref:System.Windows.Input.MouseDevice> Menedżera wejściowego wątku wywołującego.</span><span class="sxs-lookup"><span data-stu-id="15c8d-106">The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-107"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-108">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-108">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-109">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-109">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-110"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-111">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-111">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-112">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-112">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-113"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-114">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-114">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-115">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-115">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-116"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-117">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-117">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-118">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-118">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-119"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-120">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-120">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-121">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-121">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-122"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-123">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-123">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-124">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-124">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-125"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-126">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-126">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-127">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseUp" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-127">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-128"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-129">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-129">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-130">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-130">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-131"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-132">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-132">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-133">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-133">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-134"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-135">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-135">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-136">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-136">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-137"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-138">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-138">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-139">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-139">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-140"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-141">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-141">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-142">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-142">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-143"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-144">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-144">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-145">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-145">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-146"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-147">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-147">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-148">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-148">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void AddQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-149"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-150">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-150">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-151">Dodaje procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-151">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-152">Przechwytuje dane wejściowe myszy do określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-152">Captures mouse input to the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-153">Gdy element przechwytuje mysz, otrzymuje wskaźnik myszy, niezależnie od tego, czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="15c8d-153">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="15c8d-154">Jeśli nie <xref:System.Windows.Input.CaptureMode> <xref:System.Windows.Input.CaptureMode.Element>jest określony, wartość domyślna to. <xref:System.Windows.Input.CaptureMode></span><span class="sxs-lookup"><span data-stu-id="15c8d-154">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="15c8d-155">Aby zwolnić funkcję przechwytywania myszy, <xref:System.Windows.Input.Mouse.Capture%2A> Wywołaj przekazywanie `null` jako element do przechwycenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-155">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="15c8d-156">Jeśli wskaźnik myszy jest przechwytywany, <xref:System.Windows.Input.Mouse.MouseDown> gdy <xref:System.Windows.Input.Mouse.MouseUp> zdarzenie lub zostanie wywołane, a dane wejściowe nie przechodzą do <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> elementu pod myszą <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> i są wywoływane jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="15c8d-156">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="15c8d-157">Dzięki temu przechwyconemu elementowi można zwolnić przechwycenie przed <xref:System.Windows.Input.Mouse.MouseDown> rozpoczęciem routingu i <xref:System.Windows.Input.Mouse.MouseUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-157">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Mouse.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-158">Element, aby przechwycić mysz.</span><span class="sxs-lookup"><span data-stu-id="15c8d-158">The element to capture the mouse.</span></span></param>
        <summary><span data-ttu-id="15c8d-159">Przechwytuje dane wejściowe myszy do określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-159">Captures mouse input to the specified element.</span></span></summary>
        <returns><span data-ttu-id="15c8d-160"><see langword="true" />Jeśli element był w stanie przechwycić mysz; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="15c8d-160"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-161">Gdy element przechwytuje mysz, otrzymuje wskaźnik myszy, niezależnie od tego, czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="15c8d-161">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="15c8d-162">Jeśli nie <xref:System.Windows.Input.CaptureMode> <xref:System.Windows.Input.CaptureMode.Element>jest określony, wartość domyślna to. <xref:System.Windows.Input.CaptureMode></span><span class="sxs-lookup"><span data-stu-id="15c8d-162">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="15c8d-163">Aby zwolnić funkcję przechwytywania myszy, <xref:System.Windows.Input.Mouse.Capture%2A> Wywołaj przekazywanie `null` jako element do przechwycenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-163">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="15c8d-164">Jeśli wskaźnik myszy jest przechwytywany, <xref:System.Windows.Input.Mouse.MouseDown> gdy <xref:System.Windows.Input.Mouse.MouseUp> zdarzenie lub zostanie wywołane, a dane wejściowe nie przechodzą do <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> elementu pod myszą <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> i są wywoływane jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="15c8d-164">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="15c8d-165">Dzięki temu przechwyconemu elementowi można zwolnić przechwycenie przed <xref:System.Windows.Input.Mouse.MouseDown> rozpoczęciem routingu i <xref:System.Windows.Input.Mouse.MouseUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-165">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15c8d-166">Poniższy przykład pokazuje, jak przechwycić mysz do określonego elementu przy użyciu <xref:System.Windows.Input.Mouse.Capture%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="15c8d-166">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Mouse.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-167">Element, aby przechwycić mysz.</span><span class="sxs-lookup"><span data-stu-id="15c8d-167">The element to capture the mouse.</span></span></param>
        <param name="captureMode"><span data-ttu-id="15c8d-168">Zasady przechwytywania do użycia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-168">The capture policy to use.</span></span></param>
        <summary><span data-ttu-id="15c8d-169">Przechwytuje dane wejściowe myszy do określonego elementu przy <see cref="T:System.Windows.Input.CaptureMode" />użyciu określonego.</span><span class="sxs-lookup"><span data-stu-id="15c8d-169">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></summary>
        <returns><span data-ttu-id="15c8d-170"><see langword="true" />Jeśli element był w stanie przechwycić mysz; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="15c8d-170"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-171">Gdy element przechwytuje mysz, otrzymuje wskaźnik myszy, czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="15c8d-171">When an element captures the mouse, it receives mouse input whether the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="15c8d-172">Aby zwolnić funkcję przechwytywania myszy, <xref:System.Windows.Input.Mouse.Capture%2A> Wywołaj przekazywanie `null` jako element do przechwycenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-172">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="15c8d-173">Jeśli wskaźnik myszy jest przechwytywany, <xref:System.Windows.Input.Mouse.MouseDown> gdy <xref:System.Windows.Input.Mouse.MouseUp> zdarzenie lub zostanie wywołane, a dane wejściowe nie przechodzą do <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> elementu pod myszą <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> i są wywoływane jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="15c8d-173">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="15c8d-174">Dzięki temu przechwyconemu elementowi można zwolnić przechwycenie przed <xref:System.Windows.Input.Mouse.MouseDown> rozpoczęciem routingu i <xref:System.Windows.Input.Mouse.MouseUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-174">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15c8d-175">Poniższy przykład pokazuje, jak przechwycić mysz do określonego elementu przy użyciu <xref:System.Windows.Input.Mouse.Capture%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="15c8d-175">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-176">Pobiera element, który przechwytuje mysz.</span><span class="sxs-lookup"><span data-stu-id="15c8d-176">Gets the element that has captured the mouse.</span></span></summary>
        <value><span data-ttu-id="15c8d-177">Element przechwycony przez mysz.</span><span class="sxs-lookup"><span data-stu-id="15c8d-177">The element captured by the mouse.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-178">Gdy element przechwytuje mysz, otrzymuje wskaźnik myszy, niezależnie od tego, czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="15c8d-178">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="15c8d-179">Mysz jest zwykle przechwytywana w ten sposób tylko podczas operacji przeciągania i upuszczania oraz zachowuje przechwytywanie do momentu wystąpienia akcji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="15c8d-179">The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15c8d-180">W poniższym przykładzie pokazano, jak uzyskać element, który ma przechwycenie myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-180">The follow example shows how to obtain the element that has mouse capture.</span></span>  
  
 [!code-csharp[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecapturemousecaptured)]
 [!code-vb[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecapturemousecaptured)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-181">Pobiera element, którego wskaźnik myszy jest przełączany bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="15c8d-181">Gets the element the mouse pointer is directly over.</span></span></summary>
        <value><span data-ttu-id="15c8d-182">Element, nad którym znajduje się wskaźnik myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-182">The element the mouse pointer is over.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-183">Kontrolki mogą składać się z wielu elementów.</span><span class="sxs-lookup"><span data-stu-id="15c8d-183">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="15c8d-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A>raportuje określony element w kontrolce złożonej, wskaźnik myszy znajduje się nad, a nie sam formantem.</span><span class="sxs-lookup"><span data-stu-id="15c8d-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span> <span data-ttu-id="15c8d-185">Na przykład, w zależności od tego, która część <xref:System.Windows.Controls.Button> wskaźnika znajduje się nad <xref:System.Windows.Input.Mouse.DirectlyOver%2A> , właściwość <xref:System.Windows.Controls.ContentControl.Content%2A> może zgłosić <xref:System.Windows.Controls.TextBox> właściwość lub <xref:Microsoft.Windows.Themes.ButtonChrome>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-185">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="15c8d-186">Użyj właściwości w <xref:System.Windows.UIElement> i<xref:System.Windows.ContentElement> , aby określić, czy wskaźnik myszy znajduje się nad elementem, który obejmuje jego elementy potomne wizualizacji lub elementy kompozycji formantów. <xref:System.Windows.IInputElement.IsMouseOver%2A></span><span class="sxs-lookup"><span data-stu-id="15c8d-186">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 <span data-ttu-id="15c8d-187">Jeśli element ma przechwycenie myszy, wskaźnik myszy jest uznawany za bezpośrednio nad elementem, bez względu na to, gdzie znajduje się wskaźnik myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-187">If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseOver" />
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="GetIntermediatePoints">
      <MemberSignature Language="C#" Value="public static int GetIntermediatePoints (System.Windows.IInputElement relativeTo, System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIntermediatePoints(class System.Windows.IInputElement relativeTo, valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIntermediatePoints (relativeTo As IInputElement, points As Point()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetIntermediatePoints(System::Windows::IInputElement ^ relativeTo, cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="static member GetIntermediatePoints : System.Windows.IInputElement * System.Windows.Point[] -&gt; int" Usage="System.Windows.Input.Mouse.GetIntermediatePoints (relativeTo, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="15c8d-188">Elementy <paramref name="points" /> znajdują się w odniesieniu do.</span><span class="sxs-lookup"><span data-stu-id="15c8d-188">The elements <paramref name="points" /> are in relation to.</span></span></param>
        <param name="points"><span data-ttu-id="15c8d-189">Tablica obiektów.</span><span class="sxs-lookup"><span data-stu-id="15c8d-189">An array of objects.</span></span></param>
        <summary><span data-ttu-id="15c8d-190">Pobiera do 64 poprzednich współrzędnych wskaźnika myszy od momentu ostatniego przejścia kursora myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-190">Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.</span></span></summary>
        <returns><span data-ttu-id="15c8d-191">Liczba zwróconych punktów.</span><span class="sxs-lookup"><span data-stu-id="15c8d-191">The number of points returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="static member GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="System.Windows.Input.Mouse.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="15c8d-192">Przestrzeń współrzędnych, w której ma zostać obliczona pozycja myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-192">The coordinate space in which to calculate the position of the mouse.</span></span></param>
        <summary><span data-ttu-id="15c8d-193">Pobiera pozycję myszy względem określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-193">Gets the position of the mouse relative to a specified element.</span></span></summary>
        <returns><span data-ttu-id="15c8d-194">Pozycja myszy względem parametru <paramref name="relativeTo" />.</span><span class="sxs-lookup"><span data-stu-id="15c8d-194">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-195">Pozycja wskaźnika myszy jest obliczana względem określonego elementu w lewym górnym rogu elementu, który jest punktem początkowym, 0, 0.</span><span class="sxs-lookup"><span data-stu-id="15c8d-195">The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 <span data-ttu-id="15c8d-196">Podczas operacji przeciągania i upuszczania pozycja myszy nie może być niezawodnie określana za pomocą <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-196">During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span></span> <span data-ttu-id="15c8d-197">Wynika to z faktu, że kontrola nad myszą (może także dotyczyć przechwytywania) jest utrzymywana przez element inicjujący przeciągania do momentu ukończenia upuszczania, z dużą ilością zachowania [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] sterowanego przez wywołania bazowe.</span><span class="sxs-lookup"><span data-stu-id="15c8d-197">This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls.</span></span> <span data-ttu-id="15c8d-198">Zamiast tego spróbuj użyć następujących metod:</span><span class="sxs-lookup"><span data-stu-id="15c8d-198">Try the following approaches instead:</span></span>  
  
-   <span data-ttu-id="15c8d-199"><xref:System.Windows.ContentElement.DragEnter> <xref:System.Windows.ContentElement.DragLeave> <xref:System.Windows.ContentElement.DragOver>Wywołaj <xref:System.Windows.DragEventArgs> metodę, która jest przenoszona do zdarzeń przeciągania (,,). <xref:System.Windows.DragEventArgs.GetPosition%2A></span><span class="sxs-lookup"><span data-stu-id="15c8d-199">Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span></span>  
  
-   <span data-ttu-id="15c8d-200">Wywołaj [GetCursorPos](https://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), używając metody P/Invoke.</span><span class="sxs-lookup"><span data-stu-id="15c8d-200">Call [GetCursorPos](https://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), using P/Invoke.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15c8d-201">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Input.Mouse.GetPosition%2A> do określenia pozycji wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-201">The following example shows how to use <xref:System.Windows.Input.Mouse.GetPosition%2A> to determine the position of the mouse pointer.</span></span>  <span data-ttu-id="15c8d-202">Położenie wskaźnika myszy jest przechowywane w <xref:System.Windows.Point> strukturze.</span><span class="sxs-lookup"><span data-stu-id="15c8d-202">The position of the mouse pointer is stored in a <xref:System.Windows.Point> structure.</span></span>  <span data-ttu-id="15c8d-203">Wartości <xref:System.Windows.Point.X%2A> i<xref:System.Windows.Point.Y%2A> obiektu są wyświetlane w <xref:System.Windows.Controls.TextBox>. <xref:System.Windows.Point></span><span class="sxs-lookup"><span data-stu-id="15c8d-203">The <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of the <xref:System.Windows.Point> object are displayed in a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetspositionmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetspositionmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" Usage="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-204">Występuje, gdy element przechwytuje mysz.</span><span class="sxs-lookup"><span data-stu-id="15c8d-204">Occurs when an element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-205">Gdy element przechwytuje mysz, otrzymuje wskaźnik myszy, niezależnie od tego, czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="15c8d-205">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="15c8d-206">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-206">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-207">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-207">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-208">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-208">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-209">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-209">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-210">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-210">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-211">Ze względu na propagację routingu, rzeczywisty element, który ma przechwycenie, może być elementem podrzędnym, niekoniecznie do elementu, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="15c8d-211">Because of the bubbling routing, the actual element that has capture might be a child element, not necessarily the element where the event handler is actually attached.</span></span> <span data-ttu-id="15c8d-212"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź w argumentach zdarzeń, aby określić rzeczywisty element, który ma przechwycenie myszą.</span><span class="sxs-lookup"><span data-stu-id="15c8d-212">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event arguments to determine the actual element that has mouse capture.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-213">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-213">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-214">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-214">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.GotMouseCaptureEvent>|  
|<span data-ttu-id="15c8d-215">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-215">Routing strategy</span></span>|<span data-ttu-id="15c8d-216">Propagacja</span><span class="sxs-lookup"><span data-stu-id="15c8d-216">Bubbling</span></span>|  
|<span data-ttu-id="15c8d-217">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-217">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="15c8d-218">Nie zdefiniowano odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="15c8d-218">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-219"><see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-219">Identifies the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-220">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-220">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-221">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-221">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-222">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-222">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.LeftButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.LeftButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-223">Pobiera stan lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-223">Gets the state of the left button of the mouse.</span></span></summary>
        <value><span data-ttu-id="15c8d-224">Stan lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-224">The state of the left mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15c8d-225">Poniższy przykład pokazuje, jak ustalić, czy lewy przycisk myszy jest wciśnięty, sprawdzając, czy stan <xref:System.Windows.Input.Mouse.LeftButton%2A> jest równy <xref:System.Windows.Input.MouseButtonState> wartości <xref:System.Windows.Input.MouseButtonState.Pressed>wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-225">The following example shows how to determine whether the left mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.LeftButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="15c8d-226">Jeśli przycisk jest wciśnięty, metoda jest wywoływana, która aktualizuje elementy w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-226">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetleftbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetleftbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" Usage="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-227">Występuje, gdy element utraci przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-227">Occurs when an element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-228">Gdy element przechwytuje mysz, otrzymuje wskaźnik myszy, niezależnie od tego, czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="15c8d-228">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="15c8d-229">T</span><span class="sxs-lookup"><span data-stu-id="15c8d-229">T</span></span>  
  
 <span data-ttu-id="15c8d-230">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-230">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-231">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-231">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-232">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-232">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-233">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-233">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-234">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-234">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-235">Ze względu na propagację routingu, rzeczywisty element, który utracił przechwytywanie, może być elementem podrzędnym, niekoniecznie jest to element, w którym program obsługi zdarzeń jest rzeczywiście dołączony.</span><span class="sxs-lookup"><span data-stu-id="15c8d-235">Because of the bubbling routing, the actual element that lost capture might be a child element, not necessarily the element where the event handler is actually attached.</span></span> <span data-ttu-id="15c8d-236"><xref:System.Windows.RoutedEventArgs.Source%2A> Sprawdź w argumentach zdarzeń, aby określić rzeczywisty element, który utracił przechwytywanie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-236">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event arguments to determine the actual element that lost capture.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-237">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-237">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-238">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-238">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.LostMouseCaptureEvent>|  
|<span data-ttu-id="15c8d-239">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-239">Routing strategy</span></span>|<span data-ttu-id="15c8d-240">Propagacja</span><span class="sxs-lookup"><span data-stu-id="15c8d-240">Bubbling</span></span>|  
|<span data-ttu-id="15c8d-241">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-241">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="15c8d-242">Nie zdefiniowano odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="15c8d-242">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-243"><see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-243">Identifies the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-244">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-244">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-245">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-245">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-246">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-246">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.MiddleButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.MiddleButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-247">Pobiera stan środkowego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-247">Gets the state of the middle button of the mouse.</span></span></summary>
        <value><span data-ttu-id="15c8d-248">Stan środkowego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-248">The state of the middle mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15c8d-249">Poniższy przykład pokazuje, jak ustalić, czy środkowy przycisk myszy jest wciśnięty, sprawdzając, czy stan <xref:System.Windows.Input.Mouse.MiddleButton%2A> jest równy <xref:System.Windows.Input.MouseButtonState> wartości <xref:System.Windows.Input.MouseButtonState.Pressed>wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-249">The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.MiddleButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="15c8d-250">Jeśli przycisk jest wciśnięty, metoda jest wywoływana, która aktualizuje elementy w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-250">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetmiddlebuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetmiddlebuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" Usage="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-251">Występuje po naciśnięciu dowolnego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-251">Occurs when any mouse button is depressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-252">Aby określić, który przycisk myszy został rozciśnięty, sprawdź <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> Właściwość <xref:System.Windows.Input.MouseButtonEventArgs> w przekazaniu do procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-252">To determine which mouse button was depressed, check the <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property in the <xref:System.Windows.Input.MouseButtonEventArgs> passed to the handler.</span></span>  
  
 <span data-ttu-id="15c8d-253">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-253">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-254">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-254">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-255">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-255">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-256">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-256">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-257">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-257">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-258">Struktura [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] jest oparta na tym załączonym zdarzeniu przez przełączenie go <xref:System.Windows.UIElement> na <xref:System.Windows.ContentElement>dwa <xref:System.Windows.UIElement.MouseLeftButtonDown> różne <xref:System.Windows.UIElement.MouseRightButtonDown> [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzenia w systemach i: i.</span><span class="sxs-lookup"><span data-stu-id="15c8d-258">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="15c8d-259">Te implementacje obsługują zdarzenie <xref:System.Windows.Input.Mouse.MouseDown> podstawowe i odczytują argumenty zdarzenia, aby określić, czy pozostały lewy lub prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-259">These implementations handle the underlying <xref:System.Windows.Input.Mouse.MouseDown> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="15c8d-260">W przypadku myszy z trzema przyciskami nie ma obsługi zdarzeń na poziomie platformy dla przycisku centrum.</span><span class="sxs-lookup"><span data-stu-id="15c8d-260">For a three-button mouse, there is no framework-level event support for the center button.</span></span> <span data-ttu-id="15c8d-261">Należy użyć <xref:System.Windows.Input.Mouse.MouseDown> zdarzenia i <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> sprawdzić stan w argumentach zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-261">You should use the <xref:System.Windows.Input.Mouse.MouseDown> event and check the <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> state in the event arguments.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15c8d-262">Kilka <xref:System.Windows.ContentElement> klas pochodnych, które mają zachowanie podobne do kontrolki, na <xref:System.Windows.Documents.Hyperlink>przykład, może mieć nieodłączną obsługę klas dla zdarzeń przycisków myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-262">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="15c8d-263">Lewe zdarzenie myszy w dół jest najbardziej prawdopodobną przyczyną obsługi klas w formancie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-263">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="15c8d-264">Obsługa klasy często oznacza zdarzenia klasy bazowej <xref:System.Windows.Input.Mouse> jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-264">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="15c8d-265">Gdy zdarzenie zostanie oznaczone jako obsługiwane, inne programy obsługi wystąpienia dołączone do tego elementu nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-265">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="15c8d-266">Wszystkie inne procedury obsługi klasy lub wystąpienia, które są dołączone do elementów w kierunku propagacji do korzenia w drzewie interfejsu użytkownika, również nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-266">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="15c8d-267">Można rozwiązać problem opisany w powyższej ważnej notatce i nadal otrzymywać <xref:System.Windows.UIElement.MouseDown> zdarzenia dla lewego przycisku myszy zdarzenia w klasie pochodnej, która ma obsługę klasy, przy użyciu jednego z następujących rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="15c8d-267">You can resolve the issue that is outlined in the preceding Important note and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="15c8d-268">Dołącz programy obsługi dla <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenia, które nie jest oznaczone jako obsługiwane przez kontrolki.</span><span class="sxs-lookup"><span data-stu-id="15c8d-268">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="15c8d-269">Zwróć uwagę, że ponieważ jest to zdarzenie w wersji zapoznawczej, trasa zaczyna się od elementu głównego i tuneluje do formantu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-269">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="15c8d-270">Zarejestrowanie procedury obsługi na formancie w sposób proceduralny przez <xref:System.Windows.UIElement.AddHandler%2A> wywołanie i wybranie opcji podpisu, która umożliwia programom obsługi nasłuchiwanie zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych zdarzenia kierowanego.</span><span class="sxs-lookup"><span data-stu-id="15c8d-270">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
 <span data-ttu-id="15c8d-271">W przypadku zdarzeń kierowanych odnoszących się do myszy należy zachować ostrożność w przypadku, gdy są one oznaczane jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-271">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="15c8d-272">Trudności w podejmowaniu odpowiednich wyborów dotyczących tego, czy elementy nadrzędne powinny być również poinformowane o każdej akcji myszy, dlatego, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] że struktura zdecydowała się na modelu, że dla danego zdarzenia kierowana myszą [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] jest przypadane jako zdarzenia na trasie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-272">The difficulty in making the appropriate choices about whether parent elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying mouse routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span> <span data-ttu-id="15c8d-273">Podobne problemy występują w przypadku tunelowania zdarzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-273">Similar issues exist with tunneling mouse events.</span></span>  <span data-ttu-id="15c8d-274">Należy obsłużyć zdarzenie, które nie powinno być obsługiwane przez dalsze elementy podrzędne w kierunku źródła i jak miałoby to wpływ na tworzenie kontrolki, w której elementy kompozycji mogą mieć oczekiwane zachowania myszy?</span><span class="sxs-lookup"><span data-stu-id="15c8d-274">Should you handle the event and not have it be handled by further children toward the source, and how would that affect compositing a control where the compositing pieces might have expected mouse behaviors?</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-275">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-275">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-276">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-276">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseDownEvent>|  
|<span data-ttu-id="15c8d-277">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-277">Routing strategy</span></span>|<span data-ttu-id="15c8d-278">Propagacja</span><span class="sxs-lookup"><span data-stu-id="15c8d-278">Bubbling</span></span>|  
|<span data-ttu-id="15c8d-279">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-279">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="15c8d-280">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.Input.Mouse.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-280">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-281"><see cref="E:System.Windows.Input.Mouse.MouseDown" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-281">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-282">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-282">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-283">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-283">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-284">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-284">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="F#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" Usage="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-285">Występuje, gdy wskaźnik myszy zostanie przesunięty w granice elementu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-285">Occurs when the mouse pointer enters the boundaries of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-286">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-286">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-287">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-287">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-288">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-288">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-289">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-289">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-290">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-290">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-291">To zdarzenie używa strategii routingu dotyczącej bezpośredniego obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-291">This event uses the direct event handling routing strategy.</span></span> <span data-ttu-id="15c8d-292">Zdarzenia kierowane bezpośrednio nie są zgłaszane na trasie (są obsługiwane tylko w tym samym elemencie, w którym są wywoływane).</span><span class="sxs-lookup"><span data-stu-id="15c8d-292">Direct routed events are not raised along a route (they are only handled in the same element on which they are raised).</span></span>  <span data-ttu-id="15c8d-293">Można jednak włączyć inne aspekty zachowań zdarzeń kierowanych, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="15c8d-293">They do, however, enable other aspects of routed event behaviors, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="15c8d-294">Chociaż to zdarzenie jest używane do śledzenia, gdy wskaźnik myszy zostanie przesunięty do elementu, jest <xref:System.Windows.UIElement.IsMouseOver%2A> również raportowany, `false` że `true` właściwość została zmieniona z na na dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-294">Although this event is used to track when the mouse enters an element, it is also reporting the <xref:System.Windows.UIElement.IsMouseOver%2A> property has changed from `false` to `true` on this element.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-295">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-295">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-296">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-296">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseEnterEvent>|  
|<span data-ttu-id="15c8d-297">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-297">Routing strategy</span></span>|<span data-ttu-id="15c8d-298">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="15c8d-298">Direct</span></span>|  
|<span data-ttu-id="15c8d-299">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-299">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-300"><see cref="E:System.Windows.Input.Mouse.MouseEnter" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-300">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-301">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-301">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-302">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-302">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-303">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-303">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" Usage="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-304">Występuje, gdy wskaźnik myszy opuszcza granice elementu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-304">Occurs when the mouse pointer leaves the boundaries of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-305">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-305">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-306">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-306">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-307">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-307">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-308">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-308">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-309">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-309">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-310">To zdarzenie używa strategii routingu dotyczącej bezpośredniego obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-310">This event uses the direct event handling routing strategy.</span></span> <span data-ttu-id="15c8d-311">Zdarzenia kierowane bezpośrednio nie są zgodne z trasą (są obsługiwane tylko w tym samym elemencie, w którym zostały zgłoszone).</span><span class="sxs-lookup"><span data-stu-id="15c8d-311">Direct routed events do not follow a route (they are only handled in the same element on which they are raised).</span></span>  <span data-ttu-id="15c8d-312">Można jednak włączyć inne aspekty zachowań zdarzeń kierowanych, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="15c8d-312">They do, however, enable other aspects of routed event behaviors, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="15c8d-313">Chociaż to zdarzenie jest używane do śledzenia, gdy wskaźnik myszy opuszcza element, jest również raportowany, że <xref:System.Windows.UIElement.IsMouseOver%2A> wartość właściwości została zmieniona z `true` na `false` na w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-313">Although this event is used to track when the mouse leaves an element, it is also reporting that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-314">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-315">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-315">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseLeaveEvent>|  
|<span data-ttu-id="15c8d-316">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-316">Routing strategy</span></span>|<span data-ttu-id="15c8d-317">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="15c8d-317">Direct</span></span>|  
|<span data-ttu-id="15c8d-318">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-318">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-319"><see cref="E:System.Windows.Input.Mouse.MouseLeave" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-319">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-320">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-320">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-321">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-321">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-322">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-322">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" Usage="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-323">Występuje po przesunięciu wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-323">Occurs when the mouse pointer moves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-324">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-324">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-325">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-325">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-326">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-326">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-327">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-328">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-328">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-329">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-330">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-330">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseMoveEvent>|  
|<span data-ttu-id="15c8d-331">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-331">Routing strategy</span></span>|<span data-ttu-id="15c8d-332">Propagacja</span><span class="sxs-lookup"><span data-stu-id="15c8d-332">Bubbling</span></span>|  
|<span data-ttu-id="15c8d-333">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-333">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="15c8d-334">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.Input.Mouse.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-334">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseMove>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-335"><see cref="E:System.Windows.Input.Mouse.MouseMove" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-335">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-336">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-336">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-337">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-337">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-338">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-338">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" Usage="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-339">Występuje po wydaniu dowolnego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-339">Occurs when any mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-340">Który przycisk myszy został wyznaczony, jest określany przez sprawdzanie argumentów zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-340">Which mouse button was released is determined by checking the arguments of the event.</span></span>  
  
 <span data-ttu-id="15c8d-341">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-341">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-342">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-342">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-343">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-343">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-344">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-344">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-345">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-345">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-346"><xref:System.Windows.UIElement> [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] <xref:System.Windows.UIElement.MouseRightButtonUp> <xref:System.Windows.UIElement.MouseLeftButtonUp> Platforma kompiluje na tym załączonym zdarzeniu, umieszczając je w postaci dwóch różnych zdarzeń w: i. [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</span><span class="sxs-lookup"><span data-stu-id="15c8d-346">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="15c8d-347">Te implementacje obsługują zdarzenie <xref:System.Windows.Input.Mouse.MouseUp> podstawowe i odczytują argumenty zdarzenia, aby określić, czy pozostały lewy lub prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-347">These implementations handle the underlying <xref:System.Windows.Input.Mouse.MouseUp> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="15c8d-348">W przypadku trzech przycisków nie ma obsługi zdarzeń na poziomie platformy dla przycisku centrum. należy użyć <xref:System.Windows.Input.Mouse.MouseUp> zdarzenia i sprawdzić warunek środkowy przycisku w argumentach zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-348">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.MouseUp> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="15c8d-349">W przypadku zdarzeń kierowanych odnoszących się do myszy należy zachować ostrożność w przypadku, gdy są one oznaczane jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-349">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="15c8d-350">Trudności w podejmowaniu odpowiednich wyborów dotyczących tego, czy elementy nadrzędne powinny być również poinformowane o każdej akcji myszy, dlatego, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] że struktura zdecydowała się na modelu, <xref:System.Windows.Input.Mouse> że dane zdarzenie powiązanezkierowana[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenia wszystkie wzdłuż trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-350">The difficulty in making the appropriate choices about whether parent elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events all along the route.</span></span>  
  
 <span data-ttu-id="15c8d-351">Podobne problemy występują w przypadku tunelowania zdarzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-351">Similar issues exist with tunneling mouse events.</span></span>  <span data-ttu-id="15c8d-352">Należy obsłużyć zdarzenie i nie powinno być obsługiwane przez elementy podrzędne w celu dalszej części źródła i jak miałoby to wpływ na składanie w formancie, w którym elementy kompozycji mogą mieć oczekiwane zachowania myszy?</span><span class="sxs-lookup"><span data-stu-id="15c8d-352">Should you handle the event and not have it be handled by children further towards the source, and how would that affect compositing in a control where the compositing pieces might have expected mouse behaviors?</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-353">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-353">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-354">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-354">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseUpEvent>|  
|<span data-ttu-id="15c8d-355">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-355">Routing strategy</span></span>|<span data-ttu-id="15c8d-356">Propagacja</span><span class="sxs-lookup"><span data-stu-id="15c8d-356">Bubbling</span></span>|  
|<span data-ttu-id="15c8d-357">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-357">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
 <span data-ttu-id="15c8d-358">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.Input.Mouse.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-358">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-359"><see cref="E:System.Windows.Input.Mouse.MouseUp" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-359">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-360">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-360">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-361">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-361">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-362">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-362">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" Usage="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-363">Występuje po obróceniu kółka myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-363">Occurs when the mouse wheel is rotated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-364">Funkcja skupienie lub Funkcja przechwytywania myszy ma pierwszeństwo przed miejscem, w którym znajduje się wskaźnik myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-364">Focus or mouse capture take precedence over where the mouse pointer is.</span></span>  <span data-ttu-id="15c8d-365">Jeśli otrzymasz to zdarzenie z elementu skoncentrowanego lub przechwyconego, wskaźnik myszy może znajdować się nad innym elementem w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-365">If you receive this event from a focused or captured element, the mouse pointer might in fact be over another element at the time.</span></span>  
  
 <span data-ttu-id="15c8d-366">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-366">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-367">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-367">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-368">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-368">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-369">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-369">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-370">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-370">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-371">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-371">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-372">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-372">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseWheelEvent>|  
|<span data-ttu-id="15c8d-373">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-373">Routing strategy</span></span>|<span data-ttu-id="15c8d-374">Propagacja</span><span class="sxs-lookup"><span data-stu-id="15c8d-374">Bubbling</span></span>|  
|<span data-ttu-id="15c8d-375">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-375">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="15c8d-376">Odpowiednie zdarzenie tunelowania to <xref:System.Windows.Input.Mouse.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-376">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseWheel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDeltaForOneLine">
      <MemberSignature Language="C#" Value="public const int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MouseWheelDeltaForOneLine = (120)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberSignature Language="VB.NET" Value="Public Const MouseWheelDeltaForOneLine As Integer  = 120" />
      <MemberSignature Language="C++ CLI" Value="public: int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="F#" Value="val mutable MouseWheelDeltaForOneLine : int" Usage="System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>120</MemberValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-377">Przedstawia liczbę jednostek obróconych kółkiem myszy w jeden wiersz.</span><span class="sxs-lookup"><span data-stu-id="15c8d-377">Represents the number of units the mouse wheel is rotated to scroll one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-378">W bieżącej [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]wartości tego pola jest 120.</span><span class="sxs-lookup"><span data-stu-id="15c8d-378">In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120.</span></span> <span data-ttu-id="15c8d-379">Zamiarem ekspozycji pola jest umożliwienie dostawcom kompilowania kółk myszy o większej rozdzielczości w przyszłości, co może obejmować swobodne kółko bez nacięcia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-379">The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.</span></span> <span data-ttu-id="15c8d-380">Oczekuje się, że takie urządzenie wyśle więcej komunikatów na obrót, ale z mniejszą wartością w każdym komunikacie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-380">The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.</span></span> <span data-ttu-id="15c8d-381">Aby zapewnić obsługę tej możliwości, należy dodać przychodzące wartości przyrostu do momentu <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> osiągnięcia kwoty (dlatego w przypadku rotacji różnicowej uzyskuje taką samą odpowiedź) lub przewijać częściowe wiersze w odpowiedzi na częstsze komunikaty.</span><span class="sxs-lookup"><span data-stu-id="15c8d-381">To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.</span></span> <span data-ttu-id="15c8d-382">Możesz również wybrać własny poziom szczegółowości przewijania i rozrastać własne różnice, aż do osiągnięcia tego delty, lub być może odwoływać się do kontrolowanych przez użytkownika parametrów systemu pod kątem czułości myszy i ekstrapolacji ich na progi różnic kółka myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-382">You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseWheelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-383"><see cref="E:System.Windows.Input.Mouse.MouseWheel" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-383">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-384">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-384">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-385">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-385">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-386">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-386">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.Input.Mouse.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-387">Pobiera lub ustawia kursor dla całej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="15c8d-387">Gets or sets the cursor for the entire application.</span></span></summary>
        <value><span data-ttu-id="15c8d-388">Przesłonięcie kursora <see langword="null" /> lub <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> Jeśli nie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="15c8d-388">The override cursor or <see langword="null" /> if the <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-389"><xref:System.Windows.Input.Cursor> Toustawieniezostanie<xref:System.Windows.Input.Mouse.OverrideCursor%2A> zastosowane do całej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="15c8d-389">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="15c8d-390">Aby wyczyścić przesłonięcie <xref:System.Windows.Input.Cursor>, <xref:System.Windows.Input.Mouse.OverrideCursor%2A> `null`ustaw wartość.</span><span class="sxs-lookup"><span data-stu-id="15c8d-390">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="15c8d-391">Ustawienie opcji <xref:System.Windows.Input.Mouse.OverrideCursor%2A>spowodujewymuszenie wyświetlania kursora myszy, ale zdarzenia myszy są nadal przetwarzane. <xref:System.Windows.Input.Cursors.None%2A></span><span class="sxs-lookup"><span data-stu-id="15c8d-391">Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15c8d-392">Poniższy przykład pokazuje procedurę obsługi <xref:System.Windows.Controls.RadioButton> zdarzeń, która jest używana do przełączania zakresu zmiany kursora między pojedynczym elementem a całą aplikacją.</span><span class="sxs-lookup"><span data-stu-id="15c8d-392">The following example shows an event handler for a <xref:System.Windows.Controls.RadioButton> that is used to toggle the scope of a cursor change between a single element and the entire application.</span></span>  <span data-ttu-id="15c8d-393">Jeśli formant, który `rbScopeElement`wywołał zdarzenie <xref:System.Windows.Controls.RadioButton>, jest flagą, która określa zakres zmiany kursora jest ustawiony i <xref:System.Windows.Input.Mouse.OverrideCursor%2A> jest ustawiony na `null`.</span><span class="sxs-lookup"><span data-stu-id="15c8d-393">If the control that raised the event is the `rbScopeElement`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to `null`.</span></span>  <span data-ttu-id="15c8d-394">Jeśli formant, który wywołał zdarzenie `rbScopeApplication` <xref:System.Windows.Controls.RadioButton>, jest flagą, która określa zakres zmiany kursora jest ustawiony <xref:System.Windows.FrameworkElement.Cursor%2A> i <xref:System.Windows.Input.Mouse.OverrideCursor%2A> jest ustawiony na Właściwość <xref:System.Windows.Controls.Border> formantu o nazwie `DisplayArea`.</span><span class="sxs-lookup"><span data-stu-id="15c8d-394">If the control that raised the event is the `rbScopeApplication`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to the <xref:System.Windows.FrameworkElement.Cursor%2A> property of the <xref:System.Windows.Controls.Border> control named `DisplayArea`.</span></span>  
  
 [!code-csharp[cursors#CursorsSampleOverrideCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#cursorssampleoverridecursor)]
 [!code-vb[cursors#CursorsSampleOverrideCursor](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#cursorssampleoverridecursor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" Usage="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-395">Występuje po naciśnięciu dowolnego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-395">Occurs when any mouse button is depressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-396">Który przycisk myszy został rozciśnięty jest określany przez sprawdzanie argumentów zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-396">Which mouse button was depressed is determined by checking the arguments of the event.</span></span> <span data-ttu-id="15c8d-397">Jest to dołączone zdarzenie (przy użyciu strategii routingu tunelowania), które jest przeznaczone do odwoływania się do wszystkich istniejących [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów, które pobierają dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="15c8d-397">This is an attached event (using tunneling routing strategy) that is intended through attached event syntax to be referenced by existing [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements that take input.</span></span>  
  
 <span data-ttu-id="15c8d-398">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-399">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-399">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-400">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-400">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-401">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-401">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-402">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-402">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-403"><xref:System.Windows.UIElement> [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> Platforma kompiluje na tym załączonym zdarzeniu, umieszczając je w postaci dwóch różnych zdarzeń w: i. [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</span><span class="sxs-lookup"><span data-stu-id="15c8d-403">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="15c8d-404">Te implementacje obsługują zdarzenie <xref:System.Windows.Input.Mouse.PreviewMouseDown> podstawowe i odczytują argumenty zdarzenia, aby określić, czy pozostały lewy lub prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-404">These implementations handle the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="15c8d-405">W przypadku trzech przycisków nie ma obsługi zdarzeń na poziomie platformy dla przycisku centrum. należy użyć <xref:System.Windows.Input.Mouse.PreviewMouseDown> zdarzenia i sprawdzić warunek środkowy przycisku w argumentach zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-405">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.PreviewMouseDown> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="15c8d-406">W przypadku zdarzeń kierowanych odnoszących się do myszy należy zachować ostrożność w przypadku, gdy są one oznaczane jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-406">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="15c8d-407">Obsługa zdarzenia w sąsiedztwie katalogu głównego i obsłudze go przez dziecko w dalszej części źródła może nie być odpowiednia dla kontrolek złożonych, gdzie elementy złożone mogą mieć oczekiwane zachowania myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-407">Handling the event near the root and handling it by a child further toward the source may not be appropriate for composited controls, where the compositing pieces might have expected mouse behaviors.</span></span> <span data-ttu-id="15c8d-408">Trudności w podejmowaniu odpowiednich wyborów dotyczących tego, czy inne elementy powinny być również poinformowane o każdej akcji myszy, dlatego, że [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] struktura wybiera model, który jest powiązany <xref:System.Windows.Input.Mouse> ze zdarzeniem kierowanym.[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenia na trasie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-408">The difficulty in making the appropriate choices about whether other elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-409">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-409">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-410">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-410">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseDownEvent>|  
|<span data-ttu-id="15c8d-411">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-411">Routing strategy</span></span>|<span data-ttu-id="15c8d-412">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="15c8d-412">Tunneling</span></span>|  
|<span data-ttu-id="15c8d-413">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-413">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="15c8d-414">Odpowiednie zdarzenie propagacji to <xref:System.Windows.Input.Mouse.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-414">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-415"><see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-415">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-416">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-416">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-417">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-417">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-418">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-418">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" Usage="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-419">Występuje po naciśnięciu podstawowego przycisku myszy poza elementem, który przechwytuje zdarzenia myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-419">Occurs when the primary mouse button is pressed outside the element that is capturing mouse events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-420">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-420">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-421">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-421">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-422">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-422">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-423">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-423">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-424">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-424">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-425">To zdarzenie nie jest zmieniane na elementy podstawowe.</span><span class="sxs-lookup"><span data-stu-id="15c8d-425">This event is not resurfaced on base elements.</span></span> <span data-ttu-id="15c8d-426">Polega głównie na kontroli autorów, którzy próbują uzgodnić przechwycenie myszy i dane wejściowe myszy w ramach ich składania.</span><span class="sxs-lookup"><span data-stu-id="15c8d-426">It is mainly of concern to control authors that are attempting to reconcile mouse capture and mouse input within their control compositing.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDownOutsideCaptureElement"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-427">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-427">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-428">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-428">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent>|  
|<span data-ttu-id="15c8d-429">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-429">Routing strategy</span></span>|<span data-ttu-id="15c8d-430">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="15c8d-430">Tunneling</span></span>|  
|<span data-ttu-id="15c8d-431">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-431">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-432"><see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-432">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-433">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-433">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-434">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-434">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-435">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-435">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" Usage="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-436">Występuje, gdy wskaźnik myszy zostanie przesunięty nad element.</span><span class="sxs-lookup"><span data-stu-id="15c8d-436">Occurs when the mouse moves over an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-437">To zdarzenie występuje, gdy wskaźnik myszy jest nowo przenoszony w granicach elementów, a także gdy wskaźnik myszy jest przenoszony, gdy nadal pozostaje w granicach elementów.</span><span class="sxs-lookup"><span data-stu-id="15c8d-437">This event occurs both when the mouse pointer is newly moved in the element bounds, and also when the mouse pointer moves while still remaining in the element bounds.</span></span>  
  
 <span data-ttu-id="15c8d-438">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-438">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-439">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-439">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-440">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-440">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-441">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-441">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-442">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-442">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-443">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-443">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-444">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-444">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseMoveEvent>|  
|<span data-ttu-id="15c8d-445">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-445">Routing strategy</span></span>|<span data-ttu-id="15c8d-446">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="15c8d-446">Tunneling</span></span>|  
|<span data-ttu-id="15c8d-447">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-447">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="15c8d-448">Odpowiednie zdarzenie propagacji to <xref:System.Windows.Input.Mouse.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-448">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseMove>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-449"><see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-449">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-450">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-450">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-451">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-451">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-452">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-452">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" Usage="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-453">Występuje po wydaniu dowolnego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-453">Occurs when any mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-454">Który przycisk myszy został wyznaczony, jest określany przez sprawdzanie argumentów zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-454">Which mouse button was released is determined by checking the arguments of the event.</span></span>  
  
 <span data-ttu-id="15c8d-455">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-455">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-456">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-456">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-457">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-457">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-458">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-458">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-459">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-459">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-460"><xref:System.Windows.UIElement> [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> Platforma kompiluje na tym załączonym zdarzeniu, umieszczając je w postaci dwóch różnych zdarzeń w: i. [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</span><span class="sxs-lookup"><span data-stu-id="15c8d-460">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="15c8d-461">Te implementacje obsługują zdarzenie <xref:System.Windows.Input.Mouse.PreviewMouseUp> podstawowe i odczytują argumenty zdarzenia, aby określić, czy pozostały lewy lub prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-461">These implementations handle the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="15c8d-462">W przypadku trzech przycisków nie ma obsługi zdarzeń na poziomie platformy dla przycisku centrum. należy użyć <xref:System.Windows.Input.Mouse.PreviewMouseUp> zdarzenia i sprawdzić warunek środkowy przycisku w argumentach zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-462">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.PreviewMouseUp> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="15c8d-463">W przypadku zdarzeń kierowanych odnoszących się do myszy należy zachować ostrożność w przypadku, gdy są one oznaczane jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-463">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="15c8d-464">Obsługa zdarzenia w sąsiedztwie katalogu głównego i nieobsługiwanego przez dziecko w dalszej części źródła może nie być odpowiednia dla kontrolek złożonych, gdzie elementy złożone mogą mieć oczekiwane zachowania myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-464">Handling the event near the root and not handling by a child further toward the source may not be appropriate for composited controls, where the compositing pieces might have expected mouse behaviors.</span></span> <span data-ttu-id="15c8d-465">Trudności w podejmowaniu odpowiednich wyborów dotyczących tego, czy inne elementy powinny być również poinformowane o każdej akcji myszy, dlatego, że [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] struktura wybiera model, który jest powiązany <xref:System.Windows.Input.Mouse> ze zdarzeniem kierowanym.[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenia na trasie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-465">The difficulty in making the appropriate choices about whether other elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-466">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-467">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-467">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseUpEvent>|  
|<span data-ttu-id="15c8d-468">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-468">Routing strategy</span></span>|<span data-ttu-id="15c8d-469">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="15c8d-469">Tunneling</span></span>|  
|<span data-ttu-id="15c8d-470">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-470">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="15c8d-471">Odpowiednie zdarzenie propagacji to <xref:System.Windows.Input.Mouse.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-471">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-472"><see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-472">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-473">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-473">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-474">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-474">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-475">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-475">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" Usage="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-476">Występuje, gdy podstawowy przycisk myszy zostanie wyprowadzony poza elementem, który przechwytuje zdarzenia myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-476">Occurs when the primary mouse button is released outside the element that is capturing mouse events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-477">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-477">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-478">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-478">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-479">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-479">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-480">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-480">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-481">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-481">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="15c8d-482">To zdarzenie nie jest zmieniane na elementy podstawowe.</span><span class="sxs-lookup"><span data-stu-id="15c8d-482">This event is not resurfaced on base elements.</span></span> <span data-ttu-id="15c8d-483">Polega głównie na kontroli autorów, którzy próbują uzgodnić przechwycenie myszy i dane wejściowe myszy w ramach ich składania.</span><span class="sxs-lookup"><span data-stu-id="15c8d-483">It is mainly of concern to control authors that are attempting to reconcile mouse capture and mouse input within their control compositing.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUpOutsideCaptureElement"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-484">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-484">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-485">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-485">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent>|  
|<span data-ttu-id="15c8d-486">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-486">Routing strategy</span></span>|<span data-ttu-id="15c8d-487">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="15c8d-487">Tunneling</span></span>|  
|<span data-ttu-id="15c8d-488">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-488">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="15c8d-489">Nie ma odpowiedniego zdarzenia propagacji.</span><span class="sxs-lookup"><span data-stu-id="15c8d-489">There is no corresponding bubbling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-490"><see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-490">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-491">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-491">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-492">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-492">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-493">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-493">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" Usage="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-494">Występuje po obróceniu kółka myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-494">Occurs when the mouse wheel rotates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-495">Przechwycenie fokusu lub myszy ma pierwszeństwo przed miejscem, gdzie wskaźnik myszy jest; w związku z tym, jeśli otrzymasz to zdarzenie z elementu skoncentrowanego lub przechwyconego, wskaźnik myszy może znajdować się nad innym elementem w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-495">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might in fact be over another element at the time.</span></span>  
  
 <span data-ttu-id="15c8d-496">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-496">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-497">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-497">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-498">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-498">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-499">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-499">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-500">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-500">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-501">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-501">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-502">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-502">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseWheelEvent>|  
|<span data-ttu-id="15c8d-503">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-503">Routing strategy</span></span>|<span data-ttu-id="15c8d-504">Tunelowania</span><span class="sxs-lookup"><span data-stu-id="15c8d-504">Tunneling</span></span>|  
|<span data-ttu-id="15c8d-505">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-505">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="15c8d-506">Odpowiednie zdarzenie propagacji to <xref:System.Windows.Input.Mouse.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-506">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseWheel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-507"><see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-507">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-508">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-508">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-509">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-509">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-510">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-510">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.MouseDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseDevice ^ PrimaryDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.MouseDevice" Usage="System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-511">Pobiera podstawowe urządzenie myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-511">Gets the primary mouse device.</span></span></summary>
        <value><span data-ttu-id="15c8d-512">Urządzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-512">The device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-513">Ta właściwość obsługuje infrastrukturę Windows Presentation Foundation i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-513">This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="ILAsm" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="F#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" Usage="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15c8d-514">Występuje, gdy element szuka bieżącego kursora myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-514">Occurs when an element queries for the current mouse cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-515">To jest dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-515">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="15c8d-516">implementuje dołączone zdarzenia jako zdarzenia kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-516">implements attached events as routed events.</span></span> <span data-ttu-id="15c8d-517">Dołączone zdarzenia są zasadniczo [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcją języka dla odwołujących się zdarzeń, które mogą być obsługiwane na obiektach, które nie definiują tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerzają się, a także włączając zdarzenie przechodzące do trasy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-517">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="15c8d-518">Dołączone zdarzenia nie mają bezpośredniej składni obsługi w kodzie; Aby dołączyć procedury obsługi dla zdarzenia kierowanego w kodzie, należy użyć wskazanej metody dodawania \* procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="15c8d-518">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="15c8d-519">Aby uzyskać szczegółowe informacje, zobacz [Omówienie załączonych zdarzeń](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-519">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_Querycursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="15c8d-520">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="15c8d-520">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="15c8d-521">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="15c8d-521">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.QueryCursorEvent>|  
|<span data-ttu-id="15c8d-522">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="15c8d-522">Routing strategy</span></span>|<span data-ttu-id="15c8d-523">Propagacja</span><span class="sxs-lookup"><span data-stu-id="15c8d-523">Bubbling</span></span>|  
|<span data-ttu-id="15c8d-524">Delegate</span><span class="sxs-lookup"><span data-stu-id="15c8d-524">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
 <span data-ttu-id="15c8d-525">Nie zdefiniowano odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="15c8d-525">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-526"><see cref="E:System.Windows.Input.Mouse.QueryCursor" /> Identyfikuje dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-526">Identifies the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-527">Identyfikatory zdarzeń kierowanych są tworzone po zarejestrowaniu zdarzeń kierowanych, a wynik jest zapisywany jako pole w klasie, która rejestruje rozesłane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-527">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="15c8d-528">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategię routingu oraz metodę narzędzia do dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-528">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="15c8d-529">Te identyfikatory są często używane jako parametry do metod systemu zdarzeń, aby identyfikować konkretne zdarzenie kierowane.</span><span class="sxs-lookup"><span data-stu-id="15c8d-529">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-530"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-530">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-531">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-531">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-532">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-532">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-533"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-533">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-534">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-534">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-535">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-535">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-536"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-536">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-537">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-537">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-538">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-538">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-539"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-539">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-540">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-540">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-541">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-541">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-542"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-542">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-543">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-543">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-544">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-544">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-545"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-545">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-546">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-546">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-547">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-547">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-548"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-548">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-549">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-549">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-550">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseUp" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-550">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-551"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-551">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-552">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-552">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-553">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-553">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-554"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-554">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-555">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-555">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-556">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-556">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-557"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-557">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-558">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-558">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-559">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-559">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-560"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-560">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-561">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-561">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-562">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-562">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-563"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-563">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-564">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-564">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-565">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-565">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-566"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-566">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-567">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-567">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-568">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-568">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-569"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-569">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-570">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-570">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-571">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-571">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void RemoveQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="15c8d-572"><see cref="T:System.Windows.UIElement" /> Lub<see cref="T:System.Windows.ContentElement" /> który nasłuchuje na tym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="15c8d-572">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="15c8d-573">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="15c8d-573">The event handler.</span></span></param>
        <summary><span data-ttu-id="15c8d-574">Usuwa procedurę obsługi dla <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-574">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.RightButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.RightButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-575">Pobiera stan przycisku po prawej stronie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-575">Gets the state of the right button.</span></span></summary>
        <value><span data-ttu-id="15c8d-576">Stan prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-576">The state of the right mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15c8d-577">Poniższy przykład pokazuje, jak ustalić, czy prawy przycisk myszy jest wciśnięty, sprawdzając, czy stan <xref:System.Windows.Input.Mouse.RightButton%2A> jest równy <xref:System.Windows.Input.MouseButtonState> wartości <xref:System.Windows.Input.MouseButtonState.Pressed>wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-577">The following example shows how to determine whether the right mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.RightButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="15c8d-578">Jeśli przycisk jest wciśnięty, metoda jest wywoływana, która aktualizuje elementy w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-578">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetrightbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetrightbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public static bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberSignature Language="F#" Value="static member SetCursor : System.Windows.Input.Cursor -&gt; bool" Usage="System.Windows.Input.Mouse.SetCursor cursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor"><span data-ttu-id="15c8d-579">Kursor, dla którego ma zostać ustawiony wskaźnik myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-579">The cursor to set the mouse pointer to.</span></span></param>
        <summary><span data-ttu-id="15c8d-580">Ustawia wskaźnik myszy na określony <see cref="T:System.Windows.Input.Cursor" />.</span><span class="sxs-lookup"><span data-stu-id="15c8d-580">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="15c8d-581"><see langword="true" />, jeśli kursor został ustawiony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="15c8d-581"><see langword="true" />, if the cursor was set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15c8d-582">Ustawiany kursor nie ma zastosowania do żadnego konkretnego elementu, ale nie dotyczy całej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="15c8d-582">The cursor being set does not apply to any particular element, but rather it applies to the whole application.</span></span>  <span data-ttu-id="15c8d-583">Tak więc, jeśli po ustawieniu kursora wskaźnik myszy przesuwa się nad obiektem, który ustawia kursor, kursor zostanie ponownie zmieniony.</span><span class="sxs-lookup"><span data-stu-id="15c8d-583">So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.</span></span>  
  
 <span data-ttu-id="15c8d-584">Aby wymusić wskaźnik myszy do określonego <xref:System.Windows.Input.Cursor> i wymusić <xref:System.Windows.Input.Cursor> ten element dla <xref:System.Windows.Input.Mouse.OverrideCursor%2A> wszystkich elementów, ustaw właściwość.</span><span class="sxs-lookup"><span data-stu-id="15c8d-584">To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property.</span></span>  
  
 <span data-ttu-id="15c8d-585">Aby ustawić kursor dla określonego elementu, użyj <xref:System.Windows.FrameworkElement.Cursor%2A> właściwości <xref:System.Windows.FrameworkElement> z lub <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="15c8d-585">To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  <span data-ttu-id="15c8d-586">Aby uzyskać więcej informacji na temat elementów podstawowych, zobacz [Omówienie elementów podstawowych](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15c8d-586">For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.Cursors" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Mouse.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15c8d-587">Wymusza ponowną synchronizację myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-587">Forces the mouse to resynchronize.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
        <altmember cref="M:System.Windows.Input.Mouse.Synchronize" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public static void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateCursor();" />
      <MemberSignature Language="F#" Value="static member UpdateCursor : unit -&gt; unit" Usage="System.Windows.Input.Mouse.UpdateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15c8d-588">Wymusza aktualizację kursora myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-588">Forces the mouse cursor to be updated.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton1 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-589">Pobiera stan pierwszego rozszerzonego przycisku.</span><span class="sxs-lookup"><span data-stu-id="15c8d-589">Gets the state of the first extended button.</span></span></summary>
        <value><span data-ttu-id="15c8d-590">Stan pierwszego rozszerzonego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-590">The state of the first extended mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15c8d-591">Poniższy przykład pokazuje, jak ustalić, czy pierwszy rozszerzony przycisk myszy jest wciśnięty, sprawdzając, czy stan <xref:System.Windows.Input.Mouse.XButton1%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartości <xref:System.Windows.Input.MouseButtonState.Pressed>wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-591">The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton1%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="15c8d-592">Jeśli przycisk jest wciśnięty, metoda jest wywoływana, która aktualizuje elementy w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-592">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx1buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx1buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton2 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15c8d-593">Pobiera stan drugiego przycisku rozszerzonego.</span><span class="sxs-lookup"><span data-stu-id="15c8d-593">Gets the state of the second extended button.</span></span></summary>
        <value><span data-ttu-id="15c8d-594">Stan drugiego rozszerzonego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="15c8d-594">The state of the second extended mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15c8d-595">Poniższy przykład pokazuje, jak ustalić, czy drugi rozszerzony przycisk myszy jest wciśnięty, sprawdzając, czy stan <xref:System.Windows.Input.Mouse.XButton2%2A> jest równy <xref:System.Windows.Input.MouseButtonState> wartości <xref:System.Windows.Input.MouseButtonState.Pressed>wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="15c8d-595">The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton2%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="15c8d-596">Jeśli przycisk jest wciśnięty, metoda jest wywoływana, która aktualizuje elementy w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="15c8d-596">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx2buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx2buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>
