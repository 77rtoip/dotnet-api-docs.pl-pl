<Type Name="Mouse" FullName="System.Windows.Input.Mouse">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce3de69a437cfecce068b99bbdd03cf1956a3e18" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48656590" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Mouse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Mouse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Mouse" />
  <TypeSignature Language="VB.NET" Value="Public Class Mouse" />
  <TypeSignature Language="C++ CLI" Value="public ref class Mouse abstract sealed" />
  <TypeSignature Language="F#" Value="type Mouse = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e00e1-101">Reprezentuje urządzenie myszy do określonego wątku.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e00e1-101">Represents the mouse device to a specific thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-102"><xref:System.Windows.Input.Mouse> Klasa udostępnia myszy zdarzenia związane z, metody i właściwości, które zawierają informacje dotyczące stanu myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-102">The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.</span></span>  
  
 <span data-ttu-id="e00e1-103">Każde zdarzenie, <xref:System.Windows.Input.Mouse> definiuje jako dołączone zdarzenie jest również ponownie narażona jest klasy bazowej elementów <xref:System.Windows.UIElement> i <xref:System.Windows.ContentElement> jako nowe zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="e00e1-103">Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="e00e1-104">Ogólnie rzecz biorąc, jest bardziej wygodne do obsługi zdarzeń myszy dla aplikacji na <xref:System.Windows.UIElement> i <xref:System.Windows.ContentElement>, zamiast używania <xref:System.Windows.Input.Mouse> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-104">Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events.</span></span> <span data-ttu-id="e00e1-105">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-106">Statyczne elementy członkowskie <xref:System.Windows.Input.Mouse> klasy delegata do podstawowej <xref:System.Windows.Input.MouseDevice> Menedżera danych wejściowych wątku wywołującego.</span><span class="sxs-lookup"><span data-stu-id="e00e1-106">The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-107">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-108">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-108">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-109">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-109">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-110">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-111">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-111">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-112">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-112">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-113">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-114">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-114">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-115">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-115">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-116">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-117">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-117">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-118">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-118">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-119">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-120">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-120">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-121">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-121">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-122">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-123">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-123">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-124">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-124">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-125">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-126">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-126">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-127">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.MouseUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-127">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-128">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-129">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-129">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-130">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-130">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-131">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-132">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-132">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-133">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-133">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-134">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-135">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-135">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-136">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-136">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-137">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-138">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-138">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-139">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-139">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-140">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-141">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-141">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-142">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-142">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-143">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-144">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-144">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-145">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-145">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-146">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-147">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-147">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-148">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-148">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void AddQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-149">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-150">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-150">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-151">Dodaje program obsługi <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-151">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-152">Przechwytuje dane wejściowe myszy określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-152">Captures mouse input to the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-153">Gdy element przechwytuje mysz, otrzymuje wejście myszy czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="e00e1-153">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="e00e1-154">Jeśli <xref:System.Windows.Input.CaptureMode> nie zostanie określony, domyślnie <xref:System.Windows.Input.CaptureMode> jest <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-154">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="e00e1-155">Aby zwolnić przechwytywanie myszy, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A> przekazywanie `null` jako element do przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="e00e1-155">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="e00e1-156">Jeśli przycisk myszy jest przechwytywane podczas <xref:System.Windows.Input.Mouse.MouseDown> lub <xref:System.Windows.Input.Mouse.MouseUp> zdarzenie jest zgłaszane i nie ma danych wejściowych do elementu poniżej mysz, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> i <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> są inicjowane jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="e00e1-156">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="e00e1-157">Dzięki temu przechwyconych element szansę, aby zwolnić Przechwytywanie przed <xref:System.Windows.Input.Mouse.MouseDown> i <xref:System.Windows.Input.Mouse.MouseUp> są kierowane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-157">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Mouse.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-158">Element do przechwytywania myszą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-158">The element to capture the mouse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-159">Przechwytuje dane wejściowe myszy określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-159">Captures mouse input to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e00e1-160">
            <see langword="true" /> Jeśli element był w stanie przechwytywania myszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-160">
              <see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-161">Gdy element przechwytuje mysz, otrzymuje wejście myszy czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="e00e1-161">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="e00e1-162">Jeśli <xref:System.Windows.Input.CaptureMode> nie zostanie określony, domyślnie <xref:System.Windows.Input.CaptureMode> jest <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-162">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="e00e1-163">Aby zwolnić przechwytywanie myszy, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A> przekazywanie `null` jako element do przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="e00e1-163">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="e00e1-164">Jeśli przycisk myszy jest przechwytywane podczas <xref:System.Windows.Input.Mouse.MouseDown> lub <xref:System.Windows.Input.Mouse.MouseUp> zdarzenie jest zgłaszane i nie ma danych wejściowych do elementu poniżej mysz, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> i <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> są inicjowane jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="e00e1-164">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="e00e1-165">Dzięki temu przechwyconych element szansę, aby zwolnić Przechwytywanie przed <xref:System.Windows.Input.Mouse.MouseDown> i <xref:System.Windows.Input.Mouse.MouseUp> są kierowane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-165">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e00e1-166">Poniższy przykład pokazuje, jak przechwytywanie myszy do określonego elementu za pomocą <xref:System.Windows.Input.Mouse.Capture%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e00e1-166">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Mouse.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-167">Element do przechwytywania myszą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-167">The element to capture the mouse.</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="e00e1-168">Zasady przechwytywania do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-168">The capture policy to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-169">Przechwytuje dane wejściowe myszy określony element przy użyciu określonego <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-169">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e00e1-170">
            <see langword="true" /> Jeśli element był w stanie przechwytywania myszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-170">
              <see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-171">Gdy element przechwytuje mysz, otrzymuje wejście myszy czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="e00e1-171">When an element captures the mouse, it receives mouse input whether the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="e00e1-172">Aby zwolnić przechwytywanie myszy, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A> przekazywanie `null` jako element do przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="e00e1-172">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="e00e1-173">Jeśli przycisk myszy jest przechwytywane podczas <xref:System.Windows.Input.Mouse.MouseDown> lub <xref:System.Windows.Input.Mouse.MouseUp> zdarzenie jest zgłaszane i nie ma danych wejściowych do elementu poniżej mysz, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> i <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> są inicjowane jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="e00e1-173">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="e00e1-174">Dzięki temu przechwyconych element szansę, aby zwolnić Przechwytywanie przed <xref:System.Windows.Input.Mouse.MouseDown> i <xref:System.Windows.Input.Mouse.MouseUp> są kierowane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-174">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e00e1-175">Poniższy przykład pokazuje, jak przechwytywanie myszy do określonego elementu za pomocą <xref:System.Windows.Input.Mouse.Capture%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e00e1-175">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-176">Pobiera element, który został przechwycony myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-176">Gets the element that has captured the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e00e1-177">Element przechwycone przy użyciu myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-177">The element captured by the mouse.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-178">Gdy element przechwytuje mysz, otrzymuje wejście myszy czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="e00e1-178">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="e00e1-179">Mysz są zazwyczaj przechwytywane w ten sposób tylko podczas operacji przeciągania i upuszczania oraz zachowuje przechwytywania, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="e00e1-179">The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e00e1-180">W przykładzie poniżej pokazano, jak można uzyskać elementu, który ma przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-180">The follow example shows how to obtain the element that has mouse capture.</span></span>  
  
 [!code-csharp[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecapturemousecaptured)]
 [!code-vb[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecapturemousecaptured)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-181">Pobiera element, którego wskaźnik myszy znajduje się bezpośrednio za pośrednictwem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-181">Gets the element the mouse pointer is directly over.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e00e1-182">Element wskaźnik myszy znajduje się nad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-182">The element the mouse pointer is over.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-183">Formanty może składać się z wielu elementów.</span><span class="sxs-lookup"><span data-stu-id="e00e1-183">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="e00e1-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> Raporty określonego elementu złożonego formantu, który znajduje się wskaźnik myszy nad i nie formantu.</span><span class="sxs-lookup"><span data-stu-id="e00e1-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span> <span data-ttu-id="e00e1-185">Na przykład, w zależności od część <xref:System.Windows.Controls.Button> wskaźnik znajduje się nad, <xref:System.Windows.Input.Mouse.DirectlyOver%2A> właściwości można raportować <xref:System.Windows.Controls.TextBox> z <xref:System.Windows.Controls.ContentControl.Content%2A> właściwości lub <xref:Microsoft.Windows.Themes.ButtonChrome>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-185">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="e00e1-186">Użyj <xref:System.Windows.IInputElement.IsMouseOver%2A> właściwość <xref:System.Windows.UIElement> i <xref:System.Windows.ContentElement> ustalić, czy wskaźnik myszy nad elementem, w tym jego elementy podrzędne visual lub kontroluje elementy, składania.</span><span class="sxs-lookup"><span data-stu-id="e00e1-186">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 <span data-ttu-id="e00e1-187">Jeśli element ma przechwytywanie myszy, wskaźnik myszy jest uważany za bezpośrednio nad elementem niezależnie od tego, gdzie jest wskaźnikiem myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-187">If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseOver" />
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="GetIntermediatePoints">
      <MemberSignature Language="C#" Value="public static int GetIntermediatePoints (System.Windows.IInputElement relativeTo, System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIntermediatePoints(class System.Windows.IInputElement relativeTo, valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIntermediatePoints (relativeTo As IInputElement, points As Point()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetIntermediatePoints(System::Windows::IInputElement ^ relativeTo, cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="static member GetIntermediatePoints : System.Windows.IInputElement * System.Windows.Point[] -&gt; int" Usage="System.Windows.Input.Mouse.GetIntermediatePoints (relativeTo, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="e00e1-188">Elementy <c>punktów</c> są w odniesieniu do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-188">The elements <c>points</c> are in relation to.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="e00e1-189">Tablica obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-189">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-190">Pobiera maksymalnie 64 poprzedniego współrzędne wskaźnika myszy od czasu ostatniego myszy przesuń zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-190">Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e00e1-191">Liczba punktów jest zwracana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-191">The number of points returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="static member GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="System.Windows.Input.Mouse.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="e00e1-192">Przestrzeni współrzędnych, którego chcesz obliczyć położenie kursora myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-192">The coordinate space in which to calculate the position of the mouse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-193">Pobiera położenie kursora myszy względem określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-193">Gets the position of the mouse relative to a specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e00e1-194">Położenie kursora myszy względem parametru <paramref name="relativeTo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-194">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-195">Pozycja wskaźnik myszy jest obliczana względem określonego elementu za pomocą lewego górnego rogu elementu jest punkt początkowy, od 0,0.</span><span class="sxs-lookup"><span data-stu-id="e00e1-195">The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 <span data-ttu-id="e00e1-196">Podczas operacji przeciągania i upuszczania, położenie kursora myszy nie można niezawodnie ustalić za pośrednictwem <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-196">During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span></span> <span data-ttu-id="e00e1-197">Jest to spowodowane kontrolę nad myszy (ewentualnie w tym przechwytywania) są przechowywane przez element źródłowy przeciągania, aż do zakończenia listy o wiele zachowanie kontrolowane przez bazowe [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] wywołania.</span><span class="sxs-lookup"><span data-stu-id="e00e1-197">This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls.</span></span> <span data-ttu-id="e00e1-198">Zamiast tego spróbuj następujących metod:</span><span class="sxs-lookup"><span data-stu-id="e00e1-198">Try the following approaches instead:</span></span>  
  
-   <span data-ttu-id="e00e1-199">Wywołaj <xref:System.Windows.DragEventArgs.GetPosition%2A> metody <xref:System.Windows.DragEventArgs> przekazana do zdarzenia przeciągania (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span><span class="sxs-lookup"><span data-stu-id="e00e1-199">Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span></span>  
  
-   <span data-ttu-id="e00e1-200">Wywołaj [GetCursorPos](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), przy użyciu metody P/Invoke.</span><span class="sxs-lookup"><span data-stu-id="e00e1-200">Call [GetCursorPos](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), using P/Invoke.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e00e1-201">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Input.Mouse.GetPosition%2A> do określenia pozycji wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-201">The following example shows how to use <xref:System.Windows.Input.Mouse.GetPosition%2A> to determine the position of the mouse pointer.</span></span>  <span data-ttu-id="e00e1-202">Pozycja wskaźnik myszy znajduje się w <xref:System.Windows.Point> struktury.</span><span class="sxs-lookup"><span data-stu-id="e00e1-202">The position of the mouse pointer is stored in a <xref:System.Windows.Point> structure.</span></span>  <span data-ttu-id="e00e1-203"><xref:System.Windows.Point.X%2A> i <xref:System.Windows.Point.Y%2A> wartości <xref:System.Windows.Point> obiektu są wyświetlane w <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-203">The <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of the <xref:System.Windows.Point> object are displayed in a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetspositionmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetspositionmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" Usage="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-204">Występuje, gdy element przechwytuje mysz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-204">Occurs when an element captures the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-205">Gdy element przechwytuje mysz, otrzymuje wejście myszy czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="e00e1-205">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="e00e1-206">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-206">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-207">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-207"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-208">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-208">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-209">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-209">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-210">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-210">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-211">Ze względu na propagacji routingu rzeczywisty element, który ma przechwytywania może być elementu podrzędnego, nie musi to być element, gdzie program obsługi zdarzeń jest faktycznie dołączony.</span><span class="sxs-lookup"><span data-stu-id="e00e1-211">Because of the bubbling routing, the actual element that has capture might be a child element, not necessarily the element where the event handler is actually attached.</span></span> <span data-ttu-id="e00e1-212">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w przypadku przechwytywania argumenty, aby określić rzeczywisty element, który ma myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-212">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event arguments to determine the actual element that has mouse capture.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-213">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-213">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-214">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-214">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.GotMouseCaptureEvent>|  
|<span data-ttu-id="e00e1-215">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-215">Routing strategy</span></span>|<span data-ttu-id="e00e1-216">Propagacja</span><span class="sxs-lookup"><span data-stu-id="e00e1-216">Bubbling</span></span>|  
|<span data-ttu-id="e00e1-217">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-217">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="e00e1-218">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="e00e1-218">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-219">Identyfikuje <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-219">Identifies the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-220">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-220">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-221">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-221">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-222">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-222">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.LeftButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.LeftButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-223">Pobiera stan lewego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-223">Gets the state of the left button of the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e00e1-224">Stan lewego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-224">The state of the left mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e00e1-225">Poniższy przykład pokazuje, jak ustalić, czy lewy przycisk myszy jest wciśnięty przez sprawdzenie, czy stan <xref:System.Windows.Input.Mouse.LeftButton%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartość wyliczenia <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-225">The following example shows how to determine whether the left mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.LeftButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="e00e1-226">Jeśli przycisk jest wciśnięty, metoda jest wywoływana, które aktualizacje są wyświetlane elementy w próbce.</span><span class="sxs-lookup"><span data-stu-id="e00e1-226">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetleftbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetleftbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" Usage="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-227">Występuje po utracie przechwycenia myszy przez element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-227">Occurs when an element loses mouse capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-228">Gdy element przechwytuje mysz, otrzymuje wejście myszy czy kursor znajduje się w jego granicach.</span><span class="sxs-lookup"><span data-stu-id="e00e1-228">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="e00e1-229">T</span><span class="sxs-lookup"><span data-stu-id="e00e1-229">T</span></span>  
  
 <span data-ttu-id="e00e1-230">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-230">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-231">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-231"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-232">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-232">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-233">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-233">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-234">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-234">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-235">Ze względu na propagacji routingu rzeczywiste element, który utraty przechwytywania może być elementu podrzędnego, nie musi to być element, gdzie program obsługi zdarzeń jest faktycznie dołączony.</span><span class="sxs-lookup"><span data-stu-id="e00e1-235">Because of the bubbling routing, the actual element that lost capture might be a child element, not necessarily the element where the event handler is actually attached.</span></span> <span data-ttu-id="e00e1-236">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> argumenty zdarzeń, aby określić rzeczywisty element, który utraty przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="e00e1-236">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event arguments to determine the actual element that lost capture.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-237">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-237">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-238">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-238">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.LostMouseCaptureEvent>|  
|<span data-ttu-id="e00e1-239">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-239">Routing strategy</span></span>|<span data-ttu-id="e00e1-240">Propagacja</span><span class="sxs-lookup"><span data-stu-id="e00e1-240">Bubbling</span></span>|  
|<span data-ttu-id="e00e1-241">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-241">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="e00e1-242">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="e00e1-242">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-243">Identyfikuje <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-243">Identifies the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-244">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-244">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-245">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-245">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-246">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-246">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.MiddleButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.MiddleButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-247">Pobiera stan środkowy przycisk myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-247">Gets the state of the middle button of the mouse.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e00e1-248">Stan środkowego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-248">The state of the middle mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e00e1-249">Poniższy przykład pokazuje, jak ustalić, czy środkowy przycisk myszy jest wciśnięty przez sprawdzenie, czy stan <xref:System.Windows.Input.Mouse.MiddleButton%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartość wyliczenia <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-249">The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.MiddleButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="e00e1-250">Jeśli przycisk jest wciśnięty, metoda jest wywoływana, które aktualizacje są wyświetlane elementy w próbce.</span><span class="sxs-lookup"><span data-stu-id="e00e1-250">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetmiddlebuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetmiddlebuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" Usage="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-251">Występuje, gdy dowolnego przycisku myszy jest wciśnięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-251">Occurs when any mouse button is depressed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-252">Aby określić, które przycisk myszy został wciśnięty, należy sprawdzić <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> właściwość <xref:System.Windows.Input.MouseButtonEventArgs> przekazane do narzędzia obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-252">To determine which mouse button was depressed, check the <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property in the <xref:System.Windows.Input.MouseButtonEventArgs> passed to the handler.</span></span>  
  
 <span data-ttu-id="e00e1-253">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-253">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-254">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-254"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-255">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-255">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-256">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-256">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-257">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-257">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-258">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework opiera się na tym dołączone zdarzenie, dzięki czemu są ujawniane ją jako dwa różne [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzenia <xref:System.Windows.UIElement> i <xref:System.Windows.ContentElement>: <xref:System.Windows.UIElement.MouseLeftButtonDown> i <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-258">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="e00e1-259">Tych implementacji obsługi podstawowych <xref:System.Windows.Input.Mouse.MouseDown> zdarzeń i przeczytać argumenty zdarzenia w celu określenia, czy przycisk myszy w lewo lub w prawo brał udział.</span><span class="sxs-lookup"><span data-stu-id="e00e1-259">These implementations handle the underlying <xref:System.Windows.Input.Mouse.MouseDown> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="e00e1-260">Myszy trzy przyciski Brak obsługi zdarzeń na poziomie struktury dla środkowy przycisk.</span><span class="sxs-lookup"><span data-stu-id="e00e1-260">For a three-button mouse, there is no framework-level event support for the center button.</span></span> <span data-ttu-id="e00e1-261">Należy używać <xref:System.Windows.Input.Mouse.MouseDown> zdarzeń i sprawdź <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> stanie w przypadku argumentów.</span><span class="sxs-lookup"><span data-stu-id="e00e1-261">You should use the <xref:System.Windows.Input.Mouse.MouseDown> event and check the <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> state in the event arguments.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e00e1-262">Kilka <xref:System.Windows.ContentElement> pochodnych klas, które mają podobne do kontroli zachowania, na przykład <xref:System.Windows.Documents.Hyperlink>, może być zarezerwowanymi obsługę klasy dla zdarzenia przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-262">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="e00e1-263">Lewy przycisk myszy wciśnięty zdarzeń jest najbardziej prawdopodobne zdarzenie, aby mieć klasę, obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-263">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="e00e1-264">Klasy obsługi często oznacza bazowego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-264">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="e00e1-265">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-265">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="e00e1-266">Wszystkie inne klasy lub wystąpienia programów obsługi, które są dołączone do elementów w propagacji kierunku ku główny w drzewie interfejsu użytkownika również nie zazwyczaj są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-266">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="e00e1-267">Możesz rozwiązać ten problem, który jest opisany w poprzednim ważna uwaga i nadal otrzymywać <xref:System.Windows.UIElement.MouseDown> zdarzeń związanych z lewego przycisku myszy w dół do zdarzenia w klasie pochodnej, która ma klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="e00e1-267">You can resolve the issue that is outlined in the preceding Important note and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="e00e1-268">Dołącz programy obsługi dla <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="e00e1-268">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="e00e1-269">Zwróć uwagę, że ponieważ jest to zdarzenie (wersja zapoznawcza), trasy rozpoczyna się w katalogu głównym i tunele do formantu.</span><span class="sxs-lookup"><span data-stu-id="e00e1-269">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="e00e1-270">Rejestrowanie programu obsługi w kontrolce proceduralnie przez wywołanie metody <xref:System.Windows.UIElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="e00e1-270">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
 <span data-ttu-id="e00e1-271">Dla zdarzenia trasowane, które odnoszą się do przycisku myszy należy zachować ostrożność sposób lub czas oznaczeniu ich obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-271">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="e00e1-272">Trudności w podejmowaniu właściwych wyborów dotyczących tego, czy elementy nadrzędne powinien również zostać poinformowany o podanej akcji myszy jest w rzeczywistości Dlaczego [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework wybrany model o bazowe zdarzenie myszy kierowane być udostępniane jako [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenia wzdłuż trasy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-272">The difficulty in making the appropriate choices about whether parent elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying mouse routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span> <span data-ttu-id="e00e1-273">Istnieją podobne problemy z tunelowaniem zdarzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-273">Similar issues exist with tunneling mouse events.</span></span>  <span data-ttu-id="e00e1-274">Należy można obsłużyć zdarzenie, jak i jest realizowany przez dodatkowe elementy podrzędne w kierunku źródła i jak będzie tym składania mogą wpłynąć na kontrolkę, której elementy składania może oczekiwać myszy zachowania?</span><span class="sxs-lookup"><span data-stu-id="e00e1-274">Should you handle the event and not have it be handled by further children toward the source, and how would that affect compositing a control where the compositing pieces might have expected mouse behaviors?</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-275">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-275">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-276">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-276">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseDownEvent>|  
|<span data-ttu-id="e00e1-277">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-277">Routing strategy</span></span>|<span data-ttu-id="e00e1-278">Propagacja</span><span class="sxs-lookup"><span data-stu-id="e00e1-278">Bubbling</span></span>|  
|<span data-ttu-id="e00e1-279">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-279">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="e00e1-280">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.Input.Mouse.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-280">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-281">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-281">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-282">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-282">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-283">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-283">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-284">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-284">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="F#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" Usage="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-285">Występuje po wejściu wskaźnika myszy w granice tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-285">Occurs when the mouse pointer enters the boundaries of an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-286">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-286">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-287">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-287"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-288">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-288">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-289">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-289">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-290">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-290">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-291">To zdarzenie używa bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e00e1-291">This event uses the direct event handling routing strategy.</span></span> <span data-ttu-id="e00e1-292">Zdarzenia trasowane bezpośrednie nie są zgłaszane wraz trasę (są tylko obsługiwane w przypadku tego samego elementu, na którym są one inicjowane).</span><span class="sxs-lookup"><span data-stu-id="e00e1-292">Direct routed events are not raised along a route (they are only handled in the same element on which they are raised).</span></span>  <span data-ttu-id="e00e1-293">Pozwalają natomiast inne aspekty zdarzenia trasowanego zachowań, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="e00e1-293">They do, however, enable other aspects of routed event behaviors, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="e00e1-294">Mimo że to zdarzenie służy do śledzenia gdy wskaźnik myszy zostanie przesunięty elementu, jest także raportowanie <xref:System.Windows.UIElement.IsMouseOver%2A> właściwości została zmieniona z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-294">Although this event is used to track when the mouse enters an element, it is also reporting the <xref:System.Windows.UIElement.IsMouseOver%2A> property has changed from `false` to `true` on this element.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-295">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-295">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-296">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-296">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseEnterEvent>|  
|<span data-ttu-id="e00e1-297">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-297">Routing strategy</span></span>|<span data-ttu-id="e00e1-298">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="e00e1-298">Direct</span></span>|  
|<span data-ttu-id="e00e1-299">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-299">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-300">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-300">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-301">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-301">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-302">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-302">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-303">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-303">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" Usage="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-304">Występuje po opuszczeniu granic elementu przez wskaźnik myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-304">Occurs when the mouse pointer leaves the boundaries of an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-305">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-305">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-306">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-306"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-307">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-307">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-308">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-308">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-309">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-309">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-310">To zdarzenie używa bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e00e1-310">This event uses the direct event handling routing strategy.</span></span> <span data-ttu-id="e00e1-311">Zdarzenia trasowane bezpośrednie nie wykonuj trasę (są tylko obsługiwane w przypadku tego samego elementu, na którym są one inicjowane).</span><span class="sxs-lookup"><span data-stu-id="e00e1-311">Direct routed events do not follow a route (they are only handled in the same element on which they are raised).</span></span>  <span data-ttu-id="e00e1-312">Pozwalają natomiast inne aspekty zdarzenia trasowanego zachowań, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="e00e1-312">They do, however, enable other aspects of routed event behaviors, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="e00e1-313">Mimo że to zdarzenie jest używane do śledzenia, gdy wskaźnik myszy opuszcza elementu, również zgłaszane jest który <xref:System.Windows.UIElement.IsMouseOver%2A> wartość właściwości została zmieniona z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-313">Although this event is used to track when the mouse leaves an element, it is also reporting that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-314">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-315">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-315">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseLeaveEvent>|  
|<span data-ttu-id="e00e1-316">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-316">Routing strategy</span></span>|<span data-ttu-id="e00e1-317">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="e00e1-317">Direct</span></span>|  
|<span data-ttu-id="e00e1-318">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-318">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-319">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-319">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-320">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-320">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-321">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-321">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-322">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-322">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" Usage="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-323">Występuje po przemieszczeniu wskaźnika myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-323">Occurs when the mouse pointer moves.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-324">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-324">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-325">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-325"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-326">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-326">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-327">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-328">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-328">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-329">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-330">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-330">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseMoveEvent>|  
|<span data-ttu-id="e00e1-331">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-331">Routing strategy</span></span>|<span data-ttu-id="e00e1-332">Propagacja</span><span class="sxs-lookup"><span data-stu-id="e00e1-332">Bubbling</span></span>|  
|<span data-ttu-id="e00e1-333">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-333">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="e00e1-334">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.Input.Mouse.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-334">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseMove>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-335">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-335">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-336">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-336">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-337">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-337">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-338">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-338">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" Usage="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-339">Występuje po zwolnieniu dowolnego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-339">Occurs when any mouse button is released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-340">Przycisk myszy, która została wydana jest określany przez sprawdzenie argumenty zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-340">Which mouse button was released is determined by checking the arguments of the event.</span></span>  
  
 <span data-ttu-id="e00e1-341">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-341">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-342">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-342"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-343">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-343">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-344">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-344">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-345">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-345">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-346">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework opiera się na tym dołączone zdarzenie, dzięki czemu są ujawniane ją jako dwa różne [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzenia <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.MouseLeftButtonUp> i <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-346">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="e00e1-347">Tych implementacji obsługi podstawowych <xref:System.Windows.Input.Mouse.MouseUp> zdarzeń i przeczytać argumenty zdarzenia w celu określenia, czy przycisk myszy w lewo lub w prawo brał udział.</span><span class="sxs-lookup"><span data-stu-id="e00e1-347">These implementations handle the underlying <xref:System.Windows.Input.Mouse.MouseUp> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="e00e1-348">Dla trzy przyciski to Brak obsługi zdarzeń na poziomie struktury środkowy przycisk i należy używać <xref:System.Windows.Input.Mouse.MouseUp> zdarzeń i wyszukaj środkowy przycisk warunku w przypadku argumentów.</span><span class="sxs-lookup"><span data-stu-id="e00e1-348">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.MouseUp> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="e00e1-349">Dla zdarzenia trasowane, które odnoszą się do przycisku myszy należy zachować ostrożność sposób lub czas oznaczeniu ich obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-349">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="e00e1-350">Trudności w podejmowaniu właściwych wyborów dotyczących tego, czy elementy nadrzędne powinien również zostać poinformowany o podanej akcji myszy jest w rzeczywistości Dlaczego [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework wybrany model mających podstawowe <xref:System.Windows.Input.Mouse> udostępnić zdarzenia trasowanego jako [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenia całego trasy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-350">The difficulty in making the appropriate choices about whether parent elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events all along the route.</span></span>  
  
 <span data-ttu-id="e00e1-351">Istnieją podobne problemy z tunelowaniem zdarzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-351">Similar issues exist with tunneling mouse events.</span></span>  <span data-ttu-id="e00e1-352">Powinien się obsługi zdarzeń ma on zostać obsłużone przez elementy podrzędne w dalszych kierunku źródła i jak będzie tym składania wpływ w kontrolce, gdzie może oczekiwać elementy składania myszy zachowania?</span><span class="sxs-lookup"><span data-stu-id="e00e1-352">Should you handle the event and not have it be handled by children further towards the source, and how would that affect compositing in a control where the compositing pieces might have expected mouse behaviors?</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-353">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-353">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-354">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-354">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseUpEvent>|  
|<span data-ttu-id="e00e1-355">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-355">Routing strategy</span></span>|<span data-ttu-id="e00e1-356">Propagacja</span><span class="sxs-lookup"><span data-stu-id="e00e1-356">Bubbling</span></span>|  
|<span data-ttu-id="e00e1-357">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-357">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
 <span data-ttu-id="e00e1-358">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.Input.Mouse.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-358">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-359">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-359">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-360">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-360">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-361">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-361">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-362">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-362">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" Usage="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-363">Występuje, gdy jest obracana kółka myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-363">Occurs when the mouse wheel is rotated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-364">Zespół lub myszy przechwytywania pierwszeństwo gdy wskaźnik myszy znajduje się.</span><span class="sxs-lookup"><span data-stu-id="e00e1-364">Focus or mouse capture take precedence over where the mouse pointer is.</span></span>  <span data-ttu-id="e00e1-365">Jeśli pojawi się to zdarzenie od elementu wąsko zdefiniowany lub przechwycone, wskaźnik myszy w rzeczywistości może być za pośrednictwem innego elementu w czasie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-365">If you receive this event from a focused or captured element, the mouse pointer might in fact be over another element at the time.</span></span>  
  
 <span data-ttu-id="e00e1-366">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-366">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-367">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-367"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-368">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-368">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-369">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-369">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-370">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-370">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-371">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-371">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-372">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-372">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseWheelEvent>|  
|<span data-ttu-id="e00e1-373">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-373">Routing strategy</span></span>|<span data-ttu-id="e00e1-374">Propagacja</span><span class="sxs-lookup"><span data-stu-id="e00e1-374">Bubbling</span></span>|  
|<span data-ttu-id="e00e1-375">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-375">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="e00e1-376">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.Input.Mouse.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-376">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseWheel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDeltaForOneLine">
      <MemberSignature Language="C#" Value="public const int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MouseWheelDeltaForOneLine = (120)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberSignature Language="VB.NET" Value="Public Const MouseWheelDeltaForOneLine As Integer  = 120" />
      <MemberSignature Language="C++ CLI" Value="public: int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="F#" Value="val mutable MouseWheelDeltaForOneLine : int" Usage="System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>120</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-377">Reprezentuje liczbę jednostek obraca się obrót kółkiem myszy do przewijania jeden wiersz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-377">Represents the number of units the mouse wheel is rotated to scroll one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-378">W bieżącym [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], wartość tego pola to 120.</span><span class="sxs-lookup"><span data-stu-id="e00e1-378">In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120.</span></span> <span data-ttu-id="e00e1-379">Ujawnienia pola jest umożliwienie dostawcom do tworzenia bardziej precyzyjną rozpoznawania myszy z kółkiem w przyszłości, które może dołączyć za darmo rotacji kółka bez pozycje.</span><span class="sxs-lookup"><span data-stu-id="e00e1-379">The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.</span></span> <span data-ttu-id="e00e1-380">Oczekuje się, że takie urządzenie prześle więcej wiadomości na rotacji, ale z mniejszą wartość w każdej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="e00e1-380">The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.</span></span> <span data-ttu-id="e00e1-381">Aby zapewnić obsługę tej możliwości, należy albo dodać wartości delta przychodzących do momentu <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> osiągnięciu kwotę (dzięki czemu możesz uzyskać tę samą odpowiedź rotację delta) lub przewiń częściowe wierszy w odpowiedzi na komunikaty częściej.</span><span class="sxs-lookup"><span data-stu-id="e00e1-381">To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.</span></span> <span data-ttu-id="e00e1-382">Można również wybrać własne szczegółowości przewijania i kumulują się różnic, wybranej przez użytkownika, dopóki tej różnicowej zostanie osiągnięty, lub być może odwoływać się do kontrolowania użytkownika systemu parametrów czułości myszy i ekstrapolację tych progów delta kółka myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-382">You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseWheelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-383">Identyfikuje <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-383">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-384">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-384">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-385">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-385">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-386">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-386">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.Input.Mouse.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-387">Pobiera lub ustawia kursor dla całej aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-387">Gets or sets the cursor for the entire application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e00e1-388">Kursor zastąpienia lub <see langword="null" /> Jeśli <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> nie jest ustawiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-388">The override cursor or <see langword="null" /> if the <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> is not set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-389"><xref:System.Windows.Input.Cursor> , <xref:System.Windows.Input.Mouse.OverrideCursor%2A> Jest ustawiona na będą stosowane do całej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e00e1-389">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="e00e1-390">Aby wyczyścić zastąpienie <xref:System.Windows.Input.Cursor>ustaw <xref:System.Windows.Input.Mouse.OverrideCursor%2A> do `null`.</span><span class="sxs-lookup"><span data-stu-id="e00e1-390">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="e00e1-391">Ustawienie <xref:System.Windows.Input.Mouse.OverrideCursor%2A> do <xref:System.Windows.Input.Cursors.None%2A> wymusi kursora myszy, które nie mają być wyświetlane, ale zdarzenia myszy są nadal przetwarzane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-391">Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e00e1-392">W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Windows.Controls.RadioButton> umożliwiający przełączanie zakres zmianę kursora między pojedynczego elementu i całej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e00e1-392">The following example shows an event handler for a <xref:System.Windows.Controls.RadioButton> that is used to toggle the scope of a cursor change between a single element and the entire application.</span></span>  <span data-ttu-id="e00e1-393">Jeśli formant, który podniósł zdarzenie jest `rbScopeElement` <xref:System.Windows.Controls.RadioButton>, jest ustawiona flaga, która oznacza zakresu zmian kursora i <xref:System.Windows.Input.Mouse.OverrideCursor%2A> ustawiono `null`.</span><span class="sxs-lookup"><span data-stu-id="e00e1-393">If the control that raised the event is the `rbScopeElement`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to `null`.</span></span>  <span data-ttu-id="e00e1-394">Jeśli formant, który podniósł zdarzenie jest `rbScopeApplication` <xref:System.Windows.Controls.RadioButton>, jest ustawiona flaga, która oznacza zakresu zmian kursora i <xref:System.Windows.Input.Mouse.OverrideCursor%2A> ustawiono <xref:System.Windows.FrameworkElement.Cursor%2A> właściwość <xref:System.Windows.Controls.Border> formantu o nazwie `DisplayArea`.</span><span class="sxs-lookup"><span data-stu-id="e00e1-394">If the control that raised the event is the `rbScopeApplication`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to the <xref:System.Windows.FrameworkElement.Cursor%2A> property of the <xref:System.Windows.Controls.Border> control named `DisplayArea`.</span></span>  
  
 [!code-csharp[cursors#CursorsSampleOverrideCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#cursorssampleoverridecursor)]
 [!code-vb[cursors#CursorsSampleOverrideCursor](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#cursorssampleoverridecursor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" Usage="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-395">Występuje, gdy dowolnego przycisku myszy jest wciśnięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-395">Occurs when any mouse button is depressed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-396">Przycisk myszy, który został wciśnięty jest określany przez sprawdzenie argumenty zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-396">Which mouse button was depressed is determined by checking the arguments of the event.</span></span> <span data-ttu-id="e00e1-397">Jest to dołączone zdarzenie (przy użyciu tunelowania strategii routingu) zamierzony za pomocą składni dołączone zdarzenie być przywoływane przez istniejące [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementy, które pobierać dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="e00e1-397">This is an attached event (using tunneling routing strategy) that is intended through attached event syntax to be referenced by existing [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements that take input.</span></span>  
  
 <span data-ttu-id="e00e1-398">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-399">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-399"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-400">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-400">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-401">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-401">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-402">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-402">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-403">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework opiera się na tym dołączone zdarzenie, dzięki czemu są ujawniane ją jako dwa różne [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzenia <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-403">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="e00e1-404">Tych implementacji obsługi podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown> zdarzeń i przeczytać argumenty zdarzenia w celu określenia, czy przycisk myszy w lewo lub w prawo brał udział.</span><span class="sxs-lookup"><span data-stu-id="e00e1-404">These implementations handle the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="e00e1-405">Dla trzy przyciski to Brak obsługi zdarzeń na poziomie struktury środkowy przycisk i należy używać <xref:System.Windows.Input.Mouse.PreviewMouseDown> zdarzeń i wyszukaj środkowy przycisk warunku w przypadku argumentów.</span><span class="sxs-lookup"><span data-stu-id="e00e1-405">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.PreviewMouseDown> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="e00e1-406">Dla zdarzenia trasowane, które odnoszą się do przycisku myszy należy zachować ostrożność sposób lub czas oznaczeniu ich obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-406">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="e00e1-407">Obsługa zdarzeń w folderze głównym i obsługiwania go przez element podrzędny, dodatkowo do źródła może nie być odpowiednie dla formanty złożone, gdzie elementy składania może mieć spodziewanych zachowań myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-407">Handling the event near the root and handling it by a child further toward the source may not be appropriate for composited controls, where the compositing pieces might have expected mouse behaviors.</span></span> <span data-ttu-id="e00e1-408">Trudności w podejmowaniu właściwych wyborów dotyczących tego, czy inne elementy powinien również zostać poinformowany o podanej akcji myszy jest w rzeczywistości Dlaczego [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework wybrany model mających podstawowe <xref:System.Windows.Input.Mouse> udostępnić zdarzenia trasowanego jako [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenia wzdłuż trasy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-408">The difficulty in making the appropriate choices about whether other elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-409">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-409">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-410">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-410">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseDownEvent>|  
|<span data-ttu-id="e00e1-411">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-411">Routing strategy</span></span>|<span data-ttu-id="e00e1-412">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="e00e1-412">Tunneling</span></span>|  
|<span data-ttu-id="e00e1-413">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-413">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="e00e1-414">To odpowiednie zdarzenie propagacji <xref:System.Windows.Input.Mouse.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-414">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-415">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-415">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-416">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-416">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-417">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-417">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-418">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-418">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" Usage="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-419">Występuje, gdy główny przycisk myszy jest wciśnięty poza elementem, który jest Przechwytywanie zdarzeń myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-419">Occurs when the primary mouse button is pressed outside the element that is capturing mouse events.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-420">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-420">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-421">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-421"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-422">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-422">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-423">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-423">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-424">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-424">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-425">To zdarzenie nie jest resurfaced podstawowych elementów.</span><span class="sxs-lookup"><span data-stu-id="e00e1-425">This event is not resurfaced on base elements.</span></span> <span data-ttu-id="e00e1-426">Jest to głównie dotyczą autorom kontroli, próbujących w taki sposób, aby uzgodnić przechwytywanie myszy i wprowadzanie w ramach ich składania sterowania za pomocą myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-426">It is mainly of concern to control authors that are attempting to reconcile mouse capture and mouse input within their control compositing.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDownOutsideCaptureElement"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-427">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-427">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-428">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-428">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent>|  
|<span data-ttu-id="e00e1-429">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-429">Routing strategy</span></span>|<span data-ttu-id="e00e1-430">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="e00e1-430">Tunneling</span></span>|  
|<span data-ttu-id="e00e1-431">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-431">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-432">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-432">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-433">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-433">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-434">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-434">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-435">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-435">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" Usage="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-436">Występuje, gdy wskaźnik myszy nad elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-436">Occurs when the mouse moves over an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-437">To zdarzenie występuje zarówno w przypadku nowo przesunięciu wskaźnika myszy w granice elementu, a także gdy wskaźnik myszy porusza się nadal zachowując granice elementu jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-437">This event occurs both when the mouse pointer is newly moved in the element bounds, and also when the mouse pointer moves while still remaining in the element bounds.</span></span>  
  
 <span data-ttu-id="e00e1-438">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-438">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-439">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-439"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-440">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-440">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-441">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-441">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-442">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-442">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-443">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-443">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-444">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-444">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseMoveEvent>|  
|<span data-ttu-id="e00e1-445">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-445">Routing strategy</span></span>|<span data-ttu-id="e00e1-446">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="e00e1-446">Tunneling</span></span>|  
|<span data-ttu-id="e00e1-447">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-447">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="e00e1-448">To odpowiednie zdarzenie propagacji <xref:System.Windows.Input.Mouse.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-448">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseMove>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-449">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-449">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-450">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-450">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-451">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-451">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-452">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-452">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" Usage="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-453">Występuje po zwolnieniu dowolnego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-453">Occurs when any mouse button is released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-454">Przycisk myszy, która została wydana jest określany przez sprawdzenie argumenty zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-454">Which mouse button was released is determined by checking the arguments of the event.</span></span>  
  
 <span data-ttu-id="e00e1-455">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-455">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-456">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-456"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-457">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-457">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-458">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-458">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-459">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-459">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-460">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework opiera się na tym dołączone zdarzenie, dzięki czemu są ujawniane ją jako dwa różne [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzenia <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-460">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="e00e1-461">Tych implementacji obsługi podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp> zdarzeń i przeczytać argumenty zdarzenia w celu określenia, czy przycisk myszy w lewo lub w prawo brał udział.</span><span class="sxs-lookup"><span data-stu-id="e00e1-461">These implementations handle the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="e00e1-462">Dla trzy przyciski to Brak obsługi zdarzeń na poziomie struktury środkowy przycisk i należy używać <xref:System.Windows.Input.Mouse.PreviewMouseUp> zdarzeń i wyszukaj środkowy przycisk warunku w przypadku argumentów.</span><span class="sxs-lookup"><span data-stu-id="e00e1-462">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.PreviewMouseUp> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="e00e1-463">Dla zdarzenia trasowane, które odnoszą się do przycisku myszy należy zachować ostrożność sposób lub czas oznaczeniu ich obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-463">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="e00e1-464">Obsługa zdarzeń w katalogu głównym i braku obsługi przez element podrzędny dalsze kierunku źródła może nie być odpowiednie dla formanty złożone, gdzie elementy składania może mieć spodziewanych zachowań myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-464">Handling the event near the root and not handling by a child further toward the source may not be appropriate for composited controls, where the compositing pieces might have expected mouse behaviors.</span></span> <span data-ttu-id="e00e1-465">Trudności w podejmowaniu właściwych wyborów dotyczących tego, czy inne elementy powinien również zostać poinformowany o podanej akcji myszy jest w rzeczywistości Dlaczego [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework wybrany model mających podstawowe <xref:System.Windows.Input.Mouse> udostępnić zdarzenia trasowanego jako [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenia wzdłuż trasy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-465">The difficulty in making the appropriate choices about whether other elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-466">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-467">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-467">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseUpEvent>|  
|<span data-ttu-id="e00e1-468">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-468">Routing strategy</span></span>|<span data-ttu-id="e00e1-469">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="e00e1-469">Tunneling</span></span>|  
|<span data-ttu-id="e00e1-470">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-470">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="e00e1-471">To odpowiednie zdarzenie propagacji <xref:System.Windows.Input.Mouse.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-471">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-472">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-472">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-473">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-473">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-474">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-474">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-475">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-475">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" Usage="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-476">Występuje po zwolnieniu przycisku myszy głównej poza elementem, który jest Przechwytywanie zdarzeń myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-476">Occurs when the primary mouse button is released outside the element that is capturing mouse events.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-477">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-477">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-478">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-478"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-479">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-479">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-480">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-480">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-481">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-481">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="e00e1-482">To zdarzenie nie jest resurfaced podstawowych elementów.</span><span class="sxs-lookup"><span data-stu-id="e00e1-482">This event is not resurfaced on base elements.</span></span> <span data-ttu-id="e00e1-483">Jest to głównie dotyczą autorom kontroli, próbujących w taki sposób, aby uzgodnić przechwytywanie myszy i wprowadzanie w ramach ich składania sterowania za pomocą myszy.</span><span class="sxs-lookup"><span data-stu-id="e00e1-483">It is mainly of concern to control authors that are attempting to reconcile mouse capture and mouse input within their control compositing.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUpOutsideCaptureElement"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-484">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-484">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-485">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-485">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent>|  
|<span data-ttu-id="e00e1-486">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-486">Routing strategy</span></span>|<span data-ttu-id="e00e1-487">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="e00e1-487">Tunneling</span></span>|  
|<span data-ttu-id="e00e1-488">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-488">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="e00e1-489">Nie ma żadnego odpowiedniego zdarzenia propagacji.</span><span class="sxs-lookup"><span data-stu-id="e00e1-489">There is no corresponding bubbling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-490">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-490">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-491">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-491">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-492">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-492">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-493">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-493">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" Usage="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-494">Występuje, gdy obraca kółko myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-494">Occurs when the mouse wheel rotates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-495">Zespół lub myszy przechwytywania pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony to zdarzenie od elementu wąsko zdefiniowany lub przechwycone, wskaźnik myszy może w rzeczywistości to za pośrednictwem innego elementu w czasie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-495">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might in fact be over another element at the time.</span></span>  
  
 <span data-ttu-id="e00e1-496">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-496">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-497">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-497"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-498">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-498">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-499">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-499">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-500">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-500">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-501">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-501">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-502">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-502">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseWheelEvent>|  
|<span data-ttu-id="e00e1-503">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-503">Routing strategy</span></span>|<span data-ttu-id="e00e1-504">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="e00e1-504">Tunneling</span></span>|  
|<span data-ttu-id="e00e1-505">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-505">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="e00e1-506">To odpowiednie zdarzenie propagacji <xref:System.Windows.Input.Mouse.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-506">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseWheel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-507">Identyfikuje <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-507">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-508">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-508">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-509">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-509">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-510">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-510">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.MouseDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseDevice ^ PrimaryDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.MouseDevice" Usage="System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-511">Pobiera urządzeniem podstawowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-511">Gets the primary mouse device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e00e1-512">Urządzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-512">The device.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-513">Ta właściwość obsługuje infrastrukturę programu Windows Presentation Foundation i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-513">This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="ILAsm" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="F#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" Usage="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-514">Występuje, gdy element, który wysyła zapytanie o bieżący kursor myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-514">Occurs when an element queries for the current mouse cursor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-515">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-515">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="e00e1-516">implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-516"> implements attached events as routed events.</span></span> <span data-ttu-id="e00e1-517">Dołączone zdarzenia są całkowicie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka do odwoływania się do zdarzenia, które mogą być obsługiwane na obiektach, które nie określają tego zdarzenia, które [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] rozszerza włączając zdarzeń na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="e00e1-517">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="e00e1-518">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="e00e1-518">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="e00e1-519">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-519">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_Querycursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e00e1-520">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e00e1-520">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e00e1-521">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e00e1-521">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.QueryCursorEvent>|  
|<span data-ttu-id="e00e1-522">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e00e1-522">Routing strategy</span></span>|<span data-ttu-id="e00e1-523">Propagacja</span><span class="sxs-lookup"><span data-stu-id="e00e1-523">Bubbling</span></span>|  
|<span data-ttu-id="e00e1-524">Delegate</span><span class="sxs-lookup"><span data-stu-id="e00e1-524">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
 <span data-ttu-id="e00e1-525">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="e00e1-525">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-526">Identyfikuje <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-526">Identifies the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-527">Zdarzenia trasowanego identyfikatory są tworzone zdarzenia trasowane są rejestrowane, gdy wynik jest przechowywany jako pole w klasie, która rejestruje zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-527">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="e00e1-528">Identyfikatory te zawierają nazwę identyfikującą typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e00e1-528">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="e00e1-529">Często używają tych identyfikatorów jako parametry do metod system zdarzeń, aby zidentyfikować konkretne zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="e00e1-529">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-530">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-530">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-531">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-531">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-532">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-532">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-533">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-533">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-534">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-534">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-535">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-535">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-536">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-536">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-537">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-537">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-538">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-538">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-539">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-539">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-540">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-540">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-541">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-541">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-542">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-542">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-543">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-543">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-544">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-544">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-545">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-545">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-546">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-546">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-547">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-547">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-548">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-548">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-549">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-549">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-550">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-550">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-551">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-551">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-552">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-552">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-553">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-553">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-554">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-554">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-555">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-555">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-556">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-556">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-557">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-557">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-558">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-558">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-559">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-559">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-560">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-560">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-561">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-561">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-562">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-562">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-563">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-563">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-564">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-564">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-565">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-565">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-566">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-566">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-567">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-567">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-568">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-568">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-569">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-569">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-570">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-570">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-571">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-571">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void RemoveQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="e00e1-572">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-572">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="e00e1-573">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-573">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-574">Usuwa obsługi dla <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-574">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.RightButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.RightButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-575">Pobiera stan przycisku po prawej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-575">Gets the state of the right button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e00e1-576">Stan prawego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-576">The state of the right mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e00e1-577">Poniższy przykład pokazuje, jak ustalić, czy prawy przycisk myszy jest wciśnięty przez sprawdzenie, czy stan <xref:System.Windows.Input.Mouse.RightButton%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartość wyliczenia <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-577">The following example shows how to determine whether the right mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.RightButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="e00e1-578">Jeśli przycisk jest wciśnięty, metoda jest wywoływana, które aktualizacje są wyświetlane elementy w próbce.</span><span class="sxs-lookup"><span data-stu-id="e00e1-578">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetrightbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetrightbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public static bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberSignature Language="F#" Value="static member SetCursor : System.Windows.Input.Cursor -&gt; bool" Usage="System.Windows.Input.Mouse.SetCursor cursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor">
          <span data-ttu-id="e00e1-579">Kursora, aby ustawić wskaźnik myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-579">The cursor to set the mouse pointer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e00e1-580">Ustawia wskaźnik myszy na określonym <see cref="T:System.Windows.Input.Cursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-580">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e00e1-581">
            <see langword="true" />, jeśli ustawiono kursora; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-581">
              <see langword="true" />, if the cursor was set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e00e1-582">Kursor zostanie ustawiony nie dotyczy to jeden z elementów, ale raczej ma zastosowanie do całej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e00e1-582">The cursor being set does not apply to any particular element, but rather it applies to the whole application.</span></span>  <span data-ttu-id="e00e1-583">Tak Jeśli po ustawieniu kursora, który wskaźnik myszy porusza się nad obiektem, który ustawia kursor, kursor zmieni się ponownie.</span><span class="sxs-lookup"><span data-stu-id="e00e1-583">So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.</span></span>  
  
 <span data-ttu-id="e00e1-584">Aby wymusić wskaźnik myszy na konkretnym <xref:System.Windows.Input.Cursor> i wymusić wykonanie tej <xref:System.Windows.Input.Cursor> na wszystkie elementy, ustaw <xref:System.Windows.Input.Mouse.OverrideCursor%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e00e1-584">To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property.</span></span>  
  
 <span data-ttu-id="e00e1-585">Aby ustawić kursor na określony element, należy użyć <xref:System.Windows.FrameworkElement.Cursor%2A> właściwość albo <xref:System.Windows.FrameworkElement> lub <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-585">To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  <span data-ttu-id="e00e1-586">Aby uzyskać więcej informacji na temat podstawowych elementów, zobacz [Przegląd elementów podstawowych](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e00e1-586">For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.Cursors" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Mouse.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-587">Wymusza myszą, aby ponownie zsynchronizować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-587">Forces the mouse to resynchronize.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
        <altmember cref="M:System.Windows.Input.Mouse.Synchronize" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public static void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateCursor();" />
      <MemberSignature Language="F#" Value="static member UpdateCursor : unit -&gt; unit" Usage="System.Windows.Input.Mouse.UpdateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-588">Wymusza kursora myszy do zaktualizowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-588">Forces the mouse cursor to be updated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton1 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-589">Pobiera stan pierwszy przycisk rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-589">Gets the state of the first extended button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e00e1-590">Stan pierwszej przycisku myszy rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-590">The state of the first extended mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e00e1-591">Poniższy przykład pokazuje, jak ustalić, czy pierwszy przycisk rozszerzonej myszy jest wciśnięty przez sprawdzenie, czy stan <xref:System.Windows.Input.Mouse.XButton1%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartość wyliczenia <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-591">The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton1%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="e00e1-592">Jeśli przycisk jest wciśnięty, metoda jest wywoływana, które aktualizacje są wyświetlane elementy w próbce.</span><span class="sxs-lookup"><span data-stu-id="e00e1-592">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx1buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx1buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton2 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e00e1-593">Pobiera stan drugi przycisk rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-593">Gets the state of the second extended button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e00e1-594">Stan drugi przycisk myszy rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e00e1-594">The state of the second extended mouse button.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e00e1-595">Poniższy przykład pokazuje, jak ustalić, czy drugi przycisk rozszerzonej myszy jest wciśnięty przez sprawdzenie, czy stan <xref:System.Windows.Input.Mouse.XButton2%2A> jest równa <xref:System.Windows.Input.MouseButtonState> wartość wyliczenia <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="e00e1-595">The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton2%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="e00e1-596">Jeśli przycisk jest wciśnięty, metoda jest wywoływana, które aktualizacje są wyświetlane elementy w próbce.</span><span class="sxs-lookup"><span data-stu-id="e00e1-596">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx2buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx2buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>