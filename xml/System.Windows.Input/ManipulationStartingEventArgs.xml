<Type Name="ManipulationStartingEventArgs" FullName="System.Windows.Input.ManipulationStartingEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e441ec3b186d6809840c1e172b4b6aba741032be" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36506200" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManipulationStartingEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationStartingEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationStartingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationStartingEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationStartingEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <TypeSignature Language="F#" Value="type ManipulationStartingEventArgs = class&#xA;    inherit InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e3633-101">Udostępnia dane dla <see cref="E:System.Windows.UIElement.ManipulationStarting" />, zdarzenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3633-101">Provides data for the <see cref="E:System.Windows.UIElement.ManipulationStarting" />, event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3633-102"><xref:System.Windows.Input.ManipulationStartingEventArgs> Można określić zachowanie manipulowania.</span><span class="sxs-lookup"><span data-stu-id="e3633-102">The <xref:System.Windows.Input.ManipulationStartingEventArgs> enable you to specify the behavior of a manipulation.</span></span>  <span data-ttu-id="e3633-103">Użyj <xref:System.Windows.Input.ManipulationStartingEventArgs> wykonać następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="e3633-103">Use the <xref:System.Windows.Input.ManipulationStartingEventArgs> to do the following:</span></span>  
  
-   <span data-ttu-id="e3633-104">Określ, czy pozycja powinna być określona względem elementu, ustawiając <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e3633-104">Specify that the position should be relative to an element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="e3633-105">Określ, czy manipulowania palca pojedynczego są włączone przez ustawienie <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e3633-105">Specify whether single-finger manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="e3633-106">Określ, jakie typy manipulowania są włączone przez ustawienie <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> właściwości <xref:System.Windows.Input.ManipulationModes> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e3633-106">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="e3633-107">Określ środek obrotu jednym palca, ustawiając <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e3633-107">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="e3633-108">Anuluj operowanie przez ustawienie <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> właściwości `true`.</span><span class="sxs-lookup"><span data-stu-id="e3633-108">Cancel the manipulation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> property to `true`.</span></span>  
  
 <span data-ttu-id="e3633-109">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e3633-109">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="e3633-110">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="e3633-110">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationStartingEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; bool" Usage="manipulationStartingEventArgs.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3633-111">Anuluje operowanie i zamienia touch zdarzeń myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-111">Cancels the manipulation and promotes touch to mouse events.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3633-112">
            <see langword="true" /> Jeśli touch pomyślnie został podniesiony do zdarzeń myszy, w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-112">
              <see langword="true" /> if touch was successfully promoted to mouse events, otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3633-113">Jeśli metoda zakończy się powodzeniem, domyślnie <xref:System.Windows.Input.TouchDevice> wysyła poprzedniej touch dół zdarzenia jako kliknięcia i manipulowania przyszłych zdarzeń nie występują.</span><span class="sxs-lookup"><span data-stu-id="e3633-113">If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="manipulationStartingEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleTouchEnabled">
      <MemberSignature Language="C#" Value="public bool IsSingleTouchEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleTouchEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSingleTouchEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSingleTouchEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleTouchEnabled : bool with get, set" Usage="System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3633-114">Pobiera lub ustawia, czy jednym palcem można uruchomić manipulowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-114">Gets or sets whether one finger can start a manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3633-115">
            <see langword="true" /> jednym palcem można uruchomić manipulowania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-115">
              <see langword="true" /> one finger can start a manipulation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e3633-116">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-116">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3633-117">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e3633-117">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="e3633-118">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="e3633-118">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationContainer : System.Windows.IInputElement with get, set" Usage="System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3633-119">Pobiera lub ustawia kontener, w którym są wszystkie zdarzenia manipulacji i obliczeń względem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-119">Gets or sets the container that all manipulation events and calculations are relative to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3633-120">Kontener, w którym są wszystkie zdarzenia manipulacji i obliczeń względem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-120">The container that all manipulation events and calculations are relative to.</span>
          </span>
          <span data-ttu-id="e3633-121">Wartość domyślna to element, w którym wystąpiło zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-121">The default is the element on which the event occurred.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3633-122">Można określić, czy pozycja powinna być określona względem innego elementu, ustawiając <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e3633-122">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="e3633-123">Na przykład możesz wprowadzić pozycji manipulowania względem nadrzędnego elementu, który odbiera zdarzenia manipulowanie.</span><span class="sxs-lookup"><span data-stu-id="e3633-123">For example, you can make the manipulation positions relative to the parent of the element that receives the manipulation events.</span></span> <span data-ttu-id="e3633-124"><xref:System.Windows.UIElement.ManipulationStarting> Procedura obsługi zdarzeń jest jedynym miejscem, w którym można ustawić <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3633-124">The <xref:System.Windows.UIElement.ManipulationStarting> event handler is the only place in which you can set the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A>.</span></span>  
  
 <span data-ttu-id="e3633-125">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e3633-125">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="e3633-126">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="e3633-126">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Manipulators : seq&lt;System.Windows.Input.IManipulator&gt;" Usage="System.Windows.Input.ManipulationStartingEventArgs.Manipulators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3633-127">Pobiera kolekcję obiektów reprezentującą kontaktami touch operowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-127">Gets a collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3633-128">Kolekcja obiektów reprezentuje kontaktami touch operowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-128">A collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationModes Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ManipulationModes Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As ManipulationModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationModes Mode { System::Windows::Input::ManipulationModes get(); void set(System::Windows::Input::ManipulationModes value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Input.ManipulationModes with get, set" Usage="System.Windows.Input.ManipulationStartingEventArgs.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3633-129">Pobiera lub ustawia, jakie operacje są możliwe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-129">Gets or sets which types of manipulations are possible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3633-130">Jedna z wartości wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-130">One of the enumeration values.</span>
          </span>
          <span data-ttu-id="e3633-131">Wartość domyślna to <see cref="F:System.Windows.Input.ManipulationModes.All" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-131">The default is <see cref="F:System.Windows.Input.ManipulationModes.All" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3633-132">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e3633-132">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="e3633-133">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="e3633-133">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e3633-134">Właściwość jest ustawiona na wartość inną niż co najmniej jeden z <see cref="T:System.Windows.Input.ManipulationModes" /> wartość wyliczenia</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-134">The property is set to a value other than one or more of the <see cref="T:System.Windows.Input.ManipulationModes" /> enumerations value</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Pivot">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationPivot Pivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationPivot Pivot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationStartingEventArgs.Pivot" />
      <MemberSignature Language="VB.NET" Value="Public Property Pivot As ManipulationPivot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationPivot ^ Pivot { System::Windows::Input::ManipulationPivot ^ get(); void set(System::Windows::Input::ManipulationPivot ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pivot : System.Windows.Input.ManipulationPivot with get, set" Usage="System.Windows.Input.ManipulationStartingEventArgs.Pivot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationPivot</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3633-135">Pobiera lub ustawia obiekt, który opisuje pivot do manipulowania jednego miejsca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-135">Gets or sets an object that describes the pivot for a single-point manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3633-136">Obiekt, który opisuje pivot do manipulowania jednego miejsca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-136">An object that describes the pivot for a single-point manipulation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3633-137">Podczas ustawiania <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> właściwości, operowanie będą zawierać obrotu dane, gdy użytkownik używa jednego palca podczas manipulowania.</span><span class="sxs-lookup"><span data-stu-id="e3633-137">When you set the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> property, the manipulation will contain rotation data when the user uses one finger during a manipulation.</span></span>  <span data-ttu-id="e3633-138">Ma to symulować rzeczywistych sytuacji, w których można użyć palca jednego obiektu, takie jak kartka papieru w tabeli.</span><span class="sxs-lookup"><span data-stu-id="e3633-138">This is to simulate real-world situations where you can use one finger to rotate an object, such as a piece of paper on a table.</span></span>  <span data-ttu-id="e3633-139">Jeśli <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> jest `null`, użytkownik musi używać dwoma palcami spowodować obrotu.</span><span class="sxs-lookup"><span data-stu-id="e3633-139">If the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> is `null`, the user must use two fingers to cause rotation.</span></span>  
  
 <span data-ttu-id="e3633-140">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e3633-140">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="e3633-141">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="e3633-141">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3633-142">W poniższym przykładzie przedstawiono program obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationStarting> zdarzenia i ustawia <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e3633-142">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e3633-143">Aby przetestować w tym przykładzie, postępuj zgodnie z instrukcjami [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) i Zastąp kod w kroku 4 z tego kodu.</span><span class="sxs-lookup"><span data-stu-id="e3633-143">To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 4 with this code.</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationPivot](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#manipulationpivot)]
 [!code-vb[BasicManipulation#ManipulationPivot](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#manipulationpivot)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationParameter">
      <MemberSignature Language="C#" Value="public void SetManipulationParameter (System.Windows.Input.Manipulations.ManipulationParameters2D parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetManipulationParameter(class System.Windows.Input.Manipulations.ManipulationParameters2D parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationStartingEventArgs.SetManipulationParameter(System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetManipulationParameter (parameter As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetManipulationParameter(System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.SetManipulationParameter : System.Windows.Input.Manipulations.ManipulationParameters2D -&gt; unit" Usage="manipulationStartingEventArgs.SetManipulationParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="e3633-144">Parametr do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-144">The parameter to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3633-145">Dodaje parametry do bieżącego manipulowania określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3633-145">Adds parameters to the current manipulation of the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3633-146">Zwykle nie trzeba wywołać tę metodę.</span><span class="sxs-lookup"><span data-stu-id="e3633-146">You typically do not need to call this method.</span></span>  <span data-ttu-id="e3633-147">Użyj właściwości na <xref:System.Windows.Input.ManipulationStartingEventArgs> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="e3633-147">Use the properties on the <xref:System.Windows.Input.ManipulationStartingEventArgs> instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>