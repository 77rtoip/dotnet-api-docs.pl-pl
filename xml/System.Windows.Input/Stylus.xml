<Type Name="Stylus" FullName="System.Windows.Input.Stylus">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0e2a22bb28237ca03de20079944e3102e07f9f7f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39992043" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Stylus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Stylus extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Stylus" />
  <TypeSignature Language="VB.NET" Value="Public Class Stylus" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stylus abstract sealed" />
  <TypeSignature Language="F#" Value="type Stylus = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ce93c-101">Udostępnia ogólne informacje o pióra.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce93c-101">Provides access to general information about a tablet pen.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce93c-102">Poniższy przykład pokazuje, jak zarejestrować współrzędne pióra, nawet wtedy, gdy opuszczeniu przez pióro granic <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-102">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="ce93c-103">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1`oraz że <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, i <xref:System.Windows.Input.Stylus.StylusMove> zdarzenia są podłączone do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-103">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-104">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-104">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-105">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-105">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-106">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-106">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-107">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-108">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-108">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-109">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-109">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-110">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-111">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-111">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-112">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-112">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-113">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-114">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-114">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-115">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-115">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-116">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-117">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-117">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-118">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-118">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-119">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-120">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-120">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-121">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-121">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-122">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-123">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-123">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-124">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-124">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-125">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-126">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-126">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-127">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-127">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-128">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-129">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-129">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-130">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-130">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-131">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-132">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-132">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-133">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-133">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-134">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-135">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-135">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-136">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-136">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-137">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-138">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-138">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-139">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-139">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-140">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-141">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-141">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-142">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-142">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-143">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-144">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-144">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-145">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-145">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-146">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-147">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-147">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-148">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-148">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-149">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-150">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-150">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-151">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-151">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-152">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-153">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-153">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-154">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-154">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-155">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-155">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-156">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-156">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-157">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-157">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-158">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-158">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-159">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-159">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-160">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-160">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-161">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-161">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-162">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-162">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-163">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-163">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-164">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-164">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-165">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-165">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-166">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-166">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-167">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-167">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-168">Program obsługi zdarzeń do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-168">The event handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-169">Dodaje program obsługi <see cref="E:System.Windows.Input.Stylus.StylusUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-169">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-170">Przechwytuje Pióro, który jest powiązany z elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-170">Captures the stylus that is bound to a particular element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Stylus.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-171">Element do przechwycenia pióra do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-171">The element to capture the stylus to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-172">Przechwytuje Pióro do określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-172">Captures the stylus to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce93c-173">
            <see langword="true" /> Jeśli pióro są przechwytywane do <paramref name="element" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-173">
              <see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-174">Użyj <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> metodę, aby upewnić się, że `element` odbiera zdarzenia pióra, nawet wtedy, gdy kursor wykracza poza granice te elementy.</span><span class="sxs-lookup"><span data-stu-id="ce93c-174">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="ce93c-175">Aby zwolnić Pióro, należy wywołać <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> z <xref:System.Windows.Input.CaptureMode> równa <xref:System.Windows.Input.CaptureMode.None>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-175">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="ce93c-176"><xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> Metoda zwraca `false` Jeśli `element` nie jest widoczne i włączone.</span><span class="sxs-lookup"><span data-stu-id="ce93c-176">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-177">Poniższy przykład pokazuje, jak zarejestrować współrzędne pióra, nawet wtedy, gdy opuszczeniu przez pióro granic <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-177">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="ce93c-178">W tym przykładzie przyjęto założenie, Brak <xref:System.Windows.Controls.TextBox> o nazwie `textBox1`oraz że <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, i <xref:System.Windows.Input.Stylus.StylusMove> zdarzenia są podłączone do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-178">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Stylus.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-179">Element do przechwycenia pióra do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-179">The element to capture the stylus to.</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="ce93c-180">Jedną z <see cref="T:System.Windows.Input.CaptureMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-180">One of the <see cref="T:System.Windows.Input.CaptureMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-181">Przechwytuje Pióro do określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-181">Captures the stylus to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce93c-182">
            <see langword="true" /> Jeśli pióro są przechwytywane do <paramref name="element" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-182">
              <see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-183">Użyj <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> metodę, aby upewnić się, że `element` odbiera zdarzenia pióra, nawet wtedy, gdy kursor wykracza poza granice te elementy.</span><span class="sxs-lookup"><span data-stu-id="ce93c-183">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="ce93c-184">Aby zwolnić Pióro, należy wywołać <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> z <xref:System.Windows.Input.CaptureMode> równa <xref:System.Windows.Input.CaptureMode.None>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-184">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="ce93c-185"><xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> Metoda zwraca `false` Jeśli `element` nie jest widoczne i włączone.</span><span class="sxs-lookup"><span data-stu-id="ce93c-185">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-186">Poniższy przykład pokazuje, jak zarejestrować współrzędne pióra, nawet wtedy, gdy opuszczeniu przez pióro granic <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-186">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="ce93c-187">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1`oraz że <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, i <xref:System.Windows.Input.Stylus.StylusMove> zdarzenia są podłączone do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-187">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-188">Pobiera element, z którym powiązany jest pióro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-188">Gets the element to which the stylus is bound.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce93c-189">
            <see cref="T:System.Windows.IInputElement" /> Jest powiązany pióro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-189">The <see cref="T:System.Windows.IInputElement" /> to which the stylus is bound.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce93c-190">Poniższy przykład pokazuje, jak upewnić się, pióro nie są przechwytywane po użytkownik dotyka pióro dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="ce93c-190">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the digitizer.</span></span> <span data-ttu-id="ce93c-191">W tym przykładzie założono, że <xref:System.Windows.Input.Stylus.PreviewStylusDown> zdarzeń jest podłączony do narzędzia obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-191">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStylusDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.StylusDevice CurrentStylusDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.StylusDevice CurrentStylusDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentStylusDevice As StylusDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::StylusDevice ^ CurrentStylusDevice { System::Windows::Input::StylusDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentStylusDevice : System.Windows.Input.StylusDevice" Usage="System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-192">Pobiera pióra, reprezentujący i znajduje się obecnie w użyciu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-192">Gets the stylus that represents the stylus currently in use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce93c-193">
            <see cref="T:System.Windows.Input.StylusDevice" /> Reprezentujący i znajduje się obecnie w użyciu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-193">The <see cref="T:System.Windows.Input.StylusDevice" /> that represents the stylus currently in use.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce93c-194">Poniższy przykład pokazuje, jak wymazać tekst, który jest zaznaczone z odwróconą pióra.</span><span class="sxs-lookup"><span data-stu-id="ce93c-194">The following example demonstrates how to erase the text that is selected with an inverted stylus.</span></span> <span data-ttu-id="ce93c-195">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.StylusUpEvent> zdarzeń jest podłączony do narzędzia obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-195">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusUpEvent> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[StylusSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-196">Pobiera element, który jest bezpośrednio poniżej pióro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-196">Gets the element that is directly beneath the stylus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce93c-197">
            <see cref="T:System.Windows.IInputElement" /> Jest bezpośrednio poniżej pióro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-197">The <see cref="T:System.Windows.IInputElement" /> that is directly beneath the stylus.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce93c-198">Poniższy przykład pokazuje, jak ustalić, który element Pióro znajduje się za pośrednictwem.</span><span class="sxs-lookup"><span data-stu-id="ce93c-198">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="ce93c-199">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.StylusInAirMove> zdarzeń jest podłączony do narzędzia obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-199">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsFlicksEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFlicksEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFlicksEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFlicksEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFlicksEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsFlicksEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-200">A <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" /> do ustalania, czy ruchy są włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-200">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether flicks are enabled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-201">Pobiera wartość <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> dołączona właściwość określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-201">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce93c-202">
            <see langword="true" /> Jeśli określony element ma ruchy włączone; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-202">
              <see langword="true" /> if the specified element has flicks enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-203">W systemie Windows Vista szybkiego ruchu, jeden z gestów systemu, jest krótki, szybkie i proste obrysu, które mogą być mapowane do nawigacji lub skrótu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ce93c-203">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="ce93c-204">Domyślnie ruchy zostaną wyłączone na <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, i <xref:System.Windows.Controls.Primitives.ScrollBar>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-204">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="ce93c-205">Ruchy są włączone dla wszystkich innych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="ce93c-205">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-206">W poniższym przykładzie pokazano, jak ustalić, czy ruchy są włączone na <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-206">The following example demonstrates how to determine whether flicks are enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#6](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#6)]
 [!code-vb[GestureSample#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsPressAndHoldEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsPressAndHoldEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsPressAndHoldEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsPressAndHoldEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsPressAndHoldEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-207">A <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" /> do ustalania, czy włączono naciśnij i przytrzymaj klawisz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-207">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether press and hold is enabled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-208">Pobiera wartość <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> dołączona właściwość określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-208">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce93c-209">
            <see langword="true" /> Jeśli określony element ma naciśnij i przytrzymaj klawisz włączone; w przeciwnym razie <see langword="false" />;</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-209">
              <see langword="true" /> if the specified element has press and hold enabled; otherwise, <see langword="false" />;</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce93c-210">Poniższy przykład pokazuje, jak włączyć naciśnij i przytrzymaj <xref:System.Windows.Controls.Slider>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-210">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="ce93c-211">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.Slider> o nazwie `horizontalSlider1`.</span><span class="sxs-lookup"><span data-stu-id="ce93c-211">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTapFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTapFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTapFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTapFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTapFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-212">A <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" /> do ustalania, czy włączono wybór wzorca tap opinii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-212">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether tap feedback enabled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-213">Pobiera wartość <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> dołączona właściwość określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-213">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce93c-214">
            <see langword="true" /> Jeśli określony element opinii wzorca tap włączone; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-214">
              <see langword="true" /> if the specified element has tap feedback enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-215">W systemie Windows Vista krótkiej animacji występuje, gdy użytkownik naciśnie kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-215">In Windows Vista, a short animation occurs when the user taps the control.</span></span>  <span data-ttu-id="ce93c-216">Domyślnie, naciśnij opinii jest wyłączona na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-216">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="ce93c-217">Jest on włączony dla wszystkich innych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="ce93c-217">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-218">W poniższym przykładzie pokazano, jak ustalić, czy opinii wzorca tap jest włączony na <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-218">The following example demonstrates how to determine whether tap feedback is enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#5)]
 [!code-vb[GestureSample#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTouchFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTouchFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTouchFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-219">A <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" /> do ustalania, czy opinii włączone wprowadzania dotykowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-219">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether touch input feedback enabled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-220">Pobiera wartość <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> dołączona właściwość określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-220">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce93c-221">
            <see langword="true" /> Włączenie opinii wprowadzania dotykowego, w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-221">
              <see langword="true" /> if touch input feedback is enabled, otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce93c-222">W poniższym przykładzie pokazano, jak ustalić, czy opinii wzorca tap jest włączony na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-222">The following example demonstrates how to determine whether tap feedback is enabled on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#7](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#7)]
 [!code-vb[GestureSample#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" Usage="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-223">Występuje, gdy element przechwytuje pióro zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-223">Occurs when an element captures the stylus events.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-224">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-224">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-225"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-225"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-226">Zdarzenia dołączone są zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-226">Attached events are, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> <span data-ttu-id="ce93c-227">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Bardziej rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-227">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-228">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-228">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-229">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-229">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-230">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-230">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-231">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-231">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.GotStylusCaptureEvent>|  
|<span data-ttu-id="ce93c-232">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-232">Routing strategy</span></span>|<span data-ttu-id="ce93c-233">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-233">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-234">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-234">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-235">W poniższym przykładzie pokazano, jak zmienić kolor tła <xref:System.Windows.Controls.TextBox> podczas <xref:System.Windows.Controls.TextBox> powoduje przechwycenie i zwalnia zdarzenia pióra.</span><span class="sxs-lookup"><span data-stu-id="ce93c-235">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="ce93c-236">W tym przykładzie przyjęto założenie, że istnieje pole tekstowe o nazwie `textBox1`oraz że <xref:System.Windows.Input.Stylus.GotStylusCapture> i <xref:System.Windows.Input.Stylus.LostStylusCapture> zdarzenia są podłączone do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-236">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-237">Identyfikuje <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-237">Identifies the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabled">
      <MemberSignature Language="C#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsFlicksEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="F#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" Usage="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-238">Pobiera lub ustawia wartość wskazującą, czy ruchy są włączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-238">Gets or sets a value indicating whether flicks are enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-239">W [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], szybkiego ruchu, jeden z gestów systemu, jest krótki, szybkie i proste obrysu, które mogą być mapowane do nawigacji lub skrótu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ce93c-239">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="ce93c-240">Domyślnie ruchy zostaną wyłączone na <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, i <xref:System.Windows.Controls.Primitives.ScrollBar>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-240">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="ce93c-241">Ruchy są włączone dla wszystkich innych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="ce93c-241">Flicks are enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsFlicksEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ce93c-242">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ce93c-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-243">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-243">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsFlicksEnabledProperty>|  
|<span data-ttu-id="ce93c-244">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ce93c-244">Metadata properties set to `true`</span></span>|<span data-ttu-id="ce93c-245">Brak</span><span class="sxs-lookup"><span data-stu-id="ce93c-245">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-246">Poniższy przykład pokazuje, jak wyłączyć ruchy na <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-246">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Camvas Name="canvas1" Stylus.IsFlicksEnabled="False" ></Canvas>
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFlicksEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFlicksEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFlicksEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFlicksEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFlicksEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-247">Identyfikuje <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-247">Identifies the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="F#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" Usage="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-248">Pobiera lub ustawia wartość wskazującą, czy włączono naciśnij i przytrzymaj klawisz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-248">Gets or sets a values indicating whether press and hold is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-249">Naciśnij i przytrzymaj mapy do kliknij prawym przyciskiem myszy na myszy.</span><span class="sxs-lookup"><span data-stu-id="ce93c-249">Press and hold maps to a right-click on a mouse.</span></span> <span data-ttu-id="ce93c-250">W [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] można wyłączyć to zachowanie w przypadku elementów, jeśli przewidujesz sytuacji, w którym użytkownik może przytrzymaj pióra bez pomyślny przebieg operacji zasymulować kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="ce93c-250">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
<a name="dependencyPropertyInfo_IsPressAndHoldEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ce93c-251">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ce93c-251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-252">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-252">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty>|  
|<span data-ttu-id="ce93c-253">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ce93c-253">Metadata properties set to `true`</span></span>|<span data-ttu-id="ce93c-254">Brak</span><span class="sxs-lookup"><span data-stu-id="ce93c-254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-255">Poniższy przykład pokazuje, jak włączyć naciśnij i przytrzymaj <xref:System.Windows.Controls.Slider>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-255">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span>  

```xaml
<Slider Name="horizontalSlider1" Stylus.IsPressAndHoldEnabled="True" />
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressAndHoldEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPressAndHoldEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-256">Identyfikuje <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-256">Identifies the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" Usage="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-257">Pobiera lub ustawia wartość wskazującą, czy włączono wzorca tap opinii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-257">Gets or sets whether a value indicating whether tap feedback is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-258">W [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], krótkiej animacji występuje, gdy użytkownik naciśnie kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-258">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="ce93c-259">Domyślnie, naciśnij opinii jest wyłączona na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-259">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="ce93c-260">Jest on włączony dla wszystkich innych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="ce93c-260">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTapFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ce93c-261">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ce93c-261">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-262">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-262">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty>|  
|<span data-ttu-id="ce93c-263">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ce93c-263">Metadata properties set to `true`</span></span>|<span data-ttu-id="ce93c-264">Brak</span><span class="sxs-lookup"><span data-stu-id="ce93c-264">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-265">Poniższy przykład powoduje wyłączenie wzorca tap opinii na <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-265">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Canvas Name="canvas1" Stylus.IsTapFeedbackEnabled="False"></Canvas>
```
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTapFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTapFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-266">Identyfikuje <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-266">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" Usage="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-267">Pobiera lub ustawia wartość wskazującą, czy włączono opinii dotykowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-267">Gets or sets whether a value indicating whether touch feedback is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-268">W [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], krótkiej animacji występuje po użytkownik dotyka kontroli przy użyciu linii papilarnych.</span><span class="sxs-lookup"><span data-stu-id="ce93c-268">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user touches the control with a finger.</span></span> <span data-ttu-id="ce93c-269">Domyślnie opinii dotykowych jest wyłączona na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-269">By default, touch feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="ce93c-270">Jest on włączony dla wszystkich innych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="ce93c-270">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTouchFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ce93c-271">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ce93c-271">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-272">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-272">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty>|  
|<span data-ttu-id="ce93c-273">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ce93c-273">Metadata properties set to `true`</span></span>|<span data-ttu-id="ce93c-274">Brak</span><span class="sxs-lookup"><span data-stu-id="ce93c-274">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-275">Poniższy przykład umożliwia opinii dotykowych na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-275">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  

```xaml
<InkCanvas Name="inkCanvas1" Stylus.IsTouchFeedbackEnabled="True" />
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTouchFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTouchFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-276">Identyfikuje <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-276">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" Usage="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-277">Występuje, gdy element zwalnia zdarzenia pióra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-277">Occurs when an element releases stylus events.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-278">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-278">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-279"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-279"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-280">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-280">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-281"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-281"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-282">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-282">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-283">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-283">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-284">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-284">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-285">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-285">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.LostStylusCaptureEvent>|  
|<span data-ttu-id="ce93c-286">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-286">Routing strategy</span></span>|<span data-ttu-id="ce93c-287">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-287">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-288">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-288">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-289">W poniższym przykładzie pokazano, jak zmienić kolor tła <xref:System.Windows.Controls.TextBox> podczas <xref:System.Windows.Controls.TextBox> powoduje przechwycenie i zwalnia zdarzenia pióra.</span><span class="sxs-lookup"><span data-stu-id="ce93c-289">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="ce93c-290">W tym przykładzie przyjęto założenie, że istnieje pole tekstowe o nazwie `textBox1`oraz że <xref:System.Windows.Input.Stylus.GotStylusCapture> i <xref:System.Windows.Input.Stylus.LostStylusCapture> zdarzenia są podłączone do obsługi zdarzeń w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-290">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-291">Identyfikuje <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-291">Identifies the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" Usage="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-292">Występuje, gdy użytkownik naciśnie jeden z przycisków w pióro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-292">Occurs when the user presses one of the buttons on the stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-293">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-293">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-294"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-294"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-295">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-295">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-296"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-296"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-297">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-297">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-298">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-298">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-299">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-299">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-300">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-300">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="ce93c-301">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-301">Routing strategy</span></span>|<span data-ttu-id="ce93c-302">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ce93c-302">Tunneling</span></span>|  
|<span data-ttu-id="ce93c-303">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-303">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-304">W poniższym przykładzie pokazano, jak ustalić, który przycisk zgłoszone <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-304">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event.</span></span> <span data-ttu-id="ce93c-305">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-305">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[StylusSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-306">Identyfikuje <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-306">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" Usage="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-307">Występuje, gdy użytkownik zwolni jeden z przycisków na pióro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-307">Occurs when the user releases one of the buttons on the stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-308">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-308">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-309"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-309"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-310">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-310">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-311"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-311"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-312">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-312">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-313">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-313">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-314">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-315">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-315">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="ce93c-316">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-316">Routing strategy</span></span>|<span data-ttu-id="ce93c-317">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ce93c-317">Tunneling</span></span>|  
|<span data-ttu-id="ce93c-318">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-318">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-319">W poniższym przykładzie pokazano, jak ustalić, który przycisk zgłoszone <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-319">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event.</span></span> <span data-ttu-id="ce93c-320">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-320">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[StylusSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-321">Identyfikuje <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-321">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" Usage="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-322">Występuje, gdy użytkownik dotyka porady pióra na tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-322">Occurs when user touches the tip of the stylus to the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-323">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-323">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-324"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-324"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-325">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-325">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-326"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-326"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-327">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-328">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-328">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-329">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-330">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-330">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusDownEvent>|  
|<span data-ttu-id="ce93c-331">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-331">Routing strategy</span></span>|<span data-ttu-id="ce93c-332">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ce93c-332">Tunneling</span></span>|  
|<span data-ttu-id="ce93c-333">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-333">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-334">Poniższy przykład pokazuje, jak upewnić się, pióro nie są przechwytywane po użytkownik dotyka pióra na tablet.</span><span class="sxs-lookup"><span data-stu-id="ce93c-334">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the tablet.</span></span> <span data-ttu-id="ce93c-335">W tym przykładzie założono, że <xref:System.Windows.Input.Stylus.PreviewStylusDown> zdarzeń jest podłączony do narzędzia obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-335">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-336">Identyfikuje <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-336">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" Usage="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-337">Występuje, gdy pióro jest przemieszczane podczas, gdy znajduje się w zakresie (ale nie dotknięcie) typu tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-337">Occurs if the stylus moves while it is within range of (but not touching) the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-338">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-338">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-339"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-339"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-340">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-340">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-341"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-341"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-342">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-342">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-343">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-343">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-344">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-344">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-345">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-345">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="ce93c-346">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-346">Routing strategy</span></span>|<span data-ttu-id="ce93c-347">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ce93c-347">Tunneling</span></span>|  
|<span data-ttu-id="ce93c-348">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-348">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-349">Poniższy przykład pokazuje, jak ustalić, który element Pióro znajduje się za pośrednictwem.</span><span class="sxs-lookup"><span data-stu-id="ce93c-349">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="ce93c-350">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1`oraz że <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> zdarzeń jest podłączony do narzędzia obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-350">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[StylusSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-351">Identyfikuje <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-351">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" Usage="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-352">Występuje, gdy pióro jest dostarczany w zakresie typu tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-352">Occurs when the stylus comes within range of the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-353">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-353">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-354"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-354"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-355">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-355">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-356"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-356"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-357">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-357">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-358">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-358">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-359">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-359">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-360">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-360">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="ce93c-361">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-361">Routing strategy</span></span>|<span data-ttu-id="ce93c-362">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ce93c-362">Tunneling</span></span>|  
|<span data-ttu-id="ce93c-363">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-363">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-364">Poniższy przykład pokazuje, jak ustalić, czy jest odwrócony pióro.</span><span class="sxs-lookup"><span data-stu-id="ce93c-364">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="ce93c-365">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.PreviewStylusInRange> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-365">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusInRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[StylusSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-366">Identyfikuje <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-366">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" Usage="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-367">Występuje po przemieszczeniu pióra, gdy jest jego dotknięcie typu tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-367">Occurs when the stylus moves while it is touching the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-368">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-369"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-369"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-370">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-370">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-371"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-371"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-372">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-372">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-373">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-373">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-374">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-374">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-375">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-375">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusMoveEvent>|  
|<span data-ttu-id="ce93c-376">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-376">Routing strategy</span></span>|<span data-ttu-id="ce93c-377">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ce93c-377">Tunneling</span></span>|  
|<span data-ttu-id="ce93c-378">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-378">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-379">W przykładzie pokazano, jak określić położenie Pióro, gdy przenosi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-379">The example demonstrates how to determine the position of the stylus when it moves.</span></span> <span data-ttu-id="ce93c-380">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.PreviewStylusMove> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-380">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusMove> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[StylusSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-381">Identyfikuje <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-381">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" Usage="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-382">Występuje, gdy pióro wykracza poza zakresem typu tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-382">Occurs when the stylus goes out of range of the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-383">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-383">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-384"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-384"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-385">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-385">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-386"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-386"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-387">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-388">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-389">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-390">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-390">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="ce93c-391">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-391">Routing strategy</span></span>|<span data-ttu-id="ce93c-392">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ce93c-392">Tunneling</span></span>|  
|<span data-ttu-id="ce93c-393">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-393">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-394">Poniższy przykład pokazuje, jak ustalić, czy jest odwrócony pióro.</span><span class="sxs-lookup"><span data-stu-id="ce93c-394">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="ce93c-395">W tym przykładzie przyjęto założenie, Brak <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-395">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[StylusSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-396">Identyfikuje <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-396">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" Usage="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-397">Występuje, gdy użytkownik dokona systemu gest za pomocą tego pióra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-397">Occurs when the user makes a system gesture with this stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-398">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-399"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-399"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-400">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-400">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-401"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-401"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-402">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-402">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-403">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-403">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-404">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-404">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-405">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-405">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="ce93c-406">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-406">Routing strategy</span></span>|<span data-ttu-id="ce93c-407">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ce93c-407">Tunneling</span></span>|  
|<span data-ttu-id="ce93c-408">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-408">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-409">W poniższym przykładzie pokazano sposób określania gestu system, który spowodował <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-409">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event.</span></span> <span data-ttu-id="ce93c-410">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-410">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#17)]
 [!code-vb[StylusSamples#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-411">Identyfikuje <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-411">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" Usage="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-412">Występuje, gdy użytkownik wind pióra od typu tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-412">Occurs when the user lifts the stylus from the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-413">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-413">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-414"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-414"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-415">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-415">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-416"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-416"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-417">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-417">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-418">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-418">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-419">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-420">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-420">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusUpEvent>|  
|<span data-ttu-id="ce93c-421">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-421">Routing strategy</span></span>|<span data-ttu-id="ce93c-422">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="ce93c-422">Tunneling</span></span>|  
|<span data-ttu-id="ce93c-423">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-423">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-424">Poniższy przykład pokazuje, jak określić położenie pióro po użytkownik wind go z typu tablet.</span><span class="sxs-lookup"><span data-stu-id="ce93c-424">The following example demonstrates how to determine the position of the stylus when the user lifts it from the tablet.</span></span> <span data-ttu-id="ce93c-425">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.PreviewStylusUp> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-425">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[StylusSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-426">Identyfikuje <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-426">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-427">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-427">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-428">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-428">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-429">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-429">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-430">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-430">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-431">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-431">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-432">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-432">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-433">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-433">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-434">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-434">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-435">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-435">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-436">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-437">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-437">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-438">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-438">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-439">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-439">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-440">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-440">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-441">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-441">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-442">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-442">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-443">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-443">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-444">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-444">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-445">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-445">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-446">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-446">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-447">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-447">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-448">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-449">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-449">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-450">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-450">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-451">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-451">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-452">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-452">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-453">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-453">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-454">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-454">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-455">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-455">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-456">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-456">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-457">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-457">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-458">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-458">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-459">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-459">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-460">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-461">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-461">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-462">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-462">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-463">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-463">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-464">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-464">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-465">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-465">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-466">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-466">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-467">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-467">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-468">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-468">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-469">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-469">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-470">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-470">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-471">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-471">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-472">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-472">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-473">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-473">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-474">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-474">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-475">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-475">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-476">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-476">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-477">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-477">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-478">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-478">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-479">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-479">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-480">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-480">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-481">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-481">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-482">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-482">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-483">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-483">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-484">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-484">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-485">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-485">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-486">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-486">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-487">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-487">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-488">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-488">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-489">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-489">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-490">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> nasłuchuje tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-490">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="ce93c-491">Obsługa zdarzenia do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-491">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-492">Usuwa obsługi dla <see cref="E:System.Windows.Input.Stylus.StylusUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-492">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsFlicksEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFlicksEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFlicksEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFlicksEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsFlicksEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsFlicksEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-493">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> na którym chcesz włączyć ruchy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-493">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable flicks.</span>
          </span>
        </param>
        <param name="enabled">
          <span data-ttu-id="ce93c-494">
            <see langword="true" /> Aby włączyć ruchy; <see langword="false" /> wyłączyć ruchy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-494">
              <see langword="true" /> to enable flicks; <see langword="false" /> to disable flicks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-495">Pobiera wartość <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> dołączona właściwość określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-495">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-496">W systemie Windows Vista szybkiego ruchu, jeden z gestów systemu, jest krótki, szybkie i proste obrysu, które mogą być mapowane do nawigacji lub skrótu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ce93c-496">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="ce93c-497">Domyślnie ruchy zostaną wyłączone na <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, i <xref:System.Windows.Controls.Primitives.ScrollBar>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-497">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="ce93c-498">Ruchy są włączone dla wszystkich innych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="ce93c-498">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-499">Poniższy przykład pokazuje, jak wyłączyć ruchy na <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-499">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#2)]
 [!code-vb[GestureSample#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsPressAndHoldEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsPressAndHoldEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsPressAndHoldEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsPressAndHoldEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsPressAndHoldEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-500">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> na którym chcesz włączyć naciśnij i przytrzymaj klawisz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-500">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable press and hold.</span>
          </span>
        </param>
        <param name="enabled">
          <span data-ttu-id="ce93c-501">
            <see langword="true" /> Aby włączyć, naciśnij i przytrzymaj klawisz; <see langword="false" /> wyłączenie naciśnij i przytrzymaj.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-501">
              <see langword="true" /> to enable press and hold; <see langword="false" /> to disable press and hold.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-502">Ustawia wartość <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> dołączona właściwość określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-502">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-503">Naciśnij i przytrzymaj mapy do kliknij prawym przyciskiem myszy na myszy.</span><span class="sxs-lookup"><span data-stu-id="ce93c-503">Press and hold maps to the right-click on a mouse.</span></span> <span data-ttu-id="ce93c-504">Windows Vista można wyłączyć to zachowanie w przypadku elementów, jeśli przewidujesz sytuacji, w którym użytkownik może przytrzymaj pióra bez pomyślny przebieg operacji zasymulować kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="ce93c-504">In Windows Vista, you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-505">Poniższy przykład pokazuje, jak włączyć naciśnij i przytrzymaj <xref:System.Windows.Controls.Slider>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-505">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="ce93c-506">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.Slider> o nazwie `horizontalSlider1`.</span><span class="sxs-lookup"><span data-stu-id="ce93c-506">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTapFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTapFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTapFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTapFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTapFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-507">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> na którym chcesz włączyć naciśnij opinii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-507">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span>
          </span>
        </param>
        <param name="enabled">
          <span data-ttu-id="ce93c-508">
            <see langword="true" /> Aby włączyć wzorca tap opinie; <see langword="false" /> wyłączyć wzorca tap opinii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-508">
              <see langword="true" /> to enable tap feedback; <see langword="false" /> to disable tap feedback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-509">Ustawia wartość <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> dołączona właściwość określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-509">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-510">W systemie Windows Vista krótkiej animacji występuje, gdy użytkownik naciśnie kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-510">In Windows Vista, a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="ce93c-511">Domyślnie, naciśnij opinii jest wyłączona na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-511">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="ce93c-512">Jest on włączony dla wszystkich innych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="ce93c-512">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-513">Poniższy przykład powoduje wyłączenie wzorca tap opinii na <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-513">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#4)]
 [!code-vb[GestureSample#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTouchFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTouchFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTouchFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ce93c-514">
            <see cref="T:System.Windows.UIElement" /> Lub <see cref="T:System.Windows.ContentElement" /> na którym chcesz włączyć naciśnij opinii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-514">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span>
          </span>
        </param>
        <param name="enabled">
          <span data-ttu-id="ce93c-515">
            <see langword="true" /> Aby Włącz obsługę dotykową wejściowe opinie; <see langword="false" /> aby Wyłącz obsługę dotykową wejściowe opinii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-515">
              <see langword="true" /> to enable touch input feedback; <see langword="false" /> to disable touch input feedback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce93c-516">Ustawia wartość <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> dołączona właściwość określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-516">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce93c-517">Poniższy przykład umożliwia opinii dotykowych na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-517">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#8)]
 [!code-vb[GestureSample#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" Usage="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-518">Występuje, gdy użytkownik naciśnie jeden z przycisków w pióro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-518">Occurs when the user presses one of the buttons on the stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-519">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-519">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-520"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-520"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-521">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-521">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-522"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-522"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-523">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-523">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-524">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-524">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-525">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-525">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-526">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-526">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonDownEvent>|  
|<span data-ttu-id="ce93c-527">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-527">Routing strategy</span></span>|<span data-ttu-id="ce93c-528">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-528">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-529">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-529">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-530">Poniższy przykład ilustruje sposób wyświetlić menu skrótów, gdy użytkownik naciśnie przycisk zbiornik na pióro.</span><span class="sxs-lookup"><span data-stu-id="ce93c-530">The following example demonstrates how to show a shortcut menu when the user presses the barrel button on a stylus.</span></span> <span data-ttu-id="ce93c-531">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1`, a <xref:System.Windows.Controls.ContextMenu> o nazwie `textBoxContextMenu`oraz że <xref:System.Windows.Input.Stylus.StylusButtonDown> zdarzeń jest podłączony do narzędzia obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-531">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and a <xref:System.Windows.Controls.ContextMenu> called `textBoxContextMenu`, and that the <xref:System.Windows.Input.Stylus.StylusButtonDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[StylusSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-532">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-532">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" Usage="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-533">Występuje, gdy użytkownik zwolni jeden z przycisków na pióro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-533">Occurs when the user releases one of the buttons on the stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-534">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-534">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-535"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-535"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-536">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-536">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-537"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-537"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-538">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-538">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-539">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-539">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-540">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-540">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-541">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-541">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonUpEvent>|  
|<span data-ttu-id="ce93c-542">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-542">Routing strategy</span></span>|<span data-ttu-id="ce93c-543">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-543">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-544">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-544">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-545">Poniższy przykład pokazuje, jak skopiowanie zaznaczonego tekstu, gdy użytkownik zwolni przycisk zbiornik na pióro.</span><span class="sxs-lookup"><span data-stu-id="ce93c-545">The following example demonstrates how to copy the selected text when the user releases the barrel button on a stylus.</span></span> <span data-ttu-id="ce93c-546">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1`oraz że <xref:System.Windows.Input.Stylus.StylusButtonUp> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-546">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[StylusSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-547">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-547">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" Usage="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-548">Występuje, gdy użytkownik dotyka porady pióra na tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-548">Occurs when the user touches the tip of the stylus to the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-549">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-549">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-550"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-550"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-551">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-551">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-552"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-552"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-553">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-553">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-554">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-554">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-555">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-555">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-556">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-556">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusDownEvent>|  
|<span data-ttu-id="ce93c-557">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-557">Routing strategy</span></span>|<span data-ttu-id="ce93c-558">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-558">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-559">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-559">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-560">Poniższy przykład pokazuje, jak zarejestrować współrzędne pióra, nawet wtedy, gdy opuszczeniu przez pióro granic <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-560">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="ce93c-561">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1`oraz że <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, i <xref:System.Windows.Input.Stylus.StylusMove> zdarzenia są podłączone do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-561">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-562">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusDown" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-562">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="F#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" Usage="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-563">Występuje, gdy kursor pióra przekroczeniu granic elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-563">Occurs when the stylus cursor enters the bounds of an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-564">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-564">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-565"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-565"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-566">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-566">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-567"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-567"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-568">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-568">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-569">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-569">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-570">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-570">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-571">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-571">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusEnterEvent>|  
|<span data-ttu-id="ce93c-572">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-572">Routing strategy</span></span>|<span data-ttu-id="ce93c-573">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ce93c-573">Direct</span></span>|  
|<span data-ttu-id="ce93c-574">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-574">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-575">Poniższy przykład pokazuje, jak zmienić kolor <xref:System.Windows.Controls.Button> gdy kursor pióra wprowadza i odsunięciu.</span><span class="sxs-lookup"><span data-stu-id="ce93c-575">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="ce93c-576">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.Button> o nazwie `button1` i <xref:System.Windows.Input.Stylus.StylusEnter> i <xref:System.Windows.Input.Stylus.StylusLeave> zdarzenia są podłączone do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-576">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-577">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-577">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" Usage="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-578">Występuje po przemieszczeniu pióra, gdy jest w zakresie, ale nie dotknięcie, tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-578">Occurs when the stylus moves while it is in range of, but not touching, the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-579">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-579">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-580"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-580"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-581">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-581">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-582"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-582"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-583">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-583">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-584">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-584">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-585">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-585">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-586">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-586">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInAirMoveEvent>|  
|<span data-ttu-id="ce93c-587">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-587">Routing strategy</span></span>|<span data-ttu-id="ce93c-588">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-588">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-589">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-589">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-590">Poniższy przykład pokazuje, jak ustalić, który element Pióro znajduje się za pośrednictwem.</span><span class="sxs-lookup"><span data-stu-id="ce93c-590">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="ce93c-591">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.StylusInAirMove> zdarzeń jest podłączony do narzędzia obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-591">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-592">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-592">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" Usage="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-593">Występuje, gdy pióro jest dostarczany w zakresie typu tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-593">Occurs when the stylus comes within range of the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-594">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-594">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-595"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-595"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-596">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-596">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-597"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-597"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-598">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-598">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-599">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-599">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-600">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-600">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-601">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-601">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInRangeEvent>|  
|<span data-ttu-id="ce93c-602">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-602">Routing strategy</span></span>|<span data-ttu-id="ce93c-603">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-603">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-604">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-604">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-605">W poniższym przykładzie pokazano, jak ustawić <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> właściwość <xref:System.Windows.Controls.InkCanvas> do <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> gdy pióro jest odwrócony.</span><span class="sxs-lookup"><span data-stu-id="ce93c-605">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of an <xref:System.Windows.Controls.InkCanvas> to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> when the stylus is inverted.</span></span> <span data-ttu-id="ce93c-606">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.InkCanvas> o nazwie `inkCanvas1` i <xref:System.Windows.Input.Stylus.StylusInRange> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-606">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusInRange> event is connected to the event handlers.</span></span> <span data-ttu-id="ce93c-607">Aby znajduje się pozycja kursora zmienić zestaw <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> właściwości `true` na `inkCanvas1`.</span><span class="sxs-lookup"><span data-stu-id="ce93c-607">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#18)]
 [!code-vb[StylusSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-608">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-608">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" Usage="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-609">Występuje, gdy kursor pióra opuszczeniu granic elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-609">Occurs when the stylus cursor leaves the bounds of an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-610">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-610">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-611"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-611"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-612">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-612">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-613"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-613"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-614">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-614">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-615">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-615">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-616">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-616">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-617">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-617">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusLeaveEvent>|  
|<span data-ttu-id="ce93c-618">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-618">Routing strategy</span></span>|<span data-ttu-id="ce93c-619">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="ce93c-619">Direct</span></span>|  
|<span data-ttu-id="ce93c-620">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-620">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-621">Poniższy przykład pokazuje, jak zmienić kolor <xref:System.Windows.Controls.Button> gdy kursor pióra wprowadza i odsunięciu.</span><span class="sxs-lookup"><span data-stu-id="ce93c-621">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="ce93c-622">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.Button> o nazwie `button1` i <xref:System.Windows.Input.Stylus.StylusEnter> i <xref:System.Windows.Input.Stylus.StylusLeave> zdarzenia są podłączone do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-622">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-623">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-623">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" Usage="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-624">Występuje po przemieszczeniu pióra, gdy jest jego dotknięcie typu tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-624">Occurs when the stylus moves while it is touching the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-625">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-625">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-626"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-626"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-627">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-627">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-628"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-628"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-629">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-629">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-630">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-630">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-631">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-631">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-632">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-632">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusMoveEvent>|  
|<span data-ttu-id="ce93c-633">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-633">Routing strategy</span></span>|<span data-ttu-id="ce93c-634">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-634">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-635">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-635">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-636">Poniższy przykład pokazuje, jak zarejestrować współrzędne pióra, nawet wtedy, gdy opuszczeniu przez pióro granic <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-636">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="ce93c-637">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1`oraz że <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, i <xref:System.Windows.Input.Stylus.StylusMove> zdarzenia są podłączone do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-637">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-638">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusMove" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-638">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" Usage="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-639">Występuje, gdy pióro wykracza poza zakresem typu tablet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-639">Occurs when the stylus goes out of range of the tablet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-640">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-640">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-641"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-641"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-642">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-642">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-643"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-643"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span>  <span data-ttu-id="ce93c-644">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-644">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-645">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-645">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-646">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-646">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-647">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-647">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusOutOfRangeEvent>|  
|<span data-ttu-id="ce93c-648">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-648">Routing strategy</span></span>|<span data-ttu-id="ce93c-649">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-649">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-650">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-650">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-651">Poniższy przykład pokazuje, jak zmienić kursor na strzałkę, gdy pióro wykracza poza zakres.</span><span class="sxs-lookup"><span data-stu-id="ce93c-651">The following example demonstrates how to change the cursor to an arrow when the stylus goes out of range.</span></span> <span data-ttu-id="ce93c-652">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.InkCanvas> o nazwie `inkCanvas1` i <xref:System.Windows.Input.Stylus.StylusOutOfRange> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-652">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusOutOfRange> event is connected to an event handler.</span></span> <span data-ttu-id="ce93c-653">Aby znajduje się pozycja kursora zmienić zestaw <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> właściwości `true` na `inkCanvas1`.</span><span class="sxs-lookup"><span data-stu-id="ce93c-653">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#19)]
 [!code-vb[StylusSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-654">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-654">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" Usage="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-655">Występuje, gdy użytkownik dokona systemu gest za pomocą tego pióra.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-655">Occurs when the user makes a system gesture with this stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-656">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-656">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-657"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-657"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-658">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-658">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-659"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-659"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-660">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-660">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-661">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-661">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-662">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-662">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-663">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-663">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusSystemGestureEvent>|  
|<span data-ttu-id="ce93c-664">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-664">Routing strategy</span></span>|<span data-ttu-id="ce93c-665">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-665">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-666">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-666">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-667">W poniższym przykładzie pokazano sposób określania gestu system, który spowodował <xref:System.Windows.Input.Stylus.StylusSystemGesture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-667">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event.</span></span> <span data-ttu-id="ce93c-668">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1` i <xref:System.Windows.Input.Stylus.StylusSystemGesture> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-668">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event is connected to an event handler.</span></span>  
  
 [!code-csharp[StylusSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[StylusSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-669">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-669">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" Usage="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-670">Występuje, gdy pióro z komputerów typu Tablet oddalania przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-670">Occurs when the user raises the stylus from the Tablet PC.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-671">Jest to dołączone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ce93c-671">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-672"> implementuje zdarzeń jest dołączonych jako zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="ce93c-672"> implements attached events as routed events.</span></span> <span data-ttu-id="ce93c-673">Dołączone zdarzenie to zasadniczo, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] koncepcji języka pozwala odwoływać się do zdarzenia, które są obsługiwane na obiektach, które w przeciwnym razie samodzielnie, definiowanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-673">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="ce93c-674"> dodatkowo rozszerza możliwości dołączone zdarzenie, co pozwala na przechodzenie przez trasę.</span><span class="sxs-lookup"><span data-stu-id="ce93c-674"> further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="ce93c-675">Zdarzenia dołączone ma składni bezpośredniej obsługi w kodzie Aby dołączyć programy obsługi dla zdarzenia trasowanego w kodzie, należy użyć wyznaczonym Dodaj \* metodę procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ce93c-675">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="ce93c-676">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń dołączonych](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ce93c-676">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ce93c-677">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ce93c-677">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ce93c-678">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ce93c-678">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusUpEvent>|  
|<span data-ttu-id="ce93c-679">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ce93c-679">Routing strategy</span></span>|<span data-ttu-id="ce93c-680">Propagacja</span><span class="sxs-lookup"><span data-stu-id="ce93c-680">Bubbling</span></span>|  
|<span data-ttu-id="ce93c-681">Delegate</span><span class="sxs-lookup"><span data-stu-id="ce93c-681">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-682">Poniższy przykład pokazuje, jak zarejestrować współrzędne pióra, nawet wtedy, gdy opuszczeniu przez pióro granic <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ce93c-682">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="ce93c-683">W tym przykładzie przyjęto założenie, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textBox1`oraz że <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, i <xref:System.Windows.Input.Stylus.StylusMove> zdarzenia są podłączone do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ce93c-683">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-684">Identyfikuje <see cref="E:System.Windows.Input.Stylus.StylusUp" /> dołączone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-684">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Stylus.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce93c-685">Synchronizuje kursor i interfejsu użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce93c-685">Synchronizes the cursor and the user interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce93c-686">Aplikacje mogą potrzebować określenia elementu, na którym znajduje się kursor.</span><span class="sxs-lookup"><span data-stu-id="ce93c-686">Applications may need to determine the element on which the cursor is located.</span></span> <span data-ttu-id="ce93c-687">Jeśli aplikacja używa animacji, <xref:System.Windows.Input.Stylus.DirectlyOver%2A> metoda może zwracać element, który został przeniesiony poniżej znajduje się kursor.</span><span class="sxs-lookup"><span data-stu-id="ce93c-687">If the application uses animation, the <xref:System.Windows.Input.Stylus.DirectlyOver%2A> method might return an element that has moved out from under the cursor.</span></span> <span data-ttu-id="ce93c-688">Wywołaj <xref:System.Windows.Input.Stylus.Synchronize%2A> upewnij się, że <xref:System.Windows.Input.Stylus.DirectlyOver%2A> zwraca odpowiednie element.</span><span class="sxs-lookup"><span data-stu-id="ce93c-688">Call <xref:System.Windows.Input.Stylus.Synchronize%2A> to be sure that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the proper element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce93c-689">Poniższy przykład pokazuje, jak pobrać element, który jest pod kursorem.</span><span class="sxs-lookup"><span data-stu-id="ce93c-689">The following example demonstrates how to get the element that is under the cursor.</span></span> <span data-ttu-id="ce93c-690">Wywoływanie <xref:System.Windows.Input.Stylus.Synchronize%2A> zapewnia, że <xref:System.Windows.Input.Stylus.DirectlyOver%2A> zwraca poprawny element.</span><span class="sxs-lookup"><span data-stu-id="ce93c-690">Calling <xref:System.Windows.Input.Stylus.Synchronize%2A> ensures that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the correct element.</span></span>  
  
 [!code-csharp[StylusSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#24)]
 [!code-vb[StylusSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#24)]  
[!code-csharp[StylusSamples#25](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#25)]
[!code-vb[StylusSamples#25](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>