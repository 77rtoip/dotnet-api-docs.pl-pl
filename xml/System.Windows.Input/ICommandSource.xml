<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2cc671612548463db8b444d52a8d84986b73927" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37505174" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="96c3f-101">Definiuje obiekt, który wie, jak wywołać polecenie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="96c3f-101">Defines an object that knows how to invoke a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c3f-102">Źródło polecenia definiuje, jak polecenie jest wywoływane przez danego obiektu.</span><span class="sxs-lookup"><span data-stu-id="96c3f-102">The command source defines how a command is invoked by that particular object.</span></span>  <span data-ttu-id="96c3f-103">Na przykład jeśli <xref:System.Windows.Controls.Button> jest skojarzona z poleceniem, polecenie jest wywoływane podczas <xref:System.Windows.Controls.Button> kliknięciu.</span><span class="sxs-lookup"><span data-stu-id="96c3f-103">For example, if a <xref:System.Windows.Controls.Button> is associated with a command, the command is invoked when the <xref:System.Windows.Controls.Button> is clicked.</span></span>  
  
 <span data-ttu-id="96c3f-104">Źródło polecenia zwykle sam się wyłączy Jeśli polecenia, który jest skojarzony z nie można wykonać na aktualnym elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="96c3f-104">A command source will normally disable itself if the command it is associated with cannot execute on the current command target.</span></span>  <span data-ttu-id="96c3f-105">Na przykład <xref:System.Windows.Controls.MenuItem> skojarzone z <xref:System.Windows.Input.ApplicationCommands.Paste%2A> polecenia są wyszarzane się kiedy <xref:System.Windows.Input.ApplicationCommands.Paste%2A> polecenia nie można wykonać na aktualnym elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="96c3f-105">For example, a <xref:System.Windows.Controls.MenuItem> associated with the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command will gray itself out when the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command cannot execute on the current command target.</span></span>  
  
 <span data-ttu-id="96c3f-106">Zwykle będzie nasłuchiwać źródło polecenia <xref:System.Windows.Input.ICommand.CanExecuteChanged> zdarzeń na polecenia.</span><span class="sxs-lookup"><span data-stu-id="96c3f-106">Normally, a command source will listen to the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event on the command.</span></span>  <span data-ttu-id="96c3f-107">Informuje źródło polecenia, po zmianie warunków w elemencie docelowym polecenia, takie jak utrata fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="96c3f-107">This informs the command source when conditions change on the command target, such as loss of keyboard focus.</span></span>  <span data-ttu-id="96c3f-108">Źródło polecenia tworzyć zapytania przy użyciu polecenia <xref:System.Windows.Input.ICommand.CanExecute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96c3f-108">The command source can then query the command using the <xref:System.Windows.Input.ICommand.CanExecute%2A> method.</span></span>  
  
 <span data-ttu-id="96c3f-109">Niektóre z klas w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] które implementują <xref:System.Windows.Input.ICommandSource> są: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, i <xref:System.Windows.Documents.Hyperlink>.</span><span class="sxs-lookup"><span data-stu-id="96c3f-109">Some of the classes in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that implement <xref:System.Windows.Input.ICommandSource> are: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, and <xref:System.Windows.Documents.Hyperlink>.</span></span>  
  
 <span data-ttu-id="96c3f-110">W programie Windows Presentation Foundation, polecenia systemowe <xref:System.Windows.Input.InputBinding.CommandTarget%2A> właściwość <xref:System.Windows.Input.ICommandSource> dotyczy tylko kiedy <xref:System.Windows.Input.ICommand> jest <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="96c3f-110">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="96c3f-111">Jeśli <xref:System.Windows.Input.InputBinding.CommandTarget%2A> jest ustawiona na <xref:System.Windows.Input.ICommandSource> i odpowiednie polecenie nie jest <xref:System.Windows.Input.RoutedCommand>, jest ignorowana w elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="96c3f-111">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c3f-112">Pobiera polecenie, które zostaną wykonane, gdy źródło polecenia jest wywoływany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c3f-112">Gets the command that will be executed when the command source is invoked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c3f-113">Polecenie, które zostaną wykonane, gdy źródło polecenia jest wywoływany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c3f-113">The command that will be executed when the command source is invoked.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c3f-114">Reprezentuje wartość danych, który może być przekazywany do polecenia, gdy jest wykonywany zdefiniowany przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c3f-114">Represents a user defined data value that can be passed to the command when it is executed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c3f-115">Polecenie określonych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c3f-115">The command specific data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c3f-116">Zwykle <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> używany do przekazywania określonych informacji do polecenia, gdy jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="96c3f-116">Normally, the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> is used to pass specific information to the command when it is executed.</span></span>  <span data-ttu-id="96c3f-117">Typ danych jest definiowany przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="96c3f-117">The type of the data is defined by the command.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c3f-118">Polecenie jest wykonywane na obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c3f-118">The object that the command is being executed on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c3f-119">Polecenie jest wykonywane na obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c3f-119">The object that the command is being executed on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c3f-120">W programie Windows Presentation Foundation, polecenia systemowe <xref:System.Windows.Input.InputBinding.CommandTarget%2A> właściwość <xref:System.Windows.Input.ICommandSource> dotyczy tylko kiedy <xref:System.Windows.Input.ICommand> jest <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="96c3f-120">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="96c3f-121">Jeśli <xref:System.Windows.Input.InputBinding.CommandTarget%2A> jest ustawiona na <xref:System.Windows.Input.ICommandSource> i odpowiednie polecenie nie jest <xref:System.Windows.Input.RoutedCommand>, jest ignorowana w elemencie docelowym polecenia.</span><span class="sxs-lookup"><span data-stu-id="96c3f-121">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="96c3f-122">Gdy jest używane z <xref:System.Windows.Input.RoutedCommand>, element docelowy polecenia jest obiekt, dla którego <xref:System.Windows.Input.CommandManager.Executed> i <xref:System.Windows.Input.CommandManager.CanExecute> zdarzenia są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="96c3f-122">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="96c3f-123">Jeśli <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> właściwość nie jest ustawiona, element z fokusem klawiatury zostanie użyty jako element docelowy.</span><span class="sxs-lookup"><span data-stu-id="96c3f-123">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> property is not set, the element with keyboard focus will be used as the target.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>