<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d4b769aea00916d192fe0ecc8b0cb0ba32aefb0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36507762" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje obiekt, który umożliwia wywołanie polecenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Źródło polecenia definiuje sposób wywoływania polecenia przez dany obiekt.  Na przykład jeśli <xref:System.Windows.Controls.Button> skojarzonego z poleceniem polecenie jest wywoływane, gdy <xref:System.Windows.Controls.Button> zostanie kliknięty.  
  
 Źródło polecenia zwykle sam się wyłączy Jeśli polecenia, który jest skojarzony z nie można wykonać na bieżącym elemencie docelowym polecenia.  Na przykład <xref:System.Windows.Controls.MenuItem> skojarzone z <xref:System.Windows.Input.ApplicationCommands.Paste%2A> polecenia są wyszarzane się podczas <xref:System.Windows.Input.ApplicationCommands.Paste%2A> polecenia nie można wykonać na bieżącym elemencie docelowym polecenia.  
  
 Zwykle będzie nasłuchiwać źródło polecenia <xref:System.Windows.Input.ICommand.CanExecuteChanged> zdarzenia w poleceniu.  Po zmianie warunków w elemencie docelowym polecenia, takich jak utraty fokus klawiatury informuje źródło polecenia.  Źródło polecenia można zbadać za pomocą polecenia <xref:System.Windows.Input.ICommand.CanExecute%2A> metody.  
  
 Niektóre z klas w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] które implementują <xref:System.Windows.Input.ICommandSource> są: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, i <xref:System.Windows.Documents.Hyperlink>.  
  
 W Windows Presentation Foundation droższe systemu <xref:System.Windows.Input.InputBinding.CommandTarget%2A> właściwość <xref:System.Windows.Input.ICommandSource> ma zastosowanie tylko podczas <xref:System.Windows.Input.ICommand> jest <xref:System.Windows.Input.RoutedCommand>.  Jeśli <xref:System.Windows.Input.InputBinding.CommandTarget%2A> jest ustawiona na <xref:System.Windows.Input.ICommandSource> i odpowiadające jej polecenie nie jest <xref:System.Windows.Input.RoutedCommand>, element docelowy polecenia jest ignorowana.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera polecenie, które będą wykonywane po wywołaniu polecenia źródła.</summary>
        <value>Polecenie, które będą wykonywane po wywołaniu polecenia źródła.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje wartość danych, które mogą być przekazywane do polecenia po wykonaniu zdefiniowany przez użytkownika.</summary>
        <value>Polecenie określone dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> używany do przekazywania określonych informacji do polecenia podczas jej wykonywania.  Typ danych jest zdefiniowany przez polecenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Polecenie jest wykonywana na obiekt.</summary>
        <value>Polecenie jest wykonywana na obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W Windows Presentation Foundation droższe systemu <xref:System.Windows.Input.InputBinding.CommandTarget%2A> właściwość <xref:System.Windows.Input.ICommandSource> ma zastosowanie tylko podczas <xref:System.Windows.Input.ICommand> jest <xref:System.Windows.Input.RoutedCommand>.  Jeśli <xref:System.Windows.Input.InputBinding.CommandTarget%2A> jest ustawiona na <xref:System.Windows.Input.ICommandSource> i odpowiadające jej polecenie nie jest <xref:System.Windows.Input.RoutedCommand>, element docelowy polecenia jest ignorowana.  
  
 W przypadku użycia z <xref:System.Windows.Input.RoutedCommand>, obiektu, na którym jest element docelowy polecenia <xref:System.Windows.Input.CommandManager.Executed> i <xref:System.Windows.Input.CommandManager.CanExecute> pojawienia się zdarzenia. Jeśli <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> właściwość nie jest ustawiona, element z fokusem klawiatury będzie używany jako element docelowy.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>