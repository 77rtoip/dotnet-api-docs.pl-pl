<Type Name="MouseGestureConverter" FullName="System.Windows.Input.MouseGestureConverter">
  <TypeSignature Language="C#" Value="public class MouseGestureConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseGestureConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseGestureConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseGestureConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseGestureConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="40fe2-101">Konwertuje <see cref="T:System.Windows.Input.MouseGesture" /> do i z innych typów obiektów.</span><span class="sxs-lookup"><span data-stu-id="40fe2-101">Converts a <see cref="T:System.Windows.Input.MouseGesture" /> object to and from other types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40fe2-102"><xref:System.Windows.Input.MouseGestureConverter> Klasy konwertuje tylko wystąpienia <xref:System.Windows.Input.MouseGesture> do i z <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="40fe2-102">The <xref:System.Windows.Input.MouseGestureConverter> class only converts an instance of <xref:System.Windows.Input.MouseGesture> to and from a <xref:System.String>.</span></span>  
  
 <span data-ttu-id="40fe2-103"><xref:System.Windows.Input.MouseGestureConverter> Konwertuje do i z <xref:System.String> przy użyciu znaku "+" jako ogranicznik między klawisze modyfikujące i Akcja myszy.</span><span class="sxs-lookup"><span data-stu-id="40fe2-103">The <xref:System.Windows.Input.MouseGestureConverter> converts to and from a <xref:System.String> using the "+" character as the delimiter between the modifier keys and the mouse action.</span></span>  <span data-ttu-id="40fe2-104">Na przykład ciąg `Control+RightClick` może zostać przekształcone <xref:System.Windows.Input.MouseGesture> z <xref:System.Windows.Input.MouseGesture.Modifiers%2A> równa właściwości <xref:System.Windows.Input.ModifierKeys.Control> i <xref:System.Windows.Input.MouseGesture.MouseAction%2A> równa właściwości <xref:System.Windows.Input.MouseAction.RightClick>.</span><span class="sxs-lookup"><span data-stu-id="40fe2-104">For example, the string `Control+RightClick` would be converted into a <xref:System.Windows.Input.MouseGesture> with a <xref:System.Windows.Input.MouseGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.MouseGesture.MouseAction%2A> property equal to <xref:System.Windows.Input.MouseAction.RightClick>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGestureConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGestureConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGestureConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40fe2-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Input.MouseGestureConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="40fe2-105">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGestureConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="40fe2-106">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="40fe2-106">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="sourceType"><span data-ttu-id="40fe2-107">Typ oceniane pod kątem konwersji.</span><span class="sxs-lookup"><span data-stu-id="40fe2-107">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="40fe2-108">Określa, czy obiekt określonego typu można przekonwertować na wystąpienie <see cref="T:System.Windows.Input.MouseGesture" />, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="40fe2-108">Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.MouseGesture" />, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="40fe2-109"><see langword="true" /> Jeśli <paramref name="sourceType" /> jest typu <see cref="T:System.String" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="40fe2-109"><see langword="true" /> if <paramref name="sourceType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="40fe2-110">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="40fe2-110">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="destinationType"><span data-ttu-id="40fe2-111">Typ oceniane pod kątem konwersji.</span><span class="sxs-lookup"><span data-stu-id="40fe2-111">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="40fe2-112">Określa, czy wystąpienie <see cref="T:System.Windows.Input.MouseGesture" /> można przekonwertować na określony typ, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="40fe2-112">Determines whether an instance of <see cref="T:System.Windows.Input.MouseGesture" /> can be converted to the specified type, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="40fe2-113"><see langword="true" /> Jeśli <paramref name="destinationType" /> jest typu <see cref="T:System.String" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="40fe2-113"><see langword="true" /> if <paramref name="destinationType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="40fe2-114">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="40fe2-114">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="40fe2-115">Określone informacje o ustawieniach kulturowych.</span><span class="sxs-lookup"><span data-stu-id="40fe2-115">Culture specific information.</span></span></param>
        <param name="source"><span data-ttu-id="40fe2-116">Obiekt do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="40fe2-116">The object to convert.</span></span></param>
        <summary><span data-ttu-id="40fe2-117">Próbuje przekonwertować określony obiekt do <see cref="T:System.Windows.Input.MouseGesture" />, używając określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="40fe2-117">Attempts to convert the specified object to a <see cref="T:System.Windows.Input.MouseGesture" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="40fe2-118">Przekonwertowany obiekt.</span><span class="sxs-lookup"><span data-stu-id="40fe2-118">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40fe2-119"><xref:System.Windows.Input.MouseGestureConverter> Konwertuje do i z <xref:System.String> jako separator klawisze modyfikujące Akcja myszy przy użyciu klucza "+".</span><span class="sxs-lookup"><span data-stu-id="40fe2-119">The <xref:System.Windows.Input.MouseGestureConverter> converts to and from a <xref:System.String> using the "+" key as the delimiter between the modifier keys and the mouse action.</span></span>  <span data-ttu-id="40fe2-120">Na przykład ciąg `Control+RightClick` może zostać przekształcone <xref:System.Windows.Input.MouseGesture> z <xref:System.Windows.Input.MouseGesture.Modifiers%2A> równa właściwości <xref:System.Windows.Input.ModifierKeys.Control> i <xref:System.Windows.Input.MouseGesture.MouseAction%2A> równa właściwości <xref:System.Windows.Input.MouseAction.RightClick>.</span><span class="sxs-lookup"><span data-stu-id="40fe2-120">For example, the string `Control+RightClick` would be converted into a <xref:System.Windows.Input.MouseGesture> with a <xref:System.Windows.Input.MouseGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.MouseGesture.MouseAction%2A> property equal to <xref:System.Windows.Input.MouseAction.RightClick>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="40fe2-121"><paramref name="source" /> nie może być konwertera.</span><span class="sxs-lookup"><span data-stu-id="40fe2-121"><paramref name="source" /> cannot be converter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="40fe2-122">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="40fe2-122">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="40fe2-123">Kontekst format zawierający informacje o środowisku, z którego jest wywoływany tego konwertera.</span><span class="sxs-lookup"><span data-stu-id="40fe2-123">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="value"><span data-ttu-id="40fe2-124">Obiekt do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="40fe2-124">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="40fe2-125">Typ docelowy konwersji obiektu do.</span><span class="sxs-lookup"><span data-stu-id="40fe2-125">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="40fe2-126">Próbuje przekonwertować <see cref="T:System.Windows.Input.MouseGesture" /> na określony typ przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="40fe2-126">Attempts to convert a <see cref="T:System.Windows.Input.MouseGesture" /> to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="40fe2-127">Przekonwertowany obiekt.</span><span class="sxs-lookup"><span data-stu-id="40fe2-127">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40fe2-128">`destinationType` musi być <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="40fe2-128">`destinationType` must be <xref:System.String>.</span></span>  
  
 <span data-ttu-id="40fe2-129"><xref:System.Windows.Input.MouseGestureConverter> Konwertuje do i z <xref:System.String> jako separator klawisze modyfikujące Akcja myszy przy użyciu klucza "+".</span><span class="sxs-lookup"><span data-stu-id="40fe2-129">The <xref:System.Windows.Input.MouseGestureConverter> converts to and from a <xref:System.String> using the "+" key as the delimiter between the modifier keys and the mouse action.</span></span>  <span data-ttu-id="40fe2-130">Na przykład <xref:System.Windows.Input.MouseGesture> z <xref:System.Windows.Input.MouseGesture.Modifiers%2A> równa właściwości <xref:System.Windows.Input.ModifierKeys.Control> i <xref:System.Windows.Input.MouseGesture.MouseAction%2A> równa właściwości <xref:System.Windows.Input.MouseAction.RightClick> konwertuje ciąg `Control+RightClick`.</span><span class="sxs-lookup"><span data-stu-id="40fe2-130">For example, a <xref:System.Windows.Input.MouseGesture> with a <xref:System.Windows.Input.MouseGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.MouseGesture.MouseAction%2A> property equal to <xref:System.Windows.Input.MouseAction.RightClick> converts to the string `Control+RightClick`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40fe2-131"><paramref name="destinationType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="40fe2-131"><paramref name="destinationType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="40fe2-132"><paramref name="value" /> Nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="40fe2-132"><paramref name="value" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>