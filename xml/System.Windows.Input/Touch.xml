<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9293f21cd4b3744a22a4be776519f12230f12c18" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69169008" /></Metadata><TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <TypeSignature Language="F#" Value="type Touch = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia usługę poziomu aplikacji, która przetwarza dane wejściowe wielodotyku z systemu operacyjnego i zgłasza <see cref="E:System.Windows.Input.Touch.FrameReported" /> zdarzenie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest zawarte w [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] programie w celu zapewnienia zgodności z technologią Silverlight. <xref:System.Windows.Input.Touch.FrameReported> Jeśli nie ma potrzeby zapewnienia zgodności z technologią Silverlight, użyj zdarzeń dotykowych, takich jak <xref:System.Windows.UIElement.TouchDown> i <xref:System.Windows.UIElement.TouchMove>, w <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>lub <xref:System.Windows.ContentElement>.  
  
 Zdarzenie nie używa tego samego modelu zdarzenia, co inne zdarzenia wejściowe WPF, takie jak <xref:System.Windows.UIElement.TouchDown> i <xref:System.Windows.UIElement.TouchMove>. <xref:System.Windows.Input.Touch.FrameReported> Zamiast ujawniać jako zdarzenie specyficzne dla elementu, które może być kierowane przez drzewo obiektów interfejsu użytkownika, <xref:System.Windows.Input.Touch.FrameReported> zdarzenie jest pojedynczym zdarzeniem, które jest obsługiwane na poziomie aplikacji. W związku z tym nie można `sender` użyć parametru programu obsługi zdarzeń, aby określić, jaki element jest dotknięciem.  
  
 Użyj, <xref:System.Windows.Input.TouchFrameEventArgs> aby <xref:System.Windows.Input.TouchPoint> uzyskać wartości, które są istotne dla zdarzenia Touch. <xref:System.Windows.Input.TouchAction.Down> <xref:System.Windows.Input.TouchAction> <xref:System.Windows.Input.TouchPoint.Position%2A> <xref:System.Windows.Input.TouchAction.Up> W programie możesz uzyskać dostęp do dotyku i określić, czy jest to akcja, <xref:System.Windows.Input.TouchAction.Move>czy. <xref:System.Windows.Input.TouchPoint> Możesz również użyć, <xref:System.Windows.Input.TouchPoint> aby <xref:System.Windows.Input.TouchDevice>uzyskać. Z poziomu <xref:System.Windows.Input.TouchDevice>programu można określić urządzenie <xref:System.Windows.Input.TouchDevice.Id%2A> i uzyskać informacje o elemencie, który jest dotknięciem.  
  
   
  
## Examples  
 Poniższy przykład umożliwia tworzenie prostych wzorców na <xref:System.Windows.Controls.Canvas> podstawie przez przeciąganie dwóch palców na ekranie dotykowym. Każda dotknięcie jest reprezentowana przez <xref:System.Windows.Input.TouchDevice>. Wzorzec jest tworzony przez rysowanie linii między punktami dotykowymi dostarczonymi przez dotknięcia. Ten przykład wymaga ekranu zgodnego z systemem Windows.  
  
 Poniższy znacznik tworzy interfejs użytkownika, który składa się z <xref:System.Windows.Controls.Canvas> , który jest wyśrodkowany <xref:System.Windows.Controls.Grid>w.  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 Poniższy kod obsługuje <xref:System.Windows.Input.Touch.FrameReported> zdarzenie. Po naciśnięciu dotyku w programie <xref:System.Windows.Controls.Canvas> <xref:System.Windows.Input.TouchDevice> jest on przechwytywany do <xref:System.Windows.Controls.Canvas>. Gdy dotknięcie zostanie zniesione, <xref:System.Windows.Input.TouchDevice> zostanie wydane. Gdy dotknięcie porusza się między <xref:System.Windows.Controls.Canvas> <xref:System.Windows.Input.TouchDevice.Id%2A> , jest zaznaczone. Jeśli przeniesienie pochodzi od pierwszego dotknięcia, jego lokalizacja jest zarejestrowana. Jeśli przeniesienie pochodzi od drugiego dotknięcia, linia jest rysowana od pozycji pierwszego dotknięcia do pozycji drugiego dotknięcia.  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberSignature Language="F#" Value="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " Usage="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie wysłany komunikat dotykowy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ramka to jedna w serii komunikatów wielodotyku lub punktów dotykowych. Możesz odpowiedzieć na Dotykanie przez obsługę <xref:System.Windows.Input.Touch.FrameReported> zdarzenia i uzyskiwanie dostępu do szczegółów <xref:System.Windows.Input.TouchPoint> danych z <xref:System.Windows.Input.TouchFrameEventArgs> zdarzenia.  
  
 Zdarzenie nie używa tego samego modelu zdarzenia, co inne [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] zdarzenia wejściowe, takie jak <xref:System.Windows.UIElement.TouchDown> i <xref:System.Windows.UIElement.TouchMove>. <xref:System.Windows.Input.Touch.FrameReported> Zamiast ujawniać jako zdarzenie specyficzne dla elementu, które może być kierowane przez drzewo obiektów interfejsu użytkownika, <xref:System.Windows.Input.Touch.FrameReported> zdarzenie jest pojedynczym zdarzeniem, które jest obsługiwane na poziomie aplikacji. W związku z tym nie można `sender` użyć parametru programu obsługi zdarzeń, aby określić, jaki element jest dotknięciem.  
  
   
  
## Examples  
 Poniższy przykład obsługuje <xref:System.Windows.Input.Touch.FrameReported> zdarzenie. Po naciśnięciu dotyku w programie <xref:System.Windows.Controls.Canvas> <xref:System.Windows.Input.TouchDevice> jest on przechwytywany do <xref:System.Windows.Controls.Canvas>. Gdy dotknięcie zostanie zniesione, <xref:System.Windows.Input.TouchDevice> zostanie wydane. Gdy dotknięcie porusza się między <xref:System.Windows.Controls.Canvas> <xref:System.Windows.Input.TouchDevice.Id%2A> , jest zaznaczone. Jeśli przeniesienie pochodzi od pierwszego dotknięcia, jego lokalizacja jest zarejestrowana. Jeśli przeniesienie pochodzi od drugiego dotknięcia, linia jest rysowana od pozycji pierwszego dotknięcia do pozycji drugiego dotknięcia.  
  
 Ten przykład jest częścią większego przykładu, który jest dostępny w <xref:System.Windows.Input.Touch> przeglądzie klasy.  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
