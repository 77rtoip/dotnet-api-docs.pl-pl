<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c303be5b4a301d0fee4df08c2d9b374d0081a934" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30708635" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Usługa poziomie aplikacji, która przetwarza multitouch dane wejściowe z systemu operacyjnego i zgłasza <see cref="E:System.Windows.Input.Touch.FrameReported" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Touch.FrameReported> Zdarzeń jest uwzględniona w [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] do obsługi zgodności z Silverlight. Jeśli nie masz do zapewnienia zgodności z Silverlight, użyj zdarzenia touch, takiego jak <xref:System.Windows.UIElement.TouchDown> i <xref:System.Windows.UIElement.TouchMove>na <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, lub <xref:System.Windows.ContentElement>.  
  
 <xref:System.Windows.Input.Touch.FrameReported> Zdarzeń nie używają tego samego modelu zdarzeń jako inne zdarzenia wejściowe WPF takich jak <xref:System.Windows.UIElement.TouchDown> i <xref:System.Windows.UIElement.TouchMove>. Zamiast jako zdarzenie specyficzne dla elementu potencjalnie kieruje do drzewa obiektów interfejsu użytkownika przed przypadkowym <xref:System.Windows.Input.Touch.FrameReported> zdarzenie jest pojedyncze zdarzenie, który jest obsługiwany na poziomie aplikacji. W związku z tym nie można użyć `sender` parametru obsługi zdarzeń w celu ustalenia, jaki element jest dotknięciu.  
  
 Użyj <xref:System.Windows.Input.TouchFrameEventArgs> uzyskanie <xref:System.Windows.Input.TouchPoint> wartości, które mają zastosowanie do zdarzenia touch. Z <xref:System.Windows.Input.TouchPoint>, możesz uzyskać <xref:System.Windows.Input.TouchPoint.Position%2A> dotykowego i określić, czy <xref:System.Windows.Input.TouchAction> został <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, lub <xref:System.Windows.Input.TouchAction.Up> akcji. Można również użyć <xref:System.Windows.Input.TouchPoint> uzyskanie <xref:System.Windows.Input.TouchDevice>. Z <xref:System.Windows.Input.TouchDevice>, można określić urządzenia <xref:System.Windows.Input.TouchDevice.Id%2A> i informacje na temat elementu, który jest dotknięciu.  
  
   
  
## Examples  
 Poniższy przykład umożliwia utworzenie prostego wzorce na <xref:System.Windows.Controls.Canvas> przeciągając dwoma palcami przez ekran dotykowy. Touch każdy jest reprezentowany przez <xref:System.Windows.Input.TouchDevice>. Wzorzec jest tworzony za pomocą rysowania linii między punktami touch podał poprawki. W tym przykładzie wymaga ekranu dotykowego zgodnym z systemu Windows.  
  
 Następujący kod tworzy interfejs użytkownika, który składa się z <xref:System.Windows.Controls.Canvas> który skupia się w <xref:System.Windows.Controls.Grid>.  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 Poniższy kod uchwytów <xref:System.Windows.Input.Touch.FrameReported> zdarzeń. Gdy touch naciśnie w <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> są przechwytywane do <xref:System.Windows.Controls.Canvas>. Po naciśnięciu została wyjęta, <xref:System.Windows.Input.TouchDevice> zostanie zwolniony. Gdy touch porusza się na <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> jest zaznaczony. Jeśli przeniesienie pochodzi z pierwszego touch, jest rejestrowany jego lokalizacji. Jeśli przeniesienie pochodzi z drugiego touch, wiersz jest przenoszony z położenie pierwszego touch do położenia drugi touch.  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy jest wysyłany komunikat touch.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ramka jest jedną z szeregu multitouch wiadomości lub punkty touch. Obsługa może odpowiedzieć poprawki <xref:System.Windows.Input.Touch.FrameReported> zdarzeń i uzyskiwania dostępu do szczegółów <xref:System.Windows.Input.TouchPoint> z <xref:System.Windows.Input.TouchFrameEventArgs> danych zdarzenia.  
  
 <xref:System.Windows.Input.Touch.FrameReported> Zdarzeń nie używa tego samego modelu zdarzeń jako inny [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] wejściowych zdarzenia, takie jak <xref:System.Windows.UIElement.TouchDown> i <xref:System.Windows.UIElement.TouchMove>. Zamiast jako zdarzenie specyficzne dla elementu potencjalnie kieruje do drzewa obiektów interfejsu użytkownika przed przypadkowym <xref:System.Windows.Input.Touch.FrameReported> zdarzenie jest pojedyncze zdarzenie, który jest obsługiwany na poziomie aplikacji. W związku z tym nie można użyć `sender` parametru obsługi zdarzeń w celu ustalenia, jaki element jest dotknięciu.  
  
   
  
## Examples  
 Następujący przykład uchwytów <xref:System.Windows.Input.Touch.FrameReported> zdarzeń. Gdy touch naciśnie w <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> są przechwytywane do <xref:System.Windows.Controls.Canvas>. Po naciśnięciu została wyjęta, <xref:System.Windows.Input.TouchDevice> zostanie zwolniony. Gdy touch porusza się na <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> jest zaznaczony. Jeśli przeniesienie pochodzi z pierwszego touch, jest rejestrowany jego lokalizacji. Jeśli przeniesienie pochodzi z drugiego touch, wiersz jest przenoszony z położenie pierwszego touch do położenia drugi touch.  
  
 Ten przykład jest częścią większego przykładu dostępnego w <xref:System.Windows.Input.Touch> Przegląd klasy.  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>